/********************************************************
*                                                       *
*   Package generated using UEDumper by Spuckwaffel.    *
*                                                       *
********************************************************/

/// Package ConZ.

/// Class /Script/ConZ.AbandonedBunkerConnectionSetup
/// Size: 0x0010 (0x000030 - 0x000040)
class UAbandonedBunkerConnectionSetup : public UDataAsset
{ 
public:
	TArray<FAbandonedBunkerConnectionBinding>          Bindings;                                                   // 0x0030   (0x0010)  
};

/// Class /Script/ConZ.AbandonedBunker
/// Size: 0x0230 (0x000220 - 0x000450)
class AAbandonedBunker : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0xE8];                                      // 0x0220   (0x00E8)  MISSED
	UBillboardComponent*                               _sprite;                                                    // 0x0308   (0x0008)  
	float                                              _miuntesUntilResetAfterNoPlayersNearby;                     // 0x0310   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0314   (0x0004)  MISSED
	UClass*                                            _masterKeycardUnlockData;                                   // 0x0318   (0x0008)  
	TArray<FAbandonedBunkerFloorSetup>                 _floorSetup;                                                // 0x0320   (0x0010)  
	UAbandonedBunkerConnectionSetup*                   _connectionSetup;                                           // 0x0330   (0x0008)  
	FGameplayTagContainer                              _alwaysPoweredRooms;                                        // 0x0338   (0x0020)  
	float                                              _alarmDuration;                                             // 0x0358   (0x0004)  
	float                                              _managerDescriptionReplicatedNoiseNormalized;               // 0x035C   (0x0004)  
	TArray<uint16_t>                                   _poweredRoomIds;                                            // 0x0360   (0x0010)  
	TArray<uint16_t>                                   _alarmedRoomIds;                                            // 0x0370   (0x0010)  
	unsigned char                                      UnknownData02_5[0x88];                                      // 0x0380   (0x0088)  MISSED
	UAbandonedBunkerZoneManagerComponent*              _abandonedBunkerManagerComponent;                           // 0x0408   (0x0008)  
	UNavigationInvokerComponent*                       _razorNavigationInvokerComponent;                           // 0x0410   (0x0008)  
	unsigned char                                      UnknownData03_6[0x38];                                      // 0x0418   (0x0038)  MISSED


	/// Functions
	// Function /Script/ConZ.AbandonedBunker.OnRep_PoweredRoomIds
	void OnRep_PoweredRoomIds(TArray<uint16_t>& oldPoweredRoomIds);                                                          // [0x223d4f0] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.AbandonedBunker.OnRep_AlarmedRoomIds
	void OnRep_AlarmedRoomIds(TArray<uint16_t>& oldAlarmedRoomIds);                                                          // [0x223d400] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.AbandonedBunker.NetMulticast_SetPartialOpenRatioDoorComponent
	void NetMulticast_SetPartialOpenRatioDoorComponent(UAbandonedBunkerDoorComponent* doorComponent, float Ratio);           // [0x223d330] Net|NetReliableNative|Event|NetMulticast|Public 
};

/// Class /Script/ConZ.AbandonedBunkerBCUMemoryModuleTerminal
/// Size: 0x0058 (0x000220 - 0x000278)
class AAbandonedBunkerBCUMemoryModuleTerminal : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0220   (0x0008)  MISSED
	UStaticMeshComponent*                              _mesh;                                                      // 0x0228   (0x0008)  
	UStaticMeshComponent*                              _progressBarMesh;                                           // 0x0230   (0x0008)  
	FTimespan                                          _cooldown;                                                  // 0x0238   (0x0008)  
	FDateTime                                          _lastDownloadTime;                                          // 0x0240   (0x0008)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x0248   (0x0010)  MISSED
	float                                              _downloadActionDuration;                                    // 0x0258   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x025C   (0x0004)  MISSED
	UAkAudioEvent*                                     _downloadActionStartAudio;                                  // 0x0260   (0x0008)  
	UAkAudioEvent*                                     _downloadActionStopAudio;                                   // 0x0268   (0x0008)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x0270   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.AbandonedBunkerBCUMemoryModuleTerminal.OnRep_LastDownloadTime
	void OnRep_LastDownloadTime();                                                                                           // [0x223d4d0] Final|Native|Private 
};

/// Class /Script/ConZ.AbandonedBunkerDialPad
/// Size: 0x00C8 (0x000220 - 0x0002E8)
class AAbandonedBunkerDialPad : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0220   (0x0008)  MISSED
	UClass*                                            _minigameClass;                                             // 0x0228   (0x0008)  
	UClass*                                            _minigameConfigurationClass;                                // 0x0230   (0x0008)  
	UClass*                                            _hackingMinigameClass;                                      // 0x0238   (0x0008)  
	UClass*                                            _hackingMinigameConfiguration;                              // 0x0240   (0x0008)  
	ADoor*                                             _connectedDoor;                                             // 0x0248   (0x0008)  
	FLinearColor                                       _lockedColor;                                               // 0x0250   (0x0010)  
	FLinearColor                                       _unlockedColor;                                             // 0x0260   (0x0010)  
	FLinearColor                                       _offColor;                                                  // 0x0270   (0x0010)  
	int32_t                                            _combinationLength;                                         // 0x0280   (0x0004)  
	float                                              _minigameBaseDuration;                                      // 0x0284   (0x0004)  
	TArray<char>                                       _wornButtons;                                               // 0x0288   (0x0010)  
	unsigned char                                      UnknownData01_6[0x50];                                      // 0x0298   (0x0050)  MISSED


	/// Functions
	// Function /Script/ConZ.AbandonedBunkerDialPad.OnRep_WornButtons
	void OnRep_WornButtons();                                                                                                // [0x223d5a0] Final|Native|Private 
};

/// Class /Script/ConZ.AbandonedBunkerDoorComponent
/// Size: 0x0090 (0x0004E0 - 0x000570)
class UAbandonedBunkerDoorComponent : public UStaticMeshComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x04E0   (0x0008)  MISSED
	ADoor*                                             _outerDoor;                                                 // 0x04E8   (0x0008)  
	EDoorOpenMethod                                    _doorOpenMethod;                                            // 0x04F0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x04F1   (0x0003)  MISSED
	int32_t                                            _doorManualOpenMethod;                                      // 0x04F4   (0x0004)  
	bool                                               _canAlwaysBeOpenedDuringDay;                                // 0x04F8   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x04F9   (0x0003)  MISSED
	FVector                                            _directionTowardsInside;                                    // 0x04FC   (0x000C)  
	bool                                               _canAlwaysBeOpenedFromInside;                               // 0x0508   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x0509   (0x0003)  MISSED
	FGameplayTag                                       _roomId;                                                    // 0x050C   (0x0008)  
	float                                              _manualOpenActionMovementAcceptanceRadius;                  // 0x0514   (0x0004)  
	float                                              _manualOpenActionBaseDuration;                              // 0x0518   (0x0004)  
	float                                              _manualOpenDurationReductionPerStrengthPoint;               // 0x051C   (0x0004)  
	float                                              _manualOpenMinimumDuration;                                 // 0x0520   (0x0004)  
	float                                              _forceOpenCrowbarDamage;                                    // 0x0524   (0x0004)  
	float                                              _manualOpenAutoCloseDelay;                                  // 0x0528   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x052C   (0x0004)  MISSED
	UClass*                                            _hackingMinigameClass;                                      // 0x0530   (0x0008)  
	UClass*                                            _hackingMinigameConfiguration;                              // 0x0538   (0x0008)  
	unsigned char                                      UnknownData05_6[0x30];                                      // 0x0540   (0x0030)  MISSED


	/// Functions
	// Function /Script/ConZ.AbandonedBunkerDoorComponent.Door_OnDoorOpened
	void Door_OnDoorOpened();                                                                                                // [0x223d050] Final|Native|Private 
};

/// Class /Script/ConZ.AbandonedBunkerLightComponent
/// Size: 0x00C0 (0x0000B0 - 0x000170)
class UAbandonedBunkerLightComponent : public UActorComponent
{ 
public:
	EBunkerLightControlType                            _controlType;                                               // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x00B1   (0x0003)  MISSED
	float                                              _blinkPeriodWhenLowPower;                                   // 0x00B4   (0x0004)  
	bool                                               _autoFindLightComponents;                                   // 0x00B8   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x00B9   (0x0007)  MISSED
	TArray<ULightComponent*>                           _lightComponents;                                           // 0x00C0   (0x0010)  
	unsigned char                                      UnknownData02_5[0x10];                                      // 0x00D0   (0x0010)  MISSED
	bool                                               _autoFindMeshComponents;                                    // 0x00E0   (0x0001)  
	unsigned char                                      UnknownData03_5[0x7];                                       // 0x00E1   (0x0007)  MISSED
	TArray<UStaticMeshComponent*>                      _meshComponents;                                            // 0x00E8   (0x0010)  
	unsigned char                                      UnknownData04_5[0x10];                                      // 0x00F8   (0x0010)  MISSED
	bool                                               _autoFindParticleComponents;                                // 0x0108   (0x0001)  
	unsigned char                                      UnknownData05_5[0x7];                                       // 0x0109   (0x0007)  MISSED
	TArray<UParticleSystemComponent*>                  _particleComponents;                                        // 0x0110   (0x0010)  
	bool                                               _autoFindNiagaraComponents;                                 // 0x0120   (0x0001)  
	unsigned char                                      UnknownData06_5[0x7];                                       // 0x0121   (0x0007)  MISSED
	TArray<UNiagaraComponent*>                         _niagaraComponents;                                         // 0x0128   (0x0010)  
	bool                                               _autoFindAudioComponents;                                   // 0x0138   (0x0001)  
	unsigned char                                      UnknownData07_5[0x7];                                       // 0x0139   (0x0007)  MISSED
	TArray<UAkComponent*>                              _audioComponents;                                           // 0x0140   (0x0010)  
	UAkAudioEvent*                                     _audioEventStart;                                           // 0x0150   (0x0008)  
	UAkAudioEvent*                                     _audioEventStop;                                            // 0x0158   (0x0008)  
	unsigned char                                      UnknownData08_6[0x10];                                      // 0x0160   (0x0010)  MISSED
};

/// Class /Script/ConZ.LWObjectSetup
/// Size: 0x0008 (0x000028 - 0x000030)
class ULWObjectSetup : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.EntitySystemObjectSetup
/// Size: 0x0010 (0x000030 - 0x000040)
class UEntitySystemObjectSetup : public ULWObjectSetup
{ 
public:
	bool                                               TickEnabled;                                                // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	float                                              TickInterval;                                               // 0x0034   (0x0004)  
	bool                                               CanEverTickOnServer;                                        // 0x0038   (0x0001)  
	bool                                               CanEverTickOnClient;                                        // 0x0039   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x003A   (0x0006)  MISSED
};

/// Class /Script/ConZ.EntitySetup
/// Size: 0x0040 (0x000040 - 0x000080)
class UEntitySetup : public UEntitySystemObjectSetup
{ 
public:
	bool                                               Transient;                                                  // 0x0040   (0x0001)  
	bool                                               Hidden;                                                     // 0x0041   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0042   (0x0002)  MISSED
	float                                              BoundsRadius;                                               // 0x0044   (0x0004)  
	TWeakObjectPtr<UClass*>                            Actor;                                                      // 0x0048   (0x0028)  
	TArray<FEntitySetup_Component>                     Components;                                                 // 0x0070   (0x0010)  
};

/// Class /Script/ConZ.AbandonedBunkerManagerSetup
/// Size: 0x0000 (0x000080 - 0x000080)
class UAbandonedBunkerManagerSetup : public UEntitySetup
{ 
public:
};

/// Class /Script/ConZ.AbandonedBunkerSwitchboard
/// Size: 0x0130 (0x000220 - 0x000350)
class AAbandonedBunkerSwitchboard : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x0220   (0x0050)  MISSED
	USwitchboardComponent*                             _switchboardComponent;                                      // 0x0270   (0x0008)  
	UGaugeClusterComponent*                            _gaugeClusterComponent;                                     // 0x0278   (0x0008)  
	bool                                               _isMasterSwitchboard;                                       // 0x0280   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0281   (0x0003)  MISSED
	float                                              _defaultLoadWhenPowered;                                    // 0x0284   (0x0004)  
	float                                              _defaultLoadDuringBlackout;                                 // 0x0288   (0x0004)  
	float                                              _fuseHealthLowPowerThreshold;                               // 0x028C   (0x0004)  
	FGameplayTag                                       _defaultFuseGaugeTag;                                       // 0x0290   (0x0008)  
	FGameplayTag                                       _attachedFuseGaugeTag;                                      // 0x0298   (0x0008)  
	FName                                              _fuseAttachmentSocketName;                                  // 0x02A0   (0x0008)  
	UClass*                                            _masterSwitchboardMinigameClass;                            // 0x02A8   (0x0008)  
	UClass*                                            _masterSwitchboardMinigameConfigurationClass;               // 0x02B0   (0x0008)  
	UClass*                                            _slaveSwitchboardMinigameClass;                             // 0x02B8   (0x0008)  
	UClass*                                            _slaveSwitchboardMinigameConfigurationClass;                // 0x02C0   (0x0008)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x02C8   (0x0008)  MISSED
	FTransform                                         _decalTransform;                                            // 0x02D0   (0x0030)  
	UAkAudioEvent*                                     _switchFlippedAudioEvent;                                   // 0x0300   (0x0008)  
	UAkAudioEvent*                                     _fuseAddedAudioEvent;                                       // 0x0308   (0x0008)  
	UAkAudioEvent*                                     _fuseBurnedAudioEvent;                                      // 0x0310   (0x0008)  
	float                                              _emissiveStrengthWhenPowered;                               // 0x0318   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x031C   (0x0004)  MISSED
	AItem*                                             _repAttachedFuseItem;                                       // 0x0320   (0x0008)  
	AItem*                                             _attachedFuseItem;                                          // 0x0328   (0x0008)  
	unsigned char                                      UnknownData04_6[0x20];                                      // 0x0330   (0x0020)  MISSED


	/// Functions
	// Function /Script/ConZ.AbandonedBunkerSwitchboard.OnRep_AttachedFuseItem
	void OnRep_AttachedFuseItem();                                                                                           // [0x223d4b0] Final|Native|Private 
};

/// Class /Script/ConZ.AbandonedBunkerZoneBoxComponent
/// Size: 0x0000 (0x000480 - 0x000480)
class UAbandonedBunkerZoneBoxComponent : public UBoxComponent
{ 
public:
};

/// Class /Script/ConZ.AbandonedBunkerZoneCommonData
/// Size: 0x0190 (0x000030 - 0x0001C0)
class UAbandonedBunkerZoneCommonData : public UDataAsset
{ 
public:
	float                                              NoiseAccumulationLevels;                                    // 0x0030   (0x000C)  
	float                                              NoiseAccumulationLevelsExtraPerPlayer;                      // 0x003C   (0x000C)  
	float                                              NoiseLoudnessThreshold;                                     // 0x0048   (0x0004)  
	float                                              AccumulatedNoiseCap;                                        // 0x004C   (0x0004)  
	float                                              RoomAlarmNoiseIncreasePerTick;                              // 0x0050   (0x0004)  
	float                                              RoomAlarmNoiseIncreaseTickRate;                             // 0x0054   (0x0004)  
	TMap<FName, float>                                 NoiseAccumulationMultiplierPerNoiseTag;                     // 0x0058   (0x0050)  
	float                                              TimeToReleaseExtraResources;                                // 0x00A8   (0x0004)  
	float                                              TimeForNoiseLevelToStartDropping;                           // 0x00AC   (0x0004)  
	float                                              TimeForNoiseLevelAfterEnemyActivationToStartDropping;       // 0x00B0   (0x0004)  
	float                                              NoiseDropRatePerSecond;                                     // 0x00B4   (0x0004)  
	float                                              TimeForPlayerNoiseToStartDropping;                          // 0x00B8   (0x0004)  
	float                                              PlayerNoiseDropRatePerSecond;                               // 0x00BC   (0x0004)  
	float                                              BunkerComponentResetTime;                                   // 0x00C0   (0x0004)  
	float                                              CommotionEventCooldownMin;                                  // 0x00C4   (0x0004)  
	float                                              CommotionEventCooldownMax;                                  // 0x00C8   (0x0004)  
	float                                              RazorSpawnPointEnemyActivationDistance;                     // 0x00CC   (0x0004)  
	FFloatRange                                        EnemyActivationEventCooldownRange;                          // 0x00D0   (0x0010)  
	FFloatRange                                        EnemyActivationEventRespawnCooldownRange;                   // 0x00E0   (0x0010)  
	float                                              TimeAfterReturningFromEnemyActivationStateBeforeSpawnCooldownResets; // 0x00F0   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00F4   (0x0004)  MISSED
	TWeakObjectPtr<UClass*>                            RazorClass;                                                 // 0x00F8   (0x0028)  
	TWeakObjectPtr<UClass*>                            BrennerClass;                                               // 0x0120   (0x0028)  
	FInt32Range                                        NaturalRazorLimitRange;                                     // 0x0148   (0x0010)  
	int32_t                                            NaturalRazorLimitPlayerCap;                                 // 0x0158   (0x0004)  
	int32_t                                            ExtraNaturalRazorsPerPlayer;                                // 0x015C   (0x0004)  
	float                                              MinDistanceBetweenRazorsWhenSpawning;                       // 0x0160   (0x0004)  
	FInt32Range                                        VentilationRazorLimitRange;                                 // 0x0164   (0x0010)  
	FInt32Interval                                     VentilationRazorsSpawnedPerAlarmEvent;                      // 0x0174   (0x0008)  
	int32_t                                            VentilationRazorLimitPlayerCap;                             // 0x017C   (0x0004)  
	int32_t                                            ExtraVentilationRazorsPerPlayer;                            // 0x0180   (0x0004)  
	int32_t                                            MaxRazorCorpsesPerZone;                                     // 0x0184   (0x0004)  
	float                                              RazorCorpseRemovalCheckInterval;                            // 0x0188   (0x0004)  
	float                                              TimeToNormalRazorSpawnRazorRespawn;                         // 0x018C   (0x0004)  
	FInt32Interval                                     BaseZombieCountRange;                                       // 0x0190   (0x0008)  
	int32_t                                            ExtraZombiePerPlayer;                                       // 0x0198   (0x0004)  
	int32_t                                            ExtraZombiePlayerCap;                                       // 0x019C   (0x0004)  
	FFloatInterval                                     ZombieRespawnInterval;                                      // 0x01A0   (0x0008)  
	FInt32Interval                                     ZombieRespawnBatchSize;                                     // 0x01A8   (0x0008)  
	float                                              MinDistanceBetweenZombiesWhenSpawning;                      // 0x01B0   (0x0004)  
	float                                              MinDistanceBetweenEnemyAndPlayerWhenSpawning;               // 0x01B4   (0x0004)  
	FGameplayTag                                       VaultRoomId;                                                // 0x01B8   (0x0008)  
};

/// Class /Script/ConZ.AbandonedBunkerZoneManagerComponent
/// Size: 0x0050 (0x000200 - 0x000250)
class UAbandonedBunkerZoneManagerComponent : public USceneComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0200   (0x0008)  MISSED
	TArray<FTransform>                                 _razorNormalSpawnTransforms;                                // 0x0208   (0x0010)  
	TArray<ARazorSpawnPoint*>                          _razorSpawnPoints;                                          // 0x0218   (0x0010)  
	TArray<FTransform>                                 _brennerSpawnPoints;                                        // 0x0228   (0x0010)  
	TArray<FAbandonedBunkerZombieSpawnPoint>           _zombieSpawnPoints;                                         // 0x0238   (0x0010)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0248   (0x0008)  MISSED
};

/// Class /Script/ConZ.AchievementsManagerClient
/// Size: 0x0098 (0x000220 - 0x0002B8)
class AAchievementsManagerClient : public AActor
{ 
public:
	unsigned char                                      UnknownData00_1[0x98];                                      // 0x0220   (0x0098)  MISSED
};

/// Class /Script/ConZ.AchievementsManagerServer
/// Size: 0x0078 (0x000220 - 0x000298)
class AAchievementsManagerServer : public AActor
{ 
public:
	unsigned char                                      UnknownData00_1[0x78];                                      // 0x0220   (0x0078)  MISSED
};

/// Class /Script/ConZ.ActionProgressWidget
/// Size: 0x0050 (0x000260 - 0x0002B0)
class UActionProgressWidget : public UUserWidget
{ 
public:
	FMulticastInlineDelegate                           ActionProgressFinishedEvent;                                // 0x0260   (0x0010)  
	FMulticastInlineDelegate                           ActionProgressCancelledEvent;                               // 0x0270   (0x0010)  
	bool                                               CanCancel;                                                  // 0x0280   (0x0001)  
	unsigned char                                      UnknownData00_5[0xB];                                       // 0x0281   (0x000B)  MISSED
	float                                              _currentTime;                                               // 0x028C   (0x0004)  
	float                                              _duration;                                                  // 0x0290   (0x0004)  
	bool                                               _manualMode;                                                // 0x0294   (0x0001)  
	unsigned char                                      UnknownData01_6[0x1B];                                      // 0x0295   (0x001B)  MISSED


	/// Functions
	// Function /Script/ConZ.ActionProgressWidget.UnPauseProgress
	void UnPauseProgress();                                                                                                  // [0x223d660] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ActionProgressWidget.SetProgress
	void SetProgress(float progress);                                                                                        // [0x223d5e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ActionProgressWidget.PauseProgress
	void PauseProgress();                                                                                                    // [0x223d5c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ActionProgressWidget.OnActionProgressFinishedEvent__DelegateSignature
	void OnActionProgressFinishedEvent__DelegateSignature();                                                                 // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.ActionProgressWidget.OnActionProgressCancelledEvent__DelegateSignature
	void OnActionProgressCancelledEvent__DelegateSignature();                                                                // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.ActionProgressWidget.ExecuteAction
	void ExecuteAction();                                                                                                    // [0x223d150] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ActionProgressWidget.CancelAction
	void CancelAction();                                                                                                     // [0x223d030] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.ActorStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UActorStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.AdjustableSeparator
/// Size: 0x0020 (0x000260 - 0x000280)
class UAdjustableSeparator : public UUserWidget
{ 
public:
	USizeBox*                                          _slotSizeBox;                                               // 0x0260   (0x0008)  
	UNamedSlot*                                        _divider;                                                   // 0x0268   (0x0008)  
	float                                              _slotMinHeight;                                             // 0x0270   (0x0004)  
	float                                              _slotMaxHeight;                                             // 0x0274   (0x0004)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0278   (0x0008)  MISSED
};

/// Class /Script/ConZ.AdminCommand
/// Size: 0x0060 (0x000028 - 0x000088)
class UAdminCommand : public UObject
{ 
public:
	FString                                            _verb;                                                      // 0x0028   (0x0010)  
	TArray<FAdminCommandArgumentDescription>           _argumentDescriptions;                                      // 0x0038   (0x0010)  
	int32_t                                            _numberOfRequiredArguments;                                 // 0x0048   (0x0004)  
	int32_t                                            _numberOfRepeatingArguments;                                // 0x004C   (0x0004)  
	bool                                               _isEnabled;                                                 // 0x0050   (0x0001)  
	bool                                               _isEnabledInShippingBuild;                                  // 0x0051   (0x0001)  
	bool                                               _isAdminStatusRequired;                                     // 0x0052   (0x0001)  
	bool                                               _isDeveloperStatusRequired;                                 // 0x0053   (0x0001)  
	bool                                               _shouldExecuteOnServer;                                     // 0x0054   (0x0001)  
	bool                                               _shouldExecuteOnClient;                                     // 0x0055   (0x0001)  
	bool                                               _shouldDisableSingleplayerAchievementsIfExecuted;           // 0x0056   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x0057   (0x0001)  MISSED
	FText                                              _description;                                               // 0x0058   (0x0018)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x0070   (0x0018)  MISSED


	/// Functions
	// Function /Script/ConZ.AdminCommand.Execute
	bool Execute(TArray<FString>& arguments);                                                                                // [0x223d070] Native|Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/ConZ.AdminCommand.CanEverBeExecuted
	bool CanEverBeExecuted(APlayerController* Controller, FString& reasonIfNot);                                             // [0x223cf30] Native|Event|Public|HasOutParms|BlueprintEvent|Const 
	// Function /Script/ConZ.AdminCommand.CanBeExecuted
	bool CanBeExecuted(APlayerController* Controller, FString& reasonIfNot);                                                 // [0x223ce30] Native|Event|Public|HasOutParms|BlueprintEvent|Const 
};

/// Class /Script/ConZ.AdminCommand_AddOrRemoveWidget
/// Size: 0x0050 (0x000088 - 0x0000D8)
class UAdminCommand_AddOrRemoveWidget : public UAdminCommand
{ 
public:
	TMap<FName, UClass*>                               _widgetClassesByName;                                       // 0x0088   (0x0050)  
};

/// Class /Script/ConZ.AdminCommand_AddPrisonerBodyEffect
/// Size: 0x0008 (0x000088 - 0x000090)
class UAdminCommand_AddPrisonerBodyEffect : public UAdminCommand
{ 
public:
	UClass*                                            _bodyEffectClass;                                           // 0x0088   (0x0008)  
};

/// Class /Script/ConZ.AdminCommand_AdminLight
/// Size: 0x0010 (0x000088 - 0x000098)
class UAdminCommand_AdminLight : public UAdminCommand
{ 
public:
	UClass*                                            _adminLightComponent;                                       // 0x0088   (0x0008)  
	float                                              _maxIntensityMultiplier;                                    // 0x0090   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0094   (0x0004)  MISSED
};

/// Class /Script/ConZ.AdminCommand_Announce
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_Announce : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_BanPlayer
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_BanPlayer : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_BoatDebug
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_BoatDebug : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_CancelVote
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_CancelVote : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ChangeCurrencyBalance
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ChangeCurrencyBalance : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ChangeCurrencyBalanceToAll
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ChangeCurrencyBalanceToAll : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ChangeCurrencyBalanceToAllOnline
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ChangeCurrencyBalanceToAllOnline : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_CharacterSpawner
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_CharacterSpawner : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ClearFakeName
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ClearFakeName : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_CompleteMission
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_CompleteMission : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_CrashMajestically
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_CrashMajestically : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_CreateEntity
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_CreateEntity : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_DebugWeapon
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_DebugWeapon : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_DemolitionSkillDebug
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_DemolitionSkillDebug : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_DestroyAllItemsWithinRadius
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_DestroyAllItemsWithinRadius : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_DestroyAllVehicles
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_DestroyAllVehicles : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_DestroyCorpsesWithinRadius
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_DestroyCorpsesWithinRadius : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_DestroyEntity
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_DestroyEntity : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_DestroyVehicle
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_DestroyVehicle : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_DestroyZombiesWithinRadius
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_DestroyZombiesWithinRadius : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_DisablePrisonerBodyEffects
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_DisablePrisonerBodyEffects : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_DistanceDebug
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_DistanceDebug : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_DoorDebug
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_DoorDebug : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_DumpAllSquadsInfoList
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_DumpAllSquadsInfoList : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_DumpWetnessDebug
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_DumpWetnessDebug : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_EnableHuntingClueDebugArrow
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_EnableHuntingClueDebugArrow : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_EnableOrDisableServer
/// Size: 0x0008 (0x000088 - 0x000090)
class UAdminCommand_EnableOrDisableServer : public UAdminCommand
{ 
public:
	bool                                               _shouldEnableServer;                                        // 0x0088   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0089   (0x0007)  MISSED
};

/// Class /Script/ConZ.AdminCommand_EndTournamentMode
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_EndTournamentMode : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_EquipParachute
/// Size: 0x0008 (0x000088 - 0x000090)
class UAdminCommand_EquipParachute : public UAdminCommand
{ 
public:
	UClass*                                            _parachuteClass;                                            // 0x0088   (0x0008)  
};

/// Class /Script/ConZ.AdminCommand_ExecuteConsoleCommand
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ExecuteConsoleCommand : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ExecutePrisonerBodyConditionInteraction
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ExecutePrisonerBodyConditionInteraction : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ExportItemLootTree
/// Size: 0x0008 (0x000088 - 0x000090)
class UAdminCommand_ExportItemLootTree : public UAdminCommand
{ 
public:
	EItemLootTreeToExport                              _lootTreeToExport;                                          // 0x0088   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0089   (0x0007)  MISSED
};

/// Class /Script/ConZ.AdminCommand_FindSquadMember
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_FindSquadMember : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_GetUserID
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_GetUserID : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_GetUserIDByRank
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_GetUserIDByRank : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_KickPlayer
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_KickPlayer : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_KnockoutPrisoner
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_KnockoutPrisoner : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_LeaveCorpse
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_LeaveCorpse : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ListActiveHunts
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ListActiveHunts : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ListFlags
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ListFlags : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ListItemsSpawnLocations
/// Size: 0x0040 (0x000088 - 0x0000C8)
class UAdminCommand_ListItemsSpawnLocations : public UAdminCommand
{ 
public:
	FSearchItemSpawnerPresetArray                      _itemSpawnerPresets;                                        // 0x0088   (0x0020)  
	FSearchItemClassesArray                            _itemClasses;                                               // 0x00A8   (0x0020)  
};

/// Class /Script/ConZ.AdminCommand_ListMutedPlayers
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ListMutedPlayers : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ListPlayers
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ListPlayers : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ListPrimaryAssets
/// Size: 0x0058 (0x000088 - 0x0000E0)
class UAdminCommand_ListPrimaryAssets : public UAdminCommand
{ 
public:
	FPrimaryAssetType                                  _primaryAssetType;                                          // 0x0088   (0x0008)  
	TSet<FPrimaryAssetId>                              _primaryAssetsToExclude;                                    // 0x0090   (0x0050)  
};

/// Class /Script/ConZ.AdminCommand_ListPrisonerBodyConditionInteractions
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ListPrisonerBodyConditionInteractions : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ListPrisonerBodyEffects
/// Size: 0x0008 (0x000088 - 0x000090)
class UAdminCommand_ListPrisonerBodyEffects : public UAdminCommand
{ 
public:
	UClass*                                            _bodyEffectClass;                                           // 0x0088   (0x0008)  
};

/// Class /Script/ConZ.AdminCommand_ListPrisonerForeignSubstances
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ListPrisonerForeignSubstances : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ListSilencedPlayers
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ListSilencedPlayers : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ListSpawnedAnimals
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ListSpawnedAnimals : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ListSpawnedVehicles
/// Size: 0x0100 (0x000088 - 0x000188)
class UAdminCommand_ListSpawnedVehicles : public UAdminCommand
{ 
public:
	FGameplayTagContainer                              _vehicleSpawnGroupsByCategory;                              // 0x0088   (0x0100)  
};

/// Class /Script/ConZ.AdminCommand_ListSquadMembers
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ListSquadMembers : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ListSquads
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ListSquads : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ListWeatherControllerOverrides
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ListWeatherControllerOverrides : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_Location
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_Location : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_LogCharacterSpawner
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_LogCharacterSpawner : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_Loot
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_Loot : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_MutePlayer
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_MutePlayer : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_PlacementDebug
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_PlacementDebug : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_PlayerInfo
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_PlayerInfo : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_PrintEntities
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_PrintEntities : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_RandomizePriceDeltas
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_RandomizePriceDeltas : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ReloadCustomMapConfig
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ReloadCustomMapConfig : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_RemovePrisonerBodyEffect
/// Size: 0x0008 (0x000088 - 0x000090)
class UAdminCommand_RemovePrisonerBodyEffect : public UAdminCommand
{ 
public:
	UClass*                                            _bodyEffectClass;                                           // 0x0088   (0x0008)  
};

/// Class /Script/ConZ.AdminCommand_RenameVehicle
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_RenameVehicle : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ResetAchievements
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ResetAchievements : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ResetEconomy
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ResetEconomy : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ResetMissionEnabled
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ResetMissionEnabled : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ResetSquadInfo
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ResetSquadInfo : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ScheduleWorldEvent
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ScheduleWorldEvent : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SendNotification
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SendNotification : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetAchievementUnlocked
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetAchievementUnlocked : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetAIInvisibility
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetAIInvisibility : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetAirplaneMaxVelocity
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetAirplaneMaxVelocity : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetAllInventoryAccess
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetAllInventoryAccess : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetCraftingSearch
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetCraftingSearch : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetCurrencyBalance
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetCurrencyBalance : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetCurrencyBalanceToAll
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetCurrencyBalanceToAll : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetCurrencyBalanceToAllOnline
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetCurrencyBalanceToAllOnline : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetDecayTimeDilation
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetDecayTimeDilation : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetDeluxeVersion
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetDeluxeVersion : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetFakeName
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetFakeName : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetFamePoints
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetFamePoints : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetFamePointsToAll
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetFamePointsToAll : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetFamePointsToAllOnline
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetFamePointsToAllOnline : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetFarmingSimulationSpeed
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetFarmingSimulationSpeed : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetGodMode
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetGodMode : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetHealthToItemInHands
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetHealthToItemInHands : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetInfiniteAmmo
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetInfiniteAmmo : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetItemDebugMode
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetItemDebugMode : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetMalfunctionProbability
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetMalfunctionProbability : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetMountedVehicleProperty
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetMountedVehicleProperty : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetPrisonerAttributes
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetPrisonerAttributes : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetPrisonerExhaustion
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetPrisonerExhaustion : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetPrisonerImmortality
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetPrisonerImmortality : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetPrisonerInfiniteOxygen
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetPrisonerInfiniteOxygen : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetPrisonerInfiniteStamina
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetPrisonerInfiniteStamina : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetPrisonerMetabolismSimulationSpeed
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetPrisonerMetabolismSimulationSpeed : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetPrisonerStamina
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetPrisonerStamina : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetReplishableResourceAmount
/// Size: 0x0010 (0x000088 - 0x000098)
class UAdminCommand_SetReplishableResourceAmount : public UAdminCommand
{ 
public:
	float                                              _defaultAreaOfEffect;                                       // 0x0088   (0x0004)  
	float                                              _minAreaOfEffect;                                           // 0x008C   (0x0004)  
	float                                              _maxAreaOfEffect;                                           // 0x0090   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0094   (0x0004)  MISSED
};

/// Class /Script/ConZ.AdminCommand_SetSkillLevel
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetSkillLevel : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetSuperJump
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetSuperJump : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetTime
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetTime : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetTimeSpeed
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetTimeSpeed : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetWeather
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetWeather : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetWeatherControllerOverrideActive
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetWeatherControllerOverrideActive : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SetWeatherControllerOverrideValue
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SetWeatherControllerOverrideValue : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ShouldChainTeleportToVehicles
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ShouldChainTeleportToVehicles : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ShouldShowOtherPlayerInfo
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ShouldShowOtherPlayerInfo : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ShouldShowOtherPlayerLocations
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ShouldShowOtherPlayerLocations : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ShowBaseBuildingDebug
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ShowBaseBuildingDebug : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ShowFlagInfo
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ShowFlagInfo : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ShowFlagLocations
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ShowFlagLocations : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ShowNameplates
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ShowNameplates : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ShowRespawnTimes
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ShowRespawnTimes : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ShowVehicleDebug
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ShowVehicleDebug : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ShowVehicleInfo
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ShowVehicleInfo : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ShowVehicleLocations
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ShowVehicleLocations : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ShowWeaponInfo
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_ShowWeaponInfo : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SilencePlayer
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SilencePlayer : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_Sleep
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_Sleep : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SpawnAllItems
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SpawnAllItems : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SpawnPrimaryActorAsset
/// Size: 0x0080 (0x000088 - 0x000108)
class UAdminCommand_SpawnPrimaryActorAsset : public UAdminCommand
{ 
public:
	FPrimaryAssetType                                  _primaryAssetType;                                          // 0x0088   (0x0008)  
	TSet<FPrimaryAssetId>                              _primaryAssetsToExclude;                                    // 0x0090   (0x0050)  
	int32_t                                            _countArgumentMinValue;                                     // 0x00E0   (0x0004)  
	int32_t                                            _countArgumentMaxValue;                                     // 0x00E4   (0x0004)  
	FVector                                            _spawnOffset;                                               // 0x00E8   (0x000C)  
	unsigned char                                      UnknownData00_6[0x14];                                      // 0x00F4   (0x0014)  MISSED
};

/// Class /Script/ConZ.AdminCommand_SpawnAnimal
/// Size: 0x0000 (0x000108 - 0x000108)
class UAdminCommand_SpawnAnimal : public UAdminCommand_SpawnPrimaryActorAsset
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SpawnBrenner
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SpawnBrenner : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SpawnDebugAnimalTrack
/// Size: 0x0008 (0x000088 - 0x000090)
class UAdminCommand_SpawnDebugAnimalTrack : public UAdminCommand
{ 
public:
	FPrimaryAssetType                                  _primaryAssetType;                                          // 0x0088   (0x0008)  
};

/// Class /Script/ConZ.AdminCommand_SpawnInventoryFullOf
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SpawnInventoryFullOf : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SpawnItem
/// Size: 0x0048 (0x000108 - 0x000150)
class UAdminCommand_SpawnItem : public UAdminCommand_SpawnPrimaryActorAsset
{ 
public:
	unsigned char                                      UnknownData00_1[0x48];                                      // 0x0108   (0x0048)  MISSED
};

/// Class /Script/ConZ.AdminCommand_SpawnRandomAnimal
/// Size: 0x0000 (0x000108 - 0x000108)
class UAdminCommand_SpawnRandomAnimal : public UAdminCommand_SpawnAnimal
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SpawnRandomPrimaryActorAsset
/// Size: 0x0000 (0x000108 - 0x000108)
class UAdminCommand_SpawnRandomPrimaryActorAsset : public UAdminCommand_SpawnPrimaryActorAsset
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SpawnRazor
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_SpawnRazor : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_SpawnReflectionSphere
/// Size: 0x0008 (0x000088 - 0x000090)
class UAdminCommand_SpawnReflectionSphere : public UAdminCommand
{ 
public:
	UClass*                                            _actorClass;                                                // 0x0088   (0x0008)  
};

/// Class /Script/ConZ.AdminCommand_SpawnVehicle
/// Size: 0x0008 (0x000108 - 0x000110)
class UAdminCommand_SpawnVehicle : public UAdminCommand_SpawnPrimaryActorAsset
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0108   (0x0008)  MISSED
};

/// Class /Script/ConZ.AdminCommand_StartTournamentMode
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_StartTournamentMode : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_Teleport
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_Teleport : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_TeleportTo
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_TeleportTo : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_TeleportTo3pm
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_TeleportTo3pm : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_TeleportToMe
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_TeleportToMe : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_TeleportToVehicle
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_TeleportToVehicle : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_ToggleFamePointsDebugVisualization
/// Size: 0x0008 (0x000088 - 0x000090)
class UAdminCommand_ToggleFamePointsDebugVisualization : public UAdminCommand
{ 
public:
	UClass*                                            _famePointDebugComponentClass;                              // 0x0088   (0x0008)  
};

/// Class /Script/ConZ.AdminCommand_TrackShotsFired
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_TrackShotsFired : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_TrapsDebug
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_TrapsDebug : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_UnbanPlayer
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_UnbanPlayer : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_UnmutePlayer
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_UnmutePlayer : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_UnsilencePlayer
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_UnsilencePlayer : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_VisualizeBulletTrajectories
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_VisualizeBulletTrajectories : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_VisualizePlayerAiming
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_VisualizePlayerAiming : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_VisualizeZombieLocation
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_VisualizeZombieLocation : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommand_Vote
/// Size: 0x0000 (0x000088 - 0x000088)
class UAdminCommand_Vote : public UAdminCommand
{ 
public:
};

/// Class /Script/ConZ.AdminCommandArgumentCompletion
/// Size: 0x0010 (0x000028 - 0x000038)
class UAdminCommandArgumentCompletion : public UObject
{ 
public:
	bool                                               _canCompletionValuesBeCached;                               // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_6[0xF];                                       // 0x0029   (0x000F)  MISSED


	/// Functions
	// Function /Script/ConZ.AdminCommandArgumentCompletion.GetCompletionValues
	void GetCompletionValues(TArray<FString>& Result);                                                                       // [0x224bd90] Native|Event|Public|HasOutParms|BlueprintEvent|Const 
};

/// Class /Script/ConZ.AdminCommandArgumentCompletion_Achievements
/// Size: 0x0000 (0x000038 - 0x000038)
class UAdminCommandArgumentCompletion_Achievements : public UAdminCommandArgumentCompletion
{ 
public:
};

/// Class /Script/ConZ.AdminCommandArgumentCompletion_Constant
/// Size: 0x0010 (0x000038 - 0x000048)
class UAdminCommandArgumentCompletion_Constant : public UAdminCommandArgumentCompletion
{ 
public:
	TArray<FString>                                    _completionValues;                                          // 0x0038   (0x0010)  
};

/// Class /Script/ConZ.AdminCommandArgumentCompletion_Enum
/// Size: 0x0060 (0x000038 - 0x000098)
class UAdminCommandArgumentCompletion_Enum : public UAdminCommandArgumentCompletion
{ 
public:
	FName                                              _enum;                                                      // 0x0038   (0x0008)  
	bool                                               _excludeNoneEnumerator;                                     // 0x0040   (0x0001)  
	bool                                               _excludeCountEnumerator;                                    // 0x0041   (0x0001)  
	bool                                               _excludeAutoGeneratedEnumerator;                            // 0x0042   (0x0001)  
	unsigned char                                      UnknownData00_5[0x5];                                       // 0x0043   (0x0005)  MISSED
	TSet<FName>                                        _additionalEnumeratorsToExclude;                            // 0x0048   (0x0050)  
};

/// Class /Script/ConZ.AdminCommandArgumentCompletion_Player
/// Size: 0x0000 (0x000038 - 0x000038)
class UAdminCommandArgumentCompletion_Player : public UAdminCommandArgumentCompletion
{ 
public:
};

/// Class /Script/ConZ.AdminCommandArgumentCompletion_PrimaryAsset
/// Size: 0x0058 (0x000038 - 0x000090)
class UAdminCommandArgumentCompletion_PrimaryAsset : public UAdminCommandArgumentCompletion
{ 
public:
	FPrimaryAssetType                                  _primaryAssetType;                                          // 0x0038   (0x0008)  
	TSet<FPrimaryAssetId>                              _primaryAssetsToExclude;                                    // 0x0040   (0x0050)  
};

/// Class /Script/ConZ.AdminCommandArgumentCompletion_Skill
/// Size: 0x0000 (0x000038 - 0x000038)
class UAdminCommandArgumentCompletion_Skill : public UAdminCommandArgumentCompletion
{ 
public:
};

/// Class /Script/ConZ.AdminCommandArgumentCompletion_Squad
/// Size: 0x0000 (0x000038 - 0x000038)
class UAdminCommandArgumentCompletion_Squad : public UAdminCommandArgumentCompletion
{ 
public:
};

/// Class /Script/ConZ.AdminCommandArgumentCompletion_Widget
/// Size: 0x0008 (0x000038 - 0x000040)
class UAdminCommandArgumentCompletion_Widget : public UAdminCommandArgumentCompletion
{ 
public:
	UClass*                                            _commandClass;                                              // 0x0038   (0x0008)  
};

/// Class /Script/ConZ.AdminCommandArgumentDataTypeBase
/// Size: 0x00D8 (0x000030 - 0x000108)
class UAdminCommandArgumentDataTypeBase : public UDataAsset
{ 
public:
	FText                                              DataTypeName;                                               // 0x0030   (0x0018)  
	UClass*                                            ArgumentCompletion;                                         // 0x0048   (0x0008)  
	unsigned char                                      UnknownData00_6[0xB8];                                      // 0x0050   (0x00B8)  MISSED
};

/// Class /Script/ConZ.AdminCommandArgumentDataType_Bool
/// Size: 0x0008 (0x000108 - 0x000110)
class UAdminCommandArgumentDataType_Bool : public UAdminCommandArgumentDataTypeBase
{ 
public:
	bool                                               _defaultValue;                                              // 0x0108   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0109   (0x0007)  MISSED
};

/// Class /Script/ConZ.AdminCommandArgumentDataType_Location
/// Size: 0x0010 (0x000108 - 0x000118)
class UAdminCommandArgumentDataType_Location : public UAdminCommandArgumentDataTypeBase
{ 
public:
	FVector                                            _defaultValue;                                              // 0x0108   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0114   (0x0004)  MISSED
};

/// Class /Script/ConZ.AdminCommandArgumentDataType_Numeric
/// Size: 0x0008 (0x000108 - 0x000110)
class UAdminCommandArgumentDataType_Numeric : public UAdminCommandArgumentDataTypeBase
{ 
public:
	float                                              _defaultValue;                                              // 0x0108   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x010C   (0x0004)  MISSED
};

/// Class /Script/ConZ.AdminCommandArgumentDataType_String
/// Size: 0x0018 (0x000108 - 0x000120)
class UAdminCommandArgumentDataType_String : public UAdminCommandArgumentDataTypeBase
{ 
public:
	FString                                            _defaultValue;                                              // 0x0108   (0x0010)  
	bool                                               _caseSensitive;                                             // 0x0118   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0119   (0x0007)  MISSED
};

/// Class /Script/ConZ.AdminCommandArgumentDataType_Transform
/// Size: 0x0038 (0x000108 - 0x000140)
class UAdminCommandArgumentDataType_Transform : public UAdminCommandArgumentDataTypeBase
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0108   (0x0008)  MISSED
	FTransform                                         _defaultValue;                                              // 0x0110   (0x0030)  
};

/// Class /Script/ConZ.AdminCommandArgumentDataType_TransformOrLocation
/// Size: 0x0010 (0x000108 - 0x000118)
class UAdminCommandArgumentDataType_TransformOrLocation : public UAdminCommandArgumentDataTypeBase
{ 
public:
	FVector                                            _defaultLocationValue;                                      // 0x0108   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0114   (0x0004)  MISSED
};

/// Class /Script/ConZ.AdminCommandCompletionManager
/// Size: 0x01B8 (0x000028 - 0x0001E0)
class UAdminCommandCompletionManager : public UObject
{ 
public:
	TMap<FString, UClass*>                             _commands;                                                  // 0x0028   (0x0050)  
	unsigned char                                      UnknownData00_6[0x168];                                     // 0x0078   (0x0168)  MISSED
};

/// Class /Script/ConZ.AdminCommandExecutor
/// Size: 0x0000 (0x000028 - 0x000028)
class UAdminCommandExecutor : public UInterface
{ 
public:
};

/// Class /Script/ConZ.AdminCommandRegistry
/// Size: 0x0060 (0x000028 - 0x000088)
class UAdminCommandRegistry : public UObject
{ 
public:
	TArray<UClass*>                                    _commands;                                                  // 0x0028   (0x0010)  
	unsigned char                                      UnknownData00_6[0x50];                                      // 0x0038   (0x0050)  MISSED
};

/// Class /Script/ConZ.AdminCommandsStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UAdminCommandsStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.AdminLight
/// Size: 0x0010 (0x000360 - 0x000370)
class UAdminLight : public UPointLightComponent
{ 
public:
	UCurveFloat*                                       _intensityVersusTimeOfDay;                                  // 0x0360   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0368   (0x0008)  MISSED
};

/// Class /Script/ConZ.AdminPlantPanel
/// Size: 0x0050 (0x000260 - 0x0002B0)
class UAdminPlantPanel : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0260   (0x0008)  MISSED
	UButton*                                           _seedingButton;                                             // 0x0268   (0x0008)  
	UButton*                                           _vegetatingButton;                                          // 0x0270   (0x0008)  
	UButton*                                           _floweringButton;                                           // 0x0278   (0x0008)  
	UButton*                                           _ripeningButton;                                            // 0x0280   (0x0008)  
	UButton*                                           _killButton;                                                // 0x0288   (0x0008)  
	UButton*                                           _addWeedButton;                                             // 0x0290   (0x0008)  
	UButton*                                           _removeWeedButton;                                          // 0x0298   (0x0008)  
	UButton*                                           _removePlantButton;                                         // 0x02A0   (0x0008)  
	UButton*                                           _addWaterButton;                                            // 0x02A8   (0x0008)  


	/// Functions
	// Function /Script/ConZ.AdminPlantPanel.OnClickVegetating
	void OnClickVegetating();                                                                                                // [0x224f190] Final|Native|Private 
	// Function /Script/ConZ.AdminPlantPanel.OnClickSeeding
	void OnClickSeeding();                                                                                                   // [0x224f170] Final|Native|Private 
	// Function /Script/ConZ.AdminPlantPanel.OnClickRipening
	void OnClickRipening();                                                                                                  // [0x224f150] Final|Native|Private 
	// Function /Script/ConZ.AdminPlantPanel.OnClickRemoveWeed
	void OnClickRemoveWeed();                                                                                                // [0x224f130] Final|Native|Private 
	// Function /Script/ConZ.AdminPlantPanel.OnClickRemovePlant
	void OnClickRemovePlant();                                                                                               // [0x224f110] Final|Native|Private 
	// Function /Script/ConZ.AdminPlantPanel.OnClickKill
	void OnClickKill();                                                                                                      // [0x224f0f0] Final|Native|Private 
	// Function /Script/ConZ.AdminPlantPanel.OnClickFlowering
	void OnClickFlowering();                                                                                                 // [0x224f0d0] Final|Native|Private 
	// Function /Script/ConZ.AdminPlantPanel.OnClickAddWeed
	void OnClickAddWeed();                                                                                                   // [0x224f0b0] Final|Native|Private 
	// Function /Script/ConZ.AdminPlantPanel.OnClickAddWater
	void OnClickAddWater();                                                                                                  // [0x224f090] Final|Native|Private 
};

/// Class /Script/ConZ.Objective
/// Size: 0x0100 (0x000220 - 0x000320)
class AObjective : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x90];                                      // 0x0220   (0x0090)  MISSED
	TArray<FDialogueInfo>                              _objectivesIntroDialogues;                                  // 0x02B0   (0x0010)  
	TArray<FDialogueInfo>                              _objectivesOutroSuccessDialogues;                           // 0x02C0   (0x0010)  
	TArray<FDialogueInfo>                              _objectivesOutroFailDialogues;                              // 0x02D0   (0x0010)  
	EObjectiveState                                    _objectiveState;                                            // 0x02E0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x02E1   (0x0003)  MISSED
	TWeakObjectPtr<AMission*>                          _parentMission;                                             // 0x02E4   (0x0008)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x02EC   (0x0004)  MISSED
	FText                                              _description;                                               // 0x02F0   (0x0018)  
	unsigned char                                      UnknownData03_5[0x11];                                      // 0x0308   (0x0011)  MISSED
	bool                                               _canInterruptDialogue;                                      // 0x0319   (0x0001)  
	bool                                               _playUISounds;                                              // 0x031A   (0x0001)  
	unsigned char                                      UnknownData04_6[0x5];                                       // 0x031B   (0x0005)  MISSED


	/// Functions
	// Function /Script/ConZ.Objective.SetObjectiveState
	void SetObjectiveState(EObjectiveState Value, bool silent);                                                              // [0x233d9d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Objective.Server_ActiveObjectiveInitialized
	void Server_ActiveObjectiveInitialized();                                                                                // [0x22a0fa0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.Objective.OnRep_ObjectiveStateChanged
	void OnRep_ObjectiveStateChanged();                                                                                      // [0x12375f0] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Objective.IsStarted
	bool IsStarted();                                                                                                        // [0x233d650] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Objective.IsCompleted
	bool IsCompleted();                                                                                                      // [0x233d620] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Objective.GetDescription
	FText GetDescription();                                                                                                  // [0x233d520] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Objective.FailObjective
	void FailObjective(bool forceFail);                                                                                      // [0x233d490] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Objective.CompleteObjective
	void CompleteObjective();                                                                                                // [0x233d470] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Objective.Client_ShowWaypointWidget
	void Client_ShowWaypointWidget(AActor* targetActor, AActor* actorToTieLifetime);                                         // [0x233d3a0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.Objective.Client_RemoveWaypointWidget
	void Client_RemoveWaypointWidget();                                                                                      // [0x22700a0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.Objective.Client_BroadcastTrackedItemAmount
	void Client_BroadcastTrackedItemAmount(int32_t currentAmount);                                                           // [0x233d310] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.Objective.CanInterruptDialogue
	bool CanInterruptDialogue();                                                                                             // [0x233d2e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.RequirementObjective
/// Size: 0x0010 (0x000320 - 0x000330)
class ARequirementObjective : public AObjective
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0320   (0x0010)  MISSED
};

/// Class /Script/ConZ.BlueprintableItemObjective
/// Size: 0x0038 (0x000330 - 0x000368)
class ABlueprintableItemObjective : public ARequirementObjective
{ 
public:
	EBlueprintItemActionType                           _actionType;                                                // 0x0330   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0331   (0x0007)  MISSED
	UClass*                                            _targetBlueprintActor;                                      // 0x0338   (0x0008)  
	TArray<UClass*>                                    _itemsToFill;                                               // 0x0340   (0x0010)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x0350   (0x0018)  MISSED
};

/// Class /Script/ConZ.AdvancedBlueprintableItemObjective
/// Size: 0x0010 (0x000368 - 0x000378)
class AAdvancedBlueprintableItemObjective : public ABlueprintableItemObjective
{ 
public:
	AMissionDialogueManager*                           _dialogueManager;                                           // 0x0368   (0x0008)  
	UDialogueData*                                     _dialogueData;                                              // 0x0370   (0x0008)  


	/// Functions
	// Function /Script/ConZ.AdvancedBlueprintableItemObjective.OnTabMenuOpenedHandler
	void OnTabMenuOpenedHandler(ETabMode tabMode);                                                                           // [0x224f480] Final|Native|Private 
};

/// Class /Script/ConZ.AdvancedBuoyancyComponent
/// Size: 0x0060 (0x0004E0 - 0x000540)
class UAdvancedBuoyancyComponent : public UStaticMeshComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0xC];                                       // 0x04E0   (0x000C)  MISSED
	float                                              _waterKinematicViscosity;                                   // 0x04EC   (0x0004)  
	float                                              _cPD1;                                                      // 0x04F0   (0x0004)  
	float                                              _cPD2;                                                      // 0x04F4   (0x0004)  
	float                                              _fP;                                                        // 0x04F8   (0x0004)  
	float                                              _cSD1;                                                      // 0x04FC   (0x0004)  
	float                                              _cSD2;                                                      // 0x0500   (0x0004)  
	float                                              _fS;                                                        // 0x0504   (0x0004)  
	float                                              _maxAcceleration;                                           // 0x0508   (0x0004)  
	float                                              _p;                                                         // 0x050C   (0x0004)  
	float                                              _maxHydrodynamicVelocity;                                   // 0x0510   (0x0004)  
	unsigned char                                      UnknownData01_6[0x2C];                                      // 0x0514   (0x002C)  MISSED
};

/// Class /Script/ConZ.CraftingObjective
/// Size: 0x0018 (0x000330 - 0x000348)
class ACraftingObjective : public ARequirementObjective
{ 
public:
	TArray<TWeakObjectPtr>                             _targetItems;                                               // 0x0330   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0340   (0x0008)  MISSED
};

/// Class /Script/ConZ.AdvancedCraftingObjective
/// Size: 0x0020 (0x000348 - 0x000368)
class AAdvancedCraftingObjective : public ACraftingObjective
{ 
public:
	UCraftableItem*                                    _craftableItem;                                             // 0x0348   (0x0008)  
	AMissionDialogueManager*                           _dialogueManager;                                           // 0x0350   (0x0008)  
	UDialogueData*                                     _dialogueData;                                              // 0x0358   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0360   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.AdvancedCraftingObjective.OnTabMenuOpenedHandler
	void OnTabMenuOpenedHandler(ETabMode tabMode);                                                                           // [0x224f500] Final|Native|Private 
};

/// Class /Script/ConZ.AIDetectionTimerHandler
/// Size: 0x0050 (0x000220 - 0x000270)
class AAIDetectionTimerHandler : public AActor
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0220   (0x0050)  MISSED
};

/// Class /Script/ConZ.VehicleBase
/// Size: 0x08B0 (0x000280 - 0x000B30)
class AVehicleBase : public APawn
{ 
public:
	unsigned char                                      UnknownData00_2[0x1C0];                                     // 0x0280   (0x01C0)  MISSED
	UVehicleMeshComponent*                             _vehicleMeshComponent;                                      // 0x0440   (0x0008)  
	unsigned char                                      UnknownData01_5[0x1C];                                      // 0x0448   (0x001C)  MISSED
	bool                                               _shouldApplyWaterDrag;                                      // 0x0464   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0465   (0x0003)  MISSED
	float                                              _waterDragForceCoefficient;                                 // 0x0468   (0x0004)  
	FFloatInterval                                     _submergedInWaterDamagePerSecond;                           // 0x046C   (0x0008)  
	unsigned char                                      UnknownData03_5[0x54];                                      // 0x0474   (0x0054)  MISSED
	AVehicleItemContainer*                             _itemContainer;                                             // 0x04C8   (0x0008)  
	TArray<UVehicleAttachment*>                        _vehicleAttachments;                                        // 0x04D0   (0x0010)  
	TArray<UVehicleAttachment*>                        _repVehicleAttachments;                                     // 0x04E0   (0x0010)  
	unsigned char                                      UnknownData04_5[0x10];                                      // 0x04F0   (0x0010)  MISSED
	FVehicleAttachmentSlot                             _chassisSlot;                                               // 0x0500   (0x0048)  
	unsigned char                                      UnknownData05_5[0x8];                                       // 0x0548   (0x0008)  MISSED
	FGameplayTagContainer                              _lockInfluencingAttachmentSlotTags;                         // 0x0550   (0x0020)  
	FGameplayTagContainer                              _lockingAttachmentSlotTags;                                 // 0x0570   (0x0020)  
	TArray<UVehicleSystem*>                            _vehicleSystems;                                            // 0x0590   (0x0010)  
	unsigned char                                      UnknownData06_5[0x18];                                      // 0x05A0   (0x0018)  MISSED
	FPackedEntitySetupAndId                            _repServerEntitySetupAndId;                                 // 0x05B8   (0x0008)  
	UVehicleForcePushComponent*                        _forcePushComponent;                                        // 0x05C0   (0x0008)  
	TMap<UVehicleAttachment*, UWidgetComponent*>       _attachmentHealthWidgets;                                   // 0x05C8   (0x0050)  
	UClass*                                            _attachmentHealthWidget;                                    // 0x0618   (0x0008)  
	UNetworkPredictionComponent*                       _networkPrediction;                                         // 0x0620   (0x0008)  
	FGameplayTag                                       SpawnGroup;                                                 // 0x0628   (0x0008)  
	unsigned char                                      UnknownData07_5[0x8];                                       // 0x0630   (0x0008)  MISSED
	UClass*                                            _itemContainerClass;                                        // 0x0638   (0x0008)  
	FRepairableParams                                  _repairableParams;                                          // 0x0640   (0x0038)  
	unsigned char                                      UnknownData08_5[0x1];                                       // 0x0678   (0x0001)  MISSED
	bool                                               _repIsSimulatingPhysics;                                    // 0x0679   (0x0001)  
	unsigned char                                      UnknownData09_5[0x2];                                       // 0x067A   (0x0002)  MISSED
	FVector                                            _repLocationWhenNotSimulatingPhysics;                       // 0x067C   (0x000C)  
	FRotator                                           _repRotationWhenNotSimulatingPhysics;                       // 0x0688   (0x000C)  
	unsigned char                                      UnknownData10_5[0x4];                                       // 0x0694   (0x0004)  MISSED
	float                                              _physicsDormancyTimeout;                                    // 0x0698   (0x0004)  
	unsigned char                                      UnknownData11_5[0x1C];                                      // 0x069C   (0x001C)  MISSED
	UVehicleServiceComponent*                          _serviceComponent;                                          // 0x06B8   (0x0008)  
	bool                                               _isInQuickService;                                          // 0x06C0   (0x0001)  
	unsigned char                                      UnknownData12_5[0xC7];                                      // 0x06C1   (0x00C7)  MISSED
	UVehicleCameraStabilizerComponent*                 _cameraStabilizer;                                          // 0x0788   (0x0008)  
	unsigned char                                      UnknownData13_5[0x4];                                       // 0x0790   (0x0004)  MISSED
	uint32_t                                           _previewMeshTimePerMesh;                                    // 0x0794   (0x0004)  
	unsigned char                                      UnknownData14_5[0x8];                                       // 0x0798   (0x0008)  MISSED
	FText                                              _healthBarCaption;                                          // 0x07A0   (0x0018)  
	FVehicleImpactEffects                              _impactEffects;                                             // 0x07B8   (0x0118)  
	unsigned char                                      UnknownData15_5[0x60];                                      // 0x08D0   (0x0060)  MISSED
	float                                              _maxSpeedForInteraction;                                    // 0x0930   (0x0004)  
	float                                              _maxTiltAngleForMounting;                                   // 0x0934   (0x0004)  
	unsigned char                                      UnknownData16_5[0x8];                                       // 0x0938   (0x0008)  MISSED
	float                                              _maxSubmergedTime;                                          // 0x0940   (0x0004)  
	float                                              _maxSubmersionFactor;                                       // 0x0944   (0x0004)  
	unsigned char                                      UnknownData17_5[0x8];                                       // 0x0948   (0x0008)  MISSED
	UClass*                                            _mountSlotIndicatorsWidget;                                 // 0x0950   (0x0008)  
	unsigned char                                      UnknownData18_5[0x8];                                       // 0x0958   (0x0008)  MISSED
	float                                              _inWaterDestructionTimeInSeconds;                           // 0x0960   (0x0004)  
	float                                              _outOfWaterDestructionTimeInSeconds;                        // 0x0964   (0x0004)  
	UClass*                                            _vehicleHandlingSkill;                                      // 0x0968   (0x0008)  
	bool                                               _isInWater;                                                 // 0x0970   (0x0001)  
	unsigned char                                      UnknownData19_5[0x3];                                       // 0x0971   (0x0003)  MISSED
	float                                              _navigationRelevancyVelocitySquared;                        // 0x0974   (0x0004)  
	unsigned char                                      UnknownData20_5[0x18];                                      // 0x0978   (0x0018)  MISSED
	UParticleSystem*                                   _smokeParticlesLow;                                         // 0x0990   (0x0008)  
	UParticleSystem*                                   _smokeParticlesMedium;                                      // 0x0998   (0x0008)  
	UParticleSystem*                                   _smokeParticlesHigh;                                        // 0x09A0   (0x0008)  
	unsigned char                                      UnknownData21_5[0x8];                                       // 0x09A8   (0x0008)  MISSED
	UParticleSystemComponent*                          _smokeParticleSystemComponent;                              // 0x09B0   (0x0008)  
	FVector                                            _smokeParticlesOffset;                                      // 0x09B8   (0x000C)  
	EConZPxDominanceGroup                              _physicsDominanceGroup;                                     // 0x09C4   (0x0001)  
	unsigned char                                      UnknownData22_5[0x3];                                       // 0x09C5   (0x0003)  MISSED
	float                                              _aiNoiseFrequencyPerHour;                                   // 0x09C8   (0x0004)  
	ENoiseLevel                                        _aiNoiseLevel;                                              // 0x09CC   (0x0001)  
	unsigned char                                      UnknownData23_5[0x7];                                       // 0x09CD   (0x0007)  MISSED
	FVector                                            _aiNoiseOffset;                                             // 0x09D4   (0x000C)  
	TArray<FGameplayTag>                               _mountSlotsBySwitchSeatIndex;                               // 0x09E0   (0x0010)  
	FGameplayTag                                       _toggleMainLightsDeviceControlTag;                          // 0x09F0   (0x0008)  
	unsigned char                                      UnknownData24_5[0x8];                                       // 0x09F8   (0x0008)  MISSED
	FTransform                                         _unlockTransform;                                           // 0x0A00   (0x0030)  
	float                                              _forceUnlockMovementAcceptanceRadius;                       // 0x0A30   (0x0004)  
	float                                              _absoluteSpeedLimitKmh;                                     // 0x0A34   (0x0004)  
	EAITeam                                            _aiTeam;                                                    // 0x0A38   (0x0001)  
	unsigned char                                      UnknownData25_5[0x57];                                      // 0x0A39   (0x0057)  MISSED
	FVehicleDamageHandlerParams                        _damageHandlerParams;                                       // 0x0A90   (0x0010)  
	TMap<ECollisionDamageType, float>                  _damageRatios;                                              // 0x0AA0   (0x0050)  
	float                                              _explosionDamageRatio;                                      // 0x0AF0   (0x0004)  
	unsigned char                                      UnknownData26_5[0x2C];                                      // 0x0AF4   (0x002C)  MISSED
	APrisoner*                                         _driver;                                                    // 0x0B20   (0x0008)  
	unsigned char                                      UnknownData27_6[0x8];                                       // 0x0B28   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.VehicleBase.Server_CollideWithVehicle
	void Server_CollideWithVehicle(FGameplayTag myRegion, AVehicleBase* otherVehicle, FGameplayTag otherRegion, float impactSpeed); // [0x23fe760] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.VehicleBase.Server_ApplyDamageToRegion
	void Server_ApplyDamageToRegion(FGameplayTag region, float Damage, float armorPenetration, ECollisionDamageType CollisionDamageType); // [0x23fe610] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.VehicleBase.Server_ApplyDamageToAttachment
	void Server_ApplyDamageToAttachment(UVehicleAttachment* Attachment, float Damage, float armorPenetration, ECollisionDamageType CollisionDamageType); // [0x23fe4c0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.VehicleBase.OnRep_VehicleAttachments
	void OnRep_VehicleAttachments();                                                                                         // [0x23fe4a0] Final|Native|Private 
	// Function /Script/ConZ.VehicleBase.OnRep_ServiceComponent
	void OnRep_ServiceComponent();                                                                                           // [0x23fe480] Final|Native|Private 
	// Function /Script/ConZ.VehicleBase.OnRep_ServerEntitySetupAndId
	void OnRep_ServerEntitySetupAndId();                                                                                     // [0x23fe460] Final|Native|Private 
	// Function /Script/ConZ.VehicleBase.OnRep_ItemContainer
	void OnRep_ItemContainer();                                                                                              // [0x23fe440] Final|Native|Private 
};

/// Class /Script/ConZ.Airplane
/// Size: 0x01F0 (0x000B30 - 0x000D20)
class AAirplane : public AVehicleBase
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0B30   (0x0010)  MISSED
	ULiftComponent*                                    _physicsLiftComponent;                                      // 0x0B40   (0x0008)  
	unsigned char                                      UnknownData01_5[0x28];                                      // 0x0B48   (0x0028)  MISSED
	TMap<EAerodynamicSurfaceType, FAerodynamicSurfaceControlData> _aerodynamicSurfaceMap;                          // 0x0B70   (0x0050)  
	unsigned char                                      UnknownData02_5[0x10];                                      // 0x0BC0   (0x0010)  MISSED
	float                                              _airFlowParticlesSpeedKmhThreshold;                         // 0x0BD0   (0x0004)  
	float                                              _reverseTaxiingForce;                                       // 0x0BD4   (0x0004)  
	float                                              _maxReverseTaxiingVelocity;                                 // 0x0BD8   (0x0004)  
	float                                              _airplaneHeightToStallInMeters;                             // 0x0BDC   (0x0004)  
	float                                              _propellerForce;                                            // 0x0BE0   (0x0004)  
	float                                              _maxVelocity;                                               // 0x0BE4   (0x0004)  
	unsigned char                                      UnknownData03_5[0xC];                                       // 0x0BE8   (0x000C)  MISSED
	FInt32Range                                        _throttleLevelRange;                                        // 0x0BF4   (0x0010)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x0C04   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _throttlePerLevel;                                          // 0x0C08   (0x0088)  
	unsigned char                                      UnknownData05_5[0x4];                                       // 0x0C90   (0x0004)  MISSED
	float                                              _throttleLerpAmount;                                        // 0x0C94   (0x0004)  
	unsigned char                                      UnknownData06_5[0x8];                                       // 0x0C98   (0x0008)  MISSED
	float                                              _brakeLerpAmount;                                           // 0x0CA0   (0x0004)  
	unsigned char                                      UnknownData07_5[0x8];                                       // 0x0CA4   (0x0008)  MISSED
	float                                              _rollLerpAmount;                                            // 0x0CAC   (0x0004)  
	unsigned char                                      UnknownData08_5[0x8];                                       // 0x0CB0   (0x0008)  MISSED
	float                                              _yawLerpAmount;                                             // 0x0CB8   (0x0004)  
	unsigned char                                      UnknownData09_5[0x8];                                       // 0x0CBC   (0x0008)  MISSED
	float                                              _pitchLerpAmount;                                           // 0x0CC4   (0x0004)  
	unsigned char                                      UnknownData10_5[0x8];                                       // 0x0CC8   (0x0008)  MISSED
	float                                              _controlResetLerp;                                          // 0x0CD0   (0x0004)  
	unsigned char                                      UnknownData11_5[0x2C];                                      // 0x0CD4   (0x002C)  MISSED
	UStaticMeshComponent*                              _propellerMesh;                                             // 0x0D00   (0x0008)  
	UMaterialInterface*                                _propellerMaterial;                                         // 0x0D08   (0x0008)  
	UMaterialInstanceDynamic*                          _propellerMaterialDynamic;                                  // 0x0D10   (0x0008)  
	unsigned char                                      UnknownData12_6[0x8];                                       // 0x0D18   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.Airplane.UpdateHandlingParametersOnClient
	void UpdateHandlingParametersOnClient(bool ShouldHaveMouseInput, float engineIgnitionDurationMultiplier, float engineIgnitionFailureChance); // [0x224f820] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.Airplane.OnPropellerHit
	void OnPropellerHit(UPrimitiveComponent* HitComponent, AActor* OtherActor, UPrimitiveComponent* OtherComponent, FVector NormalImpulse, FHitResult& Hit); // [0x224f240] Final|Native|Private|HasOutParms|HasDefaults 
};

/// Class /Script/ConZ.AirplaneAnimInstance
/// Size: 0x0070 (0x0002C0 - 0x000330)
class UAirplaneAnimInstance : public UAnimInstance
{ 
public:
	bool                                               IsAnyoneMounted;                                            // 0x02B8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x02B9   (0x0003)  MISSED
	float                                              Speed;                                                      // 0x02BC   (0x0004)  
	float                                              SpeedKph;                                                   // 0x02C0   (0x0004)  
	float                                              PropellerRotationAngle;                                     // 0x02C4   (0x0004)  
	float                                              LeftAileronsAngle;                                          // 0x02C8   (0x0004)  
	float                                              RightAileronsAngle;                                         // 0x02CC   (0x0004)  
	float                                              ElevatorsAngle;                                             // 0x02D0   (0x0004)  
	float                                              RudderAngle;                                                // 0x02D4   (0x0004)  
	bool                                               IsMounteeDriver;                                            // 0x02D8   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x02D9   (0x0003)  MISSED
	float                                              clockMinuteRotation;                                        // 0x02DC   (0x0004)  
	float                                              clockHourRotation;                                          // 0x02E0   (0x0004)  
	float                                              altimeterTensRotation;                                      // 0x02E4   (0x0004)  
	float                                              altimeterHundredsRotation;                                  // 0x02E8   (0x0004)  
	float                                              altimeterThousandsRotation;                                 // 0x02EC   (0x0004)  
	float                                              airSpeedRotation;                                           // 0x02F0   (0x0004)  
	float                                              rpmRotation;                                                // 0x02F4   (0x0004)  
	float                                              verticalSpeedRotation;                                      // 0x02F8   (0x0004)  
	float                                              throttleLeverRotation;                                      // 0x02FC   (0x0004)  
	float                                              leftYawPedalRotation;                                       // 0x0300   (0x0004)  
	float                                              rightYawPedalRotation;                                      // 0x0304   (0x0004)  
	FRotator                                           stickRotator;                                               // 0x0308   (0x000C)  
	FRotator                                           headingRotator;                                             // 0x0314   (0x000C)  
	bool                                               shouldHidePropellerBone;                                    // 0x0320   (0x0001)  
	unsigned char                                      UnknownData02_6[0xF];                                       // 0x0321   (0x000F)  MISSED
};

/// Class /Script/ConZ.AIStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UAIStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.AkComponentClientOnly
/// Size: 0x0000 (0x0003E0 - 0x0003E0)
class UAkComponentClientOnly : public UAkComponent
{ 
public:
};

/// Class /Script/ConZ.AmbientSounds
/// Size: 0x00D8 (0x000220 - 0x0002F8)
class AAmbientSounds : public AActor
{ 
public:
	float                                              MinCameraLocationDeltaForUpdate;                            // 0x0220   (0x0004)  
	FGameplayTag                                       ForestMask;                                                 // 0x0224   (0x0008)  
	float                                              ForestMaskSearchRadius;                                     // 0x022C   (0x0004)  
	UAkAudioEvent*                                     CoastalForestAudioEvent;                                    // 0x0230   (0x0008)  
	UAkAudioEvent*                                     ContinentalForest1AudioEvent;                               // 0x0238   (0x0008)  
	UAkAudioEvent*                                     ContinentalForest2AudioEvent;                               // 0x0240   (0x0008)  
	UAkAudioEvent*                                     ContinentalForest3AudioEvent;                               // 0x0248   (0x0008)  
	UAkAudioEvent*                                     UndergroundAudioEvent;                                      // 0x0250   (0x0008)  
	FGameplayTag                                       CityMask;                                                   // 0x0258   (0x0008)  
	float                                              CityMaskSearchRadius;                                       // 0x0260   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0264   (0x0004)  MISSED
	UAkAudioEvent*                                     CityAudioEvent;                                             // 0x0268   (0x0008)  
	UAkAudioEvent*                                     LargeVillageAudioEvent;                                     // 0x0270   (0x0008)  
	UAkAudioEvent*                                     SmallVillageAudioEvent;                                     // 0x0278   (0x0008)  
	UAkAudioEvent*                                     IndustrialAreaAudioEvent;                                   // 0x0280   (0x0008)  
	unsigned char                                      UnknownData01_6[0x70];                                      // 0x0288   (0x0070)  MISSED
};

/// Class /Script/ConZ.Item
/// Size: 0x06F0 (0x000220 - 0x000910)
class AItem : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0xA0];                                      // 0x0220   (0x00A0)  MISSED
	FMulticastInlineDelegate                           DebugTextChanged;                                           // 0x02C0   (0x0010)  
	FMulticastInlineDelegate                           PickedUpState;                                              // 0x02D0   (0x0010)  
	FMulticastInlineDelegate                           OnStaticMeshChanged;                                        // 0x02E0   (0x0010)  
	FMulticastInlineDelegate                           OnSkeletalMeshChanged;                                      // 0x02F0   (0x0010)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x0300   (0x0010)  MISSED
	UStaticMeshComponent*                              Mesh;                                                       // 0x0310   (0x0008)  
	unsigned char                                      UnknownData02_5[0x110];                                     // 0x0318   (0x0110)  MISSED
	UThrowingComponent*                                ThrowingComponent;                                          // 0x0428   (0x0008)  
	FText                                              _caption;                                                   // 0x0430   (0x0018)  
	FText                                              _description;                                               // 0x0448   (0x0018)  
	int32_t                                            _uses;                                                      // 0x0460   (0x0004)  
	float                                              _health;                                                    // 0x0464   (0x0004)  
	float                                              _maxHealth;                                                 // 0x0468   (0x0004)  
	float                                              _maxHealthPercentageAfterReachingBadQuality;                // 0x046C   (0x0004)  
	float                                              _weight;                                                    // 0x0470   (0x0004)  
	float                                              _initialWeightUsed;                                         // 0x0474   (0x0004)  
	float                                              _maxWaterWeightAsRatioOfWeight;                             // 0x0478   (0x0004)  
	float                                              _radiationDecreaseRate;                                     // 0x047C   (0x0004)  
	float                                              _maxRadiationAmountPerWeight;                               // 0x0480   (0x0004)  
	float                                              _baseRadiationPropagationFactor;                            // 0x0484   (0x0004)  
	bool                                               _canEverDecontaminate;                                      // 0x0488   (0x0001)  
	unsigned char                                      UnknownData03_5[0x7];                                       // 0x0489   (0x0007)  MISSED
	UChoppingRecipeDataAsset*                          _choppingRecipeDataAsset;                                   // 0x0490   (0x0008)  
	bool                                               _shouldBeMaintained;                                        // 0x0498   (0x0001)  
	bool                                               _canBeDropped;                                              // 0x0499   (0x0001)  
	bool                                               _canTakeInHands;                                            // 0x049A   (0x0001)  
	bool                                               _canBeVisibleInVicinity;                                    // 0x049B   (0x0001)  
	bool                                               _canPlaceItemsOn;                                           // 0x049C   (0x0001)  
	bool                                               _canPlaceBlueprintsOn;                                      // 0x049D   (0x0001)  
	unsigned char                                      UnknownData04_5[0x2];                                       // 0x049E   (0x0002)  MISSED
	USkeletalMesh*                                     _overrideSkeletalMesh;                                      // 0x04A0   (0x0008)  
	unsigned char                                      UnknownData05_5[0x8];                                       // 0x04A8   (0x0008)  MISSED
	FTransform                                         _overrideSkeletalMeshRelativeTransform;                     // 0x04B0   (0x0030)  
	EItemExhausted                                     _ifExhausted;                                               // 0x04E0   (0x0001)  
	unsigned char                                      UnknownData06_5[0x3];                                       // 0x04E1   (0x0003)  MISSED
	float                                              _resourceAmountUsedPerWash;                                 // 0x04E4   (0x0004)  
	UTexture2D*                                        _inventoryIcon;                                             // 0x04E8   (0x0008)  
	UTexture2D*                                        _inventoryIconInHands;                                      // 0x04F0   (0x0008)  
	UTexture2D*                                        _outsideInventoryIcon;                                      // 0x04F8   (0x0008)  
	uint32_t                                           _sizeX;                                                     // 0x0500   (0x0004)  
	uint32_t                                           _sizeY;                                                     // 0x0504   (0x0004)  
	TArray<UBaseItemTag*>                              _inventoryWhiteList;                                        // 0x0508   (0x0010)  
	TArray<UBaseItemTag*>                              _inventoryBlackList;                                        // 0x0518   (0x0010)  
	float                                              _maxContainedWeight;                                        // 0x0528   (0x0004)  
	bool                                               _canContainNonEmptyItems;                                   // 0x052C   (0x0001)  
	bool                                               _canBeContainedIfNonEmpty;                                  // 0x052D   (0x0001)  
	bool                                               _isIgnoredBySpawners;                                       // 0x052E   (0x0001)  
	unsigned char                                      UnknownData07_5[0x1];                                       // 0x052F   (0x0001)  MISSED
	FFloatInterval                                     _spawnTimeoutPerPlayer;                                     // 0x0530   (0x0008)  
	FItemLocation                                      _itemLocation;                                              // 0x0538   (0x000F)  
	EItemRarity                                        _rarity;                                                    // 0x0547   (0x0001)  
	FGameplayTagContainer                              _itemSpawnTypes;                                            // 0x0548   (0x0020)  
	FGameplayTag                                       _itemSpawnGroup;                                            // 0x0568   (0x0008)  
	FVector                                            _spawnLocationOffset;                                       // 0x0570   (0x000C)  
	FRotator                                           _spawnRotationOffset;                                       // 0x057C   (0x000C)  
	float                                              _spawnRotationRandomization;                                // 0x0588   (0x0004)  
	float                                              _placementCollisionUpOffset;                                // 0x058C   (0x0004)  
	bool                                               _shouldOverrideUsageWhenSpawnedBySpawners;                  // 0x0590   (0x0001)  
	unsigned char                                      UnknownData08_5[0x3];                                       // 0x0591   (0x0003)  MISSED
	float                                              _initialUsageWhenSpawnedBySpawners;                         // 0x0594   (0x0004)  
	float                                              _randomizeUsageWhenSpawnedBySpawners;                       // 0x0598   (0x0004)  
	unsigned char                                      UnknownData09_5[0x4];                                       // 0x059C   (0x0004)  MISSED
	TArray<UBaseItemTag*>                              _itemTags;                                                  // 0x05A0   (0x0010)  
	TArray<UBaseItemTag*>                              _ownedItemTags;                                             // 0x05B0   (0x0010)  
	ENoiseLevel                                        _noiseLevel;                                                // 0x05C0   (0x0001)  
	unsigned char                                      UnknownData10_5[0x7];                                       // 0x05C1   (0x0007)  MISSED
	FItemMotionNoise                                   _motionNoise;                                               // 0x05C8   (0x0008)  
	UAkAudioEvent*                                     _inventoryHandlingSound;                                    // 0x05D0   (0x0008)  
	UAkAudioEvent*                                     _destroyedSound;                                            // 0x05D8   (0x0008)  
	TArray<UClass*>                                    _craftingIngredientTypes;                                   // 0x05E0   (0x0010)  
	EInteractionType                                   _craftingInteraction;                                       // 0x05F0   (0x0001)  
	unsigned char                                      UnknownData11_5[0x7];                                       // 0x05F1   (0x0007)  MISSED
	TArray<FCraftingPart>                              _defaultCraftingParts;                                      // 0x05F8   (0x0010)  
	float                                              _damageOnUse;                                               // 0x0608   (0x0004)  
	float                                              _damageOverTime;                                            // 0x060C   (0x0004)  
	float                                              _autoDestructTime;                                          // 0x0610   (0x0004)  
	bool                                               _allowContainedItemsDecay;                                  // 0x0614   (0x0001)  
	unsigned char                                      UnknownData12_5[0x7];                                       // 0x0615   (0x0007)  MISSED
	bool                                               _shouldDestroyContainedItemsOnDestroyEvent;                 // 0x061C   (0x0001)  
	unsigned char                                      UnknownData13_5[0x3];                                       // 0x061D   (0x0003)  MISSED
	float                                              _minTemperatureForHeatDamage;                               // 0x0620   (0x0004)  
	float                                              _containedDamageStartPercentage;                            // 0x0624   (0x0004)  
	float                                              _damageResponseFactor;                                      // 0x0628   (0x0004)  
	unsigned char                                      UnknownData14_5[0x4];                                       // 0x062C   (0x0004)  MISSED
	UClass*                                            _attachmentSocketMountType;                                 // 0x0630   (0x0008)  
	TArray<FAttachmentSocket>                          _attachmentSockets;                                         // 0x0638   (0x0010)  
	UClass*                                            _holsterAttachmentSocketMountType;                          // 0x0648   (0x0008)  
	TMap<UClass*, FAttachmentSocketOffset>             _attachmentSocketsOffset;                                   // 0x0650   (0x0050)  
	bool                                               _enableGlowOnBeginPlay;                                     // 0x06A0   (0x0001)  
	bool                                               _enableAwarenessGlow;                                       // 0x06A1   (0x0001)  
	bool                                               _enableHoverGlow;                                           // 0x06A2   (0x0001)  
	unsigned char                                      UnknownData15_5[0x5];                                       // 0x06A3   (0x0005)  MISSED
	UStaticMesh*                                       _placementMeshOverride;                                     // 0x06A8   (0x0008)  
	UStaticMesh*                                       _staticMeshHolsterOverride;                                 // 0x06B0   (0x0008)  
	USkeletalMesh*                                     _skeletalMeshHolsterOverride;                               // 0x06B8   (0x0008)  
	bool                                               _hasHighLoadPriorityInVirtualization;                       // 0x06C0   (0x0001)  
	unsigned char                                      UnknownData16_5[0x3];                                       // 0x06C1   (0x0003)  MISSED
	float                                              _virtualizationDistanceOffset;                              // 0x06C4   (0x0004)  
	bool                                               _canEverBeVirtualized;                                      // 0x06C8   (0x0001)  
	unsigned char                                      UnknownData17_5[0x1];                                       // 0x06C9   (0x0001)  MISSED
	bool                                               _isSubjectToAllowMinesConfig;                               // 0x06CA   (0x0001)  
	unsigned char                                      UnknownData18_5[0x1];                                       // 0x06CB   (0x0001)  MISSED
	float                                              _resultHealthMultiplierWhenCraftingIngredient;              // 0x06CC   (0x0004)  
	float                                              _preferredDamagePerUpdate;                                  // 0x06D0   (0x0004)  
	bool                                               _useHandCorrections;                                        // 0x06D4   (0x0001)  
	unsigned char                                      UnknownData19_5[0x3];                                       // 0x06D5   (0x0003)  MISSED
	float                                              _vicinityCheckDistance;                                     // 0x06D8   (0x0004)  
	float                                              _reachabilityTestZOffset;                                   // 0x06DC   (0x0004)  
	TArray<UClass*>                                    _stackableClasses;                                          // 0x06E0   (0x0010)  
	int32_t                                            _maxNumOfStacks;                                            // 0x06F0   (0x0004)  
	float                                              _bloodDryingSpeed;                                          // 0x06F4   (0x0004)  
	FItemStackData                                     _stackData;                                                 // 0x06F8   (0x0010)  
	unsigned char                                      UnknownData20_5[0x8];                                       // 0x0708   (0x0008)  MISSED
	TArray<UItemStateBase*>                            _craftingPartsData;                                         // 0x0710   (0x0010)  
	unsigned char                                      UnknownData21_5[0x8];                                       // 0x0720   (0x0008)  MISSED
	USkeletalMeshComponent*                            _skeletalMeshComponent;                                     // 0x0728   (0x0008)  
	unsigned char                                      UnknownData22_5[0x4];                                       // 0x0730   (0x0004)  MISSED
	float                                              _weightUsed;                                                // 0x0734   (0x0004)  
	unsigned char                                      UnknownData23_5[0x18];                                      // 0x0738   (0x0018)  MISSED
	FPackedEntitySetupAndId                            _repServerEntitySetupAndId;                                 // 0x0750   (0x0008)  
	TArray<UItemComponent*>                            _itemComponents;                                            // 0x0758   (0x0010)  
	AActor*                                            _attachParentObject;                                        // 0x0768   (0x0008)  
	FVisibilityReplication                             _visibilityReplication;                                     // 0x0770   (0x0008)  
	unsigned char                                      UnknownData24_5[0x3C];                                      // 0x0778   (0x003C)  MISSED
	float                                              _radiationAmount;                                           // 0x07B4   (0x0004)  
	float                                              _uncraftTime;                                               // 0x07B8   (0x0004)  
	unsigned char                                      UnknownData25_5[0x4];                                       // 0x07BC   (0x0004)  MISSED
	uint64_t                                           _replicatedState;                                           // 0x07C0   (0x0008)  
	unsigned char                                      UnknownData26_5[0x1];                                       // 0x07C8   (0x0001)  MISSED
	char                                               _flagsReplicated;                                           // 0x07C9   (0x0001)  
	unsigned char                                      UnknownData27_5[0x26];                                      // 0x07CA   (0x0026)  MISSED
	USceneComponent*                                   _tempSceneComponent;                                        // 0x07F0   (0x0008)  
	unsigned char                                      UnknownData28_5[0x8];                                       // 0x07F8   (0x0008)  MISSED
	int64_t                                            _expirationTime;                                            // 0x0800   (0x0008)  
	TArray<FInventoryStackData>                        _stacks;                                                    // 0x0808   (0x0010)  
	AItem*                                             _stackExhaustedSuccessorItem;                               // 0x0818   (0x0008)  
	TScriptInterface<Class>                            _parentContainer;                                           // 0x0820   (0x0010)  
	TScriptInterface<Class>                            _parentInventoryNode;                                       // 0x0830   (0x0010)  
	unsigned char                                      UnknownData29_5[0x80];                                      // 0x0840   (0x0080)  MISSED
	TArray<FCraftingPart>                              _craftingParts;                                             // 0x08C0   (0x0010)  
	unsigned char                                      UnknownData30_6[0x40];                                      // 0x08D0   (0x0040)  MISSED


	/// Functions
	// Function /Script/ConZ.Item.Use
	bool Use(APrisoner* Prisoner, int32_t Usage, float usageWeight, bool Eat, float DamageMultiplier);                       // [0x2304fb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Item.UpdateVisuals
	void UpdateVisuals(bool shouldHandleAging);                                                                              // [0x2304f20] Native|Public        
	// Function /Script/ConZ.Item.UpdateMaterialsPaniniAmount
	void UpdateMaterialsPaniniAmount();                                                                                      // [0x2304f00] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Item.StopBlinking
	void StopBlinking();                                                                                                     // [0x2304ee0] Final|Native|Public  
	// Function /Script/ConZ.Item.StaticMeshChangedDelegate__DelegateSignature
	void StaticMeshChangedDelegate__DelegateSignature(AItem* Item);                                                          // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.Item.StateChangedDelegate__DelegateSignature
	void StateChangedDelegate__DelegateSignature(AItem* Item);                                                               // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.Item.SkeletalMeshChangedDelegate__DelegateSignature
	void SkeletalMeshChangedDelegate__DelegateSignature(AItem* Item);                                                        // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.Item.SetWeight
	void SetWeight(float Value);                                                                                             // [0x2304e60] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Item.SetOutsideInventoryIcon
	void SetOutsideInventoryIcon(UTexture2D* Value);                                                                         // [0x2304dd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Item.SetMaxHealth
	void SetMaxHealth(float MaxHealth);                                                                                      // [0x2304d50] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Item.SetInventoryIconInHands
	void SetInventoryIconInHands(UTexture2D* Value);                                                                         // [0x2304cc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Item.SetInventoryIcon
	void SetInventoryIcon(UTexture2D* Value);                                                                                // [0x2304c30] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Item.SetHealthAndUsage
	void SetHealthAndUsage(float health, int32_t Usage);                                                                     // [0x2304b60] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Item.SetHealth
	void SetHealth(float health);                                                                                            // [0x2304ae0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Item.SetCaption
	void SetCaption(FText& Value);                                                                                           // [0x2304a10] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.Item.Server_Throw
	void Server_Throw(FVector ZeroBasedStartPosition, FRotator StartRotation, FVector StartVelocity);                        // [0x2304910] Net|NetReliableNative|Event|Public|NetServer|HasDefaults 
	// Function /Script/ConZ.Item.Repair
	void Repair(float healthToRepair);                                                                                       // [0x2304880] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Item.RemoveStacks
	TScriptInterface<Class> RemoveStacks(int32_t stacksToSplit);                                                             // [0x23047d0] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Item.PickedUpStateDelegate__DelegateSignature
	void PickedUpStateDelegate__DelegateSignature(AItem* Item, bool pickedUp);                                               // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.Item.OnRightClicked
	void OnRightClicked();                                                                                                   // [0xb92f40] Final|Native|Private 
	// Function /Script/ConZ.Item.OnRep_WeightUsed
	void OnRep_WeightUsed();                                                                                                 // [0x23047b0] Native|Protected     
	// Function /Script/ConZ.Item.OnRep_Visibility
	void OnRep_Visibility();                                                                                                 // [0x2304790] Native|Protected     
	// Function /Script/ConZ.Item.OnRep_Stacks
	void OnRep_Stacks();                                                                                                     // [0xb92f40] Final|Native|Private 
	// Function /Script/ConZ.Item.OnRep_StackData
	void OnRep_StackData();                                                                                                  // [0xb92f40] Final|Native|Private 
	// Function /Script/ConZ.Item.OnRep_ServerEntitySetupAndId
	void OnRep_ServerEntitySetupAndId();                                                                                     // [0x2304770] Native|Protected     
	// Function /Script/ConZ.Item.OnRep_ReplicatedState
	void OnRep_ReplicatedState();                                                                                            // [0x2304750] Final|Native|Private 
	// Function /Script/ConZ.Item.OnRep_Health
	void OnRep_Health();                                                                                                     // [0x2304730] Native|Protected     
	// Function /Script/ConZ.Item.OnRep_FlagsReplicated
	void OnRep_FlagsReplicated();                                                                                            // [0x2304710] Final|Native|Private 
	// Function /Script/ConZ.Item.OnProjectileStop
	void OnProjectileStop(FHitResult& ImpactResult);                                                                         // [0x2304640] Final|Native|Public|HasOutParms 
	// Function /Script/ConZ.Item.OnDetachedFromItem
	void OnDetachedFromItem(AItem* Item);                                                                                    // [0x2304490] Native|Event|Protected|BlueprintEvent 
	// Function /Script/ConZ.Item.OnDestroyedEvent
	void OnDestroyedEvent(AActor* Self);                                                                                     // [0x2304400] Native|Public        
	// Function /Script/ConZ.Item.OnContainedItemDestroyed
	void OnContainedItemDestroyed(AActor* containedItem);                                                                    // [0x2304370] Final|Native|Public  
	// Function /Script/ConZ.Item.OnAttachedToItem
	void OnAttachedToItem(AItem* Item);                                                                                      // [0x22dfbe0] Native|Event|Protected|BlueprintEvent 
	// Function /Script/ConZ.Item.NetMulticast_SpawnDestroyedEffects
	void NetMulticast_SpawnDestroyedEffects();                                                                               // [0x22700a0] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.Item.NetMulticast_SetActorDropLocationAndRotation
	void NetMulticast_SetActorDropLocationAndRotation(FVector Location, FRotator Rotation);                                  // [0x2304280] Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults 
	// Function /Script/ConZ.Item.NetMulticast_EnsureSpawned
	void NetMulticast_EnsureSpawned();                                                                                       // [0x2304260] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.Item.Multicast_Throw
	void Multicast_Throw(FVector ZeroBasedStartPosition, FRotator StartRotation, FVector StartVelocity);                     // [0x2304160] Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults 
	// Function /Script/ConZ.Item.HasPriorityForContainerItem
	bool HasPriorityForContainerItem(AItem* containerItem);                                                                  // [0x23040a0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.Item.GetWidgetDisplayInfo
	FWidgetDisplayInfo GetWidgetDisplayInfo();                                                                               // [0x2304060] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetWetness
	float GetWetness();                                                                                                      // [0x2304030] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetWeightUsed
	float GetWeightUsed();                                                                                                   // [0x2304000] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetWeightRemained
	float GetWeightRemained();                                                                                               // [0x2303fd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetWeightPerUse
	float GetWeightPerUse();                                                                                                 // [0x2303fa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetWeight
	float GetWeight();                                                                                                       // [0x2303f70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetWaterWeight
	float GetWaterWeight();                                                                                                  // [0x2303f30] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetUsedSlots
	int32_t GetUsedSlots();                                                                                                  // [0x2303f00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetUsedMass
	float GetUsedMass();                                                                                                     // [0x2303ed0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetTypes
	TArray<UClass*> GetTypes();                                                                                              // [0x2303e40] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Item.GetTotalWeight
	float GetTotalWeight();                                                                                                  // [0x2303e10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetTotalUses
	int32_t GetTotalUses();                                                                                                  // [0x2303de0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetSupportingHandIKLocation
	FVector GetSupportingHandIKLocation();                                                                                   // [0x2303da0] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetStacksCount
	int32_t GetStacksCount();                                                                                                // [0x2303d60] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetSizeY
	int32_t GetSizeY();                                                                                                      // [0x2303d20] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetSizeX
	int32_t GetSizeX();                                                                                                      // [0x2303ce0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetPrisonerAnimationSet
	EPrisonerAnimationSet GetPrisonerAnimationSet();                                                                         // [0x22de730] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.Item.GetOutsideInventoryIcon
	UTexture2D* GetOutsideInventoryIcon();                                                                                   // [0x2303cb0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetObstructionTestCapsules
	void GetObstructionTestCapsules(TArray<FItemObstructionTestCapsule>& capsules);                                          // [0x2303c00] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetNormalizedMaxHealth
	float GetNormalizedMaxHealth();                                                                                          // [0x2303bd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetNormalizedHealth
	float GetNormalizedHealth();                                                                                             // [0x2303ba0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetNoiseLoudnessWhenPickedUp
	float GetNoiseLoudnessWhenPickedUp();                                                                                    // [0x2303b60] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetNoiseLoudnessWhenDropped
	float GetNoiseLoudnessWhenDropped();                                                                                     // [0x2303b20] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetNoiseLoudnessOnGroundImpact
	float GetNoiseLoudnessOnGroundImpact();                                                                                  // [0x2303ae0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetMeshComponentForAttachmentToItem
	UMeshComponent* GetMeshComponentForAttachmentToItem(AItem* Item);                                                        // [0x2303a40] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetMeshComponent
	UMeshComponent* GetMeshComponent();                                                                                      // [0x2303a10] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetMaxHealth
	float GetMaxHealth();                                                                                                    // [0x23039e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetInventoryIconInHands
	UTexture2D* GetInventoryIconInHands();                                                                                   // [0x2303840] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetInventoryIcon
	UTexture2D* GetInventoryIcon();                                                                                          // [0x2303810] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetInventoryGridSizeY
	int32_t GetInventoryGridSizeY();                                                                                         // [0x23037e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetInventoryGridSizeX
	int32_t GetInventoryGridSizeX();                                                                                         // [0x23037b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetIgnoreSupportingHandIK
	bool GetIgnoreSupportingHandIK();                                                                                        // [0x2303780] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.Item.GetHealth
	float GetHealth();                                                                                                       // [0x2303750] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetDescription
	FText GetDescription();                                                                                                  // [0x2303710] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetDefaultMaxHealth
	float GetDefaultMaxHealth();                                                                                             // [0x23036e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetContainerDamagePercentage
	float GetContainerDamagePercentage();                                                                                    // [0x23036b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetCaption
	FText GetCaption();                                                                                                      // [0x2303670] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.GetAllContainedItems
	TArray<AItem*> GetAllContainedItems(bool recursive);                                                                     // [0x2303590] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.FindCharacterAndItemAnimation
	FCharacterAndItemAnimation FindCharacterAndItemAnimation(UObject* Context, EPrisonerMontage prisonerMontageType);        // [0x23034b0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.Item.FindAnimationMontage
	UAnimMontage* FindAnimationMontage(UObject* Context, EPrisonerMontage prisonerMontageType);                              // [0x23033e0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.Item.DropAt
	bool DropAt(APawn* dropper, FVector dropLocation, FRotator dropRotation);                                                // [0x23032a0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/ConZ.Item.DropAround
	bool DropAround(AActor* Actor, APawn* dropper, float Radius);                                                            // [0x2303190] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Item.Drop
	void Drop(APawn* dropper, bool wasThrown, bool dropDown);                                                                // [0x2303080] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Item.DetachFromAll
	void DetachFromAll();                                                                                                    // [0x2303060] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Item.DestroyInternal
	void DestroyInternal();                                                                                                  // [0x2303040] Native|Protected|BlueprintCallable 
	// Function /Script/ConZ.Item.DebugTextChangedDelegate__DelegateSignature
	void DebugTextChangedDelegate__DelegateSignature(AItem* Item);                                                           // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.Item.CanStackWith
	bool CanStackWith(UObject* Item);                                                                                        // [0x2302fa0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.CanStack
	bool CanStack();                                                                                                         // [0x2302f60] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.CanBeMeleeWeapon
	bool CanBeMeleeWeapon();                                                                                                 // [0xaa7a70] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/ConZ.Item.CanBeDroppedBy
	bool CanBeDroppedBy(AConZCharacter* Character);                                                                          // [0x2302e90] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Item.CanBeCraftedByCharactrer
	bool CanBeCraftedByCharactrer(ACharacter* Character);                                                                    // [0x2302df0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.Item.CanAutoAddItem
	bool CanAutoAddItem(AItem* Item, char& column, char& row);                                                               // [0x2302cc0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.Item.CanAddItem
	bool CanAddItem(AItem* Item, char column, char row);                                                                     // [0x2302bb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Item.Blink
	void Blink(float Duration);                                                                                              // [0x2302b30] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Item.AutoAddItemToInventoryNode
	bool AutoAddItemToInventoryNode(TScriptInterface<Class> Item);                                                           // [0x2302a80] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Item.AttachToCharacterHands
	bool AttachToCharacterHands(AConZCharacter* Character);                                                                  // [0x23029e0] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Item.AddStack
	void AddStack(TScriptInterface<Class> Item);                                                                             // [0x2302930] Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.AmmunitionItem
/// Size: 0x0050 (0x000910 - 0x000960)
class AAmmunitionItem : public AItem
{ 
public:
	FGameplayTag                                       AmmunitionTag;                                              // 0x0910   (0x0008)  
	FString                                            AmmunitionTypeString;                                       // 0x0918   (0x0010)  
	UClass*                                            projectileClass;                                            // 0x0928   (0x0008)  
	UStaticMesh*                                       CartridgeMesh;                                              // 0x0930   (0x0008)  
	UStaticMesh*                                       CasingMesh;                                                 // 0x0938   (0x0008)  
	UStaticMesh*                                       UsedBadRoundMesh;                                           // 0x0940   (0x0008)  
	float                                              WeaponSpreadMultiplier;                                     // 0x0948   (0x0004)  
	int32_t                                            MaxAmmoCount;                                               // 0x094C   (0x0004)  
	int32_t                                            _ammoCount;                                                 // 0x0950   (0x0004)  
	int32_t                                            _ammoCountOwnerHelper;                                      // 0x0954   (0x0004)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0958   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.AmmunitionItem.SetAmmoCount
	void SetAmmoCount(int32_t Count, ERPCType broadcastRPCType);                                                             // [0x224f660] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.AmmunitionItem.OnRep_AmmoCountOwnerHelper
	void OnRep_AmmoCountOwnerHelper();                                                                                       // [0x224f440] Final|Native|Private 
	// Function /Script/ConZ.AmmunitionItem.OnRep_AmmoCount
	void OnRep_AmmoCount();                                                                                                  // [0x224f420] Final|Native|Private|Const 
	// Function /Script/ConZ.AmmunitionItem.NetMulticast_SetAmmoCount
	void NetMulticast_SetAmmoCount(int32_t Count);                                                                           // [0x224f000] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.AmmunitionItem.GetSpreadMultiplierForWeapon
	float GetSpreadMultiplierForWeapon(AWeapon* Weapon);                                                                     // [0x224eee0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.AmmunitionItem.GetAmmoCount
	int32_t GetAmmoCount();                                                                                                  // [0x224eeb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.AmmunitionItem.Client_SetAmmoCount
	void Client_SetAmmoCount(int32_t Count);                                                                                 // [0x224edd0] Final|Net|NetReliableNative|Event|Private|NetClient 
};

/// Class /Script/ConZ.AmmunitionArrow
/// Size: 0x0020 (0x000960 - 0x000980)
class AAmmunitionArrow : public AAmmunitionItem
{ 
public:
	bool                                               DestroyOnHit;                                               // 0x0960   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0961   (0x0007)  MISSED
	UClass*                                            BrokenArrowClass;                                           // 0x0968   (0x0008)  
	float                                              _muzzleVelocityMultiplier;                                  // 0x0970   (0x0004)  
	float                                              _stiffnessFactor;                                           // 0x0974   (0x0004)  
	float                                              _flightRotationCorrectionSpeed;                             // 0x0978   (0x0004)  
	float                                              _elasticityFactorSpread;                                    // 0x097C   (0x0004)  
};

/// Class /Script/ConZ.AmmunitionBoneListAssetData
/// Size: 0x0010 (0x000028 - 0x000038)
class UAmmunitionBoneListAssetData : public UAssetUserData
{ 
public:
	TArray<FName>                                      CartridgeBoneNames;                                         // 0x0028   (0x0010)  
};

/// Class /Script/ConZ.ItemStateBase
/// Size: 0x0058 (0x000028 - 0x000080)
class UItemStateBase : public UObject
{ 
public:
	UClass*                                            ItemClass;                                                  // 0x0028   (0x0008)  
	FEntityId                                          ID;                                                         // 0x0030   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0038   (0x0008)  MISSED
	FTransform                                         Transform;                                                  // 0x0040   (0x0030)  
	TArray<UItemComponentStateBase*>                   Components;                                                 // 0x0070   (0x0010)  
};

/// Class /Script/ConZ.ItemState
/// Size: 0x0080 (0x000080 - 0x000100)
class UItemState : public UItemStateBase
{ 
public:
	float                                              normalizedHealth;                                           // 0x0080   (0x0004)  
	float                                              MaxHealth;                                                  // 0x0084   (0x0004)  
	float                                              Weight;                                                     // 0x0088   (0x0004)  
	float                                              WeightUsed;                                                 // 0x008C   (0x0004)  
	float                                              NormalizedRadiation;                                        // 0x0090   (0x0004)  
	bool                                               IsCrafted;                                                  // 0x0094   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0095   (0x0003)  MISSED
	float                                              UncraftTime;                                                // 0x0098   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x009C   (0x0004)  MISSED
	int64_t                                            LastAccessTime;                                             // 0x00A0   (0x0008)  
	bool                                               IsPartOfEvent;                                              // 0x00A8   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x00A9   (0x0003)  MISSED
	float                                              WaterWeight;                                                // 0x00AC   (0x0004)  
	float                                              Uses;                                                       // 0x00B0   (0x0004)  
	bool                                               IsInHands;                                                  // 0x00B4   (0x0001)  
	EPrisonerHolsterSide                               HolsterSide;                                                // 0x00B5   (0x0001)  
	unsigned char                                      UnknownData03_5[0x2];                                       // 0x00B6   (0x0002)  MISSED
	int32_t                                            QuickAccessBarIndex;                                        // 0x00B8   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x00BC   (0x0004)  MISSED
	TArray<UItemStateBase*>                            CraftingParts;                                              // 0x00C0   (0x0010)  
	TArray<UItemStateBase*>                            Stacks;                                                     // 0x00D0   (0x0010)  
	TArray<FEntityId>                                  _craftingPartsIds;                                          // 0x00E0   (0x0010)  
	TArray<FEntityId>                                  _stacksIds;                                                 // 0x00F0   (0x0010)  
};

/// Class /Script/ConZ.AmmunitionBoxItemState
/// Size: 0x0010 (0x000100 - 0x000110)
class UAmmunitionBoxItemState : public UItemState
{ 
public:
	int32_t                                            AmmoCount;                                                  // 0x0100   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x0104   (0x000C)  MISSED
};

/// Class /Script/ConZ.AmmunitionBoxItem
/// Size: 0x0020 (0x000910 - 0x000930)
class AAmmunitionBoxItem : public AItem
{ 
public:
	UClass*                                            AmmunitionItemClass;                                        // 0x0910   (0x0008)  
	UClass*                                            ItemClassToSpawnWhenUnpacked;                               // 0x0918   (0x0008)  
	int32_t                                            MaxAmmoCount;                                               // 0x0920   (0x0004)  
	int32_t                                            _ammoCount;                                                 // 0x0924   (0x0004)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0928   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.AmmunitionBoxItem.OnRep_AmmoCount
	void OnRep_AmmoCount();                                                                                                  // [0x224f420] Final|Native|Private 
};

/// Class /Script/ConZ.AmmunitionExplosiveArrow
/// Size: 0x0070 (0x000980 - 0x0009F0)
class AAmmunitionExplosiveArrow : public AAmmunitionArrow
{ 
public:
	UAkAudioEvent*                                     _startBeepingEvent;                                         // 0x0980   (0x0008)  
	UAkAudioEvent*                                     _stopBeepingEvent;                                          // 0x0988   (0x0008)  
	float                                              _startOfBeepingBeforeDetonation;                            // 0x0990   (0x0004)  
	float                                              _innerExplosionRadius;                                      // 0x0994   (0x0004)  
	float                                              _outerExplosionRadius;                                      // 0x0998   (0x0004)  
	float                                              _explosionBaseDamage;                                       // 0x099C   (0x0004)  
	float                                              _explosionMinDamage;                                        // 0x09A0   (0x0004)  
	float                                              _explosionDistanceFalloff;                                  // 0x09A4   (0x0004)  
	float                                              _explosionTimerTime;                                        // 0x09A8   (0x0004)  
	float                                              _explosionForce;                                            // 0x09AC   (0x0004)  
	FTargetTypeDamageMultiplier                        _targetTypeMultiplier;                                      // 0x09B0   (0x0010)  
	FName                                              _detonationPointSocketName;                                 // 0x09C0   (0x0008)  
	UClass*                                            _effectsActorClass;                                         // 0x09C8   (0x0008)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x09D0   (0x0010)  MISSED
	bool                                               _shouldStartCountdown;                                      // 0x09E0   (0x0001)  
	unsigned char                                      UnknownData01_6[0xF];                                       // 0x09E1   (0x000F)  MISSED


	/// Functions
	// Function /Script/ConZ.AmmunitionExplosiveArrow.Server_Explode
	void Server_Explode();                                                                                                   // [0x224f640] Final|Net|NetReliableNative|Event|Private|NetServer 
};

/// Class /Script/ConZ.AmmunitionItemState
/// Size: 0x0010 (0x000100 - 0x000110)
class UAmmunitionItemState : public UItemState
{ 
public:
	int32_t                                            AmmoCount;                                                  // 0x0100   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x0104   (0x000C)  MISSED
};

/// Class /Script/ConZ.ConZCharacter
/// Size: 0x02E0 (0x0004D0 - 0x0007B0)
class AConZCharacter : public ACharacter
{ 
public:
	unsigned char                                      UnknownData00_2[0x40];                                      // 0x04D0   (0x0040)  MISSED
	UChoppingRecipeDataAsset*                          ChoppingRecipeDataAsset;                                    // 0x0510   (0x0008)  
	bool                                               IterativeChopping;                                          // 0x0518   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0519   (0x0007)  MISSED
	UClass*                                            ItemRepresentation;                                         // 0x0520   (0x0008)  
	FName                                              HeadBoneName;                                               // 0x0528   (0x0008)  
	TMap<FName, EBodyPart>                             BodyPartByBoneName;                                         // 0x0530   (0x0050)  
	float                                              HeadHeight;                                                 // 0x0580   (0x0004)  
	float                                              TorsoHeight;                                                // 0x0584   (0x0004)  
	bool                                               ShouldAutoUpdateEnvironmentDescription;                     // 0x0588   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0589   (0x0003)  MISSED
	float                                              EnvironmentDescriptionAutoUpdateInterval;                   // 0x058C   (0x0004)  
	UAkAudioEvent*                                     EnteredIndoorEnvironmentAudioEvent;                         // 0x0590   (0x0008)  
	UAkAudioEvent*                                     EnteredOutdoorEnvironmentAudioEvent;                        // 0x0598   (0x0008)  
	UAkAudioEvent*                                     EnteredUndergroundAudioEvent;                               // 0x05A0   (0x0008)  
	UAkAudioEvent*                                     LeftUndergroundAudioEvent;                                  // 0x05A8   (0x0008)  
	unsigned char                                      UnknownData03_5[0x18];                                      // 0x05B0   (0x0018)  MISSED
	UVoiceChatComponent*                               VoiceChatComponent;                                         // 0x05C8   (0x0008)  
	unsigned char                                      UnknownData04_5[0x8];                                       // 0x05D0   (0x0008)  MISSED
	float                                              _kockoutChanceModifier;                                     // 0x05D8   (0x0004)  
	EConZGender                                        _gender;                                                    // 0x05DC   (0x0001)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x05DD   (0x0003)  MISSED
	UCharacterSoundComponent*                          SoundComponent;                                             // 0x05E0   (0x0008)  
	unsigned char                                      UnknownData06_5[0x38];                                      // 0x05E8   (0x0038)  MISSED
	EConZPxDominanceGroup                              _physicsDominanceGroup;                                     // 0x0620   (0x0001)  
	unsigned char                                      UnknownData07_5[0x3];                                       // 0x0621   (0x0003)  MISSED
	float                                              _activeHitTimeToLive;                                       // 0x0624   (0x0004)  
	UCurveFloat*                                       _hitDamageVsVehicleSpeedInKph;                              // 0x0628   (0x0008)  
	FHitEffects                                        _effectsOnVehicleHit;                                       // 0x0630   (0x0118)  
	unsigned char                                      UnknownData08_5[0x10];                                      // 0x0748   (0x0010)  MISSED
	bool                                               _allowMultipleDamageReportsFromProjectile;                  // 0x0758   (0x0001)  
	unsigned char                                      UnknownData09_5[0x7];                                       // 0x0759   (0x0007)  MISSED
	UPhysicsAsset*                                     _physicsAssetOnServer;                                      // 0x0760   (0x0008)  
	EAITeam                                            _aiTeam;                                                    // 0x0768   (0x0001)  
	unsigned char                                      UnknownData10_5[0x7];                                       // 0x0769   (0x0007)  MISSED
	TArray<UCharacterAction*>                          _actionsList;                                               // 0x0770   (0x0010)  
	unsigned char                                      UnknownData11_5[0x20];                                      // 0x0780   (0x0020)  MISSED
	float                                              _characterActionPlayRateMultiplier;                         // 0x07A0   (0x0004)  
	unsigned char                                      UnknownData12_5[0x4];                                       // 0x07A4   (0x0004)  MISSED
	UGrappleActionComponent*                           _grappleActionComponent;                                    // 0x07A8   (0x0008)  


	/// Functions
	// Function /Script/ConZ.ConZCharacter.SetGender
	void SetGender(EConZGender Value);                                                                                       // [0x2293b80] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZCharacter.SetEnvironmentDescription
	void SetEnvironmentDescription(FEnvironmentDescription& Value);                                                          // [0x2293ae0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.ConZCharacter.Server_SetEnvironmentDescription
	void Server_SetEnvironmentDescription(FEnvironmentDescription Value);                                                    // [0x22939c0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.ConZCharacter.Server_RequestCharacterAction
	void Server_RequestCharacterAction(FCharacterActionReplicationHelper Value);                                             // [0x2293930] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.ConZCharacter.Server_HandleMeleeAttackCapsuleHit
	void Server_HandleMeleeAttackCapsuleHit(AConZCharacter* attacker, FMeleeAttackCapsuleHitInfo HitInfo);                   // [0x22937f0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.ConZCharacter.Server_CharacterActionAck
	void Server_CharacterActionAck(FCharacterActionAck ack);                                                                 // [0x2293760] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.ConZCharacter.OnRep_GrappleActionComponent
	void OnRep_GrappleActionComponent();                                                                                     // [0x2293720] Final|Native|Private 
	// Function /Script/ConZ.ConZCharacter.OnRep_Gender
	void OnRep_Gender(EConZGender oldGender);                                                                                // [0x22936a0] Final|Native|Private 
	// Function /Script/ConZ.ConZCharacter.NetMulticast_RequestCharacterAction
	void NetMulticast_RequestCharacterAction(FCharacterActionReplicationHelper Value, bool ignoreAutonomousProxy);           // [0x2292f30] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.ConZCharacter.NetMulticast_HandleMeleeAttackCapsuleHit
	void NetMulticast_HandleMeleeAttackCapsuleHit(AConZCharacter* attacker, FMeleeAttackCapsuleHitInfo HitInfo);             // [0x2292df0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.ConZCharacter.NetMulticast_CharacterActionAck
	void NetMulticast_CharacterActionAck(FCharacterActionAck ack, bool ignoreAutonomousProxy);                               // [0x2292d10] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.ConZCharacter.IsHeadBone
	bool IsHeadBone(FName BoneName);                                                                                         // [0x2292c40] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZCharacter.IsConscious
	bool IsConscious();                                                                                                      // [0x2292c10] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZCharacter.IsAlive
	bool IsAlive();                                                                                                          // [0x2292be0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZCharacter.HasCharacterAction
	bool HasCharacterAction();                                                                                               // [0x2292bb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZCharacter.GetSoundComponent
	UCharacterSoundComponent* GetSoundComponent();                                                                           // [0x2292a10] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZCharacter.GetHitReactBodyPartFromHitResult
	EDetectHitCollisionType GetHitReactBodyPartFromHitResult(FHitResult& HitResult);                                         // [0x2292860] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZCharacter.GetHitReactBodyPartFromBodyPart
	EDetectHitCollisionType GetHitReactBodyPartFromBodyPart(EBodyPart Value);                                                // [0x22927d0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZCharacter.GetGender
	EConZGender GetGender();                                                                                                 // [0x22927a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZCharacter.GetEnvironmentDescription
	FEnvironmentDescription GetEnvironmentDescription();                                                                     // [0x2292770] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZCharacter.GetCharacterAction
	UCharacterAction* GetCharacterAction();                                                                                  // [0x2292680] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZCharacter.GetBodyPartFromBoneName
	EBodyPart GetBodyPartFromBoneName(FName BoneName);                                                                       // [0x22925e0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZCharacter.Client_RequestCharacterAction
	void Client_RequestCharacterAction(FCharacterActionReplicationHelper Value, bool cancelExecutingAction);                 // [0x2292500] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.ConZCharacter.CharacterAction_EndHandle
	void CharacterAction_EndHandle(UCharacterAction* Action);                                                                // [0x2292470] Final|Native|Private 
	// Function /Script/ConZ.ConZCharacter.ActorHitCallback
	void ActorHitCallback(AActor* Actor, AActor* OtherActor, FVector NormalImpulse, FHitResult& Hit);                        // [0x2292220] Native|Protected|HasOutParms|HasDefaults 
};

/// Class /Script/ConZ.Animal2
/// Size: 0x01E0 (0x0007B0 - 0x000990)
class AAnimal2 : public AConZCharacter
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x07B0   (0x0020)  MISSED
	FText                                              SpeciesName;                                                // 0x07D0   (0x0018)  
	EAnimalSpecies                                     SpeciesType;                                                // 0x07E8   (0x0001)  
	EAnimalActivityCycle                               ActivityCycle;                                              // 0x07E9   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x07EA   (0x0002)  MISSED
	float                                              MaxHealth;                                                  // 0x07EC   (0x0004)  
	UHitReactComponent*                                HitReactComponent;                                          // 0x07F0   (0x0008)  
	FGameplayTag                                       HitReactType;                                               // 0x07F8   (0x0008)  
	FName                                              EyesViewPointSocketName;                                    // 0x0800   (0x0008)  
	UClass*                                            TrackingMarker;                                             // 0x0808   (0x0008)  
	UClass*                                            BloodTrailMarker;                                           // 0x0810   (0x0008)  
	float                                              TrackingMarkerFrequency;                                    // 0x0818   (0x0004)  
	float                                              TrackingMarkerDistance;                                     // 0x081C   (0x0004)  
	float                                              TrackingMarkerRadius;                                       // 0x0820   (0x0004)  
	float                                              TrackingMarkerDuration;                                     // 0x0824   (0x0004)  
	float                                              BleedingSpeed;                                              // 0x0828   (0x0004)  
	float                                              LightWoundDamageAmount;                                     // 0x082C   (0x0004)  
	float                                              MeleeBleedingThreshold;                                     // 0x0830   (0x0004)  
	float                                              StuckCheckDuration;                                         // 0x0834   (0x0004)  
	float                                              StuckRadius;                                                // 0x0838   (0x0004)  
	char                                               UnstuckMode;                                                // 0x083C   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x083D   (0x0003)  MISSED
	FMulticastInlineDelegate                           OnDamageTaken;                                              // 0x0840   (0x0010)  
	float                                              HeadBoneRotationSendToServerInterval;                       // 0x0850   (0x0004)  
	float                                              SightRange;                                                 // 0x0854   (0x0004)  
	bool                                               TiltMeshOnSlopes;                                           // 0x0858   (0x0001)  
	bool                                               AdjustMeshHeightOnSlopes;                                   // 0x0859   (0x0001)  
	unsigned char                                      UnknownData03_5[0x2];                                       // 0x085A   (0x0002)  MISSED
	float                                              MeshPositionLerpSpeed;                                      // 0x085C   (0x0004)  
	float                                              BleedInterval;                                              // 0x0860   (0x0004)  
	bool                                               ShouldGoToRagdolIfTakenDamage;                              // 0x0864   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x0865   (0x0003)  MISSED
	float                                              RagdollDuration;                                            // 0x0868   (0x0004)  
	float                                              _health;                                                    // 0x086C   (0x0004)  
	float                                              _woundDamage;                                               // 0x0870   (0x0004)  
	unsigned char                                      UnknownData05_5[0x8];                                       // 0x0874   (0x0008)  MISSED
	int32_t                                            _packSizeMin;                                               // 0x087C   (0x0004)  
	int32_t                                            _packSizeMax;                                               // 0x0880   (0x0004)  
	unsigned char                                      UnknownData06_5[0x34];                                      // 0x0884   (0x0034)  MISSED
	EAnimalStance                                      _animalStance;                                              // 0x08B8   (0x0001)  
	unsigned char                                      UnknownData07_5[0x7];                                       // 0x08B9   (0x0007)  MISSED
	bool                                               _shouldUpdateMovementSpeedRTPCValue;                        // 0x08C0   (0x0001)  
	unsigned char                                      UnknownData08_5[0x57];                                      // 0x08C1   (0x0057)  MISSED
	bool                                               _doNotCrumble;                                              // 0x0918   (0x0001)  
	unsigned char                                      UnknownData09_5[0x3];                                       // 0x0919   (0x0003)  MISSED
	float                                              _collisionDamageMultiplierPerBodyPart;                      // 0x091C   (0x0030)  
	unsigned char                                      UnknownData10_5[0x4];                                       // 0x094C   (0x0004)  MISSED
	float                                              _delayBetweenTakeDamageSounds;                              // 0x0950   (0x0004)  
	bool                                               _canDrown;                                                  // 0x0954   (0x0001)  
	unsigned char                                      UnknownData11_5[0x3];                                       // 0x0955   (0x0003)  MISSED
	float                                              _drownDamageCycleLength;                                    // 0x0958   (0x0004)  
	float                                              _drownDamagePerCycle;                                       // 0x095C   (0x0004)  
	unsigned char                                      UnknownData12_5[0x4];                                       // 0x0960   (0x0004)  MISSED
	float                                              _baseEyeForwardDistance;                                    // 0x0964   (0x0004)  
	bool                                               _isSearched;                                                // 0x0968   (0x0001)  
	unsigned char                                      UnknownData13_5[0x3];                                       // 0x0969   (0x0003)  MISSED
	float                                              _corpseSearchDuration;                                      // 0x096C   (0x0004)  
	float                                              _corpseMaxLifeTimeInMinutes;                                // 0x0970   (0x0004)  
	float                                              _destroyCorpseTimerInterval;                                // 0x0974   (0x0004)  
	float                                              _minDistanceToPlayerPawnOrSpectatorToDestroyCorpse;         // 0x0978   (0x0004)  
	unsigned char                                      UnknownData14_6[0x14];                                      // 0x097C   (0x0014)  MISSED


	/// Functions
	// Function /Script/ConZ.Animal2.UnpackUint8
	void UnpackUint8(char pack, TArray<bool>& B);                                                                            // [0x224f730] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Animal2.PackBoolsIntoUint8
	char PackBoolsIntoUint8(TArray<bool>& B);                                                                                // [0x224f580] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Animal2.OnRep_WoundDamage
	void OnRep_WoundDamage();                                                                                                // [0xb92f40] Final|Native|Public  
	// Function /Script/ConZ.Animal2.OnRep_Health
	void OnRep_Health();                                                                                                     // [0x224f460] Native|Protected     
	// Function /Script/ConZ.Animal2.NetMulticast_PlaySoundOnClients
	void NetMulticast_PlaySoundOnClients(EAnimal2Sound SoundToPlay);                                                         // [0x224ef80] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Animal2.GenerateBloodMarkerRPC
	void GenerateBloodMarkerRPC();                                                                                           // [0x224ee90] Net|NetReliableNative|Event|NetMulticast|Protected 
	// Function /Script/ConZ.Animal2.ClosestPrisoner
	APrisoner* ClosestPrisoner();                                                                                            // [0x224ee60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.ConZCharacterMovementComponent
/// Size: 0x0120 (0x000AF0 - 0x000C10)
class UConZCharacterMovementComponent : public UCharacterMovementComponent
{ 
public:
	TEnumAsByte<ECollisionResponse>                    _navWalkingCollisionResponseToWorldStatic;                  // 0x0AF0   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    _navWalkingCollisionResponseToWorldDynamic;                 // 0x0AF1   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0AF2   (0x0002)  MISSED
	float                                              _maxClimbHeight;                                            // 0x0AF4   (0x0004)  
	bool                                               _queryWaterSplinesEveryFrame;                               // 0x0AF8   (0x0001)  
	unsigned char                                      UnknownData01_5[0xF7];                                      // 0x0AF9   (0x00F7)  MISSED
	float                                              _angularVelocityFilteringInterpolationSpeed;                // 0x0BF0   (0x0004)  
	unsigned char                                      UnknownData02_6[0x1C];                                      // 0x0BF4   (0x001C)  MISSED
};

/// Class /Script/ConZ.Animal2MovementComponent
/// Size: 0x0010 (0x000C10 - 0x000C20)
class UAnimal2MovementComponent : public UConZCharacterMovementComponent
{ 
public:
	float                                              GroundSlopeRotationSpeedDegrees;                            // 0x0C08   (0x0004)  
	bool                                               CorrectServerReceivedZ;                                     // 0x0C0C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x13];                                      // 0x0C0D   (0x0013)  MISSED
};

/// Class /Script/ConZ.CharacterSoundComponent
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UCharacterSoundComponent : public UActorComponent
{ 
public:
	FName                                              AttachedSoundsAttachPointName;                              // 0x00B0   (0x0008)  
	UCharacterImpactSoundsData*                        ImpactSounds;                                               // 0x00B8   (0x0008)  
	UCharacterPainSoundsData*                          PainSounds;                                                 // 0x00C0   (0x0008)  
	float                                              MinDurationBetweenPainSounds;                               // 0x00C8   (0x0004)  
	float                                              MaxDurationBetweenPainSounds;                               // 0x00CC   (0x0004)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x00D0   (0x0008)  MISSED
};

/// Class /Script/ConZ.Animal2SoundComponent
/// Size: 0x0078 (0x0000D8 - 0x000150)
class UAnimal2SoundComponent : public UCharacterSoundComponent
{ 
public:
	UAkAudioEvent*                                     IdleAudioEvent;                                             // 0x00D8   (0x0008)  
	UAkAudioEvent*                                     AngryAudioEvent;                                            // 0x00E0   (0x0008)  
	UAkAudioEvent*                                     AttackAudioEvent;                                           // 0x00E8   (0x0008)  
	UAkAudioEvent*                                     ScaredAudioEvent;                                           // 0x00F0   (0x0008)  
	UAkAudioEvent*                                     AlertedAudioEvent;                                          // 0x00F8   (0x0008)  
	UAkAudioEvent*                                     TakeDamageAudioEvent;                                       // 0x0100   (0x0008)  
	UAkAudioEvent*                                     KillAudioEvent;                                             // 0x0108   (0x0008)  
	UAkAudioEvent*                                     AnimalFootstep;                                             // 0x0110   (0x0008)  
	float                                              FootstepSoundOverlap;                                       // 0x0118   (0x0004)  
	float                                              FixedFootstepVolume;                                        // 0x011C   (0x0004)  
	float                                              SpeedFootstepVolume;                                        // 0x0120   (0x0004)  
	float                                              MinSilenceTimeout;                                          // 0x0124   (0x0004)  
	float                                              MaxSilenceTimeout;                                          // 0x0128   (0x0004)  
	unsigned char                                      UnknownData00_6[0x24];                                      // 0x012C   (0x0024)  MISSED
};

/// Class /Script/ConZ.Animal2AnimInstance
/// Size: 0x0030 (0x0002C0 - 0x0002F0)
class UAnimal2AnimInstance : public UAnimInstance
{ 
public:
	UCurveFloat*                                       InverseLocomotionBias;                                      // 0x02B8   (0x0008)  
	float                                              MaximumLeaningAngle;                                        // 0x02C0   (0x0004)  
	int32_t                                            IdleStanceIndex;                                            // 0x02C4   (0x0004)  
	EAnimalStance                                      stance;                                                     // 0x02C8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x02C9   (0x0003)  MISSED
	FRotator                                           SlopeRootTiltRotation;                                      // 0x02CC   (0x000C)  
	float                                              ABPSpeed;                                                   // 0x02D8   (0x0004)  
	float                                              ABPTurn;                                                    // 0x02DC   (0x0004)  
	float                                              MoveVelocity;                                               // 0x02E0   (0x0004)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x02E4   (0x0008)  MISSED
	bool                                               _isRagdolled;                                               // 0x02EC   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x02ED   (0x0003)  MISSED


	/// Functions
	// Function /Script/ConZ.Animal2AnimInstance.AnimNotify_RFootDownRear
	void AnimNotify_RFootDownRear();                                                                                         // [0x2253580] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.Animal2AnimInstance.AnimNotify_RFootDown
	void AnimNotify_RFootDown();                                                                                             // [0x2253580] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.Animal2AnimInstance.AnimNotify_LFootDownRear
	void AnimNotify_LFootDownRear();                                                                                         // [0x2253580] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.Animal2AnimInstance.AnimNotify_LFootDown
	void AnimNotify_LFootDown();                                                                                             // [0x2253580] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.Animal2AnimInstance.AnimNotify_IntroEnd
	void AnimNotify_IntroEnd();                                                                                              // [0x2253560] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.Animal2AnimInstance.AnimNotify_IdleEnd
	void AnimNotify_IdleEnd();                                                                                               // [0x2253540] Native|Event|Public|BlueprintEvent 
};

/// Class /Script/ConZ.ComplexAnimalAIController
/// Size: 0x01C0 (0x000328 - 0x0004E8)
class AComplexAnimalAIController : public AAIController
{ 
public:
	EAnimalAgressivness                                Agressivness;                                               // 0x0328   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0329   (0x0003)  MISSED
	float                                              SightIntimidateRadius;                                      // 0x032C   (0x0004)  
	float                                              SightAttackRadius;                                          // 0x0330   (0x0004)  
	float                                              FoeChargeVelocity;                                          // 0x0334   (0x0004)  
	bool                                               ShouldForceChargeRotation;                                  // 0x0338   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0339   (0x0003)  MISSED
	float                                              AnimalVelocityThatMakesThisAnimalFlee;                      // 0x033C   (0x0004)  
	float                                              FleeDistance;                                               // 0x0340   (0x0004)  
	float                                              FleeTime;                                                   // 0x0344   (0x0004)  
	float                                              TrotTime;                                                   // 0x0348   (0x0004)  
	float                                              TimeToAttackWhenAggro;                                      // 0x034C   (0x0004)  
	float                                              TimeToQuitObserve;                                          // 0x0350   (0x0004)  
	float                                              MinReactionTime;                                            // 0x0354   (0x0004)  
	float                                              MaxReactionTime;                                            // 0x0358   (0x0004)  
	float                                              MovingUpdateInterval;                                       // 0x035C   (0x0004)  
	float                                              AttackingUpdateInetrval;                                    // 0x0360   (0x0004)  
	float                                              PathSegmentLength_OBSOLETE;                                 // 0x0364   (0x0004)  
	float                                              MinPaceDuration_OBSOLETE;                                   // 0x0368   (0x0004)  
	int32_t                                            MaxNumWalks_OBSOLETE;                                       // 0x036C   (0x0004)  
	int32_t                                            MaxNumTrots_OBSOLETE;                                       // 0x0370   (0x0004)  
	float                                              PathDirectionCounterResetTime_OBOLETE;                      // 0x0374   (0x0004)  
	float                                              MoveSegmentLength;                                          // 0x0378   (0x0004)  
	float                                              BackOffDistance;                                            // 0x037C   (0x0004)  
	float                                              AttackTrackingDistance;                                     // 0x0380   (0x0004)  
	float                                              PredictionFactor;                                           // 0x0384   (0x0004)  
	bool                                               BackAndForthStuckCheck;                                     // 0x0388   (0x0001)  
	char                                               AttackAttempts;                                             // 0x0389   (0x0001)  
	unsigned char                                      UnknownData02_5[0x2];                                       // 0x038A   (0x0002)  MISSED
	float                                              ActionChangedDelay;                                         // 0x038C   (0x0004)  
	float                                              CloseAttackRepeatDelay;                                     // 0x0390   (0x0004)  
	float                                              AttackChainDelay;                                           // 0x0394   (0x0004)  
	int32_t                                            BlockedPathRetryAttempts;                                   // 0x0398   (0x0004)  
	float                                              DirectionLockTime;                                          // 0x039C   (0x0004)  
	float                                              MinWalkTimeDuringRoaming;                                   // 0x03A0   (0x0004)  
	float                                              MaxWalkTimeDuringRoaming;                                   // 0x03A4   (0x0004)  
	float                                              MinStandTimeDuringRoaming;                                  // 0x03A8   (0x0004)  
	float                                              MaxStandTimeDuringRoaming;                                  // 0x03AC   (0x0004)  
	float                                              IntimidateTime;                                             // 0x03B0   (0x0004)  
	float                                              IntimidateAnimationEndTime;                                 // 0x03B4   (0x0004)  
	float                                              AlertActionTime;                                            // 0x03B8   (0x0004)  
	float                                              AlertStartupTime;                                           // 0x03BC   (0x0004)  
	float                                              AlertAllowedAgainTime;                                      // 0x03C0   (0x0004)  
	float                                              DoNotDespawnTime;                                           // 0x03C4   (0x0004)  
	UAISenseConfig_Sight*                              NormalAISenseSight;                                         // 0x03C8   (0x0008)  
	UAISenseConfig_Hearing*                            NormalAISenseHearing;                                       // 0x03D0   (0x0008)  
	UAISenseConfig_Hearing*                            RelaxedAISenseHearing;                                      // 0x03D8   (0x0008)  
	UAISenseConfig_Hearing*                            AlertedAISenseHearing;                                      // 0x03E0   (0x0008)  
	UAISenseConfig_Sight*                              SleepAISenseSight;                                          // 0x03E8   (0x0008)  
	AComplexAnimal2*                                   _animal;                                                    // 0x03F0   (0x0008)  
	unsigned char                                      UnknownData03_5[0x78];                                      // 0x03F8   (0x0078)  MISSED
	float                                              _roamRadius;                                                // 0x0470   (0x0004)  
	float                                              _healthPercentageToFlee;                                    // 0x0474   (0x0004)  
	float                                              _damageMagnitudeHealthPercentageToFlee;                     // 0x0478   (0x0004)  
	float                                              _distanceFromFoeToStartIgnoring;                            // 0x047C   (0x0004)  
	unsigned char                                      UnknownData04_6[0x68];                                      // 0x0480   (0x0068)  MISSED


	/// Functions
	// Function /Script/ConZ.ComplexAnimalAIController.UpdatePerception
	void UpdatePerception(TArray<AActor*>& actorsPerceived);                                                                 // [0x22889a0] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.ComplexAnimalAIController.StartFullAlert
	void StartFullAlert();                                                                                                   // [0x22886e0] Final|Native|Public  
	// Function /Script/ConZ.ComplexAnimalAIController.QuitObserve
	void QuitObserve();                                                                                                      // [0x22884e0] Final|Native|Public  
	// Function /Script/ConZ.ComplexAnimalAIController.OnTakeDamageHandler
	void OnTakeDamageHandler(AActor* damageActor, float Damage, FVector HitLocation, APawn* eventInstigator);                // [0x2288290] Final|Native|Private|HasDefaults 
	// Function /Script/ConZ.ComplexAnimalAIController.OnActionChangedHandler
	void OnActionChangedHandler(EAnimalAction CurrentAction, EAnimalAction PrevAction);                                      // [0x2288180] Native|Protected     
	// Function /Script/ConZ.ComplexAnimalAIController.GetMode
	EAnimalMode GetMode();                                                                                                   // [0x2287e90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ComplexAnimalAIController.ChangeMode
	void ChangeMode(EAnimalMode NewMode);                                                                                    // [0x2287b20] Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.AnimalContinuousChargeAttackAIController
/// Size: 0x0018 (0x0004E8 - 0x000500)
class AAnimalContinuousChargeAttackAIController : public AComplexAnimalAIController
{ 
public:
	float                                              LockAttackDirectionDistance;                                // 0x04E8   (0x0004)  
	float                                              ContinueAttackDistance;                                     // 0x04EC   (0x0004)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x04F0   (0x0010)  MISSED
};

/// Class /Script/ConZ.BaseItemTag
/// Size: 0x0000 (0x000030 - 0x000030)
class UBaseItemTag : public UDataAsset
{ 
public:
};

/// Class /Script/ConZ.AnimalHandlingItemTag
/// Size: 0x0000 (0x000030 - 0x000030)
class UAnimalHandlingItemTag : public UBaseItemTag
{ 
public:
};

/// Class /Script/ConZ.Skill
/// Size: 0x0080 (0x000030 - 0x0000B0)
class USkill : public UDataAsset
{ 
public:
	FText                                              Caption;                                                    // 0x0030   (0x0018)  
	ESkillReplicationID                                ReplicationID;                                              // 0x0048   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0049   (0x0003)  MISSED
	float                                              ComboBonus;                                                 // 0x004C   (0x0004)  
	float                                              NoSkillBonus;                                               // 0x0050   (0x0004)  
	float                                              BasicBonus;                                                 // 0x0054   (0x0004)  
	float                                              MediumBonus;                                                // 0x0058   (0x0004)  
	float                                              AdvancedBonus;                                              // 0x005C   (0x0004)  
	float                                              DisplayActionMessages;                                      // 0x0060   (0x0004)  
	bool                                               IsAvailableInCharacterCreation;                             // 0x0064   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0065   (0x0003)  MISSED
	UTexture2D*                                        _skillIcon;                                                 // 0x0068   (0x0008)  
	unsigned char                                      UnknownData02_5[0x34];                                      // 0x0070   (0x0034)  MISSED
	float                                              _skillFamePointsMultiplier;                                 // 0x00A4   (0x0004)  
	UClass*                                            _uiDataClass;                                               // 0x00A8   (0x0008)  
};

/// Class /Script/ConZ.IntelligenceSkill
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UIntelligenceSkill : public USkill
{ 
public:
};

/// Class /Script/ConZ.AnimalHandlingSkill
/// Size: 0x0010 (0x0000B0 - 0x0000C0)
class UAnimalHandlingSkill : public UIntelligenceSkill
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00B0   (0x0010)  MISSED
};

/// Class /Script/ConZ.AnimNotify_BoatRow
/// Size: 0x0008 (0x000038 - 0x000040)
class UAnimNotify_BoatRow : public UAnimNotify
{ 
public:
	uint32_t                                           Flags;                                                      // 0x0038   (0x0004)  
	float                                              _rowCycleLength;                                            // 0x003C   (0x0004)  
};

/// Class /Script/ConZ.AnimNotify_CharacterActionEnd
/// Size: 0x0000 (0x000038 - 0x000038)
class UAnimNotify_CharacterActionEnd : public UAnimNotify
{ 
public:
};

/// Class /Script/ConZ.AnimNotify_CharacterActionMarker
/// Size: 0x0000 (0x000038 - 0x000038)
class UAnimNotify_CharacterActionMarker : public UAnimNotify
{ 
public:
};

/// Class /Script/ConZ.AnimNotify_CharacterActionNotify
/// Size: 0x0008 (0x000038 - 0x000040)
class UAnimNotify_CharacterActionNotify : public UAnimNotify
{ 
public:
	ECharacterActionNotifyType                         CharacterActionNotifyType;                                  // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0039   (0x0007)  MISSED
};

/// Class /Script/ConZ.AnimNotify_ClimbingFinished
/// Size: 0x0000 (0x000038 - 0x000038)
class UAnimNotify_ClimbingFinished : public UAnimNotify
{ 
public:
};

/// Class /Script/ConZ.AnimNotify_ConditionalPlayParticleEffectForItem
/// Size: 0x0058 (0x000038 - 0x000090)
class UAnimNotify_ConditionalPlayParticleEffectForItem : public UAnimNotify
{ 
public:
	UParticleSystem*                                   PSTemplate;                                                 // 0x0038   (0x0008)  
	FVector                                            LocationOffset;                                             // 0x0040   (0x000C)  
	FRotator                                           RotationOffset;                                             // 0x004C   (0x000C)  
	FVector                                            Scale;                                                      // 0x0058   (0x000C)  
	unsigned char                                      UnknownData00_5[0x1C];                                      // 0x0064   (0x001C)  MISSED
	bool                                               Attached;                                                   // 0x0080:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x0081   (0x0003)  MISSED
	FName                                              SocketName;                                                 // 0x0084   (0x0008)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x008C   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.AnimNotify_ConditionalPlayParticleEffectForItem.ShouldPlayParticleEffectForItem
	bool ShouldPlayParticleEffectForItem(AItem* Item);                                                                       // [0x22535a0] Native|Event|Public|BlueprintEvent|Const 
};

/// Class /Script/ConZ.AnimNotify_FishingActionNotify
/// Size: 0x0008 (0x000038 - 0x000040)
class UAnimNotify_FishingActionNotify : public UAnimNotify
{ 
public:
	EFishingActionNotifyType                           FishingActionNotifyType;                                    // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0039   (0x0007)  MISSED
};

/// Class /Script/ConZ.AnimNotify_MagazineUpdateAmmunitionMeshes
/// Size: 0x0018 (0x000038 - 0x000050)
class UAnimNotify_MagazineUpdateAmmunitionMeshes : public UAnimNotify
{ 
public:
	bool                                               showReversed;                                               // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0039   (0x0007)  MISSED
	TArray<int32_t>                                    ammoIndices;                                                // 0x0040   (0x0010)  
};

/// Class /Script/ConZ.AnimNotify_MakeNoise
/// Size: 0x0010 (0x000038 - 0x000048)
class UAnimNotify_MakeNoise : public UAnimNotify
{ 
public:
	ENoiseLevel                                        noiseLevel;                                                 // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0039   (0x0003)  MISSED
	FName                                              NoiseTag;                                                   // 0x003C   (0x0008)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Class /Script/ConZ.AnimNotify_PlaySoundBySurface
/// Size: 0x0010 (0x000038 - 0x000048)
class UAnimNotify_PlaySoundBySurface : public UAnimNotify
{ 
public:
	UAkAudioEvent*                                     AudioEvent;                                                 // 0x0038   (0x0008)  
	TEnumAsByte<ECollisionChannel>                     TraceChannel;                                               // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0041   (0x0007)  MISSED
};

/// Class /Script/ConZ.AnimNotify_PlaySoundOnOwner
/// Size: 0x0008 (0x000038 - 0x000040)
class UAnimNotify_PlaySoundOnOwner : public UAnimNotify
{ 
public:
	UAkAudioEvent*                                     AudioEvent;                                                 // 0x0038   (0x0008)  
};

/// Class /Script/ConZ.AnimNotify_SmokableItemEquip
/// Size: 0x0000 (0x000038 - 0x000038)
class UAnimNotify_SmokableItemEquip : public UAnimNotify
{ 
public:
};

/// Class /Script/ConZ.AnimNotify_SmokableItemSwitchMeshParent
/// Size: 0x0008 (0x000038 - 0x000040)
class UAnimNotify_SmokableItemSwitchMeshParent : public UAnimNotify
{ 
public:
	EDesiredParent                                     DesiredParentSocket;                                        // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0039   (0x0007)  MISSED
};

/// Class /Script/ConZ.AnimNotify_SmokableItemUnequip
/// Size: 0x0000 (0x000038 - 0x000038)
class UAnimNotify_SmokableItemUnequip : public UAnimNotify
{ 
public:
};

/// Class /Script/ConZ.AnimNotify_SpawnDefecationEffects
/// Size: 0x0000 (0x000038 - 0x000038)
class UAnimNotify_SpawnDefecationEffects : public UAnimNotify
{ 
public:
};

/// Class /Script/ConZ.AnimNotify_SpawnDiarrheaEffects
/// Size: 0x0000 (0x000038 - 0x000038)
class UAnimNotify_SpawnDiarrheaEffects : public UAnimNotify
{ 
public:
};

/// Class /Script/ConZ.AnimNotify_VehicleDoorOpenOrClose
/// Size: 0x0000 (0x000038 - 0x000038)
class UAnimNotify_VehicleDoorOpenOrClose : public UAnimNotify
{ 
public:
};

/// Class /Script/ConZ.AnimNotify_WaterPaddle
/// Size: 0x0028 (0x000038 - 0x000060)
class UAnimNotify_WaterPaddle : public UAnimNotify
{ 
public:
	UParticleSystem*                                   ParticleSystem;                                             // 0x0038   (0x0008)  
	UAkAudioEvent*                                     AudioEvent;                                                 // 0x0040   (0x0008)  
	float                                              VolumeMultiplier;                                           // 0x0048   (0x0004)  
	float                                              PitchMultiplier;                                            // 0x004C   (0x0004)  
	bool                                               IsUnderwater;                                               // 0x0050   (0x0001)  
	bool                                               IsAttached;                                                 // 0x0051   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0052   (0x0002)  MISSED
	FName                                              AttachPointName;                                            // 0x0054   (0x0008)  
	bool                                               DebugMode;                                                  // 0x005C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x005D   (0x0003)  MISSED
};

/// Class /Script/ConZ.AnimNotify_WeaponActionNotify
/// Size: 0x0008 (0x000038 - 0x000040)
class UAnimNotify_WeaponActionNotify : public UAnimNotify
{ 
public:
	EWeaponActionNotifyType                            WeaponActionNotifyType;                                     // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0039   (0x0007)  MISSED
};

/// Class /Script/ConZ.AnimNotify_WeaponChamberBullet
/// Size: 0x0000 (0x000038 - 0x000038)
class UAnimNotify_WeaponChamberBullet : public UAnimNotify
{ 
public:
};

/// Class /Script/ConZ.AnimNotify_WeaponChamberBulletInternal
/// Size: 0x0000 (0x000038 - 0x000038)
class UAnimNotify_WeaponChamberBulletInternal : public UAnimNotify
{ 
public:
};

/// Class /Script/ConZ.AnimNotify_WeaponEjectCasing
/// Size: 0x0010 (0x000038 - 0x000048)
class UAnimNotify_WeaponEjectCasing : public UAnimNotify
{ 
public:
	FName                                              EmitterSocketName;                                          // 0x0038   (0x0008)  
	bool                                               AttachEmitter;                                              // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0041   (0x0007)  MISSED
};

/// Class /Script/ConZ.AnimNotify_WeaponUpdateAmmunitionMeshes
/// Size: 0x0018 (0x000038 - 0x000050)
class UAnimNotify_WeaponUpdateAmmunitionMeshes : public UAnimNotify
{ 
public:
	bool                                               showReversed;                                               // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0039   (0x0007)  MISSED
	TArray<int32_t>                                    ammoIndices;                                                // 0x0040   (0x0010)  
};

/// Class /Script/ConZ.AnimNotifyState_ChamberWeapon
/// Size: 0x0000 (0x000030 - 0x000030)
class UAnimNotifyState_ChamberWeapon : public UAnimNotifyState
{ 
public:
};

/// Class /Script/ConZ.AnimNotifyState_DrainStamina
/// Size: 0x0018 (0x000030 - 0x000048)
class UAnimNotifyState_DrainStamina : public UAnimNotifyState
{ 
public:
	EAnimNotifyStaminDrainType                         DrainType;                                                  // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	float                                              AmountToDrain;                                              // 0x0034   (0x0004)  
	float                                              Duration;                                                   // 0x0038   (0x0004)  
	float                                              RecoveryDelay;                                              // 0x003C   (0x0004)  
	float                                              RatioToRecover;                                             // 0x0040   (0x0004)  
	float                                              RecoveryTime;                                               // 0x0044   (0x0004)  
};

/// Class /Script/ConZ.AnimNotifyState_Fade
/// Size: 0x0020 (0x000030 - 0x000050)
class UAnimNotifyState_Fade : public UAnimNotifyState
{ 
public:
	float                                              _fadeOutRatio;                                              // 0x0030   (0x0004)  
	float                                              _fadeInRatio;                                               // 0x0034   (0x0004)  
	AnimNotifyState_FadeForAction                      _forAction;                                                 // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x17];                                      // 0x0039   (0x0017)  MISSED
};

/// Class /Script/ConZ.AnimNotifyState_IgnoreUsingHandCorrections
/// Size: 0x0008 (0x000030 - 0x000038)
class UAnimNotifyState_IgnoreUsingHandCorrections : public UAnimNotifyState
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.AnimNotifyState_Melee
/// Size: 0x0040 (0x000030 - 0x000070)
class UAnimNotifyState_Melee : public UAnimNotifyState
{ 
public:
	FGameplayTag                                       _attackCapsuleAttachment;                                   // 0x0030   (0x0008)  
	float                                              _damageMultiplier;                                          // 0x0038   (0x0004)  
	EHitSeverity                                       _hitSeverity;                                               // 0x003C   (0x0001)  
	bool                                               _stopOnHit;                                                 // 0x003D   (0x0001)  
	bool                                               _ignoreLandscape;                                           // 0x003E   (0x0001)  
	EAttackType                                        _attackType;                                                // 0x003F   (0x0001)  
	FName                                              _hitDetectionMarkersRootBoneParentName;                     // 0x0040   (0x0008)  
	TArray<FMeleeHitDetectionMarker>                   _hitDetectionMarkers;                                       // 0x0048   (0x0010)  
	int32_t                                            _hitDetectionSamplingRate;                                  // 0x0058   (0x0004)  
	unsigned char                                      UnknownData00_6[0x14];                                      // 0x005C   (0x0014)  MISSED
};

/// Class /Script/ConZ.AnimNotifyState_NoScopingAllowed
/// Size: 0x0008 (0x000030 - 0x000038)
class UAnimNotifyState_NoScopingAllowed : public UAnimNotifyState
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.AnimNotifyState_PaniniOverride
/// Size: 0x0000 (0x000030 - 0x000030)
class UAnimNotifyState_PaniniOverride : public UAnimNotifyState
{ 
public:
};

/// Class /Script/ConZ.AnimNotifyState_PhysicalAnimation
/// Size: 0x0030 (0x000030 - 0x000060)
class UAnimNotifyState_PhysicalAnimation : public UAnimNotifyState
{ 
public:
	bool                                               GotoRagdollOnEnd;                                           // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	FName                                              BodyProfileName;                                            // 0x0034   (0x0008)  
	FName                                              ConstraintProfileName;                                      // 0x003C   (0x0008)  
	FName                                              BoneName;                                                   // 0x0044   (0x0008)  
	FName                                              StrengthBlendCurveName;                                     // 0x004C   (0x0008)  
	FName                                              PhysicsBlendCurveName;                                      // 0x0054   (0x0008)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x005C   (0x0004)  MISSED
};

/// Class /Script/ConZ.AnimNotifyState_PlaySoundOnOwnerRanged
/// Size: 0x0010 (0x000030 - 0x000040)
class UAnimNotifyState_PlaySoundOnOwnerRanged : public UAnimNotifyState
{ 
public:
	UAkAudioEvent*                                     BeginAudioEvent;                                            // 0x0030   (0x0008)  
	UAkAudioEvent*                                     EndAudioEvent;                                              // 0x0038   (0x0008)  
};

/// Class /Script/ConZ.AnimNotifyState_ShowAmmunitionMeshes
/// Size: 0x0030 (0x000030 - 0x000060)
class UAnimNotifyState_ShowAmmunitionMeshes : public UAnimNotifyState
{ 
public:
	bool                                               GenerateCustomMeshComponents;                               // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	TArray<FName>                                      CustomMeshComponentsBoneNames;                              // 0x0038   (0x0010)  
	bool                                               showReversed;                                               // 0x0048   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0049   (0x0007)  MISSED
	TArray<int32_t>                                    ammoIndices;                                                // 0x0050   (0x0010)  
};

/// Class /Script/ConZ.AnimNotifyState_WeaponHideMagazine
/// Size: 0x0010 (0x000030 - 0x000040)
class UAnimNotifyState_WeaponHideMagazine : public UAnimNotifyState
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0030   (0x0010)  MISSED
};

/// Class /Script/ConZ.AnimNotifyState_WeaponRevolverDrumRotationDirection
/// Size: 0x0008 (0x000030 - 0x000038)
class UAnimNotifyState_WeaponRevolverDrumRotationDirection : public UAnimNotifyState
{ 
public:
	ERotationDirection                                 RotationDirection;                                          // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Class /Script/ConZ.AnimNotifyState_WeaponRevolverIgnoreDrumRotation
/// Size: 0x0000 (0x000030 - 0x000030)
class UAnimNotifyState_WeaponRevolverIgnoreDrumRotation : public UAnimNotifyState
{ 
public:
};

/// Class /Script/ConZ.AnimNotifyState_WeaponShowAmmunitionMeshes
/// Size: 0x0018 (0x000030 - 0x000048)
class UAnimNotifyState_WeaponShowAmmunitionMeshes : public UAnimNotifyState
{ 
public:
	bool                                               showReversed;                                               // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	TArray<int32_t>                                    ammoIndices;                                                // 0x0038   (0x0010)  
};

/// Class /Script/ConZ.AnimStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UAnimStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.AquaticLifeSpawningVolume
/// Size: 0x0050 (0x000258 - 0x0002A8)
class AAquaticLifeSpawningVolume : public AVolume
{ 
public:
	EWaterZoneType                                     _waterZoneType;                                             // 0x0258   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0259   (0x0007)  MISSED
	UFishSpeciesPreset*                                _fishSpeciesPreset;                                         // 0x0260   (0x0008)  
	UFishSpawningPreset*                               _fishSpawningPreset;                                        // 0x0268   (0x0008)  
	float                                              _requiredDepthForSpawning;                                  // 0x0270   (0x0004)  
	float                                              _fishSchoolManagerSpawningExtent;                           // 0x0274   (0x0004)  
	int32_t                                            _maxSchoolsPerFishSchoolManager;                            // 0x0278   (0x0004)  
	float                                              _fishingZoneIndicatorMinSpawnTime;                          // 0x027C   (0x0004)  
	float                                              _fishingZoneIndicatorMaxSpawnTime;                          // 0x0280   (0x0004)  
	float                                              _fishingZoneIndicatorMinLifetime;                           // 0x0284   (0x0004)  
	float                                              _fishingZoneIndicatorMaxLifetime;                           // 0x0288   (0x0004)  
	int32_t                                            _maxFishingZoneIndicatorPerPlayer;                          // 0x028C   (0x0004)  
	float                                              _fishingZoneIndicatorMinSpawningExtent;                     // 0x0290   (0x0004)  
	float                                              _fishingZoneIndicatorMaxSpawningExtent;                     // 0x0294   (0x0004)  
	float                                              _fishingZoneIndicatorMinRadius;                             // 0x0298   (0x0004)  
	float                                              _fishingZoneIndicatorMaxRadius;                             // 0x029C   (0x0004)  
	float                                              _requiredDepthForFishingIndicator;                          // 0x02A0   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x02A4   (0x0004)  MISSED
};

/// Class /Script/ConZ.StrengthSkill
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UStrengthSkill : public USkill
{ 
public:
};

/// Class /Script/ConZ.RangedWeaponsSkill
/// Size: 0x0168 (0x0000B0 - 0x000218)
class URangedWeaponsSkill : public UStrengthSkill
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x00B0   (0x0010)  MISSED
	FRangedWeaponSkillExperienceAwards                 NoSkillExperienceAwards;                                    // 0x00C0   (0x0040)  
	FRangedWeaponSkillExperienceAwards                 BasicSkillExperienceAwards;                                 // 0x0100   (0x0040)  
	FRangedWeaponSkillExperienceAwards                 MediumSkillExperienceAwards;                                // 0x0140   (0x0040)  
	FRangedWeaponSkillExperienceAwards                 AdvancedSkillExperienceAwards;                              // 0x0180   (0x0040)  
	FRangedWeaponSkillExperienceAwards                 AboveAdvancedSkillExperienceAwards;                         // 0x01C0   (0x0040)  
	FRangedWeaponSkillParametersPerSkillLevel          NoSkillParameters;                                          // 0x0200   (0x0004)  
	FRangedWeaponSkillParametersPerSkillLevel          BasicSkillParameters;                                       // 0x0204   (0x0004)  
	FRangedWeaponSkillParametersPerSkillLevel          MediumSkillParameters;                                      // 0x0208   (0x0004)  
	FRangedWeaponSkillParametersPerSkillLevel          AdvancedSkillParameters;                                    // 0x020C   (0x0004)  
	FRangedWeaponSkillParametersPerSkillLevel          AboveAdvancedSkillParameters;                               // 0x0210   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0214   (0x0004)  MISSED
};

/// Class /Script/ConZ.ArcherySkill
/// Size: 0x0068 (0x000218 - 0x000280)
class UArcherySkill : public URangedWeaponsSkill
{ 
public:
	float                                              _drawWeightNoSkillValue;                                    // 0x0218   (0x0004)  
	float                                              _drawWeightBasicSkillValue;                                 // 0x021C   (0x0004)  
	float                                              _drawWeightMediumSkillValue;                                // 0x0220   (0x0004)  
	float                                              _drawWeightAdvancedSkillValue;                              // 0x0224   (0x0004)  
	float                                              _drawWeightAboveAvancedSkillValue;                          // 0x0228   (0x0004)  
	float                                              _holdTimeInFullDrawNoSkillValue;                            // 0x022C   (0x0004)  
	float                                              _holdTimeInFullDrawBasicSkillValue;                         // 0x0230   (0x0004)  
	float                                              _holdTimeInFullDrawMediumSkillValue;                        // 0x0234   (0x0004)  
	float                                              _holdTimeInFullDrawAdvancedSkillValue;                      // 0x0238   (0x0004)  
	float                                              _holdTimeInFullDrawAboveAvancedSkillValue;                  // 0x023C   (0x0004)  
	float                                              _armsShakeMultiplierNoSkillValue;                           // 0x0240   (0x0004)  
	float                                              _armsShakeMultiplierBasicSkillValue;                        // 0x0244   (0x0004)  
	float                                              _armsShakeMultiplierMediumSkillValue;                       // 0x0248   (0x0004)  
	float                                              _armsShakeMultiplierAdvancedSkillValue;                     // 0x024C   (0x0004)  
	float                                              _armsShakeMultiplierAboveAvancedSkillValue;                 // 0x0250   (0x0004)  
	float                                              _tuneBowDurationNoSkillValue;                               // 0x0254   (0x0004)  
	float                                              _tuneBowDurationBasicSkillValue;                            // 0x0258   (0x0004)  
	float                                              _tuneBowDurationMediumSkillValue;                           // 0x025C   (0x0004)  
	float                                              _tuneBowDurationAdvancedSkillValue;                         // 0x0260   (0x0004)  
	float                                              _tuneBowDurationAboveAvancedSkillValue;                     // 0x0264   (0x0004)  
	float                                              _drawCenterDotExtraTimeLimitNoSkillValue;                   // 0x0268   (0x0004)  
	float                                              _drawCenterDotExtraTimeLimitBasicSkillValue;                // 0x026C   (0x0004)  
	float                                              _drawCenterDotExtraTimeLimitMediumSkillValue;               // 0x0270   (0x0004)  
	float                                              _drawCenterDotExtraTimeLimitAdvancedSkillValue;             // 0x0274   (0x0004)  
	float                                              _drawCenterDotExtraTimeLimitAboveAvancedSkillValue;         // 0x0278   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x027C   (0x0004)  MISSED
};

/// Class /Script/ConZ.ArchitecturalCategoriesDatabase
/// Size: 0x0010 (0x000030 - 0x000040)
class UArchitecturalCategoriesDatabase : public UDataAsset
{ 
public:
	TArray<UArchitecturalCategory*>                    ArchitecturalCategories;                                    // 0x0030   (0x0010)  
};

/// Class /Script/ConZ.ArchitecturalCategory
/// Size: 0x0028 (0x000030 - 0x000058)
class UArchitecturalCategory : public UDataAsset
{ 
public:
	FText                                              CategoryName;                                               // 0x0030   (0x0018)  
	TArray<UBaseBuildingBlockCraftableItem*>           BaseBuildingModules;                                        // 0x0048   (0x0010)  
};

/// Class /Script/ConZ.ArrayStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UArrayStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.ReplenishableResourceBaseComponent
/// Size: 0x0090 (0x000590 - 0x000620)
class UReplenishableResourceBaseComponent : public UInstancedStaticMeshComponent
{ 
public:
	FReplenishableResourceDescription                  _replenishableResourceDescription;                          // 0x0590   (0x0088)  
	FName                                              _replenishableResourceAmountMaterialParameterName;          // 0x0618   (0x0008)  
};

/// Class /Script/ConZ.ATMReplenishableResourceComponent
/// Size: 0x0000 (0x000620 - 0x000620)
class UATMReplenishableResourceComponent : public UReplenishableResourceBaseComponent
{ 
public:
};

/// Class /Script/ConZ.ItemComponent
/// Size: 0x0018 (0x0000B0 - 0x0000C8)
class UItemComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x00B0   (0x0018)  MISSED
};

/// Class /Script/ConZ.AttachableItemComponent
/// Size: 0x0098 (0x0000C8 - 0x000160)
class UAttachableItemComponent : public UItemComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x00C8   (0x0018)  MISSED
	FTransform                                         _attachRelativeTransform;                                   // 0x00E0   (0x0030)  
	float                                              _damage;                                                    // 0x0110   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0114   (0x0004)  MISSED
	FText                                              _interactionText;                                           // 0x0118   (0x0018)  
	unsigned char                                      UnknownData02_6[0x30];                                      // 0x0130   (0x0030)  MISSED


	/// Functions
	// Function /Script/ConZ.AttachableItemComponent.OnBaseElementDestroyed
	void OnBaseElementDestroyed(FDbIntegerId BaseElementId);                                                                 // [0x2256e10] Final|Native|Private 
	// Function /Script/ConZ.AttachableItemComponent.NetMulticast_OnBaseElementDestroyed
	void NetMulticast_OnBaseElementDestroyed();                                                                              // [0x2256df0] Final|Net|Native|Event|NetMulticast|Private 
};

/// Class /Script/ConZ.AttachmentSocketMountType
/// Size: 0x0000 (0x000028 - 0x000028)
class UAttachmentSocketMountType : public UObject
{ 
public:
};

/// Class /Script/ConZ.AttachmentSocketMountTypePrisonerHand
/// Size: 0x0000 (0x000028 - 0x000028)
class UAttachmentSocketMountTypePrisonerHand : public UAttachmentSocketMountType
{ 
public:
};

/// Class /Script/ConZ.AudibleButtonComponent
/// Size: 0x0050 (0x000028 - 0x000078)
class UAudibleButtonComponent : public UObject
{ 
public:
	TMap<EButtonEventType, UAkAudioEvent*>             _audioEvents;                                               // 0x0028   (0x0050)  
};

/// Class /Script/ConZ.AudioDeviceDisplay
/// Size: 0x0008 (0x000260 - 0x000268)
class UAudioDeviceDisplay : public UUserWidget
{ 
public:
	UTextBlock*                                        _deviceName;                                                // 0x0260   (0x0008)  
};

/// Class /Script/ConZ.AudioSettingsManager
/// Size: 0x0000 (0x000028 - 0x000028)
class UAudioSettingsManager : public UObject
{ 
public:
};

/// Class /Script/ConZ.AudioStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UAudioStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.ItemAnimInstance
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UItemAnimInstance : public UAnimInstance
{ 
public:
	EPrisonerStance                                    _owningPrisonerStance;                                      // 0x02C0   (0x0001)  
	bool                                               _isOwningPrisonerInFirstPersonView;                         // 0x02C1   (0x0001)  
	unsigned char                                      UnknownData00_6[0xE];                                       // 0x02C2   (0x000E)  MISSED
};

/// Class /Script/ConZ.WeaponAttachmentMagazineAnimInstance
/// Size: 0x0010 (0x0002D0 - 0x0002E0)
class UWeaponAttachmentMagazineAnimInstance : public UItemAnimInstance
{ 
public:
	int32_t                                            _ammoCount;                                                 // 0x02D0   (0x0004)  
	bool                                               _hasAmmo;                                                   // 0x02D4   (0x0001)  
	bool                                               _isAttachedToWeapon;                                        // 0x02D5   (0x0001)  
	EMagazineAmmoCountType                             _ammoCountType;                                             // 0x02D6   (0x0001)  
	bool                                               ShouldPlayIdleEmpty;                                        // 0x02D7   (0x0001)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x02D8   (0x0008)  MISSED
};

/// Class /Script/ConZ.AutoCrossbowMagazineAnimInstance
/// Size: 0x0010 (0x0002E0 - 0x0002F0)
class UAutoCrossbowMagazineAnimInstance : public UWeaponAttachmentMagazineAnimInstance
{ 
public:
	float                                              _followerBoneLocationOffset;                                // 0x02E0   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x02E4   (0x000C)  MISSED
};

/// Class /Script/ConZ.AvailabilityGrid
/// Size: 0x225530 (0x000028 - 0x225558)
class UAvailabilityGrid : public UObject
{ 
public:
	FGameplayTag                                       _waterImageAssetTag;                                        // 0x0028   (0x0008)  
	unsigned char                                      UnknownData00_6[0x225528];                                  // 0x0030   (0x225528)  MISSED
};

/// Class /Script/ConZ.DexteritySkill
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UDexteritySkill : public USkill
{ 
public:
};

/// Class /Script/ConZ.VehicleHandlingSkill
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UVehicleHandlingSkill : public UDexteritySkill
{ 
public:
};

/// Class /Script/ConZ.AviationSkill
/// Size: 0x0528 (0x0000B0 - 0x0005D8)
class UAviationSkill : public UVehicleHandlingSkill
{ 
public:
	FVehicleHandlingExperienceAwards                   NoSkillExperienceAwards;                                    // 0x00B0   (0x0008)  
	FVehicleHandlingExperienceAwards                   BasicSkillExperienceAwards;                                 // 0x00B8   (0x0008)  
	FVehicleHandlingExperienceAwards                   MediumSkillExperienceAwards;                                // 0x00C0   (0x0008)  
	FVehicleHandlingExperienceAwards                   AdvancedSkillExperienceAwards;                              // 0x00C8   (0x0008)  
	FVehicleHandlingExperienceAwards                   AboveAdvancedSkillExperienceAwards;                         // 0x00D0   (0x0008)  
	FAviationSkillParametersPerSkillLevel              NoSkillParameters;                                          // 0x00D8   (0x0100)  
	FAviationSkillParametersPerSkillLevel              BasicSkillParameters;                                       // 0x01D8   (0x0100)  
	FAviationSkillParametersPerSkillLevel              MediumSkillParameters;                                      // 0x02D8   (0x0100)  
	FAviationSkillParametersPerSkillLevel              AdvancedSkillParameters;                                    // 0x03D8   (0x0100)  
	FAviationSkillParametersPerSkillLevel              AboveAdvancedSkillParameters;                               // 0x04D8   (0x0100)  
};

/// Class /Script/ConZ.AwarenessSkill
/// Size: 0x0320 (0x0000B0 - 0x0003D0)
class UAwarenessSkill : public UIntelligenceSkill
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x00B0   (0x0010)  MISSED
	UAkAudioEvent*                                     EnterFocusModeAudioEvent;                                   // 0x00C0   (0x0008)  
	UAkAudioEvent*                                     LeaveFocusModeAudioEvent;                                   // 0x00C8   (0x0008)  
	float                                              _updateTime;                                                // 0x00D0   (0x0004)  
	float                                              _serverUpdateTime;                                          // 0x00D4   (0x0004)  
	float                                              _staminaConsumption;                                        // 0x00D8   (0x0004)  
	FAwarenessSkillExperienceAwards                    NoSkillExperienceAwards;                                    // 0x00DC   (0x000C)  
	FAwarenessSkillExperienceAwards                    BasicSkillExperienceAwards;                                 // 0x00E8   (0x000C)  
	FAwarenessSkillExperienceAwards                    MediumSkillExperienceAwards;                                // 0x00F4   (0x000C)  
	FAwarenessSkillExperienceAwards                    AdvancedSkillExperienceAwards;                              // 0x0100   (0x000C)  
	FAwarenessSkillExperienceAwards                    AboveAdvancedSkillExperienceAwards;                         // 0x010C   (0x000C)  
	FAwarenessSkillParametersPerSkillLevel             NoSkillParameters;                                          // 0x0118   (0x0058)  
	FAwarenessSkillParametersPerSkillLevel             BasicSkillParameters;                                       // 0x0170   (0x0058)  
	FAwarenessSkillParametersPerSkillLevel             MediumSkillParameters;                                      // 0x01C8   (0x0058)  
	FAwarenessSkillParametersPerSkillLevel             AdvancedSkillParameters;                                    // 0x0220   (0x0058)  
	FAwarenessSkillParametersPerSkillLevel             AboveAdvancedSkillParameters;                               // 0x0278   (0x0058)  
	unsigned char                                      UnknownData01_6[0x100];                                     // 0x02D0   (0x0100)  MISSED


	/// Functions
	// Function /Script/ConZ.AwarenessSkill.EnterFocusMode
	void EnterFocusMode();                                                                                                   // [0x22566c0] Final|Native|Public  
};

/// Class /Script/ConZ.BadAdjustableSeparator
/// Size: 0x0010 (0x000260 - 0x000270)
class UBadAdjustableSeparator : public UUserWidget
{ 
public:
	USizeBox*                                          UpperSizeBox;                                               // 0x0260   (0x0008)  
	float                                              HeightOverride;                                             // 0x0268   (0x0004)  
	bool                                               TradingRelated;                                             // 0x026C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x026D   (0x0003)  MISSED
};

/// Class /Script/ConZ.BankAccountRegistry
/// Size: 0x00C8 (0x0000B0 - 0x000178)
class UBankAccountRegistry : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0xC8];                                      // 0x00B0   (0x00C8)  MISSED
};

/// Class /Script/ConZ.PlayerRpcChannelServerRequest
/// Size: 0x0000 (0x000028 - 0x000028)
class UPlayerRpcChannelServerRequest : public UObject
{ 
public:
};

/// Class /Script/ConZ.BankAccountRegistryRequest
/// Size: 0x0020 (0x000028 - 0x000048)
class UBankAccountRegistryRequest : public UPlayerRpcChannelServerRequest
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0028   (0x0020)  MISSED
};

/// Class /Script/ConZ.PlayerRpcChannelServerResponse
/// Size: 0x0000 (0x000028 - 0x000028)
class UPlayerRpcChannelServerResponse : public UObject
{ 
public:
};

/// Class /Script/ConZ.BankAccountRegistryResponse
/// Size: 0x0008 (0x000028 - 0x000030)
class UBankAccountRegistryResponse : public UPlayerRpcChannelServerResponse
{ 
public:
	UBankAccountRegistryResponseDataObject*            _payload;                                                   // 0x0028   (0x0008)  
};

/// Class /Script/ConZ.BankAccountRegistryResponseDataObject
/// Size: 0x0078 (0x000028 - 0x0000A0)
class UBankAccountRegistryResponseDataObject : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x78];                                      // 0x0028   (0x0078)  MISSED
};

/// Class /Script/ConZ.BankAccountRegistryStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UBankAccountRegistryStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.BankATMAccountInfo
/// Size: 0x00A0 (0x000260 - 0x000300)
class UBankATMAccountInfo : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UTextBlock*                                        _accountNumber;                                             // 0x0278   (0x0008)  
	UTextBlock*                                        _accountName;                                               // 0x0280   (0x0008)  
	UTextBlock*                                        _cardType;                                                  // 0x0288   (0x0008)  
	UTextBlock*                                        _renewalAmount;                                             // 0x0290   (0x0008)  
	UHorizontalBox*                                    _goldAmountHorizontalBox;                                   // 0x0298   (0x0008)  
	UTextBlock*                                        _goldAmount;                                                // 0x02A0   (0x0008)  
	UBankATMPointingButton*                            _btnReturn;                                                 // 0x02A8   (0x0008)  
	TMap<EBankCardType, FSlateColor>                   _cardTypeFontColor;                                         // 0x02B0   (0x0050)  
};

/// Class /Script/ConZ.BankATMAccountSummary
/// Size: 0x0028 (0x000260 - 0x000288)
class UBankATMAccountSummary : public UUserWidget
{ 
public:
	UTextBlock*                                        _accountBalance;                                            // 0x0260   (0x0008)  
	UHorizontalBox*                                    _ATMOperationalTransactionLimitHorizontalBox;               // 0x0268   (0x0008)  
	UTextBlock*                                        _ATMOperationalTransactionLimit;                            // 0x0270   (0x0008)  
	UHorizontalBox*                                    _cardOperationalTransactionLimitHorizontalBox;              // 0x0278   (0x0008)  
	UTextBlock*                                        _cardOperationalTransactionLimit;                           // 0x0280   (0x0008)  
};

/// Class /Script/ConZ.BankATMBoughtCard
/// Size: 0x0160 (0x000260 - 0x0003C0)
class UBankATMBoughtCard : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	EBankATMCardUIType                                 _cardQualityType;                                           // 0x0278   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0279   (0x0007)  MISSED
	TMap<EBankATMCardUIType, FSlateBrush>              _cardBrushes;                                               // 0x0280   (0x0050)  
	FBankATMBoughtCardStateVisual                      _normalVisuals;                                             // 0x02D0   (0x0040)  
	FBankATMBoughtCardStateVisual                      _hoveredVisuals;                                            // 0x0310   (0x0040)  
	FBankATMBoughtCardStateVisual                      _pressedVisuals;                                            // 0x0350   (0x0040)  
	UOverlay*                                          _visualOverlay;                                             // 0x0390   (0x0008)  
	UImage*                                            _imgCardBackground;                                         // 0x0398   (0x0008)  
	UTextBlock*                                        _textCardType;                                              // 0x03A0   (0x0008)  
	UTextBlock*                                        _textCardNumber;                                            // 0x03A8   (0x0008)  
	UWidgetSwitcher*                                   _optionsCircleSwitcher;                                     // 0x03B0   (0x0008)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x03B8   (0x0008)  MISSED
};

/// Class /Script/ConZ.BankATMBuyableCard
/// Size: 0x0088 (0x000260 - 0x0002E8)
class UBankATMBuyableCard : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	EBankATMCardUIType                                 _cardQualityType;                                           // 0x0278   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0279   (0x0003)  MISSED
	FBankATMBuyableCardStateVisual                     _normalVisuals;                                             // 0x027C   (0x000C)  
	FBankATMBuyableCardStateVisual                     _hoveredAndPressedVisuals;                                  // 0x0288   (0x000C)  
	FBankATMBuyableCardStateVisual                     _disabledVisuals;                                           // 0x0294   (0x000C)  
	UWidgetSwitcher*                                   _visualStateSwitcher;                                       // 0x02A0   (0x0008)  
	UImage*                                            _toggleablePlusCircle;                                      // 0x02A8   (0x0008)  
	UTextBlock*                                        _textCardType;                                              // 0x02B0   (0x0008)  
	UTextBlock*                                        _textFreeRenewals;                                          // 0x02B8   (0x0008)  
	UTextBlock*                                        _textDigitsOfPin;                                           // 0x02C0   (0x0008)  
	UTextBlock*                                        _textOperationalTransactionLimit;                           // 0x02C8   (0x0008)  
	UTextBlock*                                        _textGoldPurchaseAvailable;                                 // 0x02D0   (0x0008)  
	UTextBlock*                                        _textCardCost;                                              // 0x02D8   (0x0008)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x02E0   (0x0008)  MISSED
};

/// Class /Script/ConZ.BankATMCardManagementOptionsScreen
/// Size: 0x0070 (0x000260 - 0x0002D0)
class UBankATMCardManagementOptionsScreen : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x0260   (0x0050)  MISSED
	UBankATMPointingButton*                            _btnRenew;                                                  // 0x02B0   (0x0008)  
	UBankATMPointingButton*                            _btnDelete;                                                 // 0x02B8   (0x0008)  
	UBankATMPointingButton*                            _btnReturn;                                                 // 0x02C0   (0x0008)  
	UBankATMErrorPopup*                                _popupMessage;                                              // 0x02C8   (0x0008)  
};

/// Class /Script/ConZ.BankATMCarouselCard
/// Size: 0x0088 (0x000260 - 0x0002E8)
class UBankATMCarouselCard : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UWidgetSwitcher*                                   _typeSwitcher;                                              // 0x0278   (0x0008)  
	UTextBlock*                                        _numberLabel;                                               // 0x0280   (0x0008)  
	UImage*                                            _ownershipIcon;                                             // 0x0288   (0x0008)  
	UPanelWidget*                                      _expirationNotice;                                          // 0x0290   (0x0008)  
	FColor                                             _stolenCardColor;                                           // 0x0298   (0x0004)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x029C   (0x0008)  MISSED
	FBankATMCarouselCardStateVisual                    _normalVisuals;                                             // 0x02A4   (0x0010)  
	FBankATMCarouselCardStateVisual                    _hoveredVisuals;                                            // 0x02B4   (0x0010)  
	FBankATMCarouselCardStateVisual                    _pressedVisuals;                                            // 0x02C4   (0x0010)  
	FBankATMCarouselCardStateVisual                    _disabledVisuals;                                           // 0x02D4   (0x0010)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x02E4   (0x0004)  MISSED
};

/// Class /Script/ConZ.BankATMChooseTransaction
/// Size: 0x00B0 (0x000260 - 0x000310)
class UBankATMChooseTransaction : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x78];                                      // 0x0260   (0x0078)  MISSED
	UBankATMPointingButton*                            _btnWithdraw;                                               // 0x02D8   (0x0008)  
	UBankATMPointingButton*                            _btnDeposit;                                                // 0x02E0   (0x0008)  
	UBankATMPointingButton*                            _btnTransfer;                                               // 0x02E8   (0x0008)  
	UBankATMPointingButton*                            _btnEjectCard;                                              // 0x02F0   (0x0008)  
	UBankATMPointingButton*                            _btnAccountInfo;                                            // 0x02F8   (0x0008)  
	UBankATMPointingButton*                            _btnBuyGold;                                                // 0x0300   (0x0008)  
	UBankATMPointingButton*                            _btnSellGold;                                               // 0x0308   (0x0008)  
};

/// Class /Script/ConZ.BankATMEnterPin
/// Size: 0x0078 (0x000260 - 0x0002D8)
class UBankATMEnterPin : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0260   (0x0020)  MISSED
	UWidgetSwitcher*                                   _pinEnteringSwitcher;                                       // 0x0280   (0x0008)  
	UTextBlock*                                        _enterPinTitleMessage;                                      // 0x0288   (0x0008)  
	UPanelWidget*                                      _pinSlotsPanel;                                             // 0x0290   (0x0008)  
	UClass*                                            _pinSlotClass;                                              // 0x0298   (0x0008)  
	UPanelWidget*                                      _incorrectPinWarning;                                       // 0x02A0   (0x0008)  
	UTextBlock*                                        _remainingAttemptsLabel;                                    // 0x02A8   (0x0008)  
	UBankATMPointingButton*                            _btnReturn;                                                 // 0x02B0   (0x0008)  
	UBankATMPointingButton*                            _btnSubmit;                                                 // 0x02B8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x02C0   (0x0018)  MISSED
};

/// Class /Script/ConZ.BankATMErrorPopup
/// Size: 0x0020 (0x000260 - 0x000280)
class UBankATMErrorPopup : public UUserWidget
{ 
public:
	UTextBlock*                                        _popupMessage;                                              // 0x0260   (0x0008)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0268   (0x0004)  MISSED
	float                                              _fadeInTime;                                                // 0x026C   (0x0004)  
	float                                              _displayHoldTime;                                           // 0x0270   (0x0004)  
	float                                              _fadeOutTime;                                               // 0x0274   (0x0004)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0278   (0x0008)  MISSED
};

/// Class /Script/ConZ.BankATMGoldTrading
/// Size: 0x0118 (0x000260 - 0x000378)
class UBankATMGoldTrading : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x58];                                      // 0x0260   (0x0058)  MISSED
	UConZCustomInteractionButton*                      _btnEjectCard;                                              // 0x02B8   (0x0008)  
	UWidgetSwitcher*                                   _buttonSwitcher;                                            // 0x02C0   (0x0008)  
	UBankATMPointingButton*                            _btnReturn;                                                 // 0x02C8   (0x0008)  
	UBankATMPointingButton*                            _btnSubmit;                                                 // 0x02D0   (0x0008)  
	UBankATMPointingButton*                            _btnNo;                                                     // 0x02D8   (0x0008)  
	UBankATMPointingButton*                            _btnYes;                                                    // 0x02E0   (0x0008)  
	UWidgetSwitcher*                                   _subsectionSwitcher;                                        // 0x02E8   (0x0008)  
	UTextBlock*                                        _goldBuyConversionLabel;                                    // 0x02F0   (0x0008)  
	UBankATMVirtualEditbox*                            _editBuyAmount;                                             // 0x02F8   (0x0008)  
	UTextBlock*                                        _creditsLostLabel;                                          // 0x0300   (0x0008)  
	UTextBlock*                                        _goldSellConversionLabel;                                   // 0x0308   (0x0008)  
	UBankATMVirtualEditbox*                            _editSellAmount;                                            // 0x0310   (0x0008)  
	UTextBlock*                                        _creditsGainedLabel;                                        // 0x0318   (0x0008)  
	UTextBlock*                                        _questionLabel;                                             // 0x0320   (0x0008)  
	UTextBlock*                                        _errorLabel;                                                // 0x0328   (0x0008)  
	UBankATMGoldValueGraph*                            _goldValueGraph;                                            // 0x0330   (0x0008)  
	UTextBlock*                                        _goldBalanceTextBlock;                                      // 0x0338   (0x0008)  
	UTextBlock*                                        _fundsSourceWarning;                                        // 0x0340   (0x0008)  
	UAkAudioEvent*                                     _soundSuccess;                                              // 0x0348   (0x0008)  
	UAkAudioEvent*                                     _errorSuccess;                                              // 0x0350   (0x0008)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x0358   (0x0020)  MISSED


	/// Functions
	// Function /Script/ConZ.BankATMGoldTrading.HandleOnEjectClicked
	void HandleOnEjectClicked();                                                                                             // [0x225c1c0] Final|Native|Private 
};

/// Class /Script/ConZ.BankATMGoldValueGraph
/// Size: 0x0020 (0x000260 - 0x000280)
class UBankATMGoldValueGraph : public UUserWidget
{ 
public:
	UVerticalBox*                                      _yAxisVerticalBox;                                          // 0x0260   (0x0008)  
	UImage*                                            _graphShadedAreaImg;                                        // 0x0268   (0x0008)  
	UHorizontalBox*                                    _xAxisHorizontalBox;                                        // 0x0270   (0x0008)  
	UTextBlock*                                        _graphDescriptionTextBox;                                   // 0x0278   (0x0008)  
};

/// Class /Script/ConZ.BankATMMainPanel
/// Size: 0x0080 (0x000260 - 0x0002E0)
class UBankATMMainPanel : public UUserWidget
{ 
public:
	FDelegateProperty                                  OnMouseMoveEvent;                                           // 0x0260   (0x0010)  
	UWidget*                                           _virtualMouseCursorWidget;                                  // 0x0270   (0x0008)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x0278   (0x0010)  MISSED
	UWidgetSwitcher*                                   _panelSwitcher;                                             // 0x0288   (0x0008)  
	UBankATMWelcomeScreen*                             _welcomeScreen;                                             // 0x0290   (0x0008)  
	UBankATMEnterPin*                                  _enterPinScreen;                                            // 0x0298   (0x0008)  
	UBankATMChooseTransaction*                         _chooseTransactionScreen;                                   // 0x02A0   (0x0008)  
	UBankATMMoneyTransfer*                             _moneyTransferScreen;                                       // 0x02A8   (0x0008)  
	UBankATMGoldTrading*                               _goldTradingScreen;                                         // 0x02B0   (0x0008)  
	UBankATMManageCards*                               _manageCardsScreen;                                         // 0x02B8   (0x0008)  
	UBankATMAccountInfo*                               _accountInfoScreen;                                         // 0x02C0   (0x0008)  
	UBankATMAccountSummary*                            _accountSummaryHeader;                                      // 0x02C8   (0x0008)  
	UPanelWidget*                                      _loadingOverlay;                                            // 0x02D0   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x02D8   (0x0008)  MISSED
};

/// Class /Script/ConZ.BankATMManageCards
/// Size: 0x00B0 (0x000260 - 0x000310)
class UBankATMManageCards : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x28];                                      // 0x0260   (0x0028)  MISSED
	UWidgetSwitcher*                                   _screenSwitcher;                                            // 0x0288   (0x0008)  
	UHorizontalBox*                                    _boughtCardsHorizontalBox;                                  // 0x0290   (0x0008)  
	UBankATMBoughtCard*                                _boughtCardStarter;                                         // 0x0298   (0x0008)  
	UBankATMBoughtCard*                                _boughtCardGold;                                            // 0x02A0   (0x0008)  
	UBankATMBoughtCard*                                _boughtCardClassic;                                         // 0x02A8   (0x0008)  
	UTextBlock*                                        _textNoCards;                                               // 0x02B0   (0x0008)  
	UHorizontalBox*                                    _buyableCardsHorizontalBox;                                 // 0x02B8   (0x0008)  
	UBankATMBuyableCard*                               _buyableCardClassic;                                        // 0x02C0   (0x0008)  
	UBankATMBuyableCard*                               _buyableCardGold;                                           // 0x02C8   (0x0008)  
	UTextBlock*                                        _textInventoryBalance;                                      // 0x02D0   (0x0008)  
	UTextBlock*                                        _textAccountBalance;                                        // 0x02D8   (0x0008)  
	UBankATMPointingButton*                            _btnBack;                                                   // 0x02E0   (0x0008)  
	UBankATMCardManagementOptionsScreen*               _cardManagementOptionsScreen;                               // 0x02E8   (0x0008)  
	UBankATMYesNoConfirmationScreen*                   _purchaseConfirmationScreen;                                // 0x02F0   (0x0008)  
	UBankATMYesNoConfirmationScreen*                   _cancellationConfirmationScreen;                            // 0x02F8   (0x0008)  
	UBankATMYesNoConfirmationScreen*                   _renewalConfirmationScreen;                                 // 0x0300   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0308   (0x0008)  MISSED
};

/// Class /Script/ConZ.Minigame
/// Size: 0x00D8 (0x000220 - 0x0002F8)
class AMinigame : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0220   (0x0030)  MISSED
	int32_t                                            _testingMode;                                               // 0x0250   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0254   (0x0004)  MISSED
	USceneComponent*                                   _rootComponent;                                             // 0x0258   (0x0008)  
	USceneCaptureComponent2D*                          _captureCam;                                                // 0x0260   (0x0008)  
	USceneCaptureComponent2D*                          _captureMaskCam;                                            // 0x0268   (0x0008)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x0270   (0x0008)  MISSED
	UMinigameWidget*                                   _minigameWidget;                                            // 0x0278   (0x0008)  
	UClass*                                            _minigameWidgetClass;                                       // 0x0280   (0x0008)  
	unsigned char                                      UnknownData03_5[0x28];                                      // 0x0288   (0x0028)  MISSED
	float                                              _introDuration;                                             // 0x02B0   (0x0004)  
	float                                              _outroDurationOnFail;                                       // 0x02B4   (0x0004)  
	float                                              _outroDurationOnSuccess;                                    // 0x02B8   (0x0004)  
	bool                                               _canBeCanceled;                                             // 0x02BC   (0x0001)  
	EPrisonerMontage                                   _simulatedMontage;                                          // 0x02BD   (0x0001)  
	unsigned char                                      UnknownData04_5[0x2];                                       // 0x02BE   (0x0002)  MISSED
	UAkAudioEvent*                                     _simulatedAudioStart;                                       // 0x02C0   (0x0008)  
	UAkAudioEvent*                                     _simulatedAudioStop;                                        // 0x02C8   (0x0008)  
	TArray<UClass*>                                    _takeInHandsItemTagClasses;                                 // 0x02D0   (0x0010)  
	unsigned char                                      UnknownData05_5[0x8];                                       // 0x02E0   (0x0008)  MISSED
	TArray<TWeakObjectPtr>                             _currentlyUsedTools;                                        // 0x02E8   (0x0010)  
};

/// Class /Script/ConZ.BankATMMinigame
/// Size: 0x0060 (0x0002F8 - 0x000358)
class ABankATMMinigame : public AMinigame
{ 
public:
	UBankATMUIController*                              _uiController;                                              // 0x02F8   (0x0008)  
	UStaticMeshComponent*                              _bankATMMesh;                                               // 0x0300   (0x0008)  
	UWidgetComponent*                                  _bankATMWidget;                                             // 0x0308   (0x0008)  
	FVector                                            _zoomStartLocation;                                         // 0x0310   (0x000C)  
	FVector                                            _zoomEndLocation;                                           // 0x031C   (0x000C)  
	UCurveFloat*                                       _zoomCurve;                                                 // 0x0328   (0x0008)  
	float                                              _virtualMouseMinSensitivityModifier;                        // 0x0330   (0x0004)  
	float                                              _virtualMouseMaxSensitivityModifier;                        // 0x0334   (0x0004)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x0338   (0x0010)  MISSED
	UStaticMesh*                                       _atmMesh;                                                   // 0x0348   (0x0008)  
	UStaticMesh*                                       _tabletMesh;                                                // 0x0350   (0x0008)  
};

/// Class /Script/ConZ.MinigameConfiguration
/// Size: 0x0020 (0x000028 - 0x000048)
class UMinigameConfiguration : public UObject
{ 
public:
	UClass*                                            minigameClass;                                              // 0x0028   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0030   (0x0018)  MISSED
};

/// Class /Script/ConZ.BankATMMinigameConfiguration
/// Size: 0x0018 (0x000048 - 0x000060)
class UBankATMMinigameConfiguration : public UMinigameConfiguration
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0048   (0x0018)  MISSED
};

/// Class /Script/ConZ.BankATMMoneyTransfer
/// Size: 0x0110 (0x000260 - 0x000370)
class UBankATMMoneyTransfer : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x40];                                      // 0x0260   (0x0040)  MISSED
	UButton*                                           _btnEjectCard;                                              // 0x02A0   (0x0008)  
	UWidgetSwitcher*                                   _buttonSwitcher;                                            // 0x02A8   (0x0008)  
	UBankATMPointingButton*                            _btnReturn;                                                 // 0x02B0   (0x0008)  
	UBankATMPointingButton*                            _btnSubmit;                                                 // 0x02B8   (0x0008)  
	UBankATMPointingButton*                            _btnNo;                                                     // 0x02C0   (0x0008)  
	UBankATMPointingButton*                            _btnYes;                                                    // 0x02C8   (0x0008)  
	UWidgetSwitcher*                                   _subsectionSwitcher;                                        // 0x02D0   (0x0008)  
	UBankATMVirtualEditbox*                            _editAccountNumber;                                         // 0x02D8   (0x0008)  
	UBankATMVirtualEditbox*                            _editTransferAmount;                                        // 0x02E0   (0x0008)  
	UBankATMVirtualEditbox*                            _editDepositAmount;                                         // 0x02E8   (0x0008)  
	UBankATMVirtualEditbox*                            _editWithdrawAmount;                                        // 0x02F0   (0x0008)  
	UTextBlock*                                        _questionLabel;                                             // 0x02F8   (0x0008)  
	UTextBlock*                                        _errorLabel;                                                // 0x0300   (0x0008)  
	UTextBlock*                                        _commissionPercentageTextBlock;                             // 0x0308   (0x0008)  
	UTextBlock*                                        _inventoryBalanceTextBlock;                                 // 0x0310   (0x0008)  
	UAkAudioEvent*                                     _soundSuccess;                                              // 0x0318   (0x0008)  
	UAkAudioEvent*                                     _errorSuccess;                                              // 0x0320   (0x0008)  
	unsigned char                                      UnknownData01_6[0x48];                                      // 0x0328   (0x0048)  MISSED


	/// Functions
	// Function /Script/ConZ.BankATMMoneyTransfer.HandleOnEjectCardButtonClicked
	void HandleOnEjectCardButtonClicked();                                                                                   // [0x225c1a0] Final|Native|Private 
};

/// Class /Script/ConZ.BankATMMyCardsButton
/// Size: 0x04C0 (0x000260 - 0x000720)
class UBankATMMyCardsButton : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UImage*                                            _background;                                                // 0x0278   (0x0008)  
	UImage*                                            _cardIcon;                                                  // 0x0280   (0x0008)  
	UTextBlock*                                        _labelMy;                                                   // 0x0288   (0x0008)  
	UTextBlock*                                        _labelCards;                                                // 0x0290   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0298   (0x0008)  MISSED
	FBankATMMyCardsButtonStateVisual                   _normalVisuals;                                             // 0x02A0   (0x0120)  
	FBankATMMyCardsButtonStateVisual                   _hoveredVisuals;                                            // 0x03C0   (0x0120)  
	FBankATMMyCardsButtonStateVisual                   _pressedVisuals;                                            // 0x04E0   (0x0120)  
	FBankATMMyCardsButtonStateVisual                   _disabledVisuals;                                           // 0x0600   (0x0120)  
};

/// Class /Script/ConZ.BankATMPinSlot
/// Size: 0x0050 (0x000260 - 0x0002B0)
class UBankATMPinSlot : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0260   (0x0010)  MISSED
	UWidgetSwitcher*                                   _pinNumberTypeSwitcher;                                     // 0x0270   (0x0008)  
	UTextBlock*                                        _pinNumber;                                                 // 0x0278   (0x0008)  
	UImage*                                            _animatedEntryBar;                                          // 0x0280   (0x0008)  
	UWidgetAnimation*                                  _enterNumber;                                               // 0x0288   (0x0008)  
	UWidgetAnimation*                                  _enterNumberLast;                                           // 0x0290   (0x0008)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x0298   (0x0010)  MISSED
	float                                              _caretBlinkSeconds;                                         // 0x02A8   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x02AC   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.BankATMPinSlot.OnCaretSettles
	void OnCaretSettles();                                                                                                   // [0x225c200] Final|Native|Private 
	// Function /Script/ConZ.BankATMPinSlot.OnCaretCoversNumber
	void OnCaretCoversNumber();                                                                                              // [0x225c1e0] Final|Native|Private 
};

/// Class /Script/ConZ.BankATMPointingButton
/// Size: 0x02C8 (0x000260 - 0x000528)
class UBankATMPointingButton : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x28];                                      // 0x0260   (0x0028)  MISSED
	FText                                              _titleText;                                                 // 0x0288   (0x0018)  
	bool                                               _isPointingRight;                                           // 0x02A0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x02A1   (0x0007)  MISSED
	UImage*                                            _backgroundImage;                                           // 0x02A8   (0x0008)  
	UTextBlock*                                        _titleLabel;                                                // 0x02B0   (0x0008)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x02B8   (0x0008)  MISSED
	FBankATMPointingButtonStateVisual                  _normalVisuals;                                             // 0x02C0   (0x0098)  
	FBankATMPointingButtonStateVisual                  _hoveredVisuals;                                            // 0x0358   (0x0098)  
	FBankATMPointingButtonStateVisual                  _pressedVisuals;                                            // 0x03F0   (0x0098)  
	FBankATMPointingButtonStateVisual                  _disabledVisuals;                                           // 0x0488   (0x0098)  
	UAkAudioEvent*                                     _soundOnClicked;                                            // 0x0520   (0x0008)  
};

/// Class /Script/ConZ.BankATMUIController
/// Size: 0x00F8 (0x000028 - 0x000120)
class UBankATMUIController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0xF8];                                      // 0x0028   (0x00F8)  MISSED
};

/// Class /Script/ConZ.BankATMVirtualEditbox
/// Size: 0x0080 (0x000260 - 0x0002E0)
class UBankATMVirtualEditbox : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	FText                                              _hintText;                                                  // 0x0278   (0x0018)  
	UImage*                                            _outline;                                                   // 0x0290   (0x0008)  
	UTextBlock*                                        _hintLabel;                                                 // 0x0298   (0x0008)  
	UTextBlock*                                        _editboxLabel;                                              // 0x02A0   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x02A8   (0x0004)  MISSED
	FBankATMVirtualEditboxStateVisual                  _inactiveVisuals;                                           // 0x02AC   (0x0010)  
	FBankATMVirtualEditboxStateVisual                  _activeVisuals;                                             // 0x02BC   (0x0010)  
	FBankATMVirtualEditboxStateVisual                  _disabledVisuals;                                           // 0x02CC   (0x0010)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x02DC   (0x0004)  MISSED
};

/// Class /Script/ConZ.BankATMWelcomeScreen
/// Size: 0x0058 (0x000260 - 0x0002B8)
class UBankATMWelcomeScreen : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0260   (0x0020)  MISSED
	UButton*                                           _btnCardsPrevious;                                          // 0x0280   (0x0008)  
	UButton*                                           _btnCardsNext;                                              // 0x0288   (0x0008)  
	UPanelWidget*                                      _cardCarousel;                                              // 0x0290   (0x0008)  
	UBankATMMyCardsButton*                             _btnMyCards;                                                // 0x0298   (0x0008)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x02A0   (0x0018)  MISSED


	/// Functions
	// Function /Script/ConZ.BankATMWelcomeScreen.HandleOnCardsPreviousClicked
	void HandleOnCardsPreviousClicked();                                                                                     // [0x22604f0] Final|Native|Private 
	// Function /Script/ConZ.BankATMWelcomeScreen.HandleOnCardsNextClicked
	void HandleOnCardsNextClicked();                                                                                         // [0x22604d0] Final|Native|Private 
};

/// Class /Script/ConZ.BankATMYesNoConfirmationScreen
/// Size: 0x0038 (0x000260 - 0x000298)
class UBankATMYesNoConfirmationScreen : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0260   (0x0020)  MISSED
	UTextBlock*                                        _textDialog;                                                // 0x0280   (0x0008)  
	UBankATMPointingButton*                            _btnCancel;                                                 // 0x0288   (0x0008)  
	UBankATMPointingButton*                            _btnYes;                                                    // 0x0290   (0x0008)  
};

/// Class /Script/ConZ.BankCardItemComponent
/// Size: 0x0018 (0x0000C8 - 0x0000E0)
class UBankCardItemComponent : public UItemComponent
{ 
public:
	FDbIntegerId                                       _ownerUserProfileId;                                        // 0x00C8   (0x0008)  
	int64_t                                            _bankAccountNumber;                                         // 0x00D0   (0x0008)  
	EBankCardType                                      _bankCardType;                                              // 0x00D8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00D9   (0x0007)  MISSED
};

/// Class /Script/ConZ.BankCardOperationRequest
/// Size: 0x0018 (0x000028 - 0x000040)
class UBankCardOperationRequest : public UPlayerRpcChannelServerRequest
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0028   (0x0018)  MISSED
};

/// Class /Script/ConZ.BankCardOperationResponse
/// Size: 0x0008 (0x000028 - 0x000030)
class UBankCardOperationResponse : public UPlayerRpcChannelServerResponse
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.BankCardOwnershipRequest
/// Size: 0x0008 (0x000028 - 0x000030)
class UBankCardOwnershipRequest : public UPlayerRpcChannelServerRequest
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.BankCardOwnershipResponse
/// Size: 0x0058 (0x000028 - 0x000080)
class UBankCardOwnershipResponse : public UPlayerRpcChannelServerResponse
{ 
public:
	unsigned char                                      UnknownData00_1[0x58];                                      // 0x0028   (0x0058)  MISSED
};

/// Class /Script/ConZ.SedentaryNPC
/// Size: 0x0160 (0x0007B0 - 0x000910)
class ASedentaryNPC : public AConZCharacter
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x07B0   (0x0008)  MISSED
	FVector                                            _originalLocation;                                          // 0x07B8   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x07C4   (0x0004)  MISSED
	ATradeOutpostBuilding*                             _tradeOutpostBuilding;                                      // 0x07C8   (0x0008)  
	unsigned char                                      UnknownData02_5[0x18];                                      // 0x07D0   (0x0018)  MISSED
	FVector                                            _animationHeadScale;                                        // 0x07E8   (0x000C)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x07F4   (0x0004)  MISSED
	UAnimSequenceBase*                                 _faceIdleAnimation;                                         // 0x07F8   (0x0008)  
	FFloatRange                                        _headYawClampValues;                                        // 0x0800   (0x0010)  
	FFloatRange                                        _headPitchClampValues;                                      // 0x0810   (0x0010)  
	float                                              _headPitchClampCorrectionValueLower;                        // 0x0820   (0x0004)  
	float                                              _headPitchClampCorrectionValueUpper;                        // 0x0824   (0x0004)  
	float                                              _headRotationSpeedLerpFactor;                               // 0x0828   (0x0004)  
	FFloatRange                                        _eyesYawAngleRange;                                         // 0x082C   (0x0010)  
	FFloatRange                                        _eyesPitchAngleRange;                                       // 0x083C   (0x0010)  
	float                                              _eyesPitchClampCorrectionValueLower;                        // 0x084C   (0x0004)  
	float                                              _eyesPitchClampCorrectionValueUpper;                        // 0x0850   (0x0004)  
	float                                              _eyesRotationSpeedLerpFactor;                               // 0x0854   (0x0004)  
	FFloatRange                                        _blinkingPeriodRange;                                       // 0x0858   (0x0010)  
	float                                              _timeToBlinkInSeconds;                                      // 0x0868   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x086C   (0x0004)  MISSED
	TArray<UClass*>                                    _backgroundInteractions;                                    // 0x0870   (0x0010)  
	USedentaryNPCBackgroundInteraction*                _activeBackgroundInteraction;                               // 0x0880   (0x0008)  
	float                                              _interactionDistance;                                       // 0x0888   (0x0004)  
	float                                              _timeWithoutFocusPawnToClearBackgroundInteractions;         // 0x088C   (0x0004)  
	unsigned char                                      UnknownData05_5[0x58];                                      // 0x0890   (0x0058)  MISSED
	float                                              _backgroundInteractionCooldownTime;                         // 0x08E8   (0x0004)  
	unsigned char                                      UnknownData06_6[0x24];                                      // 0x08EC   (0x0024)  MISSED
};

/// Class /Script/ConZ.Banker
/// Size: 0x0010 (0x000910 - 0x000920)
class ABanker : public ASedentaryNPC
{ 
public:
	float                                              _bankTransactionCooldownTime;                               // 0x0908   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x090C   (0x0004)  MISSED
	UClass*                                            _bankMinigameClass;                                         // 0x0910   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0918   (0x0008)  MISSED
};

/// Class /Script/ConZ.InteractionAssetData
/// Size: 0x0008 (0x000028 - 0x000030)
class UInteractionAssetData : public UAssetUserData
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.BankTransactionAssetData
/// Size: 0x0008 (0x000030 - 0x000038)
class UBankTransactionAssetData : public UInteractionAssetData
{ 
public:
	UClass*                                            BankATMMinigame;                                            // 0x0030   (0x0008)  
};

/// Class /Script/ConZ.BankTransactionRequest
/// Size: 0x0038 (0x000028 - 0x000060)
class UBankTransactionRequest : public UPlayerRpcChannelServerRequest
{ 
public:
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0028   (0x0038)  MISSED
};

/// Class /Script/ConZ.BankTransactionResponse
/// Size: 0x0008 (0x000028 - 0x000030)
class UBankTransactionResponse : public UPlayerRpcChannelServerResponse
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.BaseMenu
/// Size: 0x0000 (0x000260 - 0x000260)
class UBaseMenu : public UUserWidget
{ 
public:
};

/// Class /Script/ConZ.BarberShopMenuWidget
/// Size: 0x01F0 (0x000260 - 0x000450)
class UBarberShopMenuWidget : public UBaseMenu
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0260   (0x0008)  MISSED
	UOverlay*                                          _overlayMenu;                                               // 0x0268   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderHairStyle;                                           // 0x0270   (0x0008)  
	UCCGameUpgradeConditionDisplayWidget*              _hairStyleUpgradeConditionDisplay;                          // 0x0278   (0x0008)  
	UVerticalBox*                                      _facialHairVerticalBox;                                     // 0x0280   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderMoustacheStyle;                                      // 0x0288   (0x0008)  
	UCCGameUpgradeConditionDisplayWidget*              _moustacheStyleUpgradeConditionDisplay;                     // 0x0290   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderBeardStyle;                                          // 0x0298   (0x0008)  
	UCCGameUpgradeConditionDisplayWidget*              _beardStyleUpgradeConditionDisplay;                         // 0x02A0   (0x0008)  
	UPresetColorPicker*                                _presetColorPickerHairColor;                                // 0x02A8   (0x0008)  
	UCollapsableColorPicker*                           _dropdownColorPickerEyeshadow;                              // 0x02B0   (0x0008)  
	UCollapsableColorPicker*                           _dropdownColorPickerEyeliner;                               // 0x02B8   (0x0008)  
	UVerticalBox*                                      _makeupVerticalBox;                                         // 0x02C0   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderEyesMakeupMetalness;                                 // 0x02C8   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderEyesMakeupIntensity;                                 // 0x02D0   (0x0008)  
	UCollapsableColorPicker*                           _dropdownColorPickerLipstickColor;                          // 0x02D8   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderLipstickGlossiness;                                  // 0x02E0   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderLipstickIntensity;                                   // 0x02E8   (0x0008)  
	UConZStandardButton*                               _buttonRandomize;                                           // 0x02F0   (0x0008)  
	UConZStandardButton*                               _buttonApply;                                               // 0x02F8   (0x0008)  
	UOverlay*                                          _overlayConfirmation;                                       // 0x0300   (0x0008)  
	UConZStandardButton*                               _buttonCancelConfirmation;                                  // 0x0308   (0x0008)  
	UConZStandardButton*                               _buttonContinueConfirmation;                                // 0x0310   (0x0008)  
	UScrollBox*                                        _faceOptionsScrollbox;                                      // 0x0318   (0x0008)  
	unsigned char                                      UnknownData01_6[0x130];                                     // 0x0320   (0x0130)  MISSED


	/// Functions
	// Function /Script/ConZ.BarberShopMenuWidget.OnRandomizeClicked
	void OnRandomizeClicked();                                                                                               // [0x2260a10] Final|Native|Private 
	// Function /Script/ConZ.BarberShopMenuWidget.OnContinueClickedInConfirmationPanel
	void OnContinueClickedInConfirmationPanel();                                                                             // [0x22605f0] Final|Native|Private 
	// Function /Script/ConZ.BarberShopMenuWidget.OnCancelClickedInConfirmationPanel
	void OnCancelClickedInConfirmationPanel();                                                                               // [0x22605d0] Final|Native|Private 
	// Function /Script/ConZ.BarberShopMenuWidget.OnApplyClicked
	void OnApplyClicked();                                                                                                   // [0x22605b0] Final|Native|Private 
};

/// Class /Script/ConZ.BaseBuildingComponent
/// Size: 0x0210 (0x0004E0 - 0x0006F0)
class UBaseBuildingComponent : public UStaticMeshComponent
{ 
public:
	FString                                            _name;                                                      // 0x04E0   (0x0010)  
	EBaseElementType                                   _baseElementType;                                           // 0x04F0   (0x0004)  
	bool                                               _forbidPlacementOfOtherElements;                            // 0x04F4   (0x0001)  
	bool                                               _isClimbable;                                               // 0x04F5   (0x0001)  
	bool                                               _isBlockingItemPlacement;                                   // 0x04F6   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x04F7   (0x0001)  MISSED
	TArray<UStaticMesh*>                               _staticMeshVariations;                                      // 0x04F8   (0x0010)  
	UChoppingRecipeDataAsset*                          _choppingRecipeAsset;                                       // 0x0508   (0x0008)  
	float                                              _healthPoints;                                              // 0x0510   (0x0004)  
	bool                                               _canBeDamaged;                                              // 0x0514   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0515   (0x0003)  MISSED
	float                                              _hoursToDecay;                                              // 0x0518   (0x0004)  
	float                                              _hoursToDecayOutsideFlagArea;                               // 0x051C   (0x0004)  
	bool                                               _isUsedForRespawn;                                          // 0x0520   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0521   (0x0003)  MISSED
	float                                              _explosionResistance;                                       // 0x0524   (0x0004)  
	UCurveFloat*                                       _collisionDamageModifierFromEnergy;                         // 0x0528   (0x0008)  
	UStaticMesh*                                       _weatherMaskMesh;                                           // 0x0530   (0x0008)  
	bool                                               _canBePlacedWithoutFlag;                                    // 0x0538   (0x0001)  
	bool                                               _canBePlacedInBuilding;                                     // 0x0539   (0x0001)  
	bool                                               _canBePlacedInRestrictedArea;                               // 0x053A   (0x0001)  
	bool                                               _canBePlacedInAbandonedBunker;                              // 0x053B   (0x0001)  
	int32_t                                            _maxInstancesPerFlagArea;                                   // 0x053C   (0x0004)  
	UPlaceableCraftableItem*                           _upgradeRecipe;                                             // 0x0540   (0x0008)  
	bool                                               _cascadeDestroySnappedElementsOnUpgrade;                    // 0x0548   (0x0001)  
	bool                                               _ignoreDisabledBaseBuildingFlag;                            // 0x0549   (0x0001)  
	bool                                               _isTileable;                                                // 0x054A   (0x0001)  
	bool                                               _mustBePlacedOnFoundation;                                  // 0x054B   (0x0001)  
	bool                                               _canEverBePlacedOnFoundation;                               // 0x054C   (0x0001)  
	bool                                               _canBePlacedOnOtherBaseElements;                            // 0x054D   (0x0001)  
	bool                                               _canBePlacedWithoutSnapping;                                // 0x054E   (0x0001)  
	bool                                               _shouldIgnoreSelfWhilePlacing;                              // 0x054F   (0x0001)  
	bool                                               _canBeGroundedOnOtherElements;                              // 0x0550   (0x0001)  
	char                                               _maxHeightLevel;                                            // 0x0551   (0x0001)  
	unsigned char                                      UnknownData03_5[0x2];                                       // 0x0552   (0x0002)  MISSED
	float                                              _maxHeightDifference;                                       // 0x0554   (0x0004)  
	bool                                               _addRandomRotation;                                         // 0x0558   (0x0001)  
	bool                                               _mustGroundAllPoints;                                       // 0x0559   (0x0001)  
	bool                                               _mustBePlacedUpright;                                       // 0x055A   (0x0001)  
	EConZPlacementHeightType                           _placementHeightType;                                       // 0x055B   (0x0001)  
	bool                                               _useSimpleCollisionForOverlaps;                             // 0x055C   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x055D   (0x0003)  MISSED
	FRotator                                           _maxRotationWhilePlacing;                                   // 0x0560   (0x000C)  
	bool                                               _useEncapsulationTestWhenSnapping;                          // 0x056C   (0x0001)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x056D   (0x0003)  MISSED
	TArray<FElementSnapMarker>                         _elementSnapMarkers;                                        // 0x0570   (0x0010)  
	TArray<FBaseBuildingSizeVariation>                 _sizeVariations;                                            // 0x0580   (0x0010)  
	unsigned char                                      UnknownData06_5[0x4];                                       // 0x0590   (0x0004)  MISSED
	float                                              _sizeVariationsSpacing;                                     // 0x0594   (0x0004)  
	float                                              _repairTime;                                                // 0x0598   (0x0004)  
	unsigned char                                      UnknownData07_5[0x4];                                       // 0x059C   (0x0004)  MISSED
	FRepairableParams                                  _repairableParams;                                          // 0x05A0   (0x0038)  
	float                                              _experienceAwardForBuilding;                                // 0x05D8   (0x0004)  
	unsigned char                                      UnknownData08_5[0x4];                                       // 0x05DC   (0x0004)  MISSED
	TArray<UParticleSystem*>                           _destructionParticles;                                      // 0x05E0   (0x0010)  
	TArray<FTransform>                                 _destructionParticlesSpawnTransforms;                       // 0x05F0   (0x0010)  
	UAkAudioEvent*                                     _destructionSound;                                          // 0x0600   (0x0008)  
	bool                                               _isDoor;                                                    // 0x0608   (0x0001)  
	unsigned char                                      UnknownData09_5[0x7];                                       // 0x0609   (0x0007)  MISSED
	UClass*                                            _doorClass;                                                 // 0x0610   (0x0008)  
	bool                                               _hasLadder;                                                 // 0x0618   (0x0001)  
	unsigned char                                      UnknownData10_5[0x7];                                       // 0x0619   (0x0007)  MISSED
	TArray<FLadderMarker>                              _ladderMarkers;                                             // 0x0620   (0x0010)  
	TArray<FBaseElementDamageZone>                     _damageZones;                                               // 0x0630   (0x0010)  
	bool                                               _shouldDestroyElementsOnTopWhenDestroyed;                   // 0x0640   (0x0001)  
	unsigned char                                      UnknownData11_5[0x3];                                       // 0x0641   (0x0003)  MISSED
	float                                              _destructionTime;                                           // 0x0644   (0x0004)  
	bool                                               _shouldRemoveIntersectingElementsOnDestroy;                 // 0x0648   (0x0001)  
	unsigned char                                      UnknownData12_5[0x7];                                       // 0x0649   (0x0007)  MISSED
	TArray<FBaseElementDestructionZone>                _destructionZones;                                          // 0x0650   (0x0010)  
	bool                                               _useAsReplenishableResource;                                // 0x0660   (0x0001)  
	unsigned char                                      UnknownData13_5[0x7];                                       // 0x0661   (0x0007)  MISSED
	FReplenishableResourceDescription                  _replenishableResourceDescription;                          // 0x0668   (0x0088)  
};

/// Class /Script/ConZ.BaseBuildingItemComponent
/// Size: 0x0010 (0x0006F0 - 0x000700)
class UBaseBuildingItemComponent : public UBaseBuildingComponent
{ 
public:
	UClass*                                            _itemClass;                                                 // 0x06F0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x06F8   (0x0008)  MISSED
};

/// Class /Script/ConZ.ModularBaseBuildingComponent
/// Size: 0x0050 (0x0006F0 - 0x000740)
class UModularBaseBuildingComponent : public UBaseBuildingComponent
{ 
public:
	TArray<FRotator>                                   _availableOrientations;                                     // 0x06F0   (0x0010)  
	float                                              MinStabilityForPlacement;                                   // 0x0700   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0704   (0x0004)  MISSED
	TArray<FElementQueryMarker>                        _elementStabilityMarkers;                                   // 0x0708   (0x0010)  
	TArray<FModularElementSnapMarker>                  _modularElementSnapMarkers;                                 // 0x0718   (0x0010)  
	TArray<FElementMorphQuery>                         _elementMorphQueries;                                       // 0x0728   (0x0010)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0738   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.ModularBaseBuildingComponent.GetModularMarkerNameOptions
	TArray<FName> GetModularMarkerNameOptions();                                                                             // [0x2260090] Final|Native|Protected|Const 
};

/// Class /Script/ConZ.BaseBuildingStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UBaseBuildingStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.CraftingResult
/// Size: 0x00A0 (0x000028 - 0x0000C8)
class UCraftingResult : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0xA0];                                      // 0x0028   (0x00A0)  MISSED
};

/// Class /Script/ConZ.BaseCraftingRecipe
/// Size: 0x0060 (0x000028 - 0x000088)
class UBaseCraftingRecipe : public UObject
{ 
public:
	FString                                            RecipeName;                                                 // 0x0028   (0x0010)  
	ECraftingRecipeCategory                            RecipeCategory;                                             // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0039   (0x0003)  MISSED
	int32_t                                            RecipeOrder;                                                // 0x003C   (0x0004)  
	UAnimMontage*                                      CustomCraftingMontage;                                      // 0x0040   (0x0008)  
	UAkAudioEvent*                                     CustomStartCraftingAudioEvent;                              // 0x0048   (0x0008)  
	UAkAudioEvent*                                     CustomStopCraftingAudioEvent;                               // 0x0050   (0x0008)  
	TArray<UCraftingCondition*>                        GlobalConditions;                                           // 0x0058   (0x0010)  
	TArray<FCraftingSlot>                              IngredientSlots;                                            // 0x0068   (0x0010)  
	TArray<FCraftingProductDescription>                PossibleProducts;                                           // 0x0078   (0x0010)  


	/// Functions
	// Function /Script/ConZ.BaseCraftingRecipe.Process
	bool Process(FCraftingRecipeParams& Params, UCraftingResult* Result);                                                    // [0x2260a30] Native|Public|HasOutParms|BlueprintCallable|Const 
	// Function /Script/ConZ.BaseCraftingRecipe.Finalize
	UObject* Finalize(UObject* WorldContextObject, UCraftingResult* Result);                                                 // [0x225ff40] Native|Public|BlueprintCallable|Const 
};

/// Class /Script/ConZ.BaseInteractionComponent
/// Size: 0x0020 (0x000200 - 0x000220)
class UBaseInteractionComponent : public USceneComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0200   (0x0008)  MISSED
	float                                              _capsuleRadius;                                             // 0x0208   (0x0004)  
	float                                              _capsuleHalfHeight;                                         // 0x020C   (0x0004)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0210   (0x0010)  MISSED
};

/// Class /Script/ConZ.BaseItemContainerWidget
/// Size: 0x0038 (0x000260 - 0x000298)
class UBaseItemContainerWidget : public UUserWidget
{ 
public:
	FMulticastInlineDelegate                           ObjectAddedToContainer;                                     // 0x0260   (0x0010)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0270   (0x0004)  MISSED
	int32_t                                            Columns;                                                    // 0x0274   (0x0004)  
	int32_t                                            Rows;                                                       // 0x0278   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x027C   (0x0004)  MISSED
	UGridPanel*                                        GridPanel;                                                  // 0x0280   (0x0008)  
	UUserWidget*                                       HighlightBorder;                                            // 0x0288   (0x0008)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0290   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.BaseItemContainerWidget.RefreshSize
	void RefreshSize();                                                                                                      // [0x2859740] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/ConZ.BaseItemContainerWidget.OnObjectAddedToContainerEvent__DelegateSignature
	void OnObjectAddedToContainerEvent__DelegateSignature(UObject* Object);                                                  // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.BaseItemContainerWidget.OnDropEvent
	void OnDropEvent(UInventorySlotUserWidget* inventorySlot, UBaseItemWidget* Item);                                        // [0x2260940] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.BaseItemContainerWidget.OnDragStartEvent
	void OnDragStartEvent(UBaseItemWidget* Widget, FGeometry& Geometry);                                                     // [0x2260840] Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.BaseItemContainerWidget.OnDragLeaveEvent
	void OnDragLeaveEvent(UInventorySlotUserWidget* inventorySlot, UBaseItemWidget* Widget);                                 // [0x2260770] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.BaseItemContainerWidget.OnDragEnterEvent
	void OnDragEnterEvent(UInventorySlotUserWidget* inventorySlot, UBaseItemWidget* Widget);                                 // [0x22606a0] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.BaseItemContainerWidget.OnDragCancelledEvent
	void OnDragCancelledEvent(UBaseItemWidget* Widget);                                                                      // [0x2260610] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.BaseItemContainerWidget.InitGrid
	void InitGrid(FMargin& gridPadding);                                                                                     // [0x2260510] Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.BaseItemContainerWidget.GetSlotsForPanel
	bool GetSlotsForPanel(UGridSlot* GridSlot, int32_t Width, int32_t Height, TArray<UInventorySlotUserWidget*>& Slots, UGridPanel* panel, int32_t numColumns, int32_t numRows); // [0x2260290] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.BaseItemContainerWidget.GetSlots
	bool GetSlots(UGridSlot* GridSlot, int32_t Width, int32_t Height, TArray<UInventorySlotUserWidget*>& Slots);             // [0x2260110] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.BaseItemContainerWidget.GetItemWidgets
	TArray<UItemUserWidget*> GetItemWidgets();                                                                               // [0x2260010] Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.BaseItemWidget
/// Size: 0x0020 (0x000260 - 0x000280)
class UBaseItemWidget : public UUserWidget
{ 
public:
	UBaseItemContainerWidget*                          ParentInventory;                                            // 0x0260   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0268   (0x0008)  MISSED
	int32_t                                            Width;                                                      // 0x0270   (0x0004)  
	int32_t                                            Height;                                                     // 0x0274   (0x0004)  
	UImage*                                            _imageWidget;                                               // 0x0278   (0x0008)  


	/// Functions
	// Function /Script/ConZ.BaseItemWidget.SetStacksCount
	void SetStacksCount(int32_t Count);                                                                                      // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.BaseItemWidget.GetStacksCount
	int32_t GetStacksCount();                                                                                                // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.BaseItemWidget.GetDragImage
	void GetDragImage(FGeometry Geometry, UInventorySlotUserWidget* widgetImage);                                            // [0x2264910] Final|Native|Protected|BlueprintCallable 
	// Function /Script/ConZ.BaseItemWidget.DragCancelled
	void DragCancelled();                                                                                                    // [0x22648f0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.BasicGameResourceContainerComponent
/// Size: 0x0120 (0x0000C8 - 0x0001E8)
class UBasicGameResourceContainerComponent : public UItemComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x00C8   (0x0020)  MISSED
	UClass*                                            _repResourceType;                                           // 0x00E8   (0x0008)  
	float                                              _repResourceAmount;                                         // 0x00F0   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x00F4   (0x0004)  MISSED
	FGameplayTagContainer                              _resourceFillingInSocketTypes;                              // 0x00F8   (0x0020)  
	FGameplayTagContainer                              _resourceFillingOutSocketTypes;                             // 0x0118   (0x0020)  
	TArray<UBaseItemTag*>                              _requiredItemTagsForFilling;                                // 0x0138   (0x0010)  
	bool                                               _shouldUpdateOwningItemUses;                                // 0x0148   (0x0001)  
	bool                                               _amountDependsOnItemWeight;                                 // 0x0149   (0x0001)  
	bool                                               _canDrink;                                                  // 0x014A   (0x0001)  
	bool                                               _canSpill;                                                  // 0x014B   (0x0001)  
	bool                                               _canCheck;                                                  // 0x014C   (0x0001)  
	bool                                               _canFill;                                                   // 0x014D   (0x0001)  
	bool                                               _showResourcePercentageOnCheck;                             // 0x014E   (0x0001)  
	bool                                               _shouldUncraftWhenEmpty;                                    // 0x014F   (0x0001)  
	bool                                               _shouldSpillWhenPickedUp;                                   // 0x0150   (0x0001)  
	bool                                               _shouldSpillWhenAddedToContainer;                           // 0x0151   (0x0001)  
	bool                                               _shouldTakeInHandsWhenDrinking;                             // 0x0152   (0x0001)  
	unsigned char                                      UnknownData02_5[0x5];                                       // 0x0153   (0x0005)  MISSED
	FText                                              _interactionText;                                           // 0x0158   (0x0018)  
	UAnimMontage*                                      _resourceFillingMontage;                                    // 0x0170   (0x0008)  
	UAkAudioEvent*                                     _resourceStartFillingAudioEvent;                            // 0x0178   (0x0008)  
	UAkAudioEvent*                                     _resourceStopFillingAudioEvent;                             // 0x0180   (0x0008)  
	float                                              _resourceFillingDurationPerAmountFilled;                    // 0x0188   (0x0004)  
	float                                              _resourceFillingExperiencePerAmount;                        // 0x018C   (0x0004)  
	EPrisonerStance                                    _targetStanceWhenFilling;                                   // 0x0190   (0x0001)  
	bool                                               _shouldTakeInHandsWhenFilling;                              // 0x0191   (0x0001)  
	unsigned char                                      UnknownData03_5[0x6];                                       // 0x0192   (0x0006)  MISSED
	UAkAudioEvent*                                     _spillStartAudioEvent;                                      // 0x0198   (0x0008)  
	UAkAudioEvent*                                     _spillStopAudioEvent;                                       // 0x01A0   (0x0008)  
	UAnimMontage*                                      _spillMontage;                                              // 0x01A8   (0x0008)  
	UAnimMontage*                                      _spillMontageEnd;                                           // 0x01B0   (0x0008)  
	UParticleSystem*                                   _particles;                                                 // 0x01B8   (0x0008)  
	float                                              _minSpillTime;                                              // 0x01C0   (0x0004)  
	float                                              _maxSpillTime;                                              // 0x01C4   (0x0004)  
	float                                              _spillTimePerKg;                                            // 0x01C8   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x01CC   (0x0004)  MISSED
	UAkAudioEvent*                                     _drinkStartAudioEvent;                                      // 0x01D0   (0x0008)  
	UAkAudioEvent*                                     _drinkStopAudioEvent;                                       // 0x01D8   (0x0008)  
	unsigned char                                      UnknownData05_6[0x8];                                       // 0x01E0   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.BasicGameResourceContainerComponent.OnRep_ResourceType
	void OnRep_ResourceType();                                                                                               // [0x2264d30] Final|Native|Private 
	// Function /Script/ConZ.BasicGameResourceContainerComponent.OnRep_ResourceAmount
	void OnRep_ResourceAmount();                                                                                             // [0x2264d30] Final|Native|Private 
};

/// Class /Script/ConZ.BasicGameResourceSlotItemComponent
/// Size: 0x0048 (0x0000C8 - 0x000110)
class UBasicGameResourceSlotItemComponent : public UItemComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x00C8   (0x0030)  MISSED
	bool                                               _disableInteractions;                                       // 0x00F8   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x00F9   (0x0007)  MISSED
	UClass*                                            _repResourceClass;                                          // 0x0100   (0x0008)  
	float                                              _repResourceAmountRatio;                                    // 0x0108   (0x0004)  
	float                                              _repResourceUsageRateNormalized;                            // 0x010C   (0x0004)  


	/// Functions
	// Function /Script/ConZ.BasicGameResourceSlotItemComponent.OnRep_RepResourceAmountRatio
	void OnRep_RepResourceAmountRatio();                                                                                     // [0x2264d10] Final|Native|Private 
};

/// Class /Script/ConZ.EntityComponentSetup
/// Size: 0x0008 (0x000040 - 0x000048)
class UEntityComponentSetup : public UEntitySystemObjectSetup
{ 
public:
	float                                              BoundsRadius;                                               // 0x0040   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Class /Script/ConZ.BasicItemDecayEntityComponentSetup
/// Size: 0x0008 (0x000048 - 0x000050)
class UBasicItemDecayEntityComponentSetup : public UEntityComponentSetup
{ 
public:
	float                                              LifeTime;                                                   // 0x0048   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x004C   (0x0004)  MISSED
};

/// Class /Script/ConZ.BasicLadder
/// Size: 0x0028 (0x000220 - 0x000248)
class ABasicLadder : public AActor
{ 
public:
	UStaticMeshComponent*                              _mesh;                                                      // 0x0220   (0x0008)  
	TArray<FLadderMarker>                              _ladderMarkers;                                             // 0x0228   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0238   (0x0010)  MISSED
};

/// Class /Script/ConZ.ConZNotification
/// Size: 0x0008 (0x000028 - 0x000030)
class UConZNotification : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.BasicNotification
/// Size: 0x0000 (0x000030 - 0x000030)
class UBasicNotification : public UConZNotification
{ 
public:
};

/// Class /Script/ConZ.NotificationDescription
/// Size: 0x0018 (0x000028 - 0x000040)
class UNotificationDescription : public UObject
{ 
public:
	ENotificationTarget                                Target;                                                     // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0029   (0x0007)  MISSED
	FDbIntegerId                                       TargetUserProfileId;                                        // 0x0030   (0x0008)  
	bool                                               ShouldSendIfClientOffline;                                  // 0x0038   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0039   (0x0007)  MISSED
};

/// Class /Script/ConZ.BasicNotificationDescription
/// Size: 0x0038 (0x000040 - 0x000078)
class UBasicNotificationDescription : public UNotificationDescription
{ 
public:
	FText                                              Message;                                                    // 0x0040   (0x0018)  
	int32_t                                            FontSize;                                                   // 0x0058   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x005C   (0x0004)  MISSED
	UTexture2D*                                        Icon;                                                       // 0x0060   (0x0008)  
	int32_t                                            IconSize;                                                   // 0x0068   (0x0004)  
	float                                              Duration;                                                   // 0x006C   (0x0004)  
	bool                                               ping;                                                       // 0x0070   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0071   (0x0007)  MISSED
};

/// Class /Script/ConZ.BasicTextWidget
/// Size: 0x0008 (0x000260 - 0x000268)
class UBasicTextWidget : public UUserWidget
{ 
public:
	int32_t                                            MaxTextRows;                                                // 0x0260   (0x0004)  
	int32_t                                            MaxCharactersPerTextRow;                                    // 0x0264   (0x0004)  


	/// Functions
	// Function /Script/ConZ.BasicTextWidget.SetCurrentText
	void SetCurrentText(FText& Text);                                                                                        // [0x2859740] Event|Public|HasOutParms|BlueprintEvent 
};

/// Class /Script/ConZ.FueledHeatSource
/// Size: 0x01F8 (0x000028 - 0x000220)
class UFueledHeatSource : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	FHeatSourceParameters                              _heatSourceParams;                                          // 0x0030   (0x0024)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0054   (0x0004)  MISSED
	UStaticMeshComponent*                              _interactionHitComponent;                                   // 0x0058   (0x0008)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x0060   (0x0008)  MISSED
	UParticleSystemComponent*                          _fireParticlesComponent;                                    // 0x0068   (0x0008)  
	UNiagaraComponent*                                 _niagaraFireParticlesComponent;                             // 0x0070   (0x0008)  
	TArray<FParameterInt32>                            _particleParametersInt32;                                   // 0x0078   (0x0010)  
	TArray<FParameterFloat>                            _particleParametersFloat;                                   // 0x0088   (0x0010)  
	TArray<FParameterVector>                           _particleParametersVector;                                  // 0x0098   (0x0010)  
	TArray<FParameterVector4>                          _particleParametersVector4;                                 // 0x00A8   (0x0010)  
	UPointLightComponent*                              _fireLightComponent;                                        // 0x00B8   (0x0008)  
	float                                              _maxFireLightIntensity;                                     // 0x00C0   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x00C4   (0x0004)  MISSED
	UAkAudioEvent*                                     _startBurningAudioEvent;                                    // 0x00C8   (0x0008)  
	UAkAudioEvent*                                     _stopBurningAudioEvent;                                     // 0x00D0   (0x0008)  
	UAkComponent*                                      _fireAudioComponent;                                        // 0x00D8   (0x0008)  
	FTransform                                         _fireTransform;                                             // 0x00E0   (0x0030)  
	unsigned char                                      UnknownData04_5[0x8];                                       // 0x0110   (0x0008)  MISSED
	UStaticMeshComponent*                              _meshComponent;                                             // 0x0118   (0x0008)  
	TArray<UStaticMesh*>                               _swapMeshes;                                                // 0x0120   (0x0010)  
	int32_t                                            _materialSwitchIndex;                                       // 0x0130   (0x0004)  
	unsigned char                                      UnknownData05_5[0x4];                                       // 0x0134   (0x0004)  MISSED
	UMaterialInterface*                                _litMaterial;                                               // 0x0138   (0x0008)  
	UMaterialInterface*                                _unlitMaterial;                                             // 0x0140   (0x0008)  
	unsigned char                                      UnknownData06_5[0x8];                                       // 0x0148   (0x0008)  MISSED
	FTransform                                         _meshTransform;                                             // 0x0150   (0x0030)  
	unsigned char                                      UnknownData07_5[0x4];                                       // 0x0180   (0x0004)  MISSED
	float                                              _fireDamageProcessingPeriod;                                // 0x0184   (0x0004)  
	unsigned char                                      UnknownData08_5[0x4];                                       // 0x0188   (0x0004)  MISSED
	float                                              _fireBaseDamageToItemsPerSecond;                            // 0x018C   (0x0004)  
	uint16_t                                           _repTemperature;                                            // 0x0190   (0x0002)  
	unsigned char                                      UnknownData09_5[0x6];                                       // 0x0192   (0x0006)  MISSED
	char                                               _isAvailableForCooking;                                     // 0x0198   (0x0001)  
	unsigned char                                      UnknownData10_5[0xB];                                       // 0x0199   (0x000B)  MISSED
	float                                              _temperatureReplicationInterval;                            // 0x01A4   (0x0004)  
	unsigned char                                      UnknownData11_5[0x4];                                       // 0x01A8   (0x0004)  MISSED
	float                                              _temperatureReplicationRadius;                              // 0x01AC   (0x0004)  
	unsigned char                                      UnknownData12_6[0x70];                                      // 0x01B0   (0x0070)  MISSED


	/// Functions
	// Function /Script/ConZ.FueledHeatSource.OnRep_Temperature
	void OnRep_Temperature();                                                                                                // [0x22dff40] Final|Native|Private 
};

/// Class /Script/ConZ.BatchFuelHeatSource
/// Size: 0x0040 (0x000220 - 0x000260)
class UBatchFuelHeatSource : public UFueledHeatSource
{ 
public:
	float                                              _fuelMassCapacity;                                          // 0x0220   (0x0004)  
	FCombustibleItemParams                             _initialFuelCombustionParams;                               // 0x0224   (0x0008)  
	float                                              _initialFuelMass;                                           // 0x022C   (0x0004)  
	float                                              _temperatureMultiplierRain;                                 // 0x0230   (0x0004)  
	EBlowAirAnimHeight                                 _heightForBlowAirAnimation;                                 // 0x0234   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0235   (0x0003)  MISSED
	float                                              _distanceForBlowAirAnimation;                               // 0x0238   (0x0004)  
	bool                                               _isBurning;                                                 // 0x023C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x023D   (0x0003)  MISSED
	int32_t                                            _burningStage;                                              // 0x0240   (0x0004)  
	float                                              _repFuelMass;                                               // 0x0244   (0x0004)  
	unsigned char                                      UnknownData02_6[0x18];                                      // 0x0248   (0x0018)  MISSED


	/// Functions
	// Function /Script/ConZ.BatchFuelHeatSource.OnRep_IsBurning
	void OnRep_IsBurning();                                                                                                  // [0x2264cf0] Final|Native|Private 
	// Function /Script/ConZ.BatchFuelHeatSource.OnRep_BurningStage
	void OnRep_BurningStage();                                                                                               // [0x2264cb0] Final|Native|Private 
};

/// Class /Script/ConZ.EquipmentItem
/// Size: 0x0020 (0x000910 - 0x000930)
class AEquipmentItem : public AItem
{ 
public:
	uint32_t                                           MinRange;                                                   // 0x0910   (0x0004)  
	uint32_t                                           MaxRange;                                                   // 0x0914   (0x0004)  
	uint32_t                                           MinDamage;                                                  // 0x0918   (0x0004)  
	uint32_t                                           MaxDamage;                                                  // 0x091C   (0x0004)  
	uint32_t                                           AP;                                                         // 0x0920   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x0924   (0x000C)  MISSED
};

/// Class /Script/ConZ.BatteryChargerItem
/// Size: 0x0020 (0x000930 - 0x000950)
class ABatteryChargerItem : public AEquipmentItem
{ 
public:
	UInventoryContainer2D*                             _inventoryContainer2D;                                      // 0x0928   (0x0008)  
	URangedResourceConsumerComponentMultipleProviders* _rangedResourceConsumerComponent;                           // 0x0930   (0x0008)  
	uint32_t                                           _capacityX;                                                 // 0x0938   (0x0004)  
	uint32_t                                           _capacityY;                                                 // 0x093C   (0x0004)  
	float                                              _chargingRate;                                              // 0x0940   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x0944   (0x000C)  MISSED


	/// Functions
	// Function /Script/ConZ.BatteryChargerItem.OnRangedResourceConsumerComponentDeactivated
	void OnRangedResourceConsumerComponentDeactivated(UActorComponent* Component);                                           // [0x2264c20] Final|Native|Private 
};

/// Class /Script/ConZ.GameResourceContainerEntityComponentSave
/// Size: 0x0018 (0x000028 - 0x000040)
class UGameResourceContainerEntityComponentSave : public UObject
{ 
public:
	UClass*                                            ResourceType;                                               // 0x0028   (0x0008)  
	float                                              ResourceAmount;                                             // 0x0030   (0x0004)  
	float                                              MaxResourceAmount;                                          // 0x0034   (0x0004)  
	float                                              ResourceUsageRate;                                          // 0x0038   (0x0004)  
	bool                                               ResourceUsageEnabled;                                       // 0x003C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x003D   (0x0003)  MISSED
};

/// Class /Script/ConZ.BatteryEntityComponentSave
/// Size: 0x0000 (0x000040 - 0x000040)
class UBatteryEntityComponentSave : public UGameResourceContainerEntityComponentSave
{ 
public:
};

/// Class /Script/ConZ.GameResourceContainerEntityComponentSetup
/// Size: 0x0028 (0x000048 - 0x000070)
class UGameResourceContainerEntityComponentSetup : public UEntityComponentSetup
{ 
public:
	UClass*                                            AcceptedResourceType;                                       // 0x0048   (0x0008)  
	UClass*                                            DefaultResourceType;                                        // 0x0050   (0x0008)  
	float                                              MaxResourceAmount;                                          // 0x0058   (0x0004)  
	float                                              ResourceAmount;                                             // 0x005C   (0x0004)  
	float                                              ResourceUsageRate;                                          // 0x0060   (0x0004)  
	float                                              MinTickInterval;                                            // 0x0064   (0x0004)  
	float                                              MinResourceAmountRatioChangeToTick;                         // 0x0068   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x006C   (0x0004)  MISSED
};

/// Class /Script/ConZ.BatteryEntityComponentSetup
/// Size: 0x0010 (0x000070 - 0x000080)
class UBatteryEntityComponentSetup : public UGameResourceContainerEntityComponentSetup
{ 
public:
	float                                              Voltage;                                                    // 0x0070   (0x0004)  
	float                                              BaseDrainRate;                                              // 0x0074   (0x0004)  
	bool                                               IsRechargeable;                                             // 0x0078   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0079   (0x0007)  MISSED
};

/// Class /Script/ConZ.BatteryItemComponent
/// Size: 0x0008 (0x0001E8 - 0x0001F0)
class UBatteryItemComponent : public UBasicGameResourceContainerComponent
{ 
public:
	float                                              _repResourceUsageRate;                                      // 0x01E8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x01EC   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.BatteryItemComponent.OnRep_ResourceUsageRate
	void OnRep_ResourceUsageRate();                                                                                          // [0x2264d50] Final|Native|Private 
};

/// Class /Script/ConZ.BCULockable
/// Size: 0x0000 (0x000028 - 0x000028)
class UBCULockable : public UInterface
{ 
public:
};

/// Class /Script/ConZ.BCULockItem
/// Size: 0x0010 (0x000910 - 0x000920)
class ABCULockItem : public AItem
{ 
public:
	UBasicGameResourceSlotItemComponent*               _batterySlot;                                               // 0x0910   (0x0008)  
	FDbIntegerId                                       _connectedServerUserProfileId;                              // 0x0918   (0x0008)  


	/// Functions
	// Function /Script/ConZ.BCULockItem.OnResourceObjectDeactivated
	void OnResourceObjectDeactivated(UActorComponent* containerComponent);                                                   // [0x2264d90] Final|Native|Private 
	// Function /Script/ConZ.BCULockItem.OnRep_ConnectionPrisonerId
	void OnRep_ConnectionPrisonerId();                                                                                       // [0x2264cd0] Final|Native|Private 
};

/// Class /Script/ConZ.BCULockRegistry
/// Size: 0x0088 (0x000220 - 0x0002A8)
class ABCULockRegistry : public AActor
{ 
public:
	unsigned char                                      UnknownData00_1[0x88];                                      // 0x0220   (0x0088)  MISSED
};

/// Class /Script/ConZ.BCUMemoryModuleItem
/// Size: 0x0060 (0x000910 - 0x000970)
class ABCUMemoryModuleItem : public AItem
{ 
public:
	float                                              _intelligenceReward;                                        // 0x0910   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0914   (0x0004)  MISSED
	UAkAudioEvent*                                     _upgradeStartAudio;                                         // 0x0918   (0x0008)  
	UAkAudioEvent*                                     _upgradeStopAudio;                                          // 0x0920   (0x0008)  
	UAkAudioEvent*                                     _upgradeSuccessAudio;                                       // 0x0928   (0x0008)  
	UAkAudioEvent*                                     _upgradeFailureAudio;                                       // 0x0930   (0x0008)  
	float                                              _upgradeActionDuration;                                     // 0x0938   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x093C   (0x0004)  MISSED
	TWeakObjectPtr<UClass*>                            _tradeableServiceClass;                                     // 0x0940   (0x0028)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0968   (0x0008)  MISSED
};

/// Class /Script/ConZ.TraderService
/// Size: 0x0010 (0x000028 - 0x000038)
class UTraderService : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	UTexture2D*                                        _storeIcon;                                                 // 0x0030   (0x0008)  
};

/// Class /Script/ConZ.BCUUpgradeService
/// Size: 0x0000 (0x000038 - 0x000038)
class UBCUUpgradeService : public UTraderService
{ 
public:
};

/// Class /Script/ConZ.VirtualizedItemUserData
/// Size: 0x0000 (0x000028 - 0x000028)
class UVirtualizedItemUserData : public UObject
{ 
public:
};

/// Class /Script/ConZ.BedrollVirtualizedItemUserData
/// Size: 0x0020 (0x000028 - 0x000048)
class UBedrollVirtualizedItemUserData : public UVirtualizedItemUserData
{ 
public:
	FDbIntegerId                                       Occupant;                                                   // 0x0028   (0x0008)  
	FDateTime                                          TimerStart;                                                 // 0x0030   (0x0008)  
	FTimespan                                          TimerDuration;                                              // 0x0038   (0x0008)  
	bool                                               ShouldLoad;                                                 // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0041   (0x0007)  MISSED
};

/// Class /Script/ConZ.ClothesItem
/// Size: 0x00B0 (0x000910 - 0x0009C0)
class AClothesItem : public AItem
{ 
public:
	UInventoryItemComponent*                           _inventoryComponent;                                        // 0x0910   (0x0008)  
	UCharacterMesh*                                    _characterMesh;                                             // 0x0918   (0x0008)  
	uint32_t                                           _warmth;                                                    // 0x0920   (0x0004)  
	uint32_t                                           _waterResistance;                                           // 0x0924   (0x0004)  
	float                                              _inwardsWaterPropagationFactor;                             // 0x0928   (0x0004)  
	float                                              _outwardsWaterPropagationFactor;                            // 0x092C   (0x0004)  
	float                                              _camouflageBonus;                                           // 0x0930   (0x0004)  
	float                                              _damageWhenEquipped;                                        // 0x0934   (0x0004)  
	float                                              _dirtinessWhenEquipped;                                     // 0x0938   (0x0004)  
	float                                              _thermalConductivityFactor;                                 // 0x093C   (0x0004)  
	float                                              _burnDamageResistanceFactor;                                // 0x0940   (0x0004)  
	bool                                               _overrideTemperatureResistanceThreshold;                    // 0x0944   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0945   (0x0003)  MISSED
	float                                              _temperatureResistanceThreshold;                            // 0x0948   (0x0004)  
	bool                                               _canBeEquipped;                                             // 0x094C   (0x0001)  
	EPrisonerMovementPace                              _maxPaceWhenEquipped;                                       // 0x094D   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x094E   (0x0002)  MISSED
	float                                              _dirtiness;                                                 // 0x0950   (0x0004)  
	float                                              _baseBodyPartMultiplier;                                    // 0x0954   (0x0004)  
	float                                              _baseBodyPartMultiplierWhileProne;                          // 0x0958   (0x0004)  
	float                                              _smallMaterialDamageLimit;                                  // 0x095C   (0x0004)  
	float                                              _bigMaterialDamageLimit;                                    // 0x0960   (0x0004)  
	float                                              _maxFemaleHairLength;                                       // 0x0964   (0x0004)  
	float                                              _maxMaleHairLength;                                         // 0x0968   (0x0004)  
	float                                              _maxFacialHairLength;                                       // 0x096C   (0x0004)  
	float                                              _bellyJiggleMultiplier;                                     // 0x0970   (0x0004)  
	float                                              _breastJiggleMultiplier;                                    // 0x0974   (0x0004)  
	uint32_t                                           _armor;                                                     // 0x0978   (0x0004)  
	float                                              _hardness;                                                  // 0x097C   (0x0004)  
	float                                              _projectileHitEnergyAbsorption;                             // 0x0980   (0x0004)  
	float                                              _projectileHitEnergyDamagedAbsorption;                      // 0x0984   (0x0004)  
	float                                              _energyThroughputRatio;                                     // 0x0988   (0x0004)  
	float                                              _totalEnergyAbsorption;                                     // 0x098C   (0x0004)  
	float                                              _sharpMeleeDamageReduction;                                 // 0x0990   (0x0004)  
	float                                              _bluntMeleeDamageReduction;                                 // 0x0994   (0x0004)  
	uint32_t                                           _capacityX;                                                 // 0x0998   (0x0004)  
	uint32_t                                           _capacityY;                                                 // 0x099C   (0x0004)  
	unsigned char                                      UnknownData02_5[0x1];                                       // 0x09A0   (0x0001)  MISSED
	char                                               _materialParametersReplicated;                              // 0x09A1   (0x0001)  
	unsigned char                                      UnknownData03_5[0xE];                                       // 0x09A2   (0x000E)  MISSED
	UInventoryContainer2D*                             _inventoryContainer2D;                                      // 0x09B0   (0x0008)  
	unsigned char                                      UnknownData04_6[0x8];                                       // 0x09B8   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.ClothesItem.UpdateMaterialParamsOnClients
	void UpdateMaterialParamsOnClients();                                                                                    // [0x22853d0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.ClothesItem.SetDirtiness
	void SetDirtiness(float dirtiness);                                                                                      // [0x2285250] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ClothesItem.OnRep_MaterialParameters
	void OnRep_MaterialParameters();                                                                                         // [0x2285230] Final|Native|Protected 
	// Function /Script/ConZ.ClothesItem.GetWarmth
	int32_t GetWarmth();                                                                                                     // [0x2284e50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ClothesItem.GetCapacityY
	int32_t GetCapacityY();                                                                                                  // [0x2284c50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ClothesItem.GetCapacityX
	int32_t GetCapacityX();                                                                                                  // [0x2284c20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.Bedroll
/// Size: 0x0060 (0x0009C0 - 0x000A20)
class ABedroll : public AClothesItem
{ 
public:
	FDbIntegerId                                       _occupiedUserProfileId;                                     // 0x09C0   (0x0008)  
	bool                                               _occupantOnline;                                            // 0x09C8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x09C9   (0x0007)  MISSED
	UStaticMesh*                                       _meshInHands;                                               // 0x09D0   (0x0008)  
	UMaterialInterface*                                _materialInHands;                                           // 0x09D8   (0x0008)  
	UStaticMesh*                                       _meshOnGround;                                              // 0x09E0   (0x0008)  
	UMaterialInterface*                                _materialOnGround;                                          // 0x09E8   (0x0008)  
	float                                              _maxRestHeight;                                             // 0x09F0   (0x0004)  
	float                                              _damageOverTimeWhenOccupied;                                // 0x09F4   (0x0004)  
	float                                              _autoDestructTimeWhenOccupied;                              // 0x09F8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x24];                                      // 0x09FC   (0x0024)  MISSED


	/// Functions
	// Function /Script/ConZ.Bedroll.VirtualizeTimerCallback
	void VirtualizeTimerCallback();                                                                                          // [0x2265090] Final|Native|Private 
	// Function /Script/ConZ.Bedroll.SetOccupantOfflineTimerCallback
	void SetOccupantOfflineTimerCallback();                                                                                  // [0x2264f40] Final|Native|Private 
	// Function /Script/ConZ.Bedroll.OnUserLogout
	void OnUserLogout(FDbIntegerId UserId);                                                                                  // [0x2264eb0] Native|Protected     
	// Function /Script/ConZ.Bedroll.OnUserLogin
	void OnUserLogin(FDbIntegerId UserId);                                                                                   // [0x2264e20] Native|Protected     
	// Function /Script/ConZ.Bedroll.OnOccupantRemoved
	void OnOccupantRemoved();                                                                                                // [0x2264c00] Native|Protected     
	// Function /Script/ConZ.Bedroll.Multicast_SetVisuals
	void Multicast_SetVisuals(UStaticMesh* StaticMesh, UMaterialInterface* Material);                                        // [0x2264b30] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/ConZ.BioChemSkill
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UBioChemSkill : public UIntelligenceSkill
{ 
public:
};

/// Class /Script/ConZ.Biome
/// Size: 0x0050 (0x000220 - 0x000270)
class ABiome : public AActor
{ 
public:
	USceneComponent*                                   _root;                                                      // 0x0220   (0x0008)  
	UStaticMeshComponent*                              _visualizationSphere;                                       // 0x0228   (0x0008)  
	float                                              _radius;                                                    // 0x0230   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0234   (0x0004)  MISSED
	FHuntingBiomeParameters                            _parameters;                                                // 0x0238   (0x0038)  
};

/// Class /Script/ConZ.BiomeData
/// Size: 0x0058 (0x000030 - 0x000088)
class UBiomeData : public UDataAsset
{ 
public:
	UMaterialInstance*                                 VisualizationMaterial;                                      // 0x0030   (0x0008)  
	TMap<TWeakObjectPtr, FAnimalSpawnData>             AnimalSpawnData;                                            // 0x0038   (0x0050)  
};

/// Class /Script/ConZ.Bird2
/// Size: 0x0030 (0x000990 - 0x0009C0)
class ABird2 : public AAnimal2
{ 
public:
	bool                                               IsStaringPerched;                                           // 0x0988   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0989   (0x0003)  MISSED
	float                                              MinFlightAltitude;                                          // 0x098C   (0x0004)  
	float                                              MaxFlightAltitude;                                          // 0x0990   (0x0004)  
	bool                                               _isLanding;                                                 // 0x0994   (0x0001)  
	bool                                               _isTakingOff;                                               // 0x0995   (0x0001)  
	bool                                               _isPerched;                                                 // 0x0996   (0x0001)  
	bool                                               _isFlying;                                                  // 0x0997   (0x0001)  
	TArray<bool>                                       _states;                                                    // 0x0998   (0x0010)  
	char                                               _repStates;                                                 // 0x09A8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x17];                                      // 0x09A9   (0x0017)  MISSED


	/// Functions
	// Function /Script/ConZ.Bird2.OnRep_States
	void OnRep_States();                                                                                                     // [0x2264d70] Native|Protected     
	// Function /Script/ConZ.Bird2.GetIsTakingOff
	bool GetIsTakingOff();                                                                                                   // [0x2264b00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Bird2.GetIsStaringPerched
	bool GetIsStaringPerched();                                                                                              // [0x2264ad0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Bird2.GetIsPerched
	bool GetIsPerched();                                                                                                     // [0x2264aa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Bird2.GetIsLanding
	bool GetIsLanding();                                                                                                     // [0x2264a70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Bird2.GetIsFlying
	bool GetIsFlying();                                                                                                      // [0x2264a40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Bird2.CapsuleComponent_OnComponentHit
	void CapsuleComponent_OnComponentHit(UPrimitiveComponent* HitComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, FVector NormalImpulse, FHitResult& Hit); // [0x2264710] Final|Native|Public|HasOutParms|HasDefaults 
};

/// Class /Script/ConZ.Bird2AIController
/// Size: 0x0058 (0x000328 - 0x000380)
class ABird2AIController : public AAIController
{ 
public:
	float                                              FlyDurationMin;                                             // 0x0328   (0x0004)  
	float                                              FlyDurationMax;                                             // 0x032C   (0x0004)  
	float                                              RemainOnGroundDurationMin;                                  // 0x0330   (0x0004)  
	float                                              RemainOnGroundDurationMax;                                  // 0x0334   (0x0004)  
	float                                              TurnSpeed;                                                  // 0x0338   (0x0004)  
	float                                              FlightSegmentDistance;                                      // 0x033C   (0x0004)  
	float                                              LandingDistance;                                            // 0x0340   (0x0004)  
	unsigned char                                      UnknownData00_6[0x3C];                                      // 0x0344   (0x003C)  MISSED


	/// Functions
	// Function /Script/ConZ.Bird2AIController.UpdatePerception
	void UpdatePerception(TArray<AActor*>& actorsPercepted);                                                                 // [0x2264fe0] Final|Native|Private|HasOutParms 
};

/// Class /Script/ConZ.Bird2AnimInstance
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UBird2AnimInstance : public UAnimInstance
{ 
public:
	float                                              ABPSpeed;                                                   // 0x02B8   (0x0004)  
	bool                                               IsLanding;                                                  // 0x02BC   (0x0001)  
	bool                                               IsTakingOff;                                                // 0x02BD   (0x0001)  
	bool                                               IsPerched;                                                  // 0x02BE   (0x0001)  
	bool                                               IsFlying;                                                   // 0x02BF   (0x0001)  
	bool                                               IsStaringPerched;                                           // 0x02C0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x02C1   (0x0003)  MISSED
	FRotator                                           SlopeRootTiltRotation;                                      // 0x02C4   (0x000C)  
};

/// Class /Script/ConZ.BirdTargetPoint
/// Size: 0x0008 (0x000220 - 0x000228)
class ABirdTargetPoint : public AActor
{ 
public:
	bool                                               IsOccupied;                                                 // 0x0220   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0221   (0x0007)  MISSED
};

/// Class /Script/ConZ.BloodStain
/// Size: 0x0098 (0x000220 - 0x0002B8)
class ABloodStain : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0220   (0x0008)  MISSED
	UStaticMeshComponent*                              _mesh;                                                      // 0x0228   (0x0008)  
	FText                                              _name;                                                      // 0x0230   (0x0018)  
	FText                                              _sampleExtractionText;                                      // 0x0248   (0x0018)  
	UClass*                                            _sampleExtractionTool;                                      // 0x0260   (0x0008)  
	UClass*                                            _sampleExtractionProduct;                                   // 0x0268   (0x0008)  
	UAnimMontage*                                      _sampleExtractionMontage;                                   // 0x0270   (0x0008)  
	UAkAudioEvent*                                     _sampleExtractionStartAudioEvent;                           // 0x0278   (0x0008)  
	UAkAudioEvent*                                     _sampleExtractionStopAudioEvent;                            // 0x0280   (0x0008)  
	float                                              _sampleExtractionBaseDuration;                              // 0x0288   (0x0004)  
	bool                                               _isSampleBeingExtracted;                                    // 0x028C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x13];                                      // 0x028D   (0x0013)  MISSED
	float                                              _timeBeforeDecayStarts;                                     // 0x02A0   (0x0004)  
	float                                              _decayDuration;                                             // 0x02A4   (0x0004)  
	float                                              _fallThroughGroundRateWhenDecaying;                         // 0x02A8   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x02AC   (0x0004)  MISSED
	bool                                               _isDecaying;                                                // 0x02B0   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x02B1   (0x0007)  MISSED
};

/// Class /Script/ConZ.BluntMeleeWeaponItemTag
/// Size: 0x0000 (0x000030 - 0x000030)
class UBluntMeleeWeaponItemTag : public UBaseItemTag
{ 
public:
};

/// Class /Script/ConZ.Boat
/// Size: 0x07F0 (0x000B30 - 0x001320)
class ABoat : public AVehicleBase
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0B30   (0x0008)  MISSED
	UAdvancedBuoyancyComponent*                        _advancedBuoyancyComponent;                                 // 0x0B38   (0x0008)  
	UConZBuoyancyComponent*                            _buoyancyComponent;                                         // 0x0B40   (0x0008)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x0B48   (0x0010)  MISSED
	UParticleSystem*                                   _waterSplashParticleSystem;                                 // 0x0B58   (0x0008)  
	TArray<FVector>                                    _particleLocations;                                         // 0x0B60   (0x0010)  
	unsigned char                                      UnknownData02_5[0xC];                                       // 0x0B70   (0x000C)  MISSED
	float                                              _throttleForceMagnitude;                                    // 0x0B7C   (0x0004)  
	FVector                                            _forcePosition;                                             // 0x0B80   (0x000C)  
	float                                              _yawImpulse;                                                // 0x0B8C   (0x0004)  
	float                                              _rollImpulse;                                               // 0x0B90   (0x0004)  
	float                                              _pitchImpulse;                                              // 0x0B94   (0x0004)  
	bool                                               _isAnchored;                                                // 0x0B98   (0x0001)  
	unsigned char                                      UnknownData03_5[0x7];                                       // 0x0B99   (0x0007)  MISSED
	FRuntimeFloatCurve                                 _driverActionDifficultyVsSpeed;                             // 0x0BA0   (0x0088)  
	FRuntimeFloatCurve                                 _driverConstitutionChangeRateModifierVsSpeed;               // 0x0C28   (0x0088)  
	FRuntimeFloatCurve                                 _driverStrengthChangeRateModifierVsSpeed;                   // 0x0CB0   (0x0088)  
	FBoatParametersPerMovementPace                     _parametersPerMovementPace;                                 // 0x0D38   (0x0060)  
	FFloatInterval                                     _maxSpeedModifierInterpedWithDriverDexterity;               // 0x0D98   (0x0008)  
	float                                              _throttleInterpSpeed;                                       // 0x0DA0   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x0DA4   (0x0004)  MISSED
	float                                              _brakeInterpSpeed;                                          // 0x0DA8   (0x0004)  
	unsigned char                                      UnknownData05_5[0x4];                                       // 0x0DAC   (0x0004)  MISSED
	float                                              _steerInterpSpeed;                                          // 0x0DB0   (0x0004)  
	unsigned char                                      UnknownData06_5[0x4];                                       // 0x0DB4   (0x0004)  MISSED
	float                                              _maxSteeringAngle;                                          // 0x0DB8   (0x0004)  
	float                                              _motorSteeringForce;                                        // 0x0DBC   (0x0004)  
	float                                              _motorSteerTurnMultiplier;                                  // 0x0DC0   (0x0004)  
	float                                              _maxSpeedForBase;                                           // 0x0DC4   (0x0004)  
	FRuntimeFloatCurve                                 _rudderEfficiencyBySpeedKmH;                                // 0x0DC8   (0x0088)  
	FRuntimeFloatCurve                                 _sidewaysVelocityFalloff;                                   // 0x0E50   (0x0088)  
	FRuntimeFloatCurve                                 _speedKmhVsDensityMultiplier;                               // 0x0ED8   (0x0088)  
	float                                              _maxMotorSpeed;                                             // 0x0F60   (0x0004)  
	float                                              _throttleToRpmMultiplier;                                   // 0x0F64   (0x0004)  
	unsigned char                                      UnknownData07_5[0x10];                                      // 0x0F68   (0x0010)  MISSED
	bool                                               _isPaddleInLeftHand;                                        // 0x0F78   (0x0001)  
	unsigned char                                      UnknownData08_5[0x3];                                       // 0x0F79   (0x0003)  MISSED
	float                                              _maxRowingSpeed;                                            // 0x0F7C   (0x0004)  
	UClass*                                            itemNeededClassToStartRowing;                               // 0x0F80   (0x0008)  
	float                                              _rowingForce;                                               // 0x0F88   (0x0004)  
	unsigned char                                      UnknownData09_5[0x4];                                       // 0x0F8C   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _rowForceMultiplierPerKph;                                  // 0x0F90   (0x0088)  
	float                                              _rowTurnMultiplier;                                         // 0x1018   (0x0004)  
	unsigned char                                      UnknownData10_5[0x4];                                       // 0x101C   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _rowTurnMultiplierPerKph;                                   // 0x1020   (0x0088)  
	UAkAudioEvent*                                     _rowingAudioEvent;                                          // 0x10A8   (0x0008)  
	float                                              _desiredDriftMultiplier;                                    // 0x10B0   (0x0004)  
	float                                              _paddleDriftSteerMultiplier;                                // 0x10B4   (0x0004)  
	uint32_t                                           _numPaddleSwingsInOneHand;                                  // 0x10B8   (0x0004)  
	bool                                               _hasSails;                                                  // 0x10BC   (0x0001)  
	unsigned char                                      UnknownData11_5[0x3];                                       // 0x10BD   (0x0003)  MISSED
	float                                              _sailingForceMultiplier;                                    // 0x10C0   (0x0004)  
	unsigned char                                      UnknownData12_5[0x4];                                       // 0x10C4   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _sailingForceMultiplierPerKph;                              // 0x10C8   (0x0088)  
	float                                              _sailingTurnMultiplier;                                     // 0x1150   (0x0004)  
	unsigned char                                      UnknownData13_5[0x4];                                       // 0x1154   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _sailingTurnMultiplierPerKph;                               // 0x1158   (0x0088)  
	UAkAudioEvent*                                     _sailingRudderStartAudioEvent;                              // 0x11E0   (0x0008)  
	UAkAudioEvent*                                     _sailingRudderEndAudioEvent;                                // 0x11E8   (0x0008)  
	int32_t                                            _sailsDeploySteps;                                          // 0x11F0   (0x0004)  
	float                                              _sailsDeploySpeedMultiplier;                                // 0x11F4   (0x0004)  
	uint32_t                                           _sailsTurnSteps;                                            // 0x11F8   (0x0004)  
	float                                              _sailsTurnSpeedMultiplier;                                  // 0x11FC   (0x0004)  
	float                                              _sailsMaxTurnAngle;                                         // 0x1200   (0x0004)  
	float                                              _maxSailingSpeed;                                           // 0x1204   (0x0004)  
	FRuntimeFloatCurve                                 _sailsDeploymentRatioVsForceMultiplier;                     // 0x1208   (0x0088)  
	float                                              _sailingSteerSoundMultiplier;                               // 0x1290   (0x0004)  
	unsigned char                                      UnknownData14_5[0x20];                                      // 0x1294   (0x0020)  MISSED
	EBoatSDFType                                       _sdfType;                                                   // 0x12B4   (0x0004)  
	UParticleSystemComponent*                          _LOarWaterParticles;                                        // 0x12B8   (0x0008)  
	UParticleSystemComponent*                          _ROarWaterParticles;                                        // 0x12C0   (0x0008)  
	unsigned char                                      UnknownData15_6[0x58];                                      // 0x12C8   (0x0058)  MISSED
};

/// Class /Script/ConZ.VehicleBaseMountSlot
/// Size: 0x0118 (0x000028 - 0x000140)
class UVehicleBaseMountSlot : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	UVehicleAttachment*                                AttachmentOwner;                                            // 0x0030   (0x0008)  
	FName                                              MountSocketName;                                            // 0x0038   (0x0008)  
	FName                                              MountedCollisionShapeName;                                  // 0x0040   (0x0008)  
	EVehicleMountType                                  Type;                                                       // 0x0048   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0049   (0x0007)  MISSED
	UPhysicalMaterial*                                 InteractionMaterial;                                        // 0x0050   (0x0008)  
	UClass*                                            MountedAnimInstanceClass;                                   // 0x0058   (0x0008)  
	UAnimSequenceBase*                                 MountedAnimation;                                           // 0x0060   (0x0008)  
	UBlendSpace*                                       MountedBlendspace;                                          // 0x0068   (0x0008)  
	FPrisonerRestingParameters                         DefaultPrisonerRestingParameters;                           // 0x0070   (0x0060)  
	FGameplayTag                                       SlotId;                                                     // 0x00D0   (0x0008)  
	UObject*                                           _mountee;                                                   // 0x00D8   (0x0008)  
	UObject*                                           _reservee;                                                  // 0x00E0   (0x0008)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x00E8   (0x0008)  MISSED
	UClass*                                            _weaponAimingParametersClass;                               // 0x00F0   (0x0008)  
	float                                              _forceUnmountAngle;                                         // 0x00F8   (0x0004)  
	bool                                               _isReachableFromSky;                                        // 0x00FC   (0x0001)  
	bool                                               _shouldHideAttachedItems;                                   // 0x00FD   (0x0001)  
	unsigned char                                      UnknownData03_5[0x2];                                       // 0x00FE   (0x0002)  MISSED
	FVector                                            _prisonerViewpointOffset;                                   // 0x0100   (0x000C)  
	FVector                                            _prisonerFeetOffset;                                        // 0x010C   (0x000C)  
	TArray<UExternalMountPath*>                        _externalMountPaths;                                        // 0x0118   (0x0010)  
	TArray<UInternalMountPath*>                        _internalMountPaths;                                        // 0x0128   (0x0010)  
	unsigned char                                      UnknownData04_6[0x8];                                       // 0x0138   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.VehicleBaseMountSlot.OnRep_AttachmentOwner
	void OnRep_AttachmentOwner(UVehicleAttachment* oldAttachmentOwner);                                                      // [0x23fe3b0] Final|Native|Private 
};

/// Class /Script/ConZ.BoatMountSlot
/// Size: 0x0050 (0x000140 - 0x000190)
class UBoatMountSlot : public UVehicleBaseMountSlot
{ 
public:
	EBoatControlType                                   _controlType;                                               // 0x0140   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0141   (0x0007)  MISSED
	UBlendSpace*                                       _paddlingLHandAnimation;                                    // 0x0148   (0x0008)  
	UBlendSpace*                                       _paddlingRHandAnimation;                                    // 0x0150   (0x0008)  
	UAnimSequence*                                     _paddlingLToRAnimation;                                     // 0x0158   (0x0008)  
	UAnimSequence*                                     _paddlingRToLAnimation;                                     // 0x0160   (0x0008)  
	UAnimSequence*                                     _startEngineStartAnimation;                                 // 0x0168   (0x0008)  
	UAnimSequence*                                     _startEngineLoopAnimation;                                  // 0x0170   (0x0008)  
	UAnimSequence*                                     _startEngineLongLoopAnimation;                              // 0x0178   (0x0008)  
	UAnimSequence*                                     _startEngineEndAnimation;                                   // 0x0180   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0188   (0x0008)  MISSED
};

/// Class /Script/ConZ.BombDefusalMinigameBase
/// Size: 0x01F0 (0x0002F8 - 0x0004E8)
class ABombDefusalMinigameBase : public AMinigame
{ 
public:
	UStaticMeshComponent*                              _timeBomb;                                                  // 0x02F8   (0x0008)  
	UStaticMesh*                                       _splineConnectorMesh;                                       // 0x0300   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0308   (0x0008)  MISSED
	FVector                                            _wireButtonsSize;                                           // 0x0310   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x031C   (0x0004)  MISSED
	USkeletalMeshComponent*                            _defusalTool;                                               // 0x0320   (0x0008)  
	float                                              _toolMovementSensitivity;                                   // 0x0328   (0x0004)  
	FVector                                            _minDefusingToolOffsetFromCenter;                           // 0x032C   (0x000C)  
	FVector                                            _maxDefusingToolOffsetFromCenter;                           // 0x0338   (0x000C)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0344   (0x0004)  MISSED
	UMaterialInterface*                                _greenLedLight;                                             // 0x0348   (0x0008)  
	UMaterialInterface*                                _redLedLight;                                               // 0x0350   (0x0008)  
	UMaterialInterface*                                _yellowLedLight;                                            // 0x0358   (0x0008)  
	TArray<UStaticMeshComponent*>                      _ledLights;                                                 // 0x0360   (0x0010)  
	UStaticMesh*                                       _ledLightMesh;                                              // 0x0370   (0x0008)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x0378   (0x0008)  MISSED
	UStaticMesh*                                       _wireMesh;                                                  // 0x0380   (0x0008)  
	TArray<EWireType>                                  _wiresEndPositions;                                         // 0x0388   (0x0010)  
	TArray<FWireDescription>                           _wires;                                                     // 0x0398   (0x0010)  
	unsigned char                                      UnknownData04_5[0x10];                                      // 0x03A8   (0x0010)  MISSED
	TArray<FSplineDescription>                         _splines;                                                   // 0x03B8   (0x0010)  
	unsigned char                                      UnknownData05_5[0x10];                                      // 0x03C8   (0x0010)  MISSED
	int32_t                                            _numberOfWires;                                             // 0x03D8   (0x0004)  
	int32_t                                            _numberOfWirePoints;                                        // 0x03DC   (0x0004)  
	int32_t                                            _wiresShuffleIntensity;                                     // 0x03E0   (0x0004)  
	int32_t                                            _minWiresComplexity;                                        // 0x03E4   (0x0004)  
	ESplineAxis                                        _wiresForwardAxis;                                          // 0x03E8   (0x0001)  
	unsigned char                                      UnknownData06_5[0x3];                                       // 0x03E9   (0x0003)  MISSED
	float                                              _wiresStartSmoothness;                                      // 0x03EC   (0x0004)  
	float                                              _wiresEndSmoothness;                                        // 0x03F0   (0x0004)  
	float                                              _wiresMiddleSmoothness;                                     // 0x03F4   (0x0004)  
	float                                              _wiresSharpCornerSmoothness;                                // 0x03F8   (0x0004)  
	float                                              _maxSegmentSize;                                            // 0x03FC   (0x0004)  
	float                                              _wirePointsSpreadPositive;                                  // 0x0400   (0x0004)  
	float                                              _wirePointsSpreadNegative;                                  // 0x0404   (0x0004)  
	float                                              _wireHeight;                                                // 0x0408   (0x0004)  
	float                                              _wireVerticalSpacing;                                       // 0x040C   (0x0004)  
	FVector                                            _wirePointsOffset;                                          // 0x0410   (0x000C)  
	float                                              _wireEndOffset;                                             // 0x041C   (0x0004)  
	FVector                                            _additionalWireEndPointOffset;                              // 0x0420   (0x000C)  
	unsigned char                                      UnknownData07_5[0x4];                                       // 0x042C   (0x0004)  MISSED
	UStaticMeshComponent*                              _cutWireSegment0;                                           // 0x0430   (0x0008)  
	UStaticMeshComponent*                              _cutWireSegment1;                                           // 0x0438   (0x0008)  
	UStaticMeshComponent*                              _cutWireSegment2;                                           // 0x0440   (0x0008)  
	UStaticMeshComponent*                              _cutWireSegment3;                                           // 0x0448   (0x0008)  
	UStaticMeshComponent*                              _cutWireSegment4;                                           // 0x0450   (0x0008)  
	UStaticMeshComponent*                              _cutWireSegment5;                                           // 0x0458   (0x0008)  
	UStaticMeshComponent*                              _uncutWireSegment0;                                         // 0x0460   (0x0008)  
	UStaticMeshComponent*                              _uncutWireSegment1;                                         // 0x0468   (0x0008)  
	UStaticMeshComponent*                              _uncutWireSegment2;                                         // 0x0470   (0x0008)  
	UStaticMeshComponent*                              _uncutWireSegment3;                                         // 0x0478   (0x0008)  
	UStaticMeshComponent*                              _uncutWireSegment4;                                         // 0x0480   (0x0008)  
	UStaticMeshComponent*                              _uncutWireSegment5;                                         // 0x0488   (0x0008)  
	UBoxComponent*                                     _wireBox1;                                                  // 0x0490   (0x0008)  
	UBoxComponent*                                     _wireBox2;                                                  // 0x0498   (0x0008)  
	UBoxComponent*                                     _wireBox3;                                                  // 0x04A0   (0x0008)  
	UBoxComponent*                                     _wireBox4;                                                  // 0x04A8   (0x0008)  
	UBoxComponent*                                     _wireBox5;                                                  // 0x04B0   (0x0008)  
	UBoxComponent*                                     _wireBox6;                                                  // 0x04B8   (0x0008)  
	UAkAudioEvent*                                     _bombDefusalTimerStartSound;                                // 0x04C0   (0x0008)  
	UAkAudioEvent*                                     _bombDefusalTimerStopSound;                                 // 0x04C8   (0x0008)  
	UAkAudioEvent*                                     _cutWireSound;                                              // 0x04D0   (0x0008)  
	UAkAudioEvent*                                     _bombDefusedSound;                                          // 0x04D8   (0x0008)  
	unsigned char                                      UnknownData08_6[0x8];                                       // 0x04E0   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.BombDefusalMinigameBase.PlayCutWireMontage
	void PlayCutWireMontage();                                                                                               // [0x2268280] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/ConZ.BombDefusalMinigame
/// Size: 0x0010 (0x0004E8 - 0x0004F8)
class ABombDefusalMinigame : public ABombDefusalMinigameBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x04E8   (0x0010)  MISSED
};

/// Class /Script/ConZ.BombDefusalMinigameConfiguration
/// Size: 0x0018 (0x000048 - 0x000060)
class UBombDefusalMinigameConfiguration : public UMinigameConfiguration
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0048   (0x0018)  MISSED
};

/// Class /Script/ConZ.MinigameWidget
/// Size: 0x0018 (0x000260 - 0x000278)
class UMinigameWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0260   (0x0018)  MISSED
};

/// Class /Script/ConZ.BombDefusalWidget
/// Size: 0x0020 (0x000278 - 0x000298)
class UBombDefusalWidget : public UMinigameWidget
{ 
public:
	UTextBlock*                                        _remainingTimeMinutes1;                                     // 0x0278   (0x0008)  
	UTextBlock*                                        _remainingTimeMinutes2;                                     // 0x0280   (0x0008)  
	UTextBlock*                                        _remainingTimeSeconds1;                                     // 0x0288   (0x0008)  
	UTextBlock*                                        _remainingTimeSeconds2;                                     // 0x0290   (0x0008)  


	/// Functions
	// Function /Script/ConZ.BombDefusalWidget.ShowInfo
	void ShowInfo();                                                                                                         // [0x22682d0] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.BombDefusalWidget.ShouldShowChangeDurationInfo
	bool ShouldShowChangeDurationInfo();                                                                                     // [0x22682a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.BombDefusalWidget.OnSuccess
	void OnSuccess();                                                                                                        // [0x2268260] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.BombDefusalWidget.HideInfo
	void HideInfo();                                                                                                         // [0x2267de0] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.BombDefusalWidget.GetNumTries
	int32_t GetNumTries();                                                                                                   // [0x2267db0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.BondageComponent
/// Size: 0x0010 (0x000ED0 - 0x000EE0)
class UBondageComponent : public USkeletalMeshComponent
{ 
public:
	AItem*                                             _bondageItem;                                               // 0x0EC8   (0x0008)  
	EBoundBodyPart                                     _boundBodyPart;                                             // 0x0ED0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0ED1   (0x0003)  MISSED
	float                                              _tightness;                                                 // 0x0ED4   (0x0004)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0ED8   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.BondageComponent.UpdateVisuals
	void UpdateVisuals();                                                                                                    // [0x22682f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.BondageComponent.OnRep_BoundBodyPart
	void OnRep_BoundBodyPart();                                                                                              // [0x22681c0] Final|Native|Private 
	// Function /Script/ConZ.BondageComponent.OnRep_BondageItem
	void OnRep_BondageItem();                                                                                                // [0x22681a0] Final|Native|Private 
	// Function /Script/ConZ.BondageComponent.GetBondageItem
	AItem* GetBondageItem();                                                                                                 // [0x2267d40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.BondageItemTag
/// Size: 0x0068 (0x000030 - 0x000098)
class UBondageItemTag : public UBaseItemTag
{ 
public:
	USkeletalMesh*                                     BondageMesh;                                                // 0x0030   (0x0008)  
	float                                              BaseStruggleDuration;                                       // 0x0038   (0x0004)  
	float                                              StruggleStrengthModifier;                                   // 0x003C   (0x0004)  
	float                                              StruggleDexterityModifier;                                  // 0x0040   (0x0004)  
	float                                              GroundMovementSpeedMultiplier;                              // 0x0044   (0x0004)  
	float                                              WaterMovementSpeedMultiplier;                               // 0x0048   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x004C   (0x0004)  MISSED
	UAnimSequenceBase*                                 HandsBoundIdleFPAnimation;                                  // 0x0050   (0x0008)  
	UAnimSequenceBase*                                 HandsBoundIdleTPAnimation;                                  // 0x0058   (0x0008)  
	UAnimMontage*                                      HandsBoundMontage;                                          // 0x0060   (0x0008)  
	UAnimMontage*                                      HandsAdjustMontage;                                         // 0x0068   (0x0008)  
	UAnimMontage*                                      HandsBoundStruggleMontage;                                  // 0x0070   (0x0008)  
	UAnimMontage*                                      HandsFreedMontage;                                          // 0x0078   (0x0008)  
	UAnimMontage*                                      BindingHandsMontage;                                        // 0x0080   (0x0008)  
	UAnimMontage*                                      AdjustingHandsMontage;                                      // 0x0088   (0x0008)  
	UAnimMontage*                                      HandsBoundSuicideMontage;                                   // 0x0090   (0x0008)  
};

/// Class /Script/ConZ.WeaponAttachment
/// Size: 0x0030 (0x000910 - 0x000940)
class AWeaponAttachment : public AItem
{ 
public:
	FName                                              LowestMiddleSocketName;                                     // 0x0910   (0x0008)  
	FName                                              HighestMiddleSocketName;                                    // 0x0918   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0920   (0x0008)  MISSED
	UStaticMesh*                                       _staticMeshWhenAttached;                                    // 0x0928   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0930   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.WeaponAttachment.Unequip
	void Unequip();                                                                                                          // [0x2417d20] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponAttachment.GetWeaponMalfunctionProbabilityForMalfunctionEvent
	FWeaponMalfunctionProbability GetWeaponMalfunctionProbabilityForMalfunctionEvent(AWeapon* Weapon, EWeaponMalfunctionEvent malfunctionEvent); // [0x2417180] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.WeaponAttachment.GetStaticMeshWhenAttached
	UStaticMesh* GetStaticMeshWhenAttached();                                                                                // [0x2417060] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.WeaponAttachment.GetSkeletalMeshWhenAttached
	USkeletalMesh* GetSkeletalMeshWhenAttached();                                                                            // [0x2417030] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.WeaponAttachment.GetShakinessModifier
	float GetShakinessModifier();                                                                                            // [0x2416ff0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.WeaponAttachment.GetOwningWeapon
	AWeapon* GetOwningWeapon();                                                                                              // [0x2416f90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponAttachment.Equip
	void Equip(AWeapon* Weapon);                                                                                             // [0x22d5c90] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponAttachment.CanBeRemovedIfAttachedToWeapon
	bool CanBeRemovedIfAttachedToWeapon();                                                                                   // [0x24169f0] Native|Event|Public|BlueprintEvent|Const 
};

/// Class /Script/ConZ.BowAttachmentSilencer
/// Size: 0x0010 (0x000940 - 0x000950)
class ABowAttachmentSilencer : public AWeaponAttachment
{ 
public:
	float                                              _noiseMultiplier;                                           // 0x0940   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x0944   (0x000C)  MISSED
};

/// Class /Script/ConZ.BowAttachmentStabilizer
/// Size: 0x0000 (0x000950 - 0x000950)
class ABowAttachmentStabilizer : public ABowAttachmentSilencer
{ 
public:
};

/// Class /Script/ConZ.MeleeSkill
/// Size: 0x0058 (0x0000B0 - 0x000108)
class UMeleeSkill : public UStrengthSkill
{ 
public:
	UMeleeSkillAnimationsPreset*                       AnimationsPreset;                                           // 0x00B0   (0x0008)  
	FMeleeSkillExperienceAwards                        _noSkillExperienceAwards;                                   // 0x00B8   (0x0010)  
	FMeleeSkillExperienceAwards                        _basicSkillExperienceAwards;                                // 0x00C8   (0x0010)  
	FMeleeSkillExperienceAwards                        _mediumSkillExperienceAwards;                               // 0x00D8   (0x0010)  
	FMeleeSkillExperienceAwards                        _advancedSkillExperienceAwards;                             // 0x00E8   (0x0010)  
	FMeleeSkillExperienceAwards                        _aboveAdvancedSkillExperienceAwards;                        // 0x00F8   (0x0010)  


	/// Functions
	// Function /Script/ConZ.MeleeSkill.GetWalkingIdleAnimationTP
	UAnimSequenceBase* GetWalkingIdleAnimationTP();                                                                          // [0x2323570] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.MeleeSkill.GetWalkingIdleAnimationFP
	UAnimSequenceBase* GetWalkingIdleAnimationFP();                                                                          // [0x2323540] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.MeleeSkill.GetTiredIdleAnimationTP
	UAnimSequenceBase* GetTiredIdleAnimationTP();                                                                            // [0x2323510] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.MeleeSkill.GetTiredIdleAnimationFP
	UAnimSequenceBase* GetTiredIdleAnimationFP();                                                                            // [0x23234e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.MeleeSkill.GetStaminaMultiplier
	float GetStaminaMultiplier(float excessGearWeight);                                                                      // [0x2323450] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.MeleeSkill.GetPrimaryIdleAnimationTP
	UAnimSequenceBase* GetPrimaryIdleAnimationTP();                                                                          // [0x2323420] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.MeleeSkill.GetPrimaryIdleAnimationFP
	UAnimSequenceBase* GetPrimaryIdleAnimationFP();                                                                          // [0x23233f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.MeleeSkill.GetLeaveCombatModeMontage
	UAnimMontage* GetLeaveCombatModeMontage();                                                                               // [0x23233c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.MeleeSkill.GetInactivityIdleAnimations
	TArray<UAnimSequenceBase*> GetInactivityIdleAnimations();                                                                // [0x2323350] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.MeleeSkill.GetIdleToBlockBlendDuration
	float GetIdleToBlockBlendDuration();                                                                                     // [0x2323320] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.MeleeSkill.GetEnterCombatModeMontage
	UAnimMontage* GetEnterCombatModeMontage();                                                                               // [0x23232f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.MeleeSkill.GetBlockToIdleBlendDuration
	float GetBlockToIdleBlendDuration();                                                                                     // [0x23232c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.MeleeSkill.GetBlockIdleAnimationTP
	UAnimSequenceBase* GetBlockIdleAnimationTP();                                                                            // [0x2323290] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.MeleeSkill.GetBlockIdleAnimationFP
	UAnimSequenceBase* GetBlockIdleAnimationFP();                                                                            // [0x2323260] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.MeleeSkill.GetAimOffsetBlendSpaceTP
	UBlendSpace* GetAimOffsetBlendSpaceTP();                                                                                 // [0x2323230] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.MeleeSkill.GetAimOffsetBlendSpaceFP
	UBlendSpace* GetAimOffsetBlendSpaceFP();                                                                                 // [0x2323200] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.BoxingSkill
/// Size: 0x0000 (0x000108 - 0x000108)
class UBoxingSkill : public UMeleeSkill
{ 
public:
};

/// Class /Script/ConZ.TriggerComponent
/// Size: 0x0080 (0x000450 - 0x0004D0)
class UTriggerComponent : public UPrimitiveComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x70];                                      // 0x0450   (0x0070)  MISSED
	FObjectConditionContainer                          _triggeringActorConditions;                                 // 0x04C0   (0x0010)  
};

/// Class /Script/ConZ.MotionTriggerComponent
/// Size: 0x0050 (0x0004D0 - 0x000520)
class UMotionTriggerComponent : public UTriggerComponent
{ 
public:
	FVector                                            TriggerForwardVector;                                       // 0x04D0   (0x000C)  
	float                                              TriggerAngle;                                               // 0x04DC   (0x0004)  
	float                                              MotionDetectionSensitivity;                                 // 0x04E0   (0x0004)  
	float                                              MotionDetectionDepletionSpeed;                              // 0x04E4   (0x0004)  
	float                                              _motionDetector;                                            // 0x04E8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x04EC   (0x0004)  MISSED
	UAkAudioEvent*                                     _motionDetectorStartSound;                                  // 0x04F0   (0x0008)  
	UAkAudioEvent*                                     _motionDetectorEndSound;                                    // 0x04F8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x0500   (0x0020)  MISSED
};

/// Class /Script/ConZ.BoxMotionTriggerComponent
/// Size: 0x0010 (0x000520 - 0x000530)
class UBoxMotionTriggerComponent : public UMotionTriggerComponent
{ 
public:
	UBoxComponent*                                     BoxCollisionComponent;                                      // 0x0518   (0x0008)  
	FVector                                            _triggerSize;                                               // 0x0520   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x052C   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.BoxMotionTriggerComponent.BoxComponent_OnComponentEndOverlap
	void BoxComponent_OnComponentEndOverlap(UPrimitiveComponent* activatedComp, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // [0x2267be0] Final|Native|Private 
	// Function /Script/ConZ.BoxMotionTriggerComponent.BoxComponent_OnComponentBeginOverlap
	void BoxComponent_OnComponentBeginOverlap(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x22679c0] Final|Native|Private|HasOutParms 
};

/// Class /Script/ConZ.BreathingBarLungsWidget
/// Size: 0x0020 (0x000260 - 0x000280)
class UBreathingBarLungsWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0260   (0x0008)  MISSED
	UImage*                                            _lungs;                                                     // 0x0268   (0x0008)  
	UImage*                                            _lungsCritical;                                             // 0x0270   (0x0008)  
	UWidgetAnimation*                                  _criticalStateAnimation;                                    // 0x0278   (0x0008)  
};

/// Class /Script/ConZ.Brenner
/// Size: 0x0120 (0x0007B0 - 0x0008D0)
class ABrenner : public AConZCharacter
{ 
public:
	unsigned char                                      UnknownData00_2[0x48];                                      // 0x07B0   (0x0048)  MISSED
	UNavigationInvokerComponent*                       _navigationInvokerComponent;                                // 0x07F8   (0x0008)  
	UHitReactComponent*                                _hitReactComponent;                                         // 0x0800   (0x0008)  
	UFlamethrowerComponent*                            _flamethrowerComponent;                                     // 0x0808   (0x0008)  
	UBrennerCommonData*                                _brennerCommonData;                                         // 0x0810   (0x0008)  
	unsigned char                                      UnknownData01_5[0x88];                                      // 0x0818   (0x0088)  MISSED
	EBrennerState                                      _state;                                                     // 0x08A0   (0x0001)  
	unsigned char                                      UnknownData02_5[0x1];                                       // 0x08A1   (0x0001)  MISSED
	bool                                               _aimFlamethrower;                                           // 0x08A2   (0x0001)  
	unsigned char                                      UnknownData03_5[0x1];                                       // 0x08A3   (0x0001)  MISSED
	TWeakObjectPtr<AActor*>                            _flamethrowerTarget;                                        // 0x08A4   (0x0008)  
	unsigned char                                      UnknownData04_6[0x24];                                      // 0x08AC   (0x0024)  MISSED


	/// Functions
	// Function /Script/ConZ.Brenner.OnRep_State
	void OnRep_State(EBrennerState oldState);                                                                                // [0x22681e0] Final|Native|Private 
	// Function /Script/ConZ.Brenner.OnMontageEnded
	void OnMontageEnded(UAnimMontage* Montage, bool interrupted);                                                            // [0x22680d0] Final|Native|Private 
	// Function /Script/ConZ.Brenner.NetMulticast_StopAttack
	void NetMulticast_StopAttack(EBrennerAttackType AttackType);                                                             // [0x2268050] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Brenner.NetMulticast_StopAnimation
	void NetMulticast_StopAnimation(EBrennerAnimation Animation);                                                            // [0x2267fd0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Brenner.NetMulticast_StartBleeding
	void NetMulticast_StartBleeding();                                                                                       // [0x2267fb0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Brenner.NetMulticast_StartAttack
	void NetMulticast_StartAttack(FBrennerAttackDescription attackDescription);                                              // [0x2267f00] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Brenner.NetMulticast_PlayHitReact
	void NetMulticast_PlayHitReact(EHitDirectionType hitDirectionType);                                                      // [0x2267e80] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Brenner.NetMulticast_PlayAnimation
	void NetMulticast_PlayAnimation(EBrennerAnimation Animation);                                                            // [0x2267e00] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Brenner.GetFlamethrowerAimLocation
	FVector GetFlamethrowerAimLocation();                                                                                    // [0x2267d70] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.BrennerAIController
/// Size: 0x0168 (0x000328 - 0x000490)
class ABrennerAIController : public AAIController
{ 
public:
	UAISenseConfig_Sight*                              _sightSenseConfigCombat;                                    // 0x0328   (0x0008)  
	UAISenseConfig_Hearing*                            _hearingSenseConfigCombat;                                  // 0x0330   (0x0008)  
	UAISenseConfig_Touch*                              _touchSenseConfig;                                          // 0x0338   (0x0008)  
	TMap<FName, float>                                 _noiseAccumulationMultiplierPerNoiseTag;                    // 0x0340   (0x0050)  
	FVector                                            _hibernateLocation;                                         // 0x0390   (0x000C)  
	float                                              _genericAcceptanceRadius;                                   // 0x039C   (0x0004)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x03A0   (0x0008)  MISSED
	UNPCControllerStateBrennerBase*                    _statesByEnum;                                              // 0x03A8   (0x0050)  
	unsigned char                                      UnknownData01_6[0x98];                                      // 0x03F8   (0x0098)  MISSED


	/// Functions
	// Function /Script/ConZ.BrennerAIController.SensingComponent_OnActorSensed
	void SensingComponent_OnActorSensed(TArray<AActor*>& actorsPercepted);                                                   // [0x226bb10] Final|Native|Private|HasOutParms 
};

/// Class /Script/ConZ.BrennerAnimInstance
/// Size: 0x0040 (0x0002C0 - 0x000300)
class UBrennerAnimInstance : public UAnimInstance
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x02C0   (0x0008)  MISSED
	EBrennerState                                      _brennerState;                                              // 0x02C8   (0x0001)  
	EBrennerMovementPace                               _desiredMovementPace;                                       // 0x02C9   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x02CA   (0x0002)  MISSED
	FVector                                            _acceleration;                                              // 0x02CC   (0x000C)  
	bool                                               _wantsToMove;                                               // 0x02D8   (0x0001)  
	bool                                               _wantsToWalk;                                               // 0x02D9   (0x0001)  
	bool                                               _wantsToJog;                                                // 0x02DA   (0x0001)  
	bool                                               _wantsToCharge;                                             // 0x02DB   (0x0001)  
	FVector                                            _velocity;                                                  // 0x02DC   (0x000C)  
	float                                              _speed;                                                     // 0x02E8   (0x0004)  
	float                                              _speedXY;                                                   // 0x02EC   (0x0004)  
	bool                                               _isUsingFlamethrower;                                       // 0x02F0   (0x0001)  
	bool                                               _isAimingFlamethrower;                                      // 0x02F1   (0x0001)  
	unsigned char                                      UnknownData02_5[0x2];                                       // 0x02F2   (0x0002)  MISSED
	FVector                                            _flamethrowerAimLocation;                                   // 0x02F4   (0x000C)  
};

/// Class /Script/ConZ.BrennerCommonData
/// Size: 0x0120 (0x000030 - 0x000150)
class UBrennerCommonData : public UDataAsset
{ 
public:
	float                                              AlertedSoundThreshold;                                      // 0x0030   (0x0004)  
	float                                              TwitchSoundThreshold;                                       // 0x0034   (0x0004)  
	FFloatInterval                                     SightAndAwarenessRange;                                     // 0x0038   (0x0008)  
	float                                              TwitchCooldown;                                             // 0x0040   (0x0004)  
	float                                              InvestigateAlarmDuration;                                   // 0x0044   (0x0004)  
	FFloatInterval                                     FlamethrowerRange;                                          // 0x0048   (0x0008)  
	float                                              HalfAngleAtMinRange;                                        // 0x0050   (0x0004)  
	float                                              HalfAngleAtMaxRange;                                        // 0x0054   (0x0004)  
	UAnimMontage*                                      _animationsForEvents;                                       // 0x0058   (0x0028)  
	TArray<UAnimMontage*>                              FrontAttacks;                                               // 0x0080   (0x0010)  
	TArray<UAnimMontage*>                              BackAttacks;                                                // 0x0090   (0x0010)  
	TArray<UAnimMontage*>                              LegAttacks;                                                 // 0x00A0   (0x0010)  
	TArray<UAnimMontage*>                              AllAroundAttacks;                                           // 0x00B0   (0x0010)  
	TArray<UAnimMontage*>                              ChargeAttacks;                                              // 0x00C0   (0x0010)  
	FName                                              HeadBoneName;                                               // 0x00D0   (0x0008)  
	FGameplayTag                                       HitReactTypeStanding;                                       // 0x00D8   (0x0008)  
	float                                              HeadShotDamageHitReactThreshold;                            // 0x00E0   (0x0004)  
	float                                              AccumulatedDamageHitReactThreshold;                         // 0x00E4   (0x0004)  
	float                                              BleedingChance;                                             // 0x00E8   (0x0004)  
	float                                              BleedingCooldown;                                           // 0x00EC   (0x0004)  
	int32_t                                            NumBleedsToEnterLongCooldown;                               // 0x00F0   (0x0004)  
	float                                              BleedingLongCooldown;                                       // 0x00F4   (0x0004)  
	float                                              BleedingDuration;                                           // 0x00F8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00FC   (0x0004)  MISSED
	TArray<FBrennerCommonData_BleedingParticles>       BleedingParticles;                                          // 0x0100   (0x0010)  
	TArray<TWeakObjectPtr>                             PossibleBloodStains;                                        // 0x0110   (0x0010)  
	float                                              BloodStainsOffsetAlongHitNormal;                            // 0x0120   (0x0004)  
	float                                              DamageThresholdForRageMode;                                 // 0x0124   (0x0004)  
	float                                              DamageDepletionRate;                                        // 0x0128   (0x0004)  
	float                                              RageModeDuration;                                           // 0x012C   (0x0004)  
	UAkAudioEvent*                                     HibernateAudioEvent;                                        // 0x0130   (0x0008)  
	UAkAudioEvent*                                     AlertedAudioEvent;                                          // 0x0138   (0x0008)  
	UAkAudioEvent*                                     CombatAudioEvent;                                           // 0x0140   (0x0008)  
	UAkAudioEvent*                                     ChargeAudioEvent;                                           // 0x0148   (0x0008)  
};

/// Class /Script/ConZ.BrennerMovementComponent
/// Size: 0x0010 (0x000C10 - 0x000C20)
class UBrennerMovementComponent : public UConZCharacterMovementComponent
{ 
public:
	float                                              _speedForPace;                                              // 0x0C08   (0x000C)  
	float                                              _accelerationForPace;                                       // 0x0C14   (0x000C)  
};

/// Class /Script/ConZ.BrokenArrow
/// Size: 0x0000 (0x000910 - 0x000910)
class ABrokenArrow : public AItem
{ 
public:
};

/// Class /Script/ConZ.BruisingComponent
/// Size: 0x0078 (0x0000B0 - 0x000128)
class UBruisingComponent : public UActorComponent
{ 
public:
	UBruisingData*                                     BruisingData;                                               // 0x00B0   (0x0008)  
	bool                                               FadeBruises;                                                // 0x00B8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x00B9   (0x0003)  MISSED
	float                                              BruisesLifeTime;                                            // 0x00BC   (0x0004)  
	float                                              BruisesFadeUpdateInterval;                                  // 0x00C0   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x00C4   (0x0004)  MISSED
	UTextureRenderTarget2D*                            _renderTargetByLayer;                                       // 0x00C8   (0x0018)  
	unsigned char                                      UnknownData02_6[0x48];                                      // 0x00E0   (0x0048)  MISSED


	/// Functions
	// Function /Script/ConZ.BruisingComponent.MakeCompletelyBruised
	void MakeCompletelyBruised();                                                                                            // [0x226b760] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.BruisingComponent.GetBruiseLayerRenderTarget
	UTextureRenderTarget2D* GetBruiseLayerRenderTarget(EBruiseLayer Layer);                                                  // [0x226b6d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.BruisingComponent.ClearBruises
	void ClearBruises();                                                                                                     // [0x226b6b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.BruisingComponent.AddBruise
	void AddBruise(EBruiseZone zone);                                                                                        // [0x226b630] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.BruisingData
/// Size: 0x0010 (0x000030 - 0x000040)
class UBruisingData : public UDataAsset
{ 
public:
	TArray<FBruisePatch>                               Patches;                                                    // 0x0030   (0x0010)  
};

/// Class /Script/ConZ.BuildingHelperComponent
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UBuildingHelperComponent : public UActorComponent
{ 
public:
};

/// Class /Script/ConZ.Building
/// Size: 0x0108 (0x000220 - 0x000328)
class ABuilding : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0220   (0x0010)  MISSED
	TArray<FLadderMarker>                              _ladderMarkers;                                             // 0x0230   (0x0010)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x0240   (0x0010)  MISSED
	TArray<FWindowMarker>                              _windowMarkers;                                             // 0x0250   (0x0010)  
	TArray<FWindowMarker>                              _windowMarkersDynamic;                                      // 0x0260   (0x0010)  
	TArray<FWindowMarkerModifier>                      _windowMarkerModifiers;                                     // 0x0270   (0x0010)  
	bool                                               _isCleared;                                                 // 0x0280   (0x0001)  
	bool                                               _isClaimable;                                               // 0x0281   (0x0001)  
	unsigned char                                      UnknownData02_5[0x6];                                       // 0x0282   (0x0006)  MISSED
	TMap<FString, ADoor*>                              _doors;                                                     // 0x0288   (0x0050)  
	TArray<UFortificationComponent*>                   _fortifications;                                            // 0x02D8   (0x0010)  
	unsigned char                                      UnknownData03_6[0x40];                                      // 0x02E8   (0x0040)  MISSED


	/// Functions
	// Function /Script/ConZ.Building.OnRep_WindowMarkerModifiers
	void OnRep_WindowMarkerModifiers();                                                                                      // [0x226baf0] Final|Native|Private 
	// Function /Script/ConZ.Building.OnRep_Cleared
	void OnRep_Cleared();                                                                                                    // [0x226bab0] Final|Native|Private 
};

/// Class /Script/ConZ.TabMenuPanel
/// Size: 0x0000 (0x000260 - 0x000260)
class UTabMenuPanel : public UUserWidget
{ 
public:
};

/// Class /Script/ConZ.BuildingCraftingPanelBase
/// Size: 0x0038 (0x000260 - 0x000298)
class UBuildingCraftingPanelBase : public UTabMenuPanel
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UCraftingRecipeDescriptionPanel*                   _craftingRecipeDescriptionPanel;                            // 0x0278   (0x0008)  
	UButton*                                           _craftButton;                                               // 0x0280   (0x0008)  
	int32_t                                            _craftingWidgetsPerRow;                                     // 0x0288   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x028C   (0x0004)  MISSED
	UAkAudioEvent*                                     _craftClickSound;                                           // 0x0290   (0x0008)  


	/// Functions
	// Function /Script/ConZ.BuildingCraftingPanelBase.OnRecipeClicked
	void OnRecipeClicked(UCraftingRecipeWidget* Widget);                                                                     // [0x226ba20] Final|Native|Public  
	// Function /Script/ConZ.BuildingCraftingPanelBase.OnCraftingButtonReleased
	void OnCraftingButtonReleased();                                                                                         // [0x2268260] Final|Native|Private 
};

/// Class /Script/ConZ.BuildingManager
/// Size: 0x01D8 (0x000220 - 0x0003F8)
class ABuildingManager : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x48];                                      // 0x0220   (0x0048)  MISSED
	TMap<ABuilding*, FBox2D>                           _buildings;                                                 // 0x0268   (0x0050)  
	TMap<FDbIntegerId, FBuildingsArray>                _buildingsOwned;                                            // 0x02B8   (0x0050)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0308   (0x0008)  MISSED
	FBuildingsReplicationHelper                        _buildingsDataRepHelper;                                    // 0x0310   (0x0070)  
	unsigned char                                      UnknownData02_6[0x78];                                      // 0x0380   (0x0078)  MISSED


	/// Functions
	// Function /Script/ConZ.BuildingManager.NetMulticast_UpdateBuildingFortificationsState
	void NetMulticast_UpdateBuildingFortificationsState(int32_t dataVersion, FString buildingId, TArray<FFortificationData> FortificationData); // [0x226b8e0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.BuildingManager.NetMulticast_UpdateBuildingData
	void NetMulticast_UpdateBuildingData(int32_t dataVersion, FString runtimeId, FBuildingData BuildingData);                // [0x226b780] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/ConZ.BuildingPanel
/// Size: 0x00E8 (0x000298 - 0x000380)
class UBuildingPanel : public UBuildingCraftingPanelBase
{ 
public:
	int32_t                                            _modularBaseBuildingWidgetsPerRow;                          // 0x0298   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x029C   (0x0004)  MISSED
	UClass*                                            _expandableContainerClass;                                  // 0x02A0   (0x0008)  
	UGridPanel*                                        _placeablesBox;                                             // 0x02A8   (0x0008)  
	UGridPanel*                                        _placeablesSubBox1;                                         // 0x02B0   (0x0008)  
	UGridPanel*                                        _placeablesSubBox2;                                         // 0x02B8   (0x0008)  
	UGridPanel*                                        _placeablesSubBox3;                                         // 0x02C0   (0x0008)  
	UGridPanel*                                        _placeablesSubBox4;                                         // 0x02C8   (0x0008)  
	UGridPanel*                                        _placeablesSubBox5;                                         // 0x02D0   (0x0008)  
	UUserWidget*                                       PlaceablesContainer;                                        // 0x02D8   (0x0008)  
	UUserWidget*                                       PlaceablesSubContainer1;                                    // 0x02E0   (0x0008)  
	UUserWidget*                                       PlaceablesSubContainer2;                                    // 0x02E8   (0x0008)  
	UUserWidget*                                       PlaceablesSubContainer3;                                    // 0x02F0   (0x0008)  
	UUserWidget*                                       PlaceablesSubContainer4;                                    // 0x02F8   (0x0008)  
	UUserWidget*                                       PlaceablesSubContainer5;                                    // 0x0300   (0x0008)  
	UGridPanel*                                        _baseBuildingBox;                                           // 0x0308   (0x0008)  
	UGridPanel*                                        _baseBuildingSubBox1;                                       // 0x0310   (0x0008)  
	UGridPanel*                                        _baseBuildingSubBox2;                                       // 0x0318   (0x0008)  
	UGridPanel*                                        _baseBuildingSubBox3;                                       // 0x0320   (0x0008)  
	UGridPanel*                                        _baseBuildingSubBox4;                                       // 0x0328   (0x0008)  
	UGridPanel*                                        _baseBuildingSubBox5;                                       // 0x0330   (0x0008)  
	UUserWidget*                                       BaseBuildingContainer;                                      // 0x0338   (0x0008)  
	UUserWidget*                                       BaseBuildingSubContainer1;                                  // 0x0340   (0x0008)  
	UUserWidget*                                       BaseBuildingSubContainer2;                                  // 0x0348   (0x0008)  
	UUserWidget*                                       BaseBuildingSubContainer3;                                  // 0x0350   (0x0008)  
	UUserWidget*                                       BaseBuildingSubContainer4;                                  // 0x0358   (0x0008)  
	UUserWidget*                                       BaseBuildingSubContainer5;                                  // 0x0360   (0x0008)  
	UScrollBox*                                        _placeablesScrollBox;                                       // 0x0368   (0x0008)  
	UScaleBox*                                         _placeablesScaleBox;                                        // 0x0370   (0x0008)  
	UVerticalBox*                                      _categoriesVerticalBox;                                     // 0x0378   (0x0008)  
};

/// Class /Script/ConZ.Buriable
/// Size: 0x0000 (0x000028 - 0x000028)
class UBuriable : public UInterface
{ 
public:
};

/// Class /Script/ConZ.ItemComponentStateBase
/// Size: 0x0018 (0x000028 - 0x000040)
class UItemComponentStateBase : public UObject
{ 
public:
	FDbIntegerId                                       ID;                                                         // 0x0028   (0x0008)  
	FString                                            ComponentName;                                              // 0x0030   (0x0010)  
};

/// Class /Script/ConZ.BuriableItemComponentState
/// Size: 0x0010 (0x000040 - 0x000050)
class UBuriableItemComponentState : public UItemComponentStateBase
{ 
public:
	bool                                               IsBuried;                                                   // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0041   (0x0007)  MISSED
	FDbIntegerId                                       BurierUserId;                                               // 0x0048   (0x0008)  
};

/// Class /Script/ConZ.BuriableChestItemComponentState
/// Size: 0x0008 (0x000050 - 0x000058)
class UBuriableChestItemComponentState : public UBuriableItemComponentState
{ 
public:
	float                                              StoredAutoDestructTime;                                     // 0x0050   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0054   (0x0004)  MISSED
};

/// Class /Script/ConZ.BuriableItemComponent
/// Size: 0x00C8 (0x0000C8 - 0x000190)
class UBuriableItemComponent : public UItemComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00C8   (0x0008)  MISSED
	bool                                               _canEverShowMarker;                                         // 0x00D0   (0x0001)  
	unsigned char                                      UnknownData01_5[0xF];                                       // 0x00D1   (0x000F)  MISSED
	bool                                               _canBeBuried;                                               // 0x00E0   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x00E1   (0x0007)  MISSED
	FBurialInformation                                 _repBurialInformation;                                      // 0x00E8   (0x0018)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x0100   (0x0008)  MISSED
	UStaticMesh*                                       _buriedMesh;                                                // 0x0108   (0x0008)  
	FVector                                            _buriedMeshScale;                                           // 0x0110   (0x000C)  
	FVector                                            _buriedMeshRelativeLocation;                                // 0x011C   (0x000C)  
	unsigned char                                      UnknownData04_5[0x10];                                      // 0x0128   (0x0010)  MISSED
	UMaterialBillboardComponent*                       _spriteMarkerBillboard;                                     // 0x0138   (0x0008)  
	FMaterialSpriteElement                             _spriteMarkerData;                                          // 0x0140   (0x0028)  
	FVector                                            _spriteMarkerRelativeLocation;                              // 0x0168   (0x000C)  
	bool                                               _applyBuryMaterial;                                         // 0x0174   (0x0001)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x0175   (0x0003)  MISSED
	float                                              _startMeshFadeDistance;                                     // 0x0178   (0x0004)  
	float                                              _endMeshFadeDistance;                                       // 0x017C   (0x0004)  
	UClass*                                            _skillToIncrease;                                           // 0x0180   (0x0008)  
	float                                              _skillIncreaseAmount;                                       // 0x0188   (0x0004)  
	float                                              _skillIncreaseModifier;                                     // 0x018C   (0x0004)  


	/// Functions
	// Function /Script/ConZ.BuriableItemComponent.OnRep_UpdateBurialInformation
	void OnRep_UpdateBurialInformation();                                                                                    // [0x226bad0] Final|Native|Private 
};

/// Class /Script/ConZ.BuriableChestItemComponent
/// Size: 0x0010 (0x000190 - 0x0001A0)
class UBuriableChestItemComponent : public UBuriableItemComponent
{ 
public:
	int64_t                                            _decayInDaysWhenBuried;                                     // 0x0190   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0198   (0x0008)  MISSED
};

/// Class /Script/ConZ.BuriableTrapItemComponent
/// Size: 0x0000 (0x000190 - 0x000190)
class UBuriableTrapItemComponent : public UBuriableItemComponent
{ 
public:
};

/// Class /Script/ConZ.BurnDamageType
/// Size: 0x0000 (0x000040 - 0x000040)
class UBurnDamageType : public UDamageType
{ 
public:
};

/// Class /Script/ConZ.BuryData
/// Size: 0x0058 (0x000030 - 0x000088)
class UBuryData : public UDataAsset
{ 
public:
	TMap<TEnumAsByte, FBuryMaterialData>               AllowedBuryMaterials;                                       // 0x0030   (0x0050)  
	float                                              StaminaDrain;                                               // 0x0080   (0x0004)  
	float                                              RecoveredStaminaThreshold;                                  // 0x0084   (0x0004)  
};

/// Class /Script/ConZ.BuryToolItemTag
/// Size: 0x0030 (0x000030 - 0x000060)
class UBuryToolItemTag : public UBaseItemTag
{ 
public:
	bool                                               IsSmallSizedTool;                                           // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	int32_t                                            BuryItemUsage;                                              // 0x0034   (0x0004)  
	float                                              BuryDurationModifier;                                       // 0x0038   (0x0004)  
	FName                                              BladeTipSocket;                                             // 0x003C   (0x0008)  
	FName                                              BladeCenterSocket;                                          // 0x0044   (0x0008)  
	float                                              ShortToolMinBuryTime;                                       // 0x004C   (0x0004)  
	float                                              ShortToolMaxBuryTime;                                       // 0x0050   (0x0004)  
	float                                              LongToolMinBuryTime;                                        // 0x0054   (0x0004)  
	float                                              LongToolMaxBuryTime;                                        // 0x0058   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x005C   (0x0004)  MISSED
};

/// Class /Script/ConZ.C4PartTag
/// Size: 0x0000 (0x000030 - 0x000030)
class UC4PartTag : public UBaseItemTag
{ 
public:
};

/// Class /Script/ConZ.CamouflageSkill
/// Size: 0x0108 (0x0000B0 - 0x0001B8)
class UCamouflageSkill : public UIntelligenceSkill
{ 
public:
	float                                              _activationTime;                                            // 0x00B0   (0x0004)  
	float                                              _standingPenalty;                                           // 0x00B4   (0x0004)  
	float                                              _crouchingPenalty;                                          // 0x00B8   (0x0004)  
	float                                              _pronePenalty;                                              // 0x00BC   (0x0004)  
	float                                              _slowMovingStandingPenalty;                                 // 0x00C0   (0x0004)  
	float                                              _slowMovingCrouchingPenalty;                                // 0x00C4   (0x0004)  
	float                                              _slowMovingPronePenalty;                                    // 0x00C8   (0x0004)  
	float                                              _mediumMovingStandingPenalty;                               // 0x00CC   (0x0004)  
	float                                              _mediumMovingCrouchingPenalty;                              // 0x00D0   (0x0004)  
	float                                              _fastMovingStandingPenalty;                                 // 0x00D4   (0x0004)  
	float                                              _standingAIPerceptionMultiplier;                            // 0x00D8   (0x0004)  
	float                                              _crouchingAIPerceptionMultiplier;                           // 0x00DC   (0x0004)  
	float                                              _proneAIPerceptionMultiplier;                               // 0x00E0   (0x0004)  
	float                                              _maxRelevantAIPerceptionRadius;                             // 0x00E4   (0x0004)  
	unsigned char                                      UnknownData00_5[0x6C];                                      // 0x00E8   (0x006C)  MISSED
	FCamouflageSkillExperienceAwards                   NoSkillExperienceAwards;                                    // 0x0154   (0x0004)  
	FCamouflageSkillExperienceAwards                   BasicSkillExperienceAwards;                                 // 0x0158   (0x0004)  
	FCamouflageSkillExperienceAwards                   MediumSkillExperienceAwards;                                // 0x015C   (0x0004)  
	FCamouflageSkillExperienceAwards                   AdvancedSkillExperienceAwards;                              // 0x0160   (0x0004)  
	FCamouflageSkillExperienceAwards                   AboveAdvancedSkillExperienceAwards;                         // 0x0164   (0x0004)  
	FCamouflageSkillParametersPerSkillLevel            NoSkillParameters;                                          // 0x0168   (0x0010)  
	FCamouflageSkillParametersPerSkillLevel            BasicSkillParameters;                                       // 0x0178   (0x0010)  
	FCamouflageSkillParametersPerSkillLevel            MediumSkillParameters;                                      // 0x0188   (0x0010)  
	FCamouflageSkillParametersPerSkillLevel            AdvancedSkillParameters;                                    // 0x0198   (0x0010)  
	FCamouflageSkillParametersPerSkillLevel            AboveAdvancedSkillParameters;                               // 0x01A8   (0x0010)  


	/// Functions
	// Function /Script/ConZ.CamouflageSkill.GetHidePenaltyForCharacter
	float GetHidePenaltyForCharacter(AConZCharacter* Character);                                                             // [0x226fec0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.CargoDropContainer
/// Size: 0x00F0 (0x000220 - 0x000310)
class ACargoDropContainer : public AActor
{ 
public:
	float                                              DelayDuration;                                              // 0x0220   (0x0004)  
	float                                              FallDuration;                                               // 0x0224   (0x0004)  
	float                                              DetonationTime;                                             // 0x0228   (0x0004)  
	float                                              DetonationCountdown;                                        // 0x022C   (0x0004)  
	UAkAudioEvent*                                     LandSound;                                                  // 0x0230   (0x0008)  
	UAkAudioEvent*                                     WarningSound;                                               // 0x0238   (0x0008)  
	UAkAudioEvent*                                     DetonationSound;                                            // 0x0240   (0x0008)  
	UParticleSystem*                                   DetonationParticles;                                        // 0x0248   (0x0008)  
	UClass*                                            CameraShakeClass;                                           // 0x0250   (0x0008)  
	TArray<UClass*>                                    MajorSpawnerOptions;                                        // 0x0258   (0x0010)  
	TArray<UClass*>                                    MajorSpawnerPresetOptions;                                  // 0x0268   (0x0010)  
	TArray<FCargoDropSpawnerPreset>                    MinorSpawnerOptions;                                        // 0x0278   (0x0010)  
	UAkAudioEvent*                                     UnlockLockersAudioEvent;                                    // 0x0288   (0x0008)  
	UStaticMeshComponent*                              _parachuteMesh;                                             // 0x0290   (0x0008)  
	UParticleSystemComponent*                          _flareParticles;                                            // 0x0298   (0x0008)  
	UParticleSystemComponent*                          _dustParticles;                                             // 0x02A0   (0x0008)  
	UKillBoxTimerWidget*                               _timerWidget;                                               // 0x02A8   (0x0008)  
	UDiegeticLockState*                                _lockStateWidget;                                           // 0x02B0   (0x0008)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x02B8   (0x0010)  MISSED
	FVector                                            _endLocation;                                               // 0x02C8   (0x000C)  
	FRotator                                           _rotation;                                                  // 0x02D4   (0x000C)  
	bool                                               _landed;                                                    // 0x02E0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x02E1   (0x0003)  MISSED
	float                                              _fallingSpeed;                                              // 0x02E4   (0x0004)  
	int32_t                                            _timeRemaining;                                             // 0x02E8   (0x0004)  
	bool                                               _flareParticlesEnabled;                                     // 0x02EC   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x02ED   (0x0003)  MISSED
	TArray<UStaticMeshComponent*>                      _cargoLockers;                                              // 0x02F0   (0x0010)  
	unsigned char                                      UnknownData03_6[0x10];                                      // 0x0300   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.CargoDropContainer.SetTimerWidget
	void SetTimerWidget(UKillBoxTimerWidget* timerWidget);                                                                   // [0x22708c0] Final|Native|Private|BlueprintCallable 
	// Function /Script/ConZ.CargoDropContainer.SetLockStateWidget
	void SetLockStateWidget(UDiegeticLockState* Value);                                                                      // [0x2270830] Final|Native|Private|BlueprintCallable 
	// Function /Script/ConZ.CargoDropContainer.OnWarning
	void OnWarning();                                                                                                        // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.CargoDropContainer.OnTouchdown
	void OnTouchdown();                                                                                                      // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.CargoDropContainer.OnRep_FlareParticlesEnabled
	void OnRep_FlareParticlesEnabled();                                                                                      // [0x22704a0] Final|Native|Private 
	// Function /Script/ConZ.CargoDropContainer.OnDetonate
	void OnDetonate();                                                                                                       // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.CargoDropContainer.Multicast_StartDetonation
	void Multicast_StartDetonation();                                                                                        // [0x22700a0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.CargoDropContainer.Multicast_Detonate
	void Multicast_Detonate();                                                                                               // [0x226ff90] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.CargoDropContainer.DropToLocation
	void DropToLocation(FVector EndLocation, float fallingTime);                                                             // [0x226fde0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/ConZ.CargoDropContainer.AddCargoLocker
	void AddCargoLocker(UStaticMeshComponent* cargoLocker);                                                                  // [0x226fd10] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/ConZ.WorldEvent
/// Size: 0x0028 (0x000220 - 0x000248)
class AWorldEvent : public AActor
{ 
public:
	FVector                                            Location;                                                   // 0x0220   (0x000C)  
	float                                              Radius;                                                     // 0x022C   (0x0004)  
	UTexture*                                          IconTexture;                                                // 0x0230   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0238   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.WorldEvent.StartEvent
	void StartEvent();                                                                                                       // [0x2426430] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.CargoDropEvent
/// Size: 0x00C8 (0x000248 - 0x000310)
class ACargoDropEvent : public AWorldEvent
{ 
public:
	TArray<UClass*>                                    CargoDropClasses;                                           // 0x0248   (0x0010)  
	unsigned char                                      UnknownData00_5[0x68];                                      // 0x0258   (0x0068)  MISSED
	FSpawnCharacterAroundInfo                          _characterAroundInfo;                                       // 0x02C0   (0x0050)  


	/// Functions
	// Function /Script/ConZ.CargoDropEvent.Multicast_DisplayNotification
	void Multicast_DisplayNotification(FString SectorName, float FallDuration);                                              // [0x226ffb0] Net|NetReliableNative|Event|NetMulticast|Public 
};

/// Class /Script/ConZ.CargoDropShip
/// Size: 0x0000 (0x000220 - 0x000220)
class ACargoDropShip : public AActor
{ 
public:
};

/// Class /Script/ConZ.Carousel
/// Size: 0x1B90 (0x000260 - 0x001DF0)
class UCarousel : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0260   (0x0020)  MISSED
	UTextBlock*                                        _selectionDisplay;                                          // 0x0280   (0x0008)  
	UButton*                                           _leftArrow;                                                 // 0x0288   (0x0008)  
	UButton*                                           _rightArrow;                                                // 0x0290   (0x0008)  
	TArray<FText>                                      _carouselValues;                                            // 0x0298   (0x0010)  
	bool                                               _canWrap;                                                   // 0x02A8   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x02A9   (0x0007)  MISSED
	FCarouselStyle                                     _selectedAndFocusedCarouselStyle;                           // 0x02B0   (0x0570)  
	FCarouselStyle                                     _selectedAndUnfocusedCarouselStyle;                         // 0x0820   (0x0570)  
	FCarouselStyle                                     _unselectedCarouselStyle;                                   // 0x0D90   (0x0570)  
	FCarouselStyle                                     _highlightedCarouselStyle;                                  // 0x1300   (0x0570)  
	FCarouselStyle                                     _disabledCarouselStyle;                                     // 0x1870   (0x0570)  
	bool                                               _controlWithMouseWheel;                                     // 0x1DE0   (0x0001)  
	bool                                               _controlWithKeyboard;                                       // 0x1DE1   (0x0001)  
	unsigned char                                      UnknownData02_6[0xE];                                       // 0x1DE2   (0x000E)  MISSED


	/// Functions
	// Function /Script/ConZ.Carousel.ClickRight
	void ClickRight();                                                                                                       // [0x226fdc0] Final|Native|Private 
	// Function /Script/ConZ.Carousel.ClickLeft
	void ClickLeft();                                                                                                        // [0x226fda0] Final|Native|Private 
};

/// Class /Script/ConZ.CarouselWithLabel
/// Size: 0x0568 (0x001DF0 - 0x002358)
class UCarouselWithLabel : public UCarousel
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x1DF0   (0x0018)  MISSED
	UTextBlock*                                        _name;                                                      // 0x1E08   (0x0008)  
	UImage*                                            _focusBackgroundImage;                                      // 0x1E10   (0x0008)  
	FText                                              _label;                                                     // 0x1E18   (0x0018)  
	FCarouselWithLabelStyle                            _selectedAndFocusedCWLStyle;                                // 0x1E30   (0x0108)  
	FCarouselWithLabelStyle                            _selectedAndUnfocusedCWLStyle;                              // 0x1F38   (0x0108)  
	FCarouselWithLabelStyle                            _unselectedCWLStyle;                                        // 0x2040   (0x0108)  
	FCarouselWithLabelStyle                            _highlightedCWLStyle;                                       // 0x2148   (0x0108)  
	FCarouselWithLabelStyle                            _disabledCWLStyle;                                          // 0x2250   (0x0108)  
};

/// Class /Script/ConZ.CCGameUpgradeConditionDisplayWidget
/// Size: 0x0068 (0x000260 - 0x0002C8)
class UCCGameUpgradeConditionDisplayWidget : public UUserWidget
{ 
public:
	UBorder*                                           _border;                                                    // 0x0260   (0x0008)  
	UTextBlock*                                        _text;                                                      // 0x0268   (0x0008)  
	TMap<EDeluxeVersion, FText>                        _requirementTextPerGameUpgrade;                             // 0x0270   (0x0050)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x02C0   (0x0008)  MISSED
};

/// Class /Script/ConZ.CentralBuildingPanel
/// Size: 0x0008 (0x000260 - 0x000268)
class UCentralBuildingPanel : public UTabMenuPanel
{ 
public:
	UPlacedPlaceableWidget*                            _placedPlaceableWidget;                                     // 0x0260   (0x0008)  
};

/// Class /Script/ConZ.WeaponItemState
/// Size: 0x0000 (0x000100 - 0x000100)
class UWeaponItemState : public UItemState
{ 
public:
};

/// Class /Script/ConZ.ChainsawState
/// Size: 0x0010 (0x000100 - 0x000110)
class UChainsawState : public UWeaponItemState
{ 
public:
	float                                              CurrentFuelAmount;                                          // 0x0100   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x0104   (0x000C)  MISSED
};

/// Class /Script/ConZ.WeaponItem
/// Size: 0x0010 (0x000910 - 0x000920)
class AWeaponItem : public AItem
{ 
public:
	uint32_t                                           MaxRange;                                                   // 0x0910   (0x0004)  
	uint32_t                                           ROF;                                                        // 0x0914   (0x0004)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0918   (0x0008)  MISSED
};

/// Class /Script/ConZ.Chainsaw
/// Size: 0x1460 (0x000920 - 0x001D80)
class AChainsaw : public AWeaponItem
{ 
public:
	USkeletalMeshComponent*                            SkeletalMesh;                                               // 0x0920   (0x0008)  
	FCharacterAndItemAnimation                         AnimationsStartEngine;                                      // 0x0928   (0x0010)  
	FCharacterAndItemAnimation                         AnimationsCheckFuelStatus;                                  // 0x0938   (0x0010)  
	UBaseItemTag*                                      ChoppingToolItemTag;                                        // 0x0948   (0x0008)  
	UAkAudioEvent*                                     TurnOnAudioEvent;                                           // 0x0950   (0x0008)  
	UAkAudioEvent*                                     TurnOffAudioEvent;                                          // 0x0958   (0x0008)  
	UClass*                                            _fuelType;                                                  // 0x0960   (0x0008)  
	FGameplayTagContainer                              _inFuelingSocketTypes;                                      // 0x0968   (0x0020)  
	float                                              _maxFuelAmount;                                             // 0x0988   (0x0004)  
	float                                              _initialFuelAmount;                                         // 0x098C   (0x0004)  
	float                                              _fuelUsagePerHour;                                          // 0x0990   (0x0004)  
	float                                              _fuelUsagePerHourMultiplierWhenActive;                      // 0x0994   (0x0004)  
	float                                              _fuelFillingDurationPerAmountFilled;                        // 0x0998   (0x0004)  
	float                                              _fuelFillingExperiencePerAmount;                            // 0x099C   (0x0004)  
	UAnimMontage*                                      _fuelFillingMontage;                                        // 0x09A0   (0x0008)  
	UMeleeSkillAnimationsPreset*                       _meleeSkillAnimationsPresetWhenTurnedOff;                   // 0x09A8   (0x0008)  
	UMeleeSkillAnimationsPreset*                       _meleeSkillAnimationsPresetWhenTurnedOn;                    // 0x09B0   (0x0008)  
	UAkAudioEvent*                                     _fuelStartFillingAudioEvent;                                // 0x09B8   (0x0008)  
	UAkAudioEvent*                                     _fuelStopFillingAudioEvent;                                 // 0x09C0   (0x0008)  
	float                                              _noiseLoudnessWhileStarting;                                // 0x09C8   (0x0004)  
	float                                              _noiseLoudnessWhileRunning;                                 // 0x09CC   (0x0004)  
	float                                              _noiseLoudnessUpdateFrequencyPerHour;                       // 0x09D0   (0x0004)  
	float                                              _currentFuelAmount;                                         // 0x09D4   (0x0004)  
	bool                                               _turnedOn;                                                  // 0x09D8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x13A7];                                    // 0x09D9   (0x13A7)  MISSED


	/// Functions
	// Function /Script/ConZ.Chainsaw.SetUseFuelUsagePerHourMultiplierWhenActive
	void SetUseFuelUsagePerHourMultiplierWhenActive(bool Value);                                                             // [0x2270950] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Chainsaw.Server_SetUseFuelUsagePerHourMultiplierWhenActive
	void Server_SetUseFuelUsagePerHourMultiplierWhenActive(bool Value);                                                      // [0x22707a0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Chainsaw.Server_SetTurnedOn
	void Server_SetTurnedOn(bool Value);                                                                                     // [0x2270710] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Chainsaw.OnRep_TurnedOn
	void OnRep_TurnedOn(bool oldValue);                                                                                      // [0x22704c0] Final|Native|Private 
	// Function /Script/ConZ.Chainsaw.GetUseFuelUsagePerHourMultiplierWhenActive
	bool GetUseFuelUsagePerHourMultiplierWhenActive();                                                                       // [0x226ff60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.ChainsawAnimInstance
/// Size: 0x0010 (0x0002D0 - 0x0002E0)
class UChainsawAnimInstance : public UItemAnimInstance
{ 
public:
	bool                                               _isTurnedOn;                                                // 0x02D0   (0x0001)  
	unsigned char                                      UnknownData00_6[0xF];                                       // 0x02D1   (0x000F)  MISSED
};

/// Class /Script/ConZ.Weapon
/// Size: 0x2640 (0x000920 - 0x002F60)
class AWeapon : public AWeaponItem
{ 
public:
	FMulticastInlineDelegate                           AttachmentAdded;                                            // 0x0918   (0x0010)  
	FMulticastInlineDelegate                           AttachmentRemoved;                                          // 0x0928   (0x0010)  
	unsigned char                                      UnknownData00_5[0x48];                                      // 0x0938   (0x0048)  MISSED
	USkeletalMeshComponent*                            SkeletalMesh;                                               // 0x0980   (0x0008)  
	EWeaponFiringStateType                             WeaponFiringStateType;                                      // 0x0988   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0989   (0x0007)  MISSED
	UWeaponStateFiring*                                TempWeaponStateFiringAutomatic;                             // 0x0990   (0x0008)  
	UWeaponStateFiring*                                TempWeaponStateFiringSemiAutomatic;                         // 0x0998   (0x0008)  
	UWeaponStateFiring*                                TempWeaponStateFiringManual;                                // 0x09A0   (0x0008)  
	UWeaponStateFiring*                                TempWeaponStateFiringBurst;                                 // 0x09A8   (0x0008)  
	UWeaponStateActiveManualFiring*                    TempWeaponStateActiveManualFiring;                          // 0x09B0   (0x0008)  
	UWeaponStateFiring*                                FiringState;                                                // 0x09B8   (0x0008)  
	TArray<EWeaponFiringMode>                          SupportedFiringModes;                                       // 0x09C0   (0x0010)  
	TArray<UStaticMeshComponent*>                      CartridgeMeshComponents;                                    // 0x09D0   (0x0010)  
	TArray<UClass*>                                    ReloadActionSequenceClasses;                                // 0x09E0   (0x0010)  
	TArray<UClass*>                                    UnloadAmmoActionSequenceClasses;                            // 0x09F0   (0x0010)  
	TArray<UClass*>                                    CheckAmmoActionSequenceClasses;                             // 0x0A00   (0x0010)  
	TArray<UWeaponActionReloadSequence*>               ReloadActionSequences;                                      // 0x0A10   (0x0010)  
	TArray<UWeaponActionClearMalfunctionSequence*>     ClearMalfunctionActionSequences;                            // 0x0A20   (0x0010)  
	TArray<UWeaponActionUnloadAmmoSequence*>           UnloadAmmoActionSequences;                                  // 0x0A30   (0x0010)  
	TArray<UWeaponActionCheckAmmoSequence*>            CheckAmmoActionSequences;                                   // 0x0A40   (0x0010)  
	FGameplayTagContainer                              AmmunitionTags;                                             // 0x0A50   (0x0020)  
	UClass*                                            DefaultAmmunitionItemClass;                                 // 0x0A70   (0x0008)  
	int32_t                                            RequiredAmmoForShot;                                        // 0x0A78   (0x0004)  
	int32_t                                            MaxLoadedAmmo;                                              // 0x0A7C   (0x0004)  
	int32_t                                            EventMaxAmmo;                                               // 0x0A80   (0x0004)  
	int32_t                                            InitialAmmo;                                                // 0x0A84   (0x0004)  
	int32_t                                            InternalMagazineCapacity;                                   // 0x0A88   (0x0004)  
	bool                                               UseChamberAsInternalMagazine;                               // 0x0A8C   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0A8D   (0x0003)  MISSED
	int32_t                                            BurstShotsCount;                                            // 0x0A90   (0x0004)  
	bool                                               IgnoreProceduralDownTheSightFiringAnimation;                // 0x0A94   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x0A95   (0x0003)  MISSED
	UAnimMontage*                                      FireAnimation;                                              // 0x0A98   (0x0008)  
	UAnimMontage*                                      FireAnimationLastRound;                                     // 0x0AA0   (0x0008)  
	UAnimMontage*                                      FireAnimationBody;                                          // 0x0AA8   (0x0008)  
	UAnimMontage*                                      FirstPersonFireAnimationBody;                               // 0x0AB0   (0x0008)  
	UAnimMontage*                                      FireAutomaticAnimationBody;                                 // 0x0AB8   (0x0008)  
	FBodyWeaponAnimation                               BodyWeaponAnimationChamber;                                 // 0x0AC0   (0x0010)  
	UAnimMontage*                                      CheckFiringModeAnimationBody;                               // 0x0AD0   (0x0008)  
	UAnimMontage*                                      ChangeFiringModeAnimationBody;                              // 0x0AD8   (0x0008)  
	TMap<UClass*, FWeaponAttachmentAnimations>         AttachmentsAnimations;                                      // 0x0AE0   (0x0050)  
	FName                                              MuzzleSocketName;                                           // 0x0B30   (0x0008)  
	FName                                              GripCorrectionSocketName;                                   // 0x0B38   (0x0008)  
	FName                                              AimingDownTheSightsCenterSocketName;                        // 0x0B40   (0x0008)  
	FName                                              EjectCasingSocketName;                                      // 0x0B48   (0x0008)  
	bool                                               IgnoreSupportingHandIK;                                     // 0x0B50   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x0B51   (0x0003)  MISSED
	FName                                              SupportingHandIKSocketName;                                 // 0x0B54   (0x0008)  
	FVector                                            SupportingHandIKLocation;                                   // 0x0B5C   (0x000C)  
	FVector                                            AimingDownTheSightsLocationOffset;                          // 0x0B68   (0x000C)  
	unsigned char                                      UnknownData05_5[0xC];                                       // 0x0B74   (0x000C)  MISSED
	FTransform                                         HolsteredOnPrisonerLeftOffset;                              // 0x0B80   (0x0030)  
	FTransform                                         HolsteredOnPrisonerRightOffset;                             // 0x0BB0   (0x0030)  
	bool                                               UseWeaponFOVWhileScoping;                                   // 0x0BE0   (0x0001)  
	unsigned char                                      UnknownData06_5[0x3];                                       // 0x0BE1   (0x0003)  MISSED
	float                                              WeaponFOVWhileScoping;                                      // 0x0BE4   (0x0004)  
	FVector                                            WeaponCameraOffsetWhileScoping;                             // 0x0BE8   (0x000C)  
	unsigned char                                      UnknownData07_5[0x4];                                       // 0x0BF4   (0x0004)  MISSED
	FRuntimeFloatCurve                                 OffsetPerAspectRatioWhileScoping;                           // 0x0BF8   (0x0088)  
	bool                                               IgnoreZeroRangeChange;                                      // 0x0C80   (0x0001)  
	unsigned char                                      UnknownData08_5[0x3];                                       // 0x0C81   (0x0003)  MISSED
	int32_t                                            ZeroRange;                                                  // 0x0C84   (0x0004)  
	int32_t                                            ZeroRangeStep;                                              // 0x0C88   (0x0004)  
	int32_t                                            ZeroRangeMax;                                               // 0x0C8C   (0x0004)  
	UProjectileImpactEffects*                          InstantHitImpactEffects;                                    // 0x0C90   (0x0008)  
	float                                              FieldOfView;                                                // 0x0C98   (0x0004)  
	float                                              DepthOfFieldFocalDistance;                                  // 0x0C9C   (0x0004)  
	float                                              DepthOfFieldFstop;                                          // 0x0CA0   (0x0004)  
	float                                              ObstaclesDetectionOffset;                                   // 0x0CA4   (0x0004)  
	bool                                               UseFiringModeBoneRotation;                                  // 0x0CA8   (0x0001)  
	unsigned char                                      UnknownData09_5[0x3];                                       // 0x0CA9   (0x0003)  MISSED
	FRotator                                           FiringModeBoneRotations;                                    // 0x0CAC   (0x0024)  
	FPostProcessSettings                               PostProcessSettings;                                        // 0x0CD0   (0x0560)  
	UAnimSequenceBase*                                 RelaxedGripCorrectionAnimationPose;                         // 0x1230   (0x0020)  
	UAnimSequenceBase*                                 AimingHipAnimationPose;                                     // 0x1250   (0x0020)  
	UAnimSequenceBase*                                 AimingDownTheSightsAnimationPose;                           // 0x1270   (0x0020)  
	UAnimSequenceBase*                                 AimingDownTheSightsStillAnimationPose;                      // 0x1290   (0x0020)  
	UAnimSequenceBase*                                 AimingDownTheSightsWalkingAnimationPose;                    // 0x12B0   (0x0020)  
	UAnimSequenceBase*                                 AimingDownTheSightsLimpingWalkingAnimationPose;             // 0x12D0   (0x0020)  
	UBlendSpace*                                       WeaponAimOffsets;                                           // 0x12F0   (0x0038)  
	UBlendSpace1D*                                     AimingDownTheSightsZeroRangeBlendSpace;                     // 0x1328   (0x0008)  
	EWeaponCategory                                    WeaponCategory;                                             // 0x1330   (0x0001)  
	bool                                               IgnoreAimingSpread;                                         // 0x1331   (0x0001)  
	bool                                               UseCustomWeaponSpreadData;                                  // 0x1332   (0x0001)  
	unsigned char                                      UnknownData10_5[0x1];                                       // 0x1333   (0x0001)  MISSED
	FWeaponSpreadData                                  WeaponSpreadData;                                           // 0x1334   (0x0040)  
	bool                                               UseCustomWeaponViewKickData;                                // 0x1374   (0x0001)  
	unsigned char                                      UnknownData11_5[0x3];                                       // 0x1375   (0x0003)  MISSED
	FWeaponViewKickData                                WeaponViewKickData;                                         // 0x1378   (0x0018)  
	float                                              ViewKickMultiplier;                                         // 0x1390   (0x0004)  
	float                                              MaxRecoilOffset;                                            // 0x1394   (0x0004)  
	float                                              RecoilRecoverySpeed;                                        // 0x1398   (0x0004)  
	float                                              MuzzleEffectsScaleDistanceStart;                            // 0x139C   (0x0004)  
	float                                              MuzzleEffectsScaleDistanceRange;                            // 0x13A0   (0x0004)  
	float                                              MuzzleEffectsScaleByDistanceFactor;                         // 0x13A4   (0x0004)  
	float                                              ChamberBulletDelay;                                         // 0x13A8   (0x0004)  
	bool                                               ChamberBulletAutomatically;                                 // 0x13AC   (0x0001)  
	bool                                               ChamberBulletWhenMagazineIsAttached;                        // 0x13AD   (0x0001)  
	unsigned char                                      UnknownData12_5[0x2];                                       // 0x13AE   (0x0002)  MISSED
	float                                              DamagePerShot;                                              // 0x13B0   (0x0004)  
	bool                                               TestWeapon;                                                 // 0x13B4   (0x0001)  
	unsigned char                                      UnknownData13_5[0x3];                                       // 0x13B5   (0x0003)  MISSED
	TArray<FFireAnimationData>                         WornOutFiringAnimations;                                    // 0x13B8   (0x0010)  
	bool                                               CanBeInspectedWhenMalfunctioned;                            // 0x13C8   (0x0001)  
	unsigned char                                      UnknownData14_5[0x7];                                       // 0x13C9   (0x0007)  MISSED
	UAnimMontage*                                      InspectModeAnimation;                                       // 0x13D0   (0x0008)  
	bool                                               UseCustomMalfunctionChances;                                // 0x13D8   (0x0001)  
	unsigned char                                      UnknownData15_5[0x3];                                       // 0x13D9   (0x0003)  MISSED
	FWeaponMalfunctionChances                          MalfunctionChances;                                         // 0x13DC   (0x0038)  
	FName                                              StovePipeSocketName;                                        // 0x1414   (0x0008)  
	unsigned char                                      UnknownData16_5[0x4];                                       // 0x141C   (0x0004)  MISSED
	UStaticMesh*                                       StovePipeMesh;                                              // 0x1420   (0x0008)  
	FName                                              DoubleFeedSocketName;                                       // 0x1428   (0x0008)  
	UStaticMesh*                                       DoubleFeedMesh;                                             // 0x1430   (0x0008)  
	bool                                               ShouldClearInspectModeWhenClearingMalfunction;              // 0x1438   (0x0001)  
	unsigned char                                      UnknownData17_5[0x7];                                       // 0x1439   (0x0007)  MISSED
	TArray<UClass*>                                    ClearMalfunctionSequenceClasses;                            // 0x1440   (0x0010)  
	TMap<EWeaponMalfunction, FWeaponMalfunctionData>   MalfunctionsData;                                           // 0x1450   (0x0050)  
	float                                              DTSModeLerpDurationIn;                                      // 0x14A0   (0x0004)  
	float                                              DTSModeLerpDurationOut;                                     // 0x14A4   (0x0004)  
	UCurveFloat*                                       DownTheSightsModeLerpCurveOverride;                         // 0x14A8   (0x0008)  
	UWeaponState*                                      _currentState;                                              // 0x14B0   (0x0008)  
	UWeaponState*                                      _activeState;                                               // 0x14B8   (0x0008)  
	UWeaponStateEquipping*                             _equippingState;                                            // 0x14C0   (0x0008)  
	UWeaponState*                                      _unequippingStateDefault;                                   // 0x14C8   (0x0008)  
	UWeaponState*                                      _unequippingState;                                          // 0x14D0   (0x0008)  
	UWeaponState*                                      _inactiveState;                                             // 0x14D8   (0x0008)  
	UWeaponState*                                      _chamberBulletState;                                        // 0x14E0   (0x0008)  
	UWeaponStateReload*                                _reloadState2;                                              // 0x14E8   (0x0008)  
	UWeaponStateClearMalfunction*                      _clearMalfunctionState;                                     // 0x14F0   (0x0008)  
	UWeaponStateUnloadAmmo*                            _unloadAmmoState;                                           // 0x14F8   (0x0008)  
	UWeaponStateCheckAmmo*                             _checkAmmoState;                                            // 0x1500   (0x0008)  
	EWeaponMuzzleEffectsSpawType                       _muzzleEffectsSpawnType;                                    // 0x1508   (0x0001)  
	unsigned char                                      UnknownData18_5[0x7];                                       // 0x1509   (0x0007)  MISSED
	UParticleSystem*                                   _muzzlePS;                                                  // 0x1510   (0x0008)  
	UParticleSystem*                                   _suppressorMuzzlePS;                                        // 0x1518   (0x0008)  
	UParticleSystemComponent*                          _muzzlePSC;                                                 // 0x1520   (0x0008)  
	UParticleSystem*                                   _smokeAfterShotFiredPS;                                     // 0x1528   (0x0008)  
	UParticleSystemComponent*                          _smokeAfterShotFiredPSC;                                    // 0x1530   (0x0008)  
	UParticleSystem*                                   _ejectCasingPS;                                             // 0x1538   (0x0008)  
	UParticleSystem*                                   _ejectLiveRoundPS;                                          // 0x1540   (0x0008)  
	UWeaponPaintjobItemComponent*                      _paintjobComponent;                                         // 0x1548   (0x0008)  
	APrisoner*                                         _weaponOwner;                                               // 0x1550   (0x0008)  
	TArray<FAmmunitionData>                            _loadedAmmoData;                                            // 0x1558   (0x0010)  
	unsigned char                                      UnknownData19_5[0x2];                                       // 0x1568   (0x0002)  MISSED
	bool                                               _shouldOverrideUseMuzzleDirectionForShooting;               // 0x156A   (0x0001)  
	bool                                               _useMuzzleDirectionForShootingOverride;                     // 0x156B   (0x0001)  
	TWeakObjectPtr<AActor*>                            _projectileTargetLocationOverride;                          // 0x156C   (0x0008)  
	unsigned char                                      UnknownData20_5[0x80];                                      // 0x1574   (0x0080)  MISSED
	EWeaponFiringMode                                  _firingMode;                                                // 0x15F4   (0x0001)  
	unsigned char                                      UnknownData21_5[0x13];                                      // 0x15F5   (0x0013)  MISSED
	TArray<AWeaponAttachment*>                         _weaponAttachmentsReplicated;                               // 0x1608   (0x0010)  
	unsigned char                                      UnknownData22_5[0x28];                                      // 0x1618   (0x0028)  MISSED
	TArray<FAmmunitionData>                            _internalMagazineAmmoData;                                  // 0x1640   (0x0010)  
	int32_t                                            _usedAmmoCount;                                             // 0x1650   (0x0004)  
	unsigned char                                      UnknownData23_5[0x1];                                       // 0x1654   (0x0001)  MISSED
	bool                                               _shouldPlayChamberOpenedIdle;                               // 0x1655   (0x0001)  
	unsigned char                                      UnknownData24_5[0xF];                                       // 0x1656   (0x000F)  MISSED
	bool                                               _isInGameEvent;                                             // 0x1665   (0x0001)  
	unsigned char                                      UnknownData25_5[0x2];                                       // 0x1666   (0x0002)  MISSED
	UAkAudioEvent*                                     _fireSingleShotAudioEvent;                                  // 0x1668   (0x0008)  
	UAkAudioEvent*                                     _startAutoFireAudioEvent;                                   // 0x1670   (0x0008)  
	UAkAudioEvent*                                     _stopAutoFireAudioEvent;                                    // 0x1678   (0x0008)  
	UAkAudioEvent*                                     _suppressorFireSingleShotAudioEvent;                        // 0x1680   (0x0008)  
	UAkAudioEvent*                                     _suppressorStartAutoFireAudioEvent;                         // 0x1688   (0x0008)  
	UAkAudioEvent*                                     _suppressorStopAutoFireAudioEvent;                          // 0x1690   (0x0008)  
	UAkAudioEvent*                                     _improvisedSuppressorFireSingleShotAudioEvent;              // 0x1698   (0x0008)  
	UAkAudioEvent*                                     _improvisedSuppressorStartAutoFireAudioEvent;               // 0x16A0   (0x0008)  
	UAkAudioEvent*                                     _improvisedSuppressorStopAutoFireAudioEvent;                // 0x16A8   (0x0008)  
	UAkAudioEvent*                                     _noAmmoAudioEvent;                                          // 0x16B0   (0x0008)  
	UAkAudioEvent*                                     _dryFireUncockedAudioEvent;                                 // 0x16B8   (0x0008)  
	UAkAudioEvent*                                     _zeroRangeClickAudioEvent;                                  // 0x16C0   (0x0008)  
	UAkAudioEvent*                                     _changeFiringModeAudioEvent;                                // 0x16C8   (0x0008)  
	UAkAudioEvent*                                     _onMalfunctionAudioEvent;                                   // 0x16D0   (0x0008)  
	UAkAudioEvent*                                     _switchADSStateAudioEvent;                                  // 0x16D8   (0x0008)  
	UAkAudioEvent*                                     _indoorSmallHearingDamageAudioEvent;                        // 0x16E0   (0x0008)  
	UAkAudioEvent*                                     _indoorMediumHearingDamageAudioEvent;                       // 0x16E8   (0x0008)  
	UAkAudioEvent*                                     _indoorLargeHearingDamageAudioEvent;                        // 0x16F0   (0x0008)  
	UAkAudioEvent*                                     _outdoorLargeHearingDamageAudioEvent;                       // 0x16F8   (0x0008)  
	float                                              _makeNoiseLoudness;                                         // 0x1700   (0x0004)  
	unsigned char                                      UnknownData26_5[0x10];                                      // 0x1704   (0x0010)  MISSED
	float                                              _staminaDrainMultiplier;                                    // 0x1714   (0x0004)  
	unsigned char                                      UnknownData27_5[0xC];                                       // 0x1718   (0x000C)  MISSED
	EWeaponMalfunction                                 _malfunction;                                               // 0x1724   (0x0001)  
	EWeaponBehaviourMode                               _behaviourMode;                                             // 0x1725   (0x0001)  
	unsigned char                                      UnknownData28_5[0x22];                                      // 0x1726   (0x0022)  MISSED
	UClass*                                            _loadedAmmunitionItemClass;                                 // 0x1748   (0x0008)  
	unsigned char                                      UnknownData29_5[0x8];                                       // 0x1750   (0x0008)  MISSED
	UClass*                                            _loadedProjectileClass;                                     // 0x1758   (0x0008)  
	UClass*                                            _defaultProjectileClass;                                    // 0x1760   (0x0008)  
	unsigned char                                      UnknownData30_5[0xC];                                       // 0x1768   (0x000C)  MISSED
	float                                              _totalControllerPitchAmountToAdd;                           // 0x1774   (0x0004)  
	float                                              _controllerPitchAddTimeFrame;                               // 0x1778   (0x0004)  
	unsigned char                                      UnknownData31_5[0x1784];                                    // 0x177C   (0x1784)  MISSED
	FWeaponStateSyncData                               _ownerWeaponStateSyncData;                                  // 0x2F00   (0x0048)  
	unsigned char                                      UnknownData32_6[0x18];                                      // 0x2F48   (0x0018)  MISSED


	/// Functions
	// Function /Script/ConZ.Weapon.UpdateReloadData
	void UpdateReloadData(FWeaponReloadData& reloadDataIn, FWeaponReloadData& reloadDataOut);                                // [0x240f510] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.UpdateAmmunitionMeshes
	void UpdateAmmunitionMeshes(TArray<int32_t>& ammoIndices, bool showReversed);                                            // [0x240f410] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.Weapon.UpdateActiveSightAndScopeComponents
	void UpdateActiveSightAndScopeComponents();                                                                              // [0x240f3f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.Unequip
	void Unequip();                                                                                                          // [0x240f3d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.StopFiringEffects
	void StopFiringEffects();                                                                                                // [0x240f3b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.StopFire
	void StopFire();                                                                                                         // [0x240f390] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.StartFire
	void StartFire();                                                                                                        // [0x240f370] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.ShouldPlayChamberOpenedIdle
	bool ShouldPlayChamberOpenedIdle();                                                                                      // [0x240f340] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.ShouldPlayCasingEjectedSound
	bool ShouldPlayCasingEjectedSound();                                                                                     // [0x240f310] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.Weapon.ShouldClearMalfunctionOnEvent
	bool ShouldClearMalfunctionOnEvent(EWeaponMalfunction malfunction, EWeaponMalfunctionEvent malfunctionEvent);            // [0x240f230] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.Weapon.SetZeroRangeOnServer
	void SetZeroRangeOnServer(int32_t ZeroRange);                                                                            // [0x240f1a0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Weapon.SetUseWeaponAnimationPose
	void SetUseWeaponAnimationPose(bool Value);                                                                              // [0x240f110] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.SetUseMuzzleDirectionForShooting
	void SetUseMuzzleDirectionForShooting(bool Value);                                                                       // [0x240f080] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.SetShouldPlayChamberOpenedIdle
	void SetShouldPlayChamberOpenedIdle(bool Value);                                                                         // [0x240eff0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.SetOverrideUseWeaponAnimationPose
	void SetOverrideUseWeaponAnimationPose(bool Value);                                                                      // [0x240ef60] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.SetMalfunction
	void SetMalfunction(EWeaponMalfunction Type);                                                                            // [0x240eee0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.SetMakeNoiseLoudness
	void SetMakeNoiseLoudness(bool Value);                                                                                   // [0x240ee50] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.SetLoadedProjectileClass
	void SetLoadedProjectileClass(UClass* projectileClass);                                                                  // [0x240edc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.SetIsScopingAllowed
	void SetIsScopingAllowed(bool Value);                                                                                    // [0x240ed30] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.SetIsChambering
	void SetIsChambering(bool Value);                                                                                        // [0x240eca0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.SetFiringModeOnServer
	void SetFiringModeOnServer(EWeaponFiringMode Value);                                                                     // [0x240ec20] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Weapon.SetFiringMode
	void SetFiringMode(EWeaponFiringMode Value);                                                                             // [0x240eba0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.Server_SwapAttachments
	void Server_SwapAttachments(AWeaponAttachment* oldAttachment, AWeaponAttachment* newAttachment);                         // [0x240ead0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Weapon.Server_StopFiringEffects
	void Server_StopFiringEffects();                                                                                         // [0x2264c00] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Weapon.Server_StopChamberEffects
	void Server_StopChamberEffects();                                                                                        // [0x240eab0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Weapon.Server_SetMalfunction
	void Server_SetMalfunction(EWeaponMalfunction Type);                                                                     // [0x240ea30] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Weapon.Server_SetBehaviourMode
	void Server_SetBehaviourMode(EWeaponBehaviourMode mode);                                                                 // [0x240e9b0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Weapon.Server_RemoveCartridgeFromWeapon
	void Server_RemoveCartridgeFromWeapon();                                                                                 // [0x240e990] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Weapon.Server_PlayFiringEffects
	void Server_PlayFiringEffects(bool isLastShot);                                                                          // [0x240e900] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Weapon.Server_PlayDryFireSound
	void Server_PlayDryFireSound();                                                                                          // [0x227e160] Final|Net|Native|Event|Private|NetServer 
	// Function /Script/ConZ.Weapon.Server_PlayChamberEffects
	void Server_PlayChamberEffects();                                                                                        // [0x224f640] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Weapon.Server_OnChamberOpenedClosed
	void Server_OnChamberOpenedClosed();                                                                                     // [0x240e8e0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Weapon.Server_OnChamberOpened
	void Server_OnChamberOpened();                                                                                           // [0x240e8c0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Weapon.Server_OnChamberClosed
	void Server_OnChamberClosed();                                                                                           // [0x240e8a0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Weapon.Server_InsertCartridgeIntoWeapon
	void Server_InsertCartridgeIntoWeapon(AAmmunitionItem* ammo, FAmmunitionData AmmunitionData);                            // [0x240e7a0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Weapon.Server_FireShotProjectile
	void Server_FireShotProjectile(FFireShotProjectileData Data, FFireShotDescription desc);                                 // [0x240e6a0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Weapon.Server_DropAttachment
	void Server_DropAttachment(AWeaponAttachment* Attachment);                                                               // [0x240e610] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Weapon.Server_CancelFiringEffects
	void Server_CancelFiringEffects();                                                                                       // [0x240e5f0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Weapon.ResetZeroRange
	void ResetZeroRange();                                                                                                   // [0x240e5d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.RequestClearMalfunction
	void RequestClearMalfunction(EWeaponMalfunction malfunction);                                                            // [0x240e550] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.RemoveAttachmentOnServer
	void RemoveAttachmentOnServer(AWeaponAttachment* Attachment);                                                            // [0x240e4c0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Weapon.RemoveAttachmentLocal
	void RemoveAttachmentLocal(AWeaponAttachment* Attachment);                                                               // [0x240e430] Final|Native|Private|BlueprintCallable 
	// Function /Script/ConZ.Weapon.RemoveAttachment
	void RemoveAttachment(AWeaponAttachment* Attachment);                                                                    // [0x240e3a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.RemoveAmmo
	void RemoveAmmo(int32_t Amount);                                                                                         // [0x240e310] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.PlayFiringEffects
	void PlayFiringEffects(bool isLastShot);                                                                                 // [0x240e280] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.OnWeaponActionAnimNotify
	void OnWeaponActionAnimNotify(EWeaponActionNotifyType notifyType);                                                       // [0x240e200] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.Weapon.OnStaminaDrained
	void OnStaminaDrained();                                                                                                 // [0x240e1e0] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.Weapon.OnShotFired
	void OnShotFired(bool isLastShot);                                                                                       // [0x240e150] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.Weapon.OnRep_WeaponAttachmentsReplicated
	void OnRep_WeaponAttachmentsReplicated();                                                                                // [0x240e130] Final|Native|Private 
	// Function /Script/ConZ.Weapon.OnRep_OwnerWeaponStateSyncData
	void OnRep_OwnerWeaponStateSyncData();                                                                                   // [0x240e110] Final|Native|Private 
	// Function /Script/ConZ.Weapon.OnRep_Malfunction
	void OnRep_Malfunction();                                                                                                // [0x240e0f0] Final|Native|Private 
	// Function /Script/ConZ.Weapon.OnRep_FireShotCounterEffectsSync
	void OnRep_FireShotCounterEffectsSync();                                                                                 // [0x2299730] Native|Public        
	// Function /Script/ConZ.Weapon.OnRep_BehaviourMode
	void OnRep_BehaviourMode();                                                                                              // [0x240e0d0] Final|Native|Private 
	// Function /Script/ConZ.Weapon.OnChamberOpened
	void OnChamberOpened();                                                                                                  // [0x2364470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/ConZ.Weapon.OnChamberClosed
	void OnChamberClosed();                                                                                                  // [0x23618f0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/ConZ.Weapon.OnAttachmentRemoved
	void OnAttachmentRemoved(AWeaponAttachment* Attachment);                                                                 // [0x2364350] Native|Event|Protected|BlueprintEvent 
	// Function /Script/ConZ.Weapon.OnAttachmentAdded
	void OnAttachmentAdded(AWeaponAttachment* Attachment);                                                                   // [0x240dfb0] Native|Event|Protected|BlueprintEvent 
	// Function /Script/ConZ.Weapon.NotifyMissOnServer
	void NotifyMissOnServer(FVector_NetQuantizeNormal shootDirection, int32_t randomSeed, float reticleSpread);              // [0x240de90] Final|Net|Native|Event|Private|NetServer 
	// Function /Script/ConZ.Weapon.NotifyHitOnServer
	void NotifyHitOnServer(FHitResult HitResult, FVector_NetQuantizeNormal shootDirection, int32_t randomSeed, float reticleSpread); // [0x240dd00] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Weapon.NetMulticast_StopFiringEffects
	void NetMulticast_StopFiringEffects();                                                                                   // [0x22d5750] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Weapon.NetMulticast_StopChamberEffects
	void NetMulticast_StopChamberEffects();                                                                                  // [0x240dce0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Weapon.NetMulticast_PlayFiringEffects
	void NetMulticast_PlayFiringEffects(bool isLastShot);                                                                    // [0x240dc50] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Weapon.NetMulticast_PlayDryFireSound
	void NetMulticast_PlayDryFireSound();                                                                                    // [0x22d28c0] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.Weapon.NetMulticast_PlayChamberEffects
	void NetMulticast_PlayChamberEffects();                                                                                  // [0x240dc30] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Weapon.NetMulticast_CancelFiringEffects
	void NetMulticast_CancelFiringEffects();                                                                                 // [0x240dc10] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Weapon.IsMalfunctionSupported
	bool IsMalfunctionSupported(EWeaponMalfunction malfunction);                                                             // [0x240db50] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.Weapon.IsInGameEvent
	bool IsInGameEvent();                                                                                                    // [0x240db20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.IsFiring
	bool IsFiring();                                                                                                         // [0x240daf0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.IsChamberOpened
	bool IsChamberOpened();                                                                                                  // [0x240dac0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.IsAmmoInMagazineCompatible
	bool IsAmmoInMagazineCompatible(AWeaponAttachmentMagazine* magazine);                                                    // [0x240d9f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.IsAmmoCompatible
	bool IsAmmoCompatible(FGameplayTag& AmmunitionTag);                                                                      // [0x240d950] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.IncrementZeroRange
	void IncrementZeroRange();                                                                                               // [0x240d930] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.HasEnoughAmmo
	bool HasEnoughAmmo();                                                                                                    // [0x240d900] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.HasAmmoToUnload
	bool HasAmmoToUnload();                                                                                                  // [0x240d8d0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetZeroRange
	int32_t GetZeroRange();                                                                                                  // [0x240d8a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetWeaponOwner
	APrisoner* GetWeaponOwner();                                                                                             // [0x240d870] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetUseWeaponAnimationPose
	bool GetUseWeaponAnimationPose();                                                                                        // [0x240d810] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetUseMuzzleDirectionForShooting
	bool GetUseMuzzleDirectionForShooting();                                                                                 // [0x240d7e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetUsedAmmoCount
	int32_t GetUsedAmmoCount();                                                                                              // [0x240d840] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetType
	EWeaponType GetType();                                                                                                   // [0x240d7b0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetSpread
	float GetSpread();                                                                                                       // [0x240d740] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetShakiness
	float GetShakiness();                                                                                                    // [0x240d700] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetReloadActionSequenceForData
	UWeaponActionReloadSequence* GetReloadActionSequenceForData(FWeaponReloadData& reloadData);                              // [0x240d640] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/ConZ.Weapon.GetRangedWeaponsSkill
	URangedWeaponsSkill* GetRangedWeaponsSkill();                                                                            // [0x240d610] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetProbabilityForMalfunction
	float GetProbabilityForMalfunction(EWeaponMalfunction malfunction, float normalizedHealth);                              // [0x240d530] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetOverrideUseWeaponAnimationPose
	bool GetOverrideUseWeaponAnimationPose();                                                                                // [0x240d500] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetMuzzleLocation
	FVector GetMuzzleLocation();                                                                                             // [0x240d4c0] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetMuzzleDirection
	FVector GetMuzzleDirection();                                                                                            // [0x240d480] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetMaxAmmoCount
	int32_t GetMaxAmmoCount();                                                                                               // [0x240d450] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetMalfunctionsForEvent
	void GetMalfunctionsForEvent(EWeaponMalfunctionEvent malfunctionEvent, FWeaponMalfunctionEventDescription& desc, TArray<FWeaponMalfunctionProbability>& malfunctionsIn, TArray<FWeaponMalfunctionProbability>& malfunctionsOut); // [0x240d290] Native|Event|Public|HasOutParms|BlueprintEvent|Const 
	// Function /Script/ConZ.Weapon.GetMakeNoiseLoudness
	float GetMakeNoiseLoudness();                                                                                            // [0x240d260] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetMagazine
	AWeaponAttachmentMagazine* GetMagazine();                                                                                // [0x240d230] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetLoadedProjectileClass
	UClass* GetLoadedProjectileClass();                                                                                      // [0x240d1f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetLoadedAmmoCount
	int32_t GetLoadedAmmoCount();                                                                                            // [0x240d1c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetLiveAmmoCount
	int32_t GetLiveAmmoCount();                                                                                              // [0x240d190] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetIsScopingAllowed
	bool GetIsScopingAllowed();                                                                                              // [0x240d160] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetIsChambering
	bool GetIsChambering();                                                                                                  // [0x240d130] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetInternalMagazineSpace
	int32_t GetInternalMagazineSpace();                                                                                      // [0x240d100] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetInternalMagazineAmmoCount
	int32_t GetInternalMagazineAmmoCount();                                                                                  // [0x240d0d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetFiringMontage
	UAnimMontage* GetFiringMontage(bool isLastShot);                                                                         // [0x240d030] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.Weapon.GetFiringMode
	EWeaponFiringMode GetFiringMode();                                                                                       // [0x240d000] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetFiringBodyWeaponAnimation
	FBodyWeaponAnimation GetFiringBodyWeaponAnimation();                                                                     // [0x240cfc0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.Weapon.GetDefaultAmmunitionData
	FAmmunitionData GetDefaultAmmunitionData();                                                                              // [0x240cf50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetAmmunitionItemClass
	UClass* GetAmmunitionItemClass();                                                                                        // [0x240cef0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetAmmoTypeString
	FString GetAmmoTypeString();                                                                                             // [0x240ce70] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetAmmoReloadCapacity
	int32_t GetAmmoReloadCapacity(AAmmunitionItem* ammo);                                                                    // [0x240cdd0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.GetAmmoCount
	int32_t GetAmmoCount();                                                                                                  // [0x240cda0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.FireShot
	void FireShot();                                                                                                         // [0x240cd80] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.FindReloadData
	bool FindReloadData(TArray<AItem*>& Items, FWeaponReloadData& reloadData);                                               // [0x240cc50] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.FillUpWithDefaultAmmo
	void FillUpWithDefaultAmmo();                                                                                            // [0x240cc30] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/ConZ.Weapon.Equip
	void Equip();                                                                                                            // [0x240cc10] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.DestroyAmmunitionMeshes
	void DestroyAmmunitionMeshes();                                                                                          // [0x240cbf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.DecrementZeroRange
	void DecrementZeroRange();                                                                                               // [0x240cbd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.CreateAmmunitionMeshes
	void CreateAmmunitionMeshes();                                                                                           // [0x240c960] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.Client_SetupForEvent
	void Client_SetupForEvent();                                                                                             // [0x235f030] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/ConZ.Weapon.CanSwitchFiringMode
	bool CanSwitchFiringMode();                                                                                              // [0x240c910] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.Weapon.CanReloadUsingData
	bool CanReloadUsingData(FWeaponReloadData& Data);                                                                        // [0x240c850] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.CanFireAgain
	bool CanFireAgain();                                                                                                     // [0x240c820] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.Weapon.CancelFire
	void CancelFire();                                                                                                       // [0x240c940] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.CanBeginFiringSequenceWithMalfunction
	bool CanBeginFiringSequenceWithMalfunction(EWeaponMalfunction malfunction);                                              // [0x240c790] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.Weapon.CanAddAttachment
	bool CanAddAttachment(AWeaponAttachment* Attachment);                                                                    // [0x240c6f0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/ConZ.Weapon.AttachmentRemovedSignature__DelegateSignature
	void AttachmentRemovedSignature__DelegateSignature(AWeapon* sender, AWeaponAttachment* Attachment);                      // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.Weapon.AttachmentAddedSignature__DelegateSignature
	void AttachmentAddedSignature__DelegateSignature(AWeapon* sender, AWeaponAttachment* Attachment);                        // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.Weapon.AddAttachmentOnServer
	void AddAttachmentOnServer(AWeaponAttachment* Attachment);                                                               // [0x240c660] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Weapon.AddAttachmentLocal
	void AddAttachmentLocal(AWeaponAttachment* Attachment, bool attach);                                                     // [0x240c590] Final|Native|Private|BlueprintCallable 
	// Function /Script/ConZ.Weapon.AddAttachment
	void AddAttachment(AWeaponAttachment* Attachment, bool attach, bool removeExistingOnTheSameMountType);                   // [0x240c480] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Weapon.AddAmmoSingleAtLocation
	void AddAmmoSingleAtLocation(FAmmunitionData& ammoData, bool backLocation);                                              // [0x240c390] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.Weapon.AddAmmoSingle
	void AddAmmoSingle(FAmmunitionData& ammoData);                                                                           // [0x240c2f0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.Weapon.AddAmmo
	void AddAmmo(TArray<FAmmunitionData>& ammoData);                                                                         // [0x240c240] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/ConZ.WeaponAction
/// Size: 0x0000 (0x000028 - 0x000028)
class UWeaponAction : public UObject
{ 
public:
};

/// Class /Script/ConZ.WeaponActionReloadSequence
/// Size: 0x0068 (0x000028 - 0x000090)
class UWeaponActionReloadSequence : public UWeaponAction
{ 
public:
	FBodyWeaponAnimation                               AnimationStandAndCrouch;                                    // 0x0028   (0x0010)  
	FBodyWeaponAnimation                               AnimationProne;                                             // 0x0038   (0x0010)  
	bool                                               CanBeInterrupted;                                           // 0x0048   (0x0001)  
	unsigned char                                      UnknownData00_6[0x47];                                      // 0x0049   (0x0047)  MISSED


	/// Functions
	// Function /Script/ConZ.WeaponActionReloadSequence.SetNextMontageSectionFromPrevious
	void SetNextMontageSectionFromPrevious(FName previousSection, FName NextSection);                                        // [0x2413350] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponActionReloadSequence.SetNextMontageSection
	void SetNextMontageSection(FName NextSection);                                                                           // [0x2413000] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponActionReloadSequence.OnMontageEnded
	void OnMontageEnded(UAnimMontage* Montage, bool interrupted);                                                            // [0x2309950] Native|Protected     
	// Function /Script/ConZ.WeaponActionReloadSequence.OnMontageBlendingOutStarted
	void OnMontageBlendingOutStarted(UAnimMontage* Montage, bool interrupted);                                               // [0x2412bb0] Native|Protected     
	// Function /Script/ConZ.WeaponActionReloadSequence.IgnoreChamberBulletOnEnd
	bool IgnoreChamberBulletOnEnd();                                                                                         // [0x11312d0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.WeaponActionReloadSequence.GetReloadData
	FWeaponReloadData GetReloadData();                                                                                       // [0x24124f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponActionReloadSequence.GetActiveAnimationWeapon
	UAnimMontage* GetActiveAnimationWeapon();                                                                                // [0x2412460] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponActionReloadSequence.GetActiveAnimationBody
	UAnimMontage* GetActiveAnimationBody();                                                                                  // [0x24123a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponActionReloadSequence.ExecuteUsingData
	float ExecuteUsingData(FWeaponReloadData& Data);                                                                         // [0x2412280] Native|Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/ConZ.WeaponActionReloadSequence.End
	void End(bool Regular);                                                                                                  // [0x24120d0] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.WeaponActionReloadSequence.CanInterrupt
	bool CanInterrupt();                                                                                                     // [0x2411f80] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.WeaponActionReloadSequence.CanExecuteUsingData
	bool CanExecuteUsingData(FWeaponReloadData& Data);                                                                       // [0x2411e90] Native|Event|Public|HasOutParms|BlueprintEvent|Const 
};

/// Class /Script/ConZ.ChamberCartridge
/// Size: 0x0000 (0x000090 - 0x000090)
class UChamberCartridge : public UWeaponActionReloadSequence
{ 
public:
};

/// Class /Script/ConZ.WaypointWidgetBase
/// Size: 0x0098 (0x000260 - 0x0002F8)
class UWaypointWidgetBase : public UUserWidget
{ 
public:
	UTexture2D*                                        IconTexture;                                                // 0x0260   (0x0008)  
	UTexture2D*                                        AccentTexture;                                              // 0x0268   (0x0008)  
	FLinearColor                                       AccentColor;                                                // 0x0270   (0x0010)  
	float                                              BarValue;                                                   // 0x0280   (0x0004)  
	FLinearColor                                       BarColor;                                                   // 0x0284   (0x0010)  
	float                                              HeightOffset;                                               // 0x0294   (0x0004)  
	bool                                               Emphasized;                                                 // 0x0298   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0299   (0x0003)  MISSED
	FLinearColor                                       EmphasisColor;                                              // 0x029C   (0x0010)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x02AC   (0x0004)  MISSED
	FString                                            LabelText;                                                  // 0x02B0   (0x0010)  
	unsigned char                                      UnknownData02_6[0x38];                                      // 0x02C0   (0x0038)  MISSED


	/// Functions
	// Function /Script/ConZ.WaypointWidgetBase.OnLifetimeTiedActorDestroyed
	void OnLifetimeTiedActorDestroyed(AActor* Actor);                                                                        // [0x240e040] Final|Native|Private 
	// Function /Script/ConZ.WaypointWidgetBase.IsOnScreen
	bool IsOnScreen();                                                                                                       // [0x240dbe0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WaypointWidgetBase.IsAttached
	bool IsAttached();                                                                                                       // [0x240da90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WaypointWidgetBase.GetTargetActor
	AActor* GetTargetActor();                                                                                                // [0x240d780] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WaypointWidgetBase.GetDistance
	float GetDistance();                                                                                                     // [0x240cf90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WaypointWidgetBase.GetAngle
	float GetAngle();                                                                                                        // [0x240cf20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.ChangeTextWidget
/// Size: 0x0028 (0x0002F8 - 0x000320)
class UChangeTextWidget : public UWaypointWidgetBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x02F8   (0x0028)  MISSED
};

/// Class /Script/ConZ.CharacterAction
/// Size: 0x00D0 (0x000028 - 0x0000F8)
class UCharacterAction : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0028   (0x0030)  MISSED
	TArray<UCharacterActionDescription*>               PreActionsDescriptions;                                     // 0x0058   (0x0010)  
	TArray<UCharacterActionDescription*>               PostActionsDescriptions;                                    // 0x0068   (0x0010)  
	UCharacterAction*                                  ParentAction;                                               // 0x0078   (0x0008)  
	TArray<UCharacterAction*>                          _preActions;                                                // 0x0080   (0x0010)  
	TArray<UCharacterAction*>                          _postActions;                                               // 0x0090   (0x0010)  
	UActionProgressWidget*                             _progressWidget;                                            // 0x00A0   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x00A8   (0x0008)  MISSED
	UCharacterActionDescription*                       _description;                                               // 0x00B0   (0x0008)  
	unsigned char                                      UnknownData02_6[0x40];                                      // 0x00B8   (0x0040)  MISSED


	/// Functions
	// Function /Script/ConZ.CharacterAction.PlayMontage
	float PlayMontage(UAnimMontage* Montage, float PlayRate, FName& startSection, bool assignCallbacks);                     // [0x2270570] Final|Native|Protected|HasOutParms 
	// Function /Script/ConZ.CharacterAction.OnProgressWidgetFinished
	void OnProgressWidgetFinished();                                                                                         // [0x2270480] Native|Protected     
	// Function /Script/ConZ.CharacterAction.OnProgressWidgetCanceled
	void OnProgressWidgetCanceled();                                                                                         // [0x2270460] Native|Protected     
	// Function /Script/ConZ.CharacterAction.OnPreActionEnd
	void OnPreActionEnd(UCharacterAction* Action);                                                                           // [0x22703d0] Native|Protected     
	// Function /Script/ConZ.CharacterAction.OnPreActionBegin
	void OnPreActionBegin(UCharacterAction* Action);                                                                         // [0x2270340] Native|Protected     
	// Function /Script/ConZ.CharacterAction.OnMontageEnded
	void OnMontageEnded(UAnimMontage* Montage, bool interrupted);                                                            // [0x2270270] Native|Protected     
	// Function /Script/ConZ.CharacterAction.OnMontageBlendingOutStarted
	void OnMontageBlendingOutStarted(UAnimMontage* Montage, bool interrupted);                                               // [0x22701a0] Native|Protected     
};

/// Class /Script/ConZ.CharacterActionComponent
/// Size: 0x0010 (0x0000B0 - 0x0000C0)
class UCharacterActionComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00B0   (0x0008)  MISSED
	bool                                               _shouldStopMontageOnEnd;                                    // 0x00B8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x00B9   (0x0007)  MISSED


	/// Functions
	// Function /Script/ConZ.CharacterActionComponent.Server_NotifyReadyToDestroy
	void Server_NotifyReadyToDestroy();                                                                                      // [0x22706f0] Net|NetReliableNative|Event|Protected|NetServer|BlueprintCallable 
};

/// Class /Script/ConZ.CharacterActionDescription
/// Size: 0x0010 (0x000028 - 0x000038)
class UCharacterActionDescription : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0028   (0x0010)  MISSED
};

/// Class /Script/ConZ.CCNonSelectableTextWidget
/// Size: 0x0060 (0x000260 - 0x0002C0)
class UCCNonSelectableTextWidget : public UUserWidget
{ 
public:
	URetainerBox*                                      _retainerBox;                                               // 0x0260   (0x0008)  
	USizeBox*                                          _sizeBox;                                                   // 0x0268   (0x0008)  
	UTextBlock*                                        _textBlock;                                                 // 0x0270   (0x0008)  
	FText                                              _text;                                                      // 0x0278   (0x0018)  
	int32_t                                            _fontSize;                                                  // 0x0290   (0x0004)  
	FMargin                                            _textPadding;                                               // 0x0294   (0x0010)  
	FVector2D                                          _sizeOverride;                                              // 0x02A4   (0x0008)  
	TEnumAsByte<EHorizontalAlignment>                  _textHorizontalAlignment;                                   // 0x02AC   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x02AD   (0x0003)  MISSED
	FLinearColor                                       _textColor;                                                 // 0x02B0   (0x0010)  


	/// Functions
	// Function /Script/ConZ.CCNonSelectableTextWidget.SetTextColor
	void SetTextColor(FLinearColor Color);                                                                                   // [0x2274cd0] Final|Native|Public|HasDefaults 
	// Function /Script/ConZ.CCNonSelectableTextWidget.SetText
	void SetText(FText Text);                                                                                                // [0x2274bf0] Final|Native|Public  
	// Function /Script/ConZ.CCNonSelectableTextWidget.HighlightPartially
	void HighlightPartially(float percent);                                                                                  // [0x22745a0] Final|Native|Public  
};

/// Class /Script/ConZ.CCSkillSliderWidget
/// Size: 0x00A8 (0x000260 - 0x000308)
class UCCSkillSliderWidget : public UUserWidget
{ 
public:
	FMulticastInlineDelegate                           OnSliderChanged;                                            // 0x0260   (0x0010)  
	FMulticastInlineDelegate                           OnSliderSelected;                                           // 0x0270   (0x0010)  
	FMulticastInlineDelegate                           OnSliderDeselected;                                         // 0x0280   (0x0010)  
	UTextBlock*                                        _skillName;                                                 // 0x0290   (0x0008)  
	UCCNonSelectableTextWidget*                        _nonSelectableText;                                         // 0x0298   (0x0008)  
	UTrashSliderWidget*                                _slider;                                                    // 0x02A0   (0x0008)  
	bool                                               _enabled;                                                   // 0x02A8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x02A9   (0x0007)  MISSED
	FSkillTemplate                                     _skillTemplate;                                             // 0x02B0   (0x0038)  
	FLinearColor                                       _enabledColor;                                              // 0x02E8   (0x0010)  
	FLinearColor                                       _disabledColor;                                             // 0x02F8   (0x0010)  


	/// Functions
	// Function /Script/ConZ.CCSkillSliderWidget.HandleValueChanged
	void HandleValueChanged(float Value);                                                                                    // [0x2274520] Final|Native|Protected 
};

/// Class /Script/ConZ.CharacterCreationMenu
/// Size: 0x02A0 (0x000260 - 0x000500)
class UCharacterCreationMenu : public UBaseMenu
{ 
public:
	UCanvasPanel*                                      _canvasMain;                                                // 0x0260   (0x0008)  
	UCanvasPanel*                                      _canvasContent;                                             // 0x0268   (0x0008)  
	UOverlay*                                          _overlayMenu;                                               // 0x0270   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0278   (0x0008)  MISSED
	UWidgetSwitcher*                                   _widgetSwitcher;                                            // 0x0280   (0x0008)  
	UEditableTextBox*                                  _editableTextNameCharacterPanel;                            // 0x0288   (0x0008)  
	UBorder*                                           _borderNameCharacterPanel;                                  // 0x0290   (0x0008)  
	UCCNonSelectableTextWidget*                        _availableAttributePointsDisplay;                           // 0x0298   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderStrength;                                            // 0x02A0   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderConstitution;                                        // 0x02A8   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderDexterity;                                           // 0x02B0   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderIntelligence;                                        // 0x02B8   (0x0008)  
	UTrashNamedCarouselWidget*                         _carouselGender;                                            // 0x02C0   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderHead;                                                // 0x02C8   (0x0008)  
	UTrashNamedCarouselWidget*                         _carouselHairiness;                                         // 0x02D0   (0x0008)  
	UCCGameUpgradeConditionDisplayWidget*              _appearanceUpgradeConditionDisplay;                         // 0x02D8   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderAge;                                                 // 0x02E0   (0x0008)  
	UTrashNamedCarouselWidget*                         _carouselTattoos;                                           // 0x02E8   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderTattooStyle;                                         // 0x02F0   (0x0008)  
	UCCGameUpgradeConditionDisplayWidget*              _tattooUpgradeConditionDisplay;                             // 0x02F8   (0x0008)  
	UTrashNamedCarouselWidget*                         _carouselConcealedMode;                                     // 0x0300   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderPenisBreastSize;                                     // 0x0308   (0x0008)  
	UConZStandardButton*                               _buttonRandomizeAttributes;                                 // 0x0310   (0x0008)  
	UConZStandardButton*                               _buttonCancelToMainMenu;                                    // 0x0318   (0x0008)  
	UConZStandardButton*                               _buttonNextToFace;                                          // 0x0320   (0x0008)  
	UOverlay*                                          _overlayAttributeConfirmation;                              // 0x0328   (0x0008)  
	UConZStandardButton*                               _buttonCancelCharacter;                                     // 0x0330   (0x0008)  
	UConZStandardButton*                               _buttonContinueCharacter;                                   // 0x0338   (0x0008)  
	UEditableTextBox*                                  _editableTextNameFacePanel;                                 // 0x0340   (0x0008)  
	UBorder*                                           _borderNameFacePanel;                                       // 0x0348   (0x0008)  
	UConZStandardButton*                               _buttonRandomizeFace;                                       // 0x0350   (0x0008)  
	UConZStandardButton*                               _buttonBackToCharacter;                                     // 0x0358   (0x0008)  
	UConZStandardButton*                               _buttonNextToSkills;                                        // 0x0360   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderFaceType;                                            // 0x0368   (0x0008)  
	UPresetColorPicker*                                _presetColorPickerSkinTone;                                 // 0x0370   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderHairStyle;                                           // 0x0378   (0x0008)  
	UCCGameUpgradeConditionDisplayWidget*              _hairStyleUpgradeConditionDisplay;                          // 0x0380   (0x0008)  
	UPresetColorPicker*                                _presetColorPickerHairColor;                                // 0x0388   (0x0008)  
	UVerticalBox*                                      _facialHairVerticalBox;                                     // 0x0390   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderMoustacheStyle;                                      // 0x0398   (0x0008)  
	UCCGameUpgradeConditionDisplayWidget*              _moustacheStyleUpgradeConditionDisplay;                     // 0x03A0   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderBeardStyle;                                          // 0x03A8   (0x0008)  
	UCCGameUpgradeConditionDisplayWidget*              _beardStyleUpgradeConditionDisplay;                         // 0x03B0   (0x0008)  
	UPresetColorPicker*                                _presetColorPickerEyeColor;                                 // 0x03B8   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderIrisType;                                            // 0x03C0   (0x0008)  
	UEditableTextBox*                                  _editableTextNameSkillsPanel;                               // 0x03C8   (0x0008)  
	UBorder*                                           _borderNameSkillsPanel;                                     // 0x03D0   (0x0008)  
	UCCNonSelectableTextWidget*                        _attributeDisplayConstitution;                              // 0x03D8   (0x0008)  
	UCCNonSelectableTextWidget*                        _attributeDisplayDexterity;                                 // 0x03E0   (0x0008)  
	UCCNonSelectableTextWidget*                        _attributeDisplayIntelligence;                              // 0x03E8   (0x0008)  
	UCCNonSelectableTextWidget*                        _attributeDisplayStrength;                                  // 0x03F0   (0x0008)  
	UCCNonSelectableTextWidget*                        _skillPointDisplayConstitution;                             // 0x03F8   (0x0008)  
	UCCNonSelectableTextWidget*                        _skillPointDisplayDexterity;                                // 0x0400   (0x0008)  
	UCCNonSelectableTextWidget*                        _skillPointDisplayIntelligence;                             // 0x0408   (0x0008)  
	UCCNonSelectableTextWidget*                        _skillPointDisplayStrength;                                 // 0x0410   (0x0008)  
	UVerticalBox*                                      _skillBoxStrength;                                          // 0x0418   (0x0008)  
	UVerticalBox*                                      _skillBoxConstitution;                                      // 0x0420   (0x0008)  
	UVerticalBox*                                      _skillBoxDexterity;                                         // 0x0428   (0x0008)  
	UVerticalBox*                                      _skillBoxIntelligence;                                      // 0x0430   (0x0008)  
	UConZStandardButton*                               _buttonRandomizeSkills;                                     // 0x0438   (0x0008)  
	UTextBlock*                                        _textNameAlreadyTaken;                                      // 0x0440   (0x0008)  
	UConZStandardButton*                               _buttonBackToFace;                                          // 0x0448   (0x0008)  
	UConZStandardButton*                               _buttonSwitchToCriminalRecord;                              // 0x0450   (0x0008)  
	UScrollBox*                                        _faceOptionsScrollbox;                                      // 0x0458   (0x0008)  
	UOverlay*                                          _overlaySkillConfirmation;                                  // 0x0460   (0x0008)  
	UConZStandardButton*                               _buttonCancelSkills;                                        // 0x0468   (0x0008)  
	UConZStandardButton*                               _buttonContinueSkills;                                      // 0x0470   (0x0008)  
	UCriminalRecord*                                   _criminalRecord;                                            // 0x0478   (0x0008)  
	UVerticalBox*                                      _errorDialogPanel;                                          // 0x0480   (0x0008)  
	TArray<FCCNonImplementedSkill>                     _nonImplementedSkills;                                      // 0x0488   (0x0010)  
	FLinearColor                                       _pointDisplayAvailableColor;                                // 0x0498   (0x0010)  
	FLinearColor                                       _pointDisplayDepletedColor;                                 // 0x04A8   (0x0010)  
	UClass*                                            _skillSliderClass;                                          // 0x04B8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x40];                                      // 0x04C0   (0x0040)  MISSED


	/// Functions
	// Function /Script/ConZ.CharacterCreationMenu.StartGame
	void StartGame();                                                                                                        // [0x2274d60] Final|Native|Protected|BlueprintCallable 
	// Function /Script/ConZ.CharacterCreationMenu.OnUserProfileCreated
	void OnUserProfileCreated();                                                                                             // [0x2859740] Event|Protected|BlueprintEvent 
	// Function /Script/ConZ.CharacterCreationMenu.OnTextNameCommittedInSkillsPanel
	void OnTextNameCommittedInSkillsPanel(FText& NewValue, TEnumAsByte<ETextCommit> CommitMethod);                           // [0x2274ad0] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.CharacterCreationMenu.OnTextNameCommittedInFacePanel
	void OnTextNameCommittedInFacePanel(FText& NewValue, TEnumAsByte<ETextCommit> CommitMethod);                             // [0x22749b0] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.CharacterCreationMenu.OnTextNameCommittedInCharacterPanel
	void OnTextNameCommittedInCharacterPanel(FText& NewValue, TEnumAsByte<ETextCommit> CommitMethod);                        // [0x2274890] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.CharacterCreationMenu.OnTextNameChanged
	void OnTextNameChanged(FText& Text);                                                                                     // [0x22747c0] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.CharacterCreationMenu.OnSwitchToCriminalRecordClicked
	void OnSwitchToCriminalRecordClicked();                                                                                  // [0x22747a0] Final|Native|Private 
	// Function /Script/ConZ.CharacterCreationMenu.OnRandomizeSkillsClicked
	void OnRandomizeSkillsClicked();                                                                                         // [0x2274780] Final|Native|Private 
	// Function /Script/ConZ.CharacterCreationMenu.OnRandomizeFaceClicked
	void OnRandomizeFaceClicked();                                                                                           // [0x2274760] Final|Native|Private 
	// Function /Script/ConZ.CharacterCreationMenu.OnRandomizeAttributesClicked
	void OnRandomizeAttributesClicked();                                                                                     // [0x2274740] Final|Native|Private 
	// Function /Script/ConZ.CharacterCreationMenu.OnNextToSkillsClicked
	void OnNextToSkillsClicked();                                                                                            // [0x2274720] Final|Native|Private 
	// Function /Script/ConZ.CharacterCreationMenu.OnNextToFaceClicked
	void OnNextToFaceClicked();                                                                                              // [0x2274700] Final|Native|Private 
	// Function /Script/ConZ.CharacterCreationMenu.OnContinueClickedInSkillsConfirmationPanel
	void OnContinueClickedInSkillsConfirmationPanel();                                                                       // [0x22746e0] Final|Native|Private 
	// Function /Script/ConZ.CharacterCreationMenu.OnContinueClickedInCharacterConfirmationPanel
	void OnContinueClickedInCharacterConfirmationPanel();                                                                    // [0x22746c0] Final|Native|Private 
	// Function /Script/ConZ.CharacterCreationMenu.OnCancelToMainMenuClicked
	void OnCancelToMainMenuClicked();                                                                                        // [0x22746a0] Final|Native|Private 
	// Function /Script/ConZ.CharacterCreationMenu.OnCancelClickedInSkillsConfirmationPanel
	void OnCancelClickedInSkillsConfirmationPanel();                                                                         // [0x2274680] Final|Native|Private 
	// Function /Script/ConZ.CharacterCreationMenu.OnCancelClickedInCharacterConfirmationPanel
	void OnCancelClickedInCharacterConfirmationPanel();                                                                      // [0x2274660] Final|Native|Private 
	// Function /Script/ConZ.CharacterCreationMenu.OnBackToFaceClicked
	void OnBackToFaceClicked();                                                                                              // [0x2274640] Final|Native|Private 
	// Function /Script/ConZ.CharacterCreationMenu.OnBackToCharacterClicked
	void OnBackToCharacterClicked();                                                                                         // [0x2274620] Final|Native|Private 
	// Function /Script/ConZ.CharacterCreationMenu.HandleSkillSliderValueChanged
	void HandleSkillSliderValueChanged(UCCSkillSliderWidget* Slider, ESkillAttribute Attribute);                             // [0x2274450] Final|Native|Private 
	// Function /Script/ConZ.CharacterCreationMenu.CreateUserProfile
	void CreateUserProfile();                                                                                                // [0x2274430] Final|Native|Protected 
};

/// Class /Script/ConZ.CharacterImpactSoundsData
/// Size: 0x0060 (0x000030 - 0x000090)
class UCharacterImpactSoundsData : public UDataAsset
{ 
public:
	FCharacterHeadImpactSoundsData                     Head;                                                       // 0x0030   (0x0018)  
	FCharacterTorsoImpactSoundsData                    Torso;                                                      // 0x0048   (0x0018)  
	FCharacterArmsImpactSoundsData                     Arms;                                                       // 0x0060   (0x0018)  
	FCharacterLegsImpactSoundsData                     Legs;                                                       // 0x0078   (0x0018)  
};

/// Class /Script/ConZ.CharacterItemDragComponent
/// Size: 0x0058 (0x0000B0 - 0x000108)
class UCharacterItemDragComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x58];                                      // 0x00B0   (0x0058)  MISSED
};

/// Class /Script/ConZ.CharacterMesh
/// Size: 0x0038 (0x000028 - 0x000060)
class UCharacterMesh : public UObject
{ 
public:
	FGameplayTagContainer                              Tags;                                                       // 0x0028   (0x0020)  
	TArray<FCharacterMeshSlice>                        MeshSlices;                                                 // 0x0048   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0058   (0x0008)  MISSED
};

/// Class /Script/ConZ.CharacterMeshManager
/// Size: 0x0208 (0x000028 - 0x000230)
class UCharacterMeshManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0028   (0x0018)  MISSED
	TMap<UClass*, FCharacterMeshClassSet>              _incompatibleCharacterMeshClasses;                          // 0x0040   (0x0050)  
	TMap<FGameplayTag, FCharacterMeshManagerPerSlotData> _perCharacterMeshSlotData;                                // 0x0090   (0x0050)  
	float                                              _destroyUnusedMeshComponentsTime;                           // 0x00E0   (0x0004)  
	unsigned char                                      UnknownData01_6[0x14C];                                     // 0x00E4   (0x014C)  MISSED
};

/// Class /Script/ConZ.CharacterModificationRoom
/// Size: 0x0058 (0x000220 - 0x000278)
class ACharacterModificationRoom : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0220   (0x0010)  MISSED
	USceneComponent*                                   _sceneRoot;                                                 // 0x0230   (0x0008)  
	UChildActorComponent*                              _childActor;                                                // 0x0238   (0x0008)  
	UCineCameraComponent*                              _camera;                                                    // 0x0240   (0x0008)  
	USplineComponent*                                  _positionSpline;                                            // 0x0248   (0x0008)  
	USplineComponent*                                  _viewTargetSpline;                                          // 0x0250   (0x0008)  
	float                                              _cameraInterpSpeed;                                         // 0x0258   (0x0004)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x025C   (0x0008)  MISSED
	float                                              _mouseTrackingSpeed;                                        // 0x0264   (0x0004)  
	FVector2D                                          _mouseBasedCameraRotationIntensity;                         // 0x0268   (0x0008)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0270   (0x0008)  MISSED
};

/// Class /Script/ConZ.SurgeryRoom
/// Size: 0x0000 (0x000278 - 0x000278)
class ASurgeryRoom : public ACharacterModificationRoom
{ 
public:
};

/// Class /Script/ConZ.BarberShop
/// Size: 0x0010 (0x000278 - 0x000288)
class ABarberShop : public ACharacterModificationRoom
{ 
public:
	TArray<UCharacterMesh*>                            _characterMeshesToAddOntoPrisoner;                          // 0x0278   (0x0010)  
};

/// Class /Script/ConZ.CharacterNameDisplayWidget
/// Size: 0x0018 (0x000260 - 0x000278)
class UCharacterNameDisplayWidget : public UUserWidget
{ 
public:
	UTextBlock*                                        _nameText;                                                  // 0x0260   (0x0008)  
	USquadEmblemWidget*                                _squadEmblem;                                               // 0x0268   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0270   (0x0008)  MISSED
};

/// Class /Script/ConZ.CharacterPainSoundsData
/// Size: 0x0008 (0x000030 - 0x000038)
class UCharacterPainSoundsData : public UDataAsset
{ 
public:
	UAkAudioEvent*                                     AudioEvent;                                                 // 0x0030   (0x0008)  
};

/// Class /Script/ConZ.CharacterSelectionWidget
/// Size: 0x0058 (0x000260 - 0x0002B8)
class UCharacterSelectionWidget : public UBaseMenu
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0260   (0x0008)  MISSED
	UClass*                                            _characterSlotClass;                                        // 0x0268   (0x0008)  
	UScrollBox*                                        _mainScrollBox;                                             // 0x0270   (0x0008)  
	UConZStandardButton*                               _buttonCreate;                                              // 0x0278   (0x0008)  
	UConZStandardButton*                               _buttonLoad;                                                // 0x0280   (0x0008)  
	UOverlay*                                          _characterSlotsOverlay;                                     // 0x0288   (0x0008)  
	UVerticalBox*                                      _characterSlotsVerticalBox;                                 // 0x0290   (0x0008)  
	UConZStandardButton*                               _buttonBack;                                                // 0x0298   (0x0008)  
	UOverlay*                                          _criminalRecordOverlay;                                     // 0x02A0   (0x0008)  
	UCriminalRecord*                                   _criminalRecord;                                            // 0x02A8   (0x0008)  
	UYesNoDialog*                                      _deleteCharacterConfirmation;                               // 0x02B0   (0x0008)  


	/// Functions
	// Function /Script/ConZ.CharacterSelectionWidget.UpdatePreviewPrisonersInternal
	void UpdatePreviewPrisonersInternal(UUserProfile* profile);                                                              // [0x2278480] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/ConZ.CharacterSelectionWidget.OnLoadButtonClicked
	void OnLoadButtonClicked();                                                                                              // [0x2277f20] Final|Native|Private 
	// Function /Script/ConZ.CharacterSelectionWidget.OnCreateButtonClicked
	void OnCreateButtonClicked();                                                                                            // [0x2277ee0] Final|Native|Private 
	// Function /Script/ConZ.CharacterSelectionWidget.OnBackButtonClicked
	void OnBackButtonClicked();                                                                                              // [0x2277ec0] Final|Native|Private 
	// Function /Script/ConZ.CharacterSelectionWidget.GoBack
	void GoBack();                                                                                                           // [0x2277ea0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.CharacterSelectionWidget.DeleteCharacter
	void DeleteCharacter(UUserProfile* UserProfile);                                                                         // [0x2277e10] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.CharacterSlot
/// Size: 0x0048 (0x000260 - 0x0002A8)
class UCharacterSlot : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0260   (0x0030)  MISSED
	UConZStandardButton*                               _profileButton;                                             // 0x0290   (0x0008)  
	UButton*                                           _deleteButton;                                              // 0x0298   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x02A0   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.CharacterSlot.OnProfileButtonClicked
	void OnProfileButtonClicked();                                                                                           // [0x2277f40] Final|Native|Private 
	// Function /Script/ConZ.CharacterSlot.OnDeleteButtonClicked
	void OnDeleteButtonClicked();                                                                                            // [0x2277f00] Final|Native|Private 
};

/// Class /Script/ConZ.CharacterSpawnerComponent
/// Size: 0x0030 (0x000200 - 0x000230)
class UCharacterSpawnerComponent : public USceneComponent
{ 
public:
	bool                                               OverrideDefaultProbability;                                 // 0x01F8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x01F9   (0x0003)  MISSED
	float                                              Probability;                                                // 0x01FC   (0x0004)  
	bool                                               OverrideDefaultRespawnTime;                                 // 0x0200   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0201   (0x0003)  MISSED
	float                                              RespawnTime;                                                // 0x0204   (0x0004)  
	int32_t                                            MinCharactersToSpawn;                                       // 0x0208   (0x0004)  
	int32_t                                            MaxCharactersToSpawn;                                       // 0x020C   (0x0004)  
	TArray<FCharacterSpawnerMarker>                    SpawnerMarkers;                                             // 0x0210   (0x0010)  
	unsigned char                                      UnknownData02_6[0x10];                                      // 0x0220   (0x0010)  MISSED
};

/// Class /Script/ConZ.CharacterSpawnerSpawnee
/// Size: 0x0000 (0x000028 - 0x000028)
class UCharacterSpawnerSpawnee : public UInterface
{ 
public:
};

/// Class /Script/ConZ.CharacterSpawningManager
/// Size: 0x1620 (0x000220 - 0x001840)
class ACharacterSpawningManager : public AActor
{ 
public:
	TArray<FPawnCharacterInfo>                         _spawnableCharacters;                                       // 0x0220   (0x0010)  
	float                                              _managerProcessUpdateTime;                                  // 0x0230   (0x0004)  
	float                                              _spawnUpdateTime;                                           // 0x0234   (0x0004)  
	float                                              _spawnTriggerGroupUpdateTime;                               // 0x0238   (0x0004)  
	float                                              _spawnTriggerGroupRadius;                                   // 0x023C   (0x0004)  
	float                                              _spawnTriggerGroupProximityQueryRadius;                     // 0x0240   (0x0004)  
	float                                              _interiorSearchDistanceThreshold;                           // 0x0244   (0x0004)  
	float                                              _exteriorSpawnerGroupsSpawnCooldownTime;                    // 0x0248   (0x0004)  
	float                                              _interiorSpawnerGroupsSpawnCooldownTime;                    // 0x024C   (0x0004)  
	float                                              _baseElementQueryDistance;                                  // 0x0250   (0x0004)  
	float                                              _exteriorSpawnerGroupsProbability;                          // 0x0254   (0x0004)  
	float                                              _interiorSpawnerGroupsProbability;                          // 0x0258   (0x0004)  
	bool                                               _disableSerialization;                                      // 0x025C   (0x0001)  
	bool                                               _startSpawnerGroupCooldownAfterSpawning;                    // 0x025D   (0x0001)  
	bool                                               _startSpawnerGroupCooldownAfterEnteringInterior;            // 0x025E   (0x0001)  
	unsigned char                                      UnknownData00_5[0x149];                                     // 0x025F   (0x0149)  MISSED
	TSet<UClass*>                                      _referencedPawnClasses;                                     // 0x03A8   (0x0050)  
	TSet<UClass*>                                      _disabledPawnClasses;                                       // 0x03F8   (0x0050)  
	TSet<UClass*>                                      _suicidePuppetClasses;                                      // 0x0448   (0x0050)  
	unsigned char                                      UnknownData01_6[0x13A8];                                    // 0x0498   (0x13A8)  MISSED


	/// Functions
	// Function /Script/ConZ.CharacterSpawningManager.SpawnCharactersAroundLocation
	void SpawnCharactersAroundLocation(FSpawnCharacterAroundInfo& Info);                                                     // [0x2278370] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.CharacterSpawningManager.SpawnCharacterGroup
	void SpawnCharacterGroup(FSpawnCharacterGroupInfo& Info);                                                                // [0x2278270] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.CharacterSpawningManager.SpawnCharacter
	bool SpawnCharacter(FTransform& SpawnTransform, UClass* PawnClass, bool IgnoreLimit);                                    // [0x2278110] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/ConZ.CharacterSpawningManager.OnSpawnTriggerDestroyed
	void OnSpawnTriggerDestroyed(AActor* DestroyedActor);                                                                    // [0x2277f60] Final|Native|Private 
	// Function /Script/ConZ.CharacterSpawningManager.OnSpawnedPawnDestroyed
	void OnSpawnedPawnDestroyed(AActor* DestroyedActor);                                                                     // [0x2277ff0] Final|Native|Private 
};

/// Class /Script/ConZ.CharacterSpawnerPreset
/// Size: 0x0010 (0x000028 - 0x000038)
class UCharacterSpawnerPreset : public UObject
{ 
public:
	FCharacterSpawnerData                              SpawnerData;                                                // 0x0028   (0x0010)  
};

/// Class /Script/ConZ.CharacterVoiceline
/// Size: 0x0028 (0x000030 - 0x000058)
class UCharacterVoiceline : public UDataAsset
{ 
public:
	FText                                              Name;                                                       // 0x0030   (0x0018)  
	FGameplayTag                                       CharacterTypeTag;                                           // 0x0048   (0x0008)  
	UAkAudioEvent*                                     AudioEvent;                                                 // 0x0050   (0x0008)  
};

/// Class /Script/ConZ.ChatNotification
/// Size: 0x0000 (0x000030 - 0x000030)
class UChatNotification : public UConZNotification
{ 
public:
};

/// Class /Script/ConZ.ChatNotificationDescription
/// Size: 0x0018 (0x000040 - 0x000058)
class UChatNotificationDescription : public UNotificationDescription
{ 
public:
	FString                                            Message;                                                    // 0x0040   (0x0010)  
	EChatType                                          ChatType;                                                   // 0x0050   (0x0001)  
	bool                                               ShouldCopyToClientClipboard;                                // 0x0051   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0052   (0x0006)  MISSED
};

/// Class /Script/ConZ.SpamProtectionState
/// Size: 0x0030 (0x000028 - 0x000058)
class USpamProtectionState : public UObject
{ 
public:
	ESpamSeverity                                      Severity;                                                   // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0029   (0x0007)  MISSED
	FDateTime                                          LastSeverityChange;                                         // 0x0030   (0x0008)  
	FDateTime                                          LastTimeout;                                                // 0x0038   (0x0008)  
	bool                                               PermanentTimeout;                                           // 0x0040   (0x0001)  
	ESpamSeverity                                      MaxSeverityReached;                                         // 0x0041   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x0042   (0x0002)  MISSED
	int32_t                                            MaxSeverityCount;                                           // 0x0044   (0x0004)  
	unsigned char                                      UnknownData02_6[0x10];                                      // 0x0048   (0x0010)  MISSED
};

/// Class /Script/ConZ.ChatSpamProtectionRules
/// Size: 0x00A8 (0x000030 - 0x0000D8)
class UChatSpamProtectionRules : public UDataAsset
{ 
public:
	float                                              OffenceDuration;                                            // 0x0030   (0x0004)  
	int32_t                                            MessageRepetitions;                                         // 0x0034   (0x0004)  
	TMap<ESpamSeverity, FSpamSeverityConditions>       _conditions;                                                // 0x0038   (0x0050)  
	TMap<ESpamSeverity, FSpamConsequences>             _consequences;                                              // 0x0088   (0x0050)  
};

/// Class /Script/ConZ.ChatSuggestionWidget
/// Size: 0x0038 (0x000260 - 0x000298)
class UChatSuggestionWidget : public UUserWidget
{ 
public:
	UBorder*                                           _border;                                                    // 0x0260   (0x0008)  
	UChatText*                                         _textBlock;                                                 // 0x0268   (0x0008)  
	FLinearColor                                       _defaultColor;                                              // 0x0270   (0x0010)  
	FLinearColor                                       _highlightedColor;                                          // 0x0280   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0290   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.ChatSuggestionWidget.SetText
	void SetText(FString Text);                                                                                              // [0x227e510] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ChatSuggestionWidget.SetIsHighlighted
	void SetIsHighlighted(bool Value);                                                                                       // [0x227e480] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.ChatUIController
/// Size: 0x0100 (0x000028 - 0x000128)
class UChatUIController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0xF0];                                      // 0x0028   (0x00F0)  MISSED
	int32_t                                            _maxHistorySize;                                            // 0x0118   (0x0004)  
	unsigned char                                      UnknownData01_6[0xC];                                       // 0x011C   (0x000C)  MISSED
};

/// Class /Script/ConZ.ChatText
/// Size: 0x0000 (0x0002A8 - 0x0002A8)
class UChatText : public UTextBlock
{ 
public:
};

/// Class /Script/ConZ.ChatWidget
/// Size: 0x0120 (0x000260 - 0x000380)
class UChatWidget : public UUserWidget
{ 
public:
	UButton*                                           _muteButton;                                                // 0x0260   (0x0008)  
	UTextBlock*                                        _muteText;                                                  // 0x0268   (0x0008)  
	UImage*                                            _backgroundImage;                                           // 0x0270   (0x0008)  
	UScrollBox*                                        _chatScrollBox;                                             // 0x0278   (0x0008)  
	UScrollBox*                                        _suggestionsScrollBox;                                      // 0x0280   (0x0008)  
	UOverlay*                                          _suggestionsDropDown;                                       // 0x0288   (0x0008)  
	UEditableTextBox*                                  _inputText;                                                 // 0x0290   (0x0008)  
	UEditableTextBox*                                  _suggestionTextBox;                                         // 0x0298   (0x0008)  
	UTextBlock*                                        _chatTypeIndicator;                                         // 0x02A0   (0x0008)  
	FLinearColor                                       _localChatColor;                                            // 0x02A8   (0x0010)  
	FLinearColor                                       _globalChatColor;                                           // 0x02B8   (0x0010)  
	FLinearColor                                       _squadChatColor;                                            // 0x02C8   (0x0010)  
	FLinearColor                                       _serverChatColor;                                           // 0x02D8   (0x0010)  
	FLinearColor                                       _errorChatColor;                                            // 0x02E8   (0x0010)  
	FLinearColor                                       _defaultChatColor;                                          // 0x02F8   (0x0010)  
	FLinearColor                                       _commandsOnlyChatColor;                                     // 0x0308   (0x0010)  
	FLinearColor                                       _suggestionsTextColor;                                      // 0x0318   (0x0010)  
	FLinearColor                                       _adminChatColor;                                            // 0x0328   (0x0010)  
	UClass*                                            _chatSuggestionWidgetClass;                                 // 0x0338   (0x0008)  
	UAdminCommandCompletionManager*                    _adminCommandCompletionManager;                             // 0x0340   (0x0008)  
	unsigned char                                      UnknownData00_6[0x38];                                      // 0x0348   (0x0038)  MISSED


	/// Functions
	// Function /Script/ConZ.ChatWidget.OnTextCommitted
	void OnTextCommitted(FText& Text, TEnumAsByte<ETextCommit> CommitMethod);                                                // [0x227e360] Final|Native|Protected|HasOutParms 
	// Function /Script/ConZ.ChatWidget.OnTextChanged
	void OnTextChanged(FText& Text);                                                                                         // [0x227e290] Final|Native|Protected|HasOutParms 
	// Function /Script/ConZ.ChatWidget.OnMuteButtonClicked
	void OnMuteButtonClicked();                                                                                              // [0x227e210] Final|Native|Protected 
};

/// Class /Script/ConZ.WeaponActionCheckAmmoSequence
/// Size: 0x0028 (0x000028 - 0x000050)
class UWeaponActionCheckAmmoSequence : public UWeaponAction
{ 
public:
	FBodyWeaponAnimation                               Animations;                                                 // 0x0028   (0x0010)  
	bool                                               CanBeInterrupted;                                           // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x17];                                      // 0x0039   (0x0017)  MISSED


	/// Functions
	// Function /Script/ConZ.WeaponActionCheckAmmoSequence.SetNextMontageSectionFromPrevious
	void SetNextMontageSectionFromPrevious(FName previousSection, FName NextSection);                                        // [0x24131b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponActionCheckAmmoSequence.SetNextMontageSection
	void SetNextMontageSection(FName NextSection);                                                                           // [0x2412ee0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponActionCheckAmmoSequence.OnMontageEnded
	void OnMontageEnded(UAnimMontage* Montage, bool interrupted);                                                            // [0x2412bb0] Native|Protected     
	// Function /Script/ConZ.WeaponActionCheckAmmoSequence.OnMontageBlendingOutStarted
	void OnMontageBlendingOutStarted(UAnimMontage* Montage, bool interrupted);                                               // [0x2412ae0] Native|Protected     
	// Function /Script/ConZ.WeaponActionCheckAmmoSequence.GetActiveAnimationWeapon
	UAnimMontage* GetActiveAnimationWeapon();                                                                                // [0x2412400] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponActionCheckAmmoSequence.GetActiveAnimationBody
	UAnimMontage* GetActiveAnimationBody();                                                                                  // [0x2412340] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponActionCheckAmmoSequence.Execute
	float Execute();                                                                                                         // [0x2412160] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.WeaponActionCheckAmmoSequence.End
	void End(bool Regular);                                                                                                  // [0x2411fb0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/ConZ.WeaponActionCheckAmmoSequence.CanInterrupt
	bool CanInterrupt();                                                                                                     // [0x11312d0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.WeaponActionCheckAmmoSequence.CanExecute
	bool CanExecute();                                                                                                       // [0x2411d30] Native|Event|Public|BlueprintEvent|Const 
};

/// Class /Script/ConZ.CheckAmmoMagazineAttached
/// Size: 0x0000 (0x000050 - 0x000050)
class UCheckAmmoMagazineAttached : public UWeaponActionCheckAmmoSequence
{ 
public:
};

/// Class /Script/ConZ.CheckAmmoMagazineNotAttached
/// Size: 0x0000 (0x000050 - 0x000050)
class UCheckAmmoMagazineNotAttached : public UWeaponActionCheckAmmoSequence
{ 
public:
};

/// Class /Script/ConZ.CheckAssetNamesCommandlet
/// Size: 0x0000 (0x000080 - 0x000080)
class UCheckAssetNamesCommandlet : public UCommandlet
{ 
public:
};

/// Class /Script/ConZ.SkillAction
/// Size: 0x0078 (0x000028 - 0x0000A0)
class USkillAction : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x78];                                      // 0x0028   (0x0078)  MISSED
};

/// Class /Script/ConZ.CheckDetectableItemsAction
/// Size: 0x0010 (0x0000A0 - 0x0000B0)
class UCheckDetectableItemsAction : public USkillAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00A0   (0x0010)  MISSED
};

/// Class /Script/ConZ.CheckDetectablePlayersAction
/// Size: 0x0008 (0x0000A0 - 0x0000A8)
class UCheckDetectablePlayersAction : public USkillAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00A0   (0x0008)  MISSED
};

/// Class /Script/ConZ.CheckOccludedDetectablePlayersAction
/// Size: 0x0008 (0x0000A0 - 0x0000A8)
class UCheckOccludedDetectablePlayersAction : public USkillAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00A0   (0x0008)  MISSED
};

/// Class /Script/ConZ.ChestItemState
/// Size: 0x0020 (0x000100 - 0x000120)
class UChestItemState : public UItemState
{ 
public:
	FDbIntegerId                                       OwningUserProfileId;                                        // 0x0100   (0x0008)  
	float                                              ContainedItemsWeight;                                       // 0x0108   (0x0004)  
	EAccessLevel                                       ActiveAccessLevel;                                          // 0x010C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x010D   (0x0003)  MISSED
	TArray<FDbIntegerId>                               Locks;                                                      // 0x0110   (0x0010)  
};

/// Class /Script/ConZ.ChestItem
/// Size: 0x0120 (0x000910 - 0x000A30)
class AChestItem : public AItem
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0910   (0x0018)  MISSED
	int32_t                                            _capacityX;                                                 // 0x0928   (0x0004)  
	int32_t                                            _capacityY;                                                 // 0x092C   (0x0004)  
	UInventoryItemComponent*                           _inventoryComponent;                                        // 0x0930   (0x0008)  
	UInventoryContainer2D*                             _inventoryContainer2D;                                      // 0x0938   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0940   (0x0008)  MISSED
	UBuriableChestItemComponent*                       _buriableChestItemComponent;                                // 0x0948   (0x0008)  
	UNameableItemComponent*                            _nameableItemComponent;                                     // 0x0950   (0x0008)  
	bool                                               _canContainChestItem;                                       // 0x0958   (0x0001)  
	bool                                               _lockpickableEnabled;                                       // 0x0959   (0x0001)  
	bool                                               _overrideCanBeNamed;                                        // 0x095A   (0x0001)  
	bool                                               _canBeNamed;                                                // 0x095B   (0x0001)  
	float                                              _containedItemsWeight;                                      // 0x095C   (0x0004)  
	float                                              _pendingContainedItemsRadiationAmount;                      // 0x0960   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0964   (0x0004)  MISSED
	FDbIntegerId                                       _owningUserProfileId;                                       // 0x0968   (0x0008)  
	FTransform                                         _unlockTransform;                                           // 0x0970   (0x0030)  
	float                                              _forceUnlockMovementAcceptanceRadius;                       // 0x09A0   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x09A4   (0x0004)  MISSED
	TArray<UClass*>                                    _lockItemsClasses;                                          // 0x09A8   (0x0010)  
	TArray<ULockData*>                                 _lockData;                                                  // 0x09B8   (0x0010)  
	TArray<int32_t>                                    _remainingNeutralizationAttemptsPerLock;                    // 0x09C8   (0x0010)  
	TWeakObjectPtr<ABCULockItem*>                      _attachedBCULockItem;                                       // 0x09D8   (0x0008)  
	unsigned char                                      UnknownData04_5[0x10];                                      // 0x09E0   (0x0010)  MISSED
	TArray<FDbIntegerId>                               _locks;                                                     // 0x09F0   (0x0010)  
	unsigned char                                      UnknownData05_5[0x10];                                      // 0x0A00   (0x0010)  MISSED
	EAccessLevel                                       _activeAccessLevel;                                         // 0x0A10   (0x0001)  
	unsigned char                                      UnknownData06_5[0x3];                                       // 0x0A11   (0x0003)  MISSED
	int32_t                                            _cachedInventoryCount;                                      // 0x0A14   (0x0004)  
	bool                                               _doesSupportBCULocking;                                     // 0x0A18   (0x0001)  
	unsigned char                                      UnknownData07_5[0x7];                                       // 0x0A19   (0x0007)  MISSED
	float                                              _additionalDropNoise;                                       // 0x0A20   (0x0004)  
	unsigned char                                      UnknownData08_6[0xC];                                       // 0x0A24   (0x000C)  MISSED


	/// Functions
	// Function /Script/ConZ.ChestItem.OnRep_RemainingNeutralizationAttemptsPerLock
	void OnRep_RemainingNeutralizationAttemptsPerLock();                                                                     // [0x227e270] Final|Native|Private 
	// Function /Script/ConZ.ChestItem.OnRep_LockItemsClasses
	void OnRep_LockItemsClasses();                                                                                           // [0x227e250] Final|Native|Private 
	// Function /Script/ConZ.ChestItem.OnRep_CachedInventoryCount
	void OnRep_CachedInventoryCount();                                                                                       // [0x227e230] Final|Native|Private 
	// Function /Script/ConZ.ChestItem.NetMulticast_TriggerLockNeutralizationFailurePenalty
	void NetMulticast_TriggerLockNeutralizationFailurePenalty(AActor* triggeringActor);                                      // [0x227e180] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.ChestItem.NetMulticast_PlayLockAddedEffects
	void NetMulticast_PlayLockAddedEffects();                                                                                // [0x227e160] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.ChestItem.CanViewName
	bool CanViewName(APrisoner* Prisoner);                                                                                   // [0x227d5c0] Final|Native|Private|Const 
	// Function /Script/ConZ.ChestItem.CanChangeName
	bool CanChangeName(APrisoner* Prisoner);                                                                                 // [0x227d5c0] Final|Native|Private|Const 
	// Function /Script/ConZ.ChestItem.BP_OnInventoryCountChanged
	void BP_OnInventoryCountChanged(int32_t numContainedItems);                                                              // [0x2859740] Event|Public|BlueprintEvent 
};

/// Class /Script/ConZ.InteractionAction
/// Size: 0x0080 (0x000028 - 0x0000A8)
class UInteractionAction : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x80];                                      // 0x0028   (0x0080)  MISSED
};

/// Class /Script/ConZ.ChopItemAction
/// Size: 0x0008 (0x0000A8 - 0x0000B0)
class UChopItemAction : public UInteractionAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00A8   (0x0008)  MISSED
};

/// Class /Script/ConZ.Choppable
/// Size: 0x0000 (0x000028 - 0x000028)
class UChoppable : public UInterface
{ 
public:
};

/// Class /Script/ConZ.ChoppingObjective
/// Size: 0x0038 (0x000330 - 0x000368)
class AChoppingObjective : public ARequirementObjective
{ 
public:
	TArray<TWeakObjectPtr>                             _targetActors;                                              // 0x0330   (0x0010)  
	bool                                               _targetSpecificClothesType;                                 // 0x0340   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0341   (0x0007)  MISSED
	TArray<TWeakObjectPtr>                             _targetClothesCharacterMeshTypes;                           // 0x0348   (0x0010)  
	bool                                               _singleTarget;                                              // 0x0358   (0x0001)  
	unsigned char                                      UnknownData01_6[0xF];                                       // 0x0359   (0x000F)  MISSED
};

/// Class /Script/ConZ.ChoppingRecipeDataAsset
/// Size: 0x0098 (0x000030 - 0x0000C8)
class UChoppingRecipeDataAsset : public UDataAsset
{ 
public:
	FChoppingRecipe                                    ChoppingRecipe;                                             // 0x0030   (0x0098)  
};

/// Class /Script/ConZ.ChoppingToolItemTag
/// Size: 0x0010 (0x000030 - 0x000040)
class UChoppingToolItemTag : public UBaseItemTag
{ 
public:
	float                                              ChoppingTimeMultiplier;                                     // 0x0030   (0x0004)  
	int32_t                                            IngredientsQuantityBonus;                                   // 0x0034   (0x0004)  
	bool                                               CanBeUsedForChoppingHair;                                   // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0039   (0x0007)  MISSED
};

/// Class /Script/ConZ.ChristmasGhost
/// Size: 0x00E0 (0x000220 - 0x000300)
class AChristmasGhost : public AActor
{ 
public:
	TArray<TWeakObjectPtr>                             _possibleGifts;                                             // 0x0220   (0x0010)  
	TWeakObjectPtr<UParticleSystem*>                   _giftSpawnParticles;                                        // 0x0230   (0x0028)  
	TWeakObjectPtr<UAkAudioEvent*>                     _giftSpawnAudioEvent;                                       // 0x0258   (0x0028)  
	FTransform                                         _giftSpawnParticlesRelativeTransform;                       // 0x0280   (0x0030)  
	unsigned char                                      UnknownData00_6[0x50];                                      // 0x02B0   (0x0050)  MISSED


	/// Functions
	// Function /Script/ConZ.ChristmasGhost.SpawnGift
	void SpawnGift(FTransform& Transform);                                                                                   // [0x227e5b0] Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/ConZ.ChristmasGhost.Client_SpawnGiftItemEffects
	void Client_SpawnGiftItemEffects(FTransform Transform, UParticleSystem* ParticleSystem, UAkAudioEvent* AudioEvent);      // [0x227d720] Final|Net|NetReliableNative|Event|Private|HasDefaults|NetClient 
	// Function /Script/ConZ.ChristmasGhost.Client_BeginGiftAssetsLoading
	void Client_BeginGiftAssetsLoading(TWeakObjectPtr<UClass*> ItemClass);                                                   // [0x227d660] Final|Net|NetReliableNative|Event|Private|NetClient 
};

/// Class /Script/ConZ.CircularMenuSegmentInfo
/// Size: 0x0050 (0x000030 - 0x000080)
class UCircularMenuSegmentInfo : public UDataAsset
{ 
public:
	FText                                              Caption;                                                    // 0x0030   (0x0018)  
	UCircularMenuSegmentIcons*                         Icons;                                                      // 0x0048   (0x0008)  
	bool                                               ShouldApplyFadeToIcon;                                      // 0x0050   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0051   (0x0003)  MISSED
	float                                              IconSizeOverride;                                           // 0x0054   (0x0004)  
	bool                                               ShouldStayVisible;                                          // 0x0058   (0x0001)  
	bool                                               ShowTooltip;                                                // 0x0059   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x005A   (0x0006)  MISSED
	FText                                              ToolTipText;                                                // 0x0060   (0x0018)  
	UCircularMenuWidget*                               ParentCircularWidget;                                       // 0x0078   (0x0008)  
};

/// Class /Script/ConZ.CircularMenuSegmentWeaponMalfunctionInfo
/// Size: 0x0008 (0x000080 - 0x000088)
class UCircularMenuSegmentWeaponMalfunctionInfo : public UCircularMenuSegmentInfo
{ 
public:
	EWeaponMalfunction                                 _weaponMalfunction;                                         // 0x0080   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0081   (0x0007)  MISSED
};

/// Class /Script/ConZ.CircularMenuSegmentIcons
/// Size: 0x0020 (0x000030 - 0x000050)
class UCircularMenuSegmentIcons : public UDataAsset
{ 
public:
	UTexture2D*                                        UnselectedIcon;                                             // 0x0030   (0x0008)  
	UTexture2D*                                        SelectedIcon;                                               // 0x0038   (0x0008)  
	UTexture2D*                                        DisabledIcon;                                               // 0x0040   (0x0008)  
	UTexture2D*                                        OverlayIcon;                                                // 0x0048   (0x0008)  
};

/// Class /Script/ConZ.CircularMenuSegmentSubmenuInfo
/// Size: 0x0018 (0x000080 - 0x000098)
class UCircularMenuSegmentSubmenuInfo : public UCircularMenuSegmentInfo
{ 
public:
	TArray<UCircularMenuSegmentInfo*>                  SubmenuInfo;                                                // 0x0080   (0x0010)  
	float                                              IndexOffset;                                                // 0x0090   (0x0004)  
	bool                                               RequireSupporterPack;                                       // 0x0094   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0095   (0x0003)  MISSED
};

/// Class /Script/ConZ.MusicPlayerSegmentSubmenuInfo
/// Size: 0x0000 (0x000098 - 0x000098)
class UMusicPlayerSegmentSubmenuInfo : public UCircularMenuSegmentSubmenuInfo
{ 
public:
};

/// Class /Script/ConZ.VoicelineSegmentInfo
/// Size: 0x0010 (0x000080 - 0x000090)
class UVoicelineSegmentInfo : public UCircularMenuSegmentInfo
{ 
public:
	UCharacterVoiceline*                               Voiceline;                                                  // 0x0080   (0x0008)  
	APrisoner*                                         _prisoner;                                                  // 0x0088   (0x0008)  
};

/// Class /Script/ConZ.CircularMenuSegmentThrowingInfo
/// Size: 0x0018 (0x000080 - 0x000098)
class UCircularMenuSegmentThrowingInfo : public UCircularMenuSegmentInfo
{ 
public:
	FDelegateProperty                                  Action;                                                     // 0x0080   (0x0010)  
	int32_t                                            Index;                                                      // 0x0090   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0094   (0x0004)  MISSED
};

/// Class /Script/ConZ.CircularMenuSegmentGenericInfo
/// Size: 0x0010 (0x000080 - 0x000090)
class UCircularMenuSegmentGenericInfo : public UCircularMenuSegmentInfo
{ 
public:
	FDelegateProperty                                  Action;                                                     // 0x0080   (0x0010)  
};

/// Class /Script/ConZ.CircularMenuSegmentInteractionInfo
/// Size: 0x00C0 (0x000080 - 0x000140)
class UCircularMenuSegmentInteractionInfo : public UCircularMenuSegmentInfo
{ 
public:
	EInteractionTargetType                             InteractionTargetType;                                      // 0x0080   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0081   (0x0007)  MISSED
	FInteractionStruct                                 InteractionInfo;                                            // 0x0088   (0x0098)  
	bool                                               RequireSupporterPack;                                       // 0x0120   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0121   (0x0007)  MISSED
	APrisoner*                                         _interactionInitiator;                                      // 0x0128   (0x0008)  
	UObject*                                           _interactableObject;                                        // 0x0130   (0x0008)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0138   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.CircularMenuSegmentInteractionInfo.CreateSpecific
	UCircularMenuSegmentInteractionInfo* CreateSpecific(APrisoner* initiator, UObject* interactable, FInteractionStruct& InteractionStruct); // [0x227def0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.CircularMenuSegmentInteractionInfo.Create
	UCircularMenuSegmentInteractionInfo* Create(EInteractionTargetType interactionTarget, FInteractionStruct& InteractionStruct); // [0x227dac0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/ConZ.CircularMenuMusicPlayerToggleInfo
/// Size: 0x0198 (0x000080 - 0x000218)
class UCircularMenuMusicPlayerToggleInfo : public UCircularMenuSegmentInfo
{ 
public:
	EInteractionTargetType                             InteractionTargetType;                                      // 0x0080   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0081   (0x0007)  MISSED
	FInteractionStruct                                 PrimaryInteractionInfo;                                     // 0x0088   (0x0098)  
	FInteractionStruct                                 SecondaryInteractionInfo;                                   // 0x0120   (0x0098)  
	FText                                              PrimaryCaption;                                             // 0x01B8   (0x0018)  
	UCircularMenuSegmentIcons*                         PrimaryIcons;                                               // 0x01D0   (0x0008)  
	FText                                              SecondaryCaption;                                           // 0x01D8   (0x0018)  
	UCircularMenuSegmentIcons*                         SecondaryIcons;                                             // 0x01F0   (0x0008)  
	bool                                               IsPrimaryActive;                                            // 0x01F8   (0x0001)  
	EMusicPlayerCommandType                            MusicPlayerCommandType;                                     // 0x01F9   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x01FA   (0x0006)  MISSED
	APrisoner*                                         _interactionInitiator;                                      // 0x0200   (0x0008)  
	UObject*                                           _interactableObject;                                        // 0x0208   (0x0008)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0210   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.CircularMenuMusicPlayerToggleInfo.CreateSpecific
	UCircularMenuMusicPlayerToggleInfo* CreateSpecific(APrisoner* interactionInitiator, UObject* interactableObject, FInteractionStruct& firstInteractionStruct, FInteractionStruct& secondInteractionStruct); // [0x227dca0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.CircularMenuMusicPlayerToggleInfo.Create
	UCircularMenuMusicPlayerToggleInfo* Create(EInteractionTargetType interactionTarget, FInteractionStruct& fistInteractionStruct, FInteractionStruct& secondInteractionStruct); // [0x227d8b0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/ConZ.CircularMenuSegmentWidget
/// Size: 0x0080 (0x000260 - 0x0002E0)
class UCircularMenuSegmentWidget : public UUserWidget
{ 
public:
	UClass*                                            _genericTooltipClass;                                       // 0x0260   (0x0008)  
	float                                              _nonSelectableAlpha;                                        // 0x0268   (0x0004)  
	FLinearColor                                       _highlightedColour;                                         // 0x026C   (0x0010)  
	FLinearColor                                       _unHighlightedColour;                                       // 0x027C   (0x0010)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x028C   (0x0004)  MISSED
	UCircularMenuSegmentInfo*                          _info;                                                      // 0x0290   (0x0008)  
	UCircularMenuSegmentWidget*                        _parentSegmentWidget;                                       // 0x0298   (0x0008)  
	UImage*                                            _segment;                                                   // 0x02A0   (0x0008)  
	UOverlay*                                          _iconsOverlay;                                              // 0x02A8   (0x0008)  
	USizeBox*                                          _iconSizeBox;                                               // 0x02B0   (0x0008)  
	UImage*                                            _icon;                                                      // 0x02B8   (0x0008)  
	USizeBox*                                          _overlayIconSizeBox;                                        // 0x02C0   (0x0008)  
	UImage*                                            _overlayIcon;                                               // 0x02C8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x02D0   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.CircularMenuSegmentWidget.UpdateVisualParameters
	void UpdateVisualParameters(int32_t numberOfSegments, int32_t Index, float Offset, float middleCutoffPercentage, float Size); // [0x227e690] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.CircularMenuSegmentWidget.IsTooltipEnabled
	bool IsTooltipEnabled();                                                                                                 // [0x227e130] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.CircularMenuSegmentWidget.GetTooltipText
	FText GetTooltipText();                                                                                                  // [0x227e090] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.CircularMenuSegmentWidget.CreateFromInfo
	UCircularMenuSegmentWidget* CreateFromInfo(UCircularMenuSegmentInfo* Info);                                              // [0x227dc10] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/ConZ.CircularMenuWidget
/// Size: 0x0048 (0x000260 - 0x0002A8)
class UCircularMenuWidget : public UUserWidget
{ 
public:
	TArray<FCircularLayerData>                         _layerData;                                                 // 0x0260   (0x0010)  
	float                                              _centerSize;                                                // 0x0270   (0x0004)  
	bool                                               _constrainMouseToWidget;                                    // 0x0274   (0x0001)  
	bool                                               _unboundOuterRadiusOnFirstInteractionLayer;                 // 0x0275   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0276   (0x0002)  MISSED
	TArray<FCircularSegmentContainer>                  _segmentsByLayer;                                           // 0x0278   (0x0010)  
	UOverlay*                                          _mainOverlay;                                               // 0x0288   (0x0008)  
	UTextBlock*                                        _actionText;                                                // 0x0290   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0298   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.CircularMenuWidget.InitializeThrowingLayer
	void InitializeThrowingLayer(int32_t Layer, float Offset, TArray<UCircularMenuSegmentThrowingInfo*> SegmentInfo, int32_t countParameterOverride); // [0x2285070] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.CircularMenuWidget.InitializeLayer
	void InitializeLayer(int32_t Layer, float Offset, TArray<UCircularMenuSegmentInfo*> SegmentInfo, int32_t countParameterOverride, bool createAdditionalDummySegments); // [0x2284e80] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.CircularMenuWidget.GetSegmentIdForCoordinatesAndLayer
	int32_t GetSegmentIdForCoordinatesAndLayer(FVector2D Coordinates, int32_t Layer);                                        // [0x2284d80] Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.CircularMenuWidget.GetSegmentIdForCoordinates
	int32_t GetSegmentIdForCoordinates(FVector2D Coordinates, int32_t& Layer);                                               // [0x2284cb0] Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.CircularMenuWidget.CreateThrowingMenuWidget
	UCircularMenuWidget* CreateThrowingMenuWidget(UObject* WorldContextObject, TArray<UCircularMenuSegmentThrowingInfo*> throwingSegmentInfo); // [0x2284af0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/ConZ.CircularMenuWidget.Create
	UCircularMenuWidget* Create(UObject* WorldContextObject, TArray<UCircularMenuSegmentInfo*> SegmentInfo);                 // [0x22849c0] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/ConZ.CircularProgressBar
/// Size: 0x0088 (0x000260 - 0x0002E8)
class UCircularProgressBar : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0260   (0x0010)  MISSED
	float                                              _speedChange;                                               // 0x0270   (0x0004)  
	bool                                               _shouldProgressTextBeVisible;                               // 0x0274   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0275   (0x0003)  MISSED
	FLinearColor                                       _alarmColor;                                                // 0x0278   (0x0010)  
	FLinearColor                                       _normalColor;                                               // 0x0288   (0x0010)  
	FLinearColor                                       _textColor;                                                 // 0x0298   (0x0010)  
	UMaterialInstanceDynamic*                          _circularMaterial;                                          // 0x02A8   (0x0008)  
	UTexture2D*                                        Image;                                                      // 0x02B0   (0x0008)  
	UImage*                                            Fill_Value_BCG;                                             // 0x02B8   (0x0008)  
	UImage*                                            Icon;                                                       // 0x02C0   (0x0008)  
	UHorizontalBox*                                    ProgressTextBox;                                            // 0x02C8   (0x0008)  
	UTextBlock*                                        TPercentage;                                                // 0x02D0   (0x0008)  
	UTextBlock*                                        TPercentageSign;                                            // 0x02D8   (0x0008)  
	UWidgetAnimation*                                  OuterCircleAlarmAnimation;                                  // 0x02E0   (0x0008)  


	/// Functions
	// Function /Script/ConZ.CircularProgressBar.SetPercentage
	void SetPercentage(float Percentage);                                                                                    // [0x22852d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.CircularProgressBar.GetPercentage
	float GetPercentage();                                                                                                   // [0x2284c80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.ClaimableWhenKilled
/// Size: 0x0000 (0x000028 - 0x000028)
class UClaimableWhenKilled : public UInterface
{ 
public:
};

/// Class /Script/ConZ.CleaningItemTag
/// Size: 0x0000 (0x000030 - 0x000030)
class UCleaningItemTag : public UBaseItemTag
{ 
public:
};

/// Class /Script/ConZ.WeaponActionClearMalfunctionSequence
/// Size: 0x0090 (0x000028 - 0x0000B8)
class UWeaponActionClearMalfunctionSequence : public UWeaponAction
{ 
public:
	int32_t                                            SortIndex;                                                  // 0x0028   (0x0004)  
	EWeaponMalfunction                                 MalfunctionType;                                            // 0x002C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x002D   (0x0003)  MISSED
	FText                                              Description;                                                // 0x0030   (0x0018)  
	UCircularMenuSegmentWeaponMalfunctionInfo*         CircularMenuSegmentInfo;                                    // 0x0048   (0x0008)  
	TMap<EWeaponMalfunction, FClearMalfunctionData>    Malfunctions;                                               // 0x0050   (0x0050)  
	bool                                               CanBeInterrupted;                                           // 0x00A0   (0x0001)  
	bool                                               AllowBeginFiringSequence;                                   // 0x00A1   (0x0001)  
	unsigned char                                      UnknownData01_6[0x16];                                      // 0x00A2   (0x0016)  MISSED


	/// Functions
	// Function /Script/ConZ.WeaponActionClearMalfunctionSequence.ShowOnUI
	bool ShowOnUI();                                                                                                         // [0x24136a0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.WeaponActionClearMalfunctionSequence.ShouldClearMalfunctionOnEvent
	bool ShouldClearMalfunctionOnEvent(EWeaponMalfunction malfunction, EWeaponMalfunctionEvent malfunctionEvent);            // [0x24135c0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.WeaponActionClearMalfunctionSequence.SetNextMontageSectionFromPrevious
	void SetNextMontageSectionFromPrevious(FName previousSection, FName NextSection);                                        // [0x2413280] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponActionClearMalfunctionSequence.SetNextMontageSection
	void SetNextMontageSection(FName NextSection);                                                                           // [0x2412f70] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponActionClearMalfunctionSequence.OnMontageEnded
	void OnMontageEnded(UAnimMontage* Montage, bool interrupted);                                                            // [0x2412c80] Native|Protected     
	// Function /Script/ConZ.WeaponActionClearMalfunctionSequence.OnMontageBlendingOutStarted
	void OnMontageBlendingOutStarted(UAnimMontage* Montage, bool interrupted);                                               // [0x2309a20] Native|Protected     
	// Function /Script/ConZ.WeaponActionClearMalfunctionSequence.HandleMalfunctionEvent
	void HandleMalfunctionEvent(EWeaponMalfunctionEvent malfunctionEvent, FWeaponMalfunctionEventDescription& desc);         // [0x2412540] Native|Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/ConZ.WeaponActionClearMalfunctionSequence.GetActiveAnimationWeapon
	UAnimMontage* GetActiveAnimationWeapon();                                                                                // [0x2412430] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponActionClearMalfunctionSequence.GetActiveAnimationBody
	UAnimMontage* GetActiveAnimationBody();                                                                                  // [0x2412370] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponActionClearMalfunctionSequence.Execute
	float Execute();                                                                                                         // [0x24121a0] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.WeaponActionClearMalfunctionSequence.End
	void End(bool Regular);                                                                                                  // [0x2412040] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.WeaponActionClearMalfunctionSequence.CanInterrupt
	bool CanInterrupt();                                                                                                     // [0x2411f50] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.WeaponActionClearMalfunctionSequence.CanExecute
	bool CanExecute(EWeaponMalfunction malfunction);                                                                         // [0x2411d60] Native|Event|Public|BlueprintEvent|Const 
};

/// Class /Script/ConZ.ClearBadRound
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UClearBadRound : public UWeaponActionClearMalfunctionSequence
{ 
public:
	FName                                              MontageEndSectionName;                                      // 0x00B8   (0x0008)  
};

/// Class /Script/ConZ.ClearClipPartiallyEjected
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UClearClipPartiallyEjected : public UWeaponActionClearMalfunctionSequence
{ 
public:
	FName                                              MontageEndSectionName;                                      // 0x00B8   (0x0008)  
};

/// Class /Script/ConZ.ClearDoubleFeed
/// Size: 0x0018 (0x0000B8 - 0x0000D0)
class UClearDoubleFeed : public UWeaponActionClearMalfunctionSequence
{ 
public:
	FName                                              MontageEndSectionName;                                      // 0x00B8   (0x0008)  
	int32_t                                            _ejectedRoundsCount;                                        // 0x00C0   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00C4   (0x0004)  MISSED
	AWeaponAttachmentMagazine*                         _magazineToRestore;                                         // 0x00C8   (0x0008)  
};

/// Class /Script/ConZ.ClearRoundNotLoaded
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UClearRoundNotLoaded : public UWeaponActionClearMalfunctionSequence
{ 
public:
	FName                                              MontageEndSectionName;                                      // 0x00B8   (0x0008)  
};

/// Class /Script/ConZ.ClearSearchButton
/// Size: 0x0020 (0x000260 - 0x000280)
class UClearSearchButton : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0260   (0x0010)  MISSED
	UWidgetAnimation*                                  _hoverAnimation;                                            // 0x0270   (0x0008)  
	UWidgetAnimation*                                  _clickAnimation;                                            // 0x0278   (0x0008)  
};

/// Class /Script/ConZ.ClearStovePipe
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UClearStovePipe : public UWeaponActionClearMalfunctionSequence
{ 
public:
	FName                                              MontageEndSectionName;                                      // 0x00B8   (0x0008)  
};

/// Class /Script/ConZ.ClearStuckBullet
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UClearStuckBullet : public UWeaponActionClearMalfunctionSequence
{ 
public:
	FName                                              MontageEndSectionName;                                      // 0x00B8   (0x0008)  
};

/// Class /Script/ConZ.ClientPriceCache
/// Size: 0x02A0 (0x000028 - 0x0002C8)
class UClientPriceCache : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x2A0];                                     // 0x0028   (0x02A0)  MISSED
};

/// Class /Script/ConZ.ConZSettingsMenu
/// Size: 0x03C8 (0x000260 - 0x000628)
class UConZSettingsMenu : public UBaseMenu
{ 
public:
	UTabGroup*                                         _categorySelector;                                          // 0x0260   (0x0008)  
	UWidgetSwitcher*                                   _categorySwitcher;                                          // 0x0268   (0x0008)  
	UPanelWidget*                                      _controlButtonsPanel;                                       // 0x0270   (0x0008)  
	UClass*                                            _tabButtonClass;                                            // 0x0278   (0x0008)  
	UClass*                                            _subcategoryCarouselClass;                                  // 0x0280   (0x0008)  
	UClass*                                            _tooltipClass;                                              // 0x0288   (0x0008)  
	unsigned char                                      UnknownData00_5[0x1B0];                                     // 0x0290   (0x01B0)  MISSED
	UMenuButton*                                       _apply;                                                     // 0x0440   (0x0008)  
	UMenuButton*                                       _reset;                                                     // 0x0448   (0x0008)  
	UMenuButton*                                       _resetAll;                                                  // 0x0450   (0x0008)  
	UMenuButton*                                       _back;                                                      // 0x0458   (0x0008)  
	UVerticalBox*                                      _messageBoxPanel;                                           // 0x0460   (0x0008)  
	float                                              _maxDesiredSubcategoryHeight;                               // 0x0468   (0x0004)  
	unsigned char                                      UnknownData01_5[0x104];                                     // 0x046C   (0x0104)  MISSED
	float                                              _tooltipDelayInSeconds;                                     // 0x0570   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0574   (0x0004)  MISSED
	FSlateFontInfo                                     _requiresServerRestartFont;                                 // 0x0578   (0x0058)  
	unsigned char                                      UnknownData03_6[0x58];                                      // 0x05D0   (0x0058)  MISSED


	/// Functions
	// Function /Script/ConZ.ConZSettingsMenu.MoveFocusUp
	UWidget* MoveFocusUp(EUINavigation UINavigation);                                                                        // [0x22a18f0] Final|Native|Protected 
	// Function /Script/ConZ.ConZSettingsMenu.MoveFocusDown
	UWidget* MoveFocusDown(EUINavigation UINavigation);                                                                      // [0x22a1860] Final|Native|Protected 
};

/// Class /Script/ConZ.ClientSettingsMenu
/// Size: 0x0038 (0x000628 - 0x000660)
class UClientSettingsMenu : public UConZSettingsMenu
{ 
public:
	UClass*                                            _inputWidget;                                               // 0x0628   (0x0008)  
	UClass*                                            _audioDeviceDisplay;                                        // 0x0630   (0x0008)  
	unsigned char                                      UnknownData00_6[0x28];                                      // 0x0638   (0x0028)  MISSED
};

/// Class /Script/ConZ.ConZSettingsUIController
/// Size: 0x01B0 (0x000028 - 0x0001D8)
class UConZSettingsUIController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x1B0];                                     // 0x0028   (0x01B0)  MISSED
};

/// Class /Script/ConZ.ClientSettingsUIController
/// Size: 0x0040 (0x0001D8 - 0x000218)
class UClientSettingsUIController : public UConZSettingsUIController
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x01D8   (0x0030)  MISSED
	UInputWidget*                                      InputWidget;                                                // 0x0208   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0210   (0x0008)  MISSED
};

/// Class /Script/ConZ.ClockFaceWidget
/// Size: 0x0000 (0x000260 - 0x000260)
class UClockFaceWidget : public UUserWidget
{ 
public:
};

/// Class /Script/ConZ.ClothesItemState
/// Size: 0x0010 (0x000100 - 0x000110)
class UClothesItemState : public UItemState
{ 
public:
	float                                              dirtiness;                                                  // 0x0100   (0x0004)  
	bool                                               IsPatched;                                                  // 0x0104   (0x0001)  
	unsigned char                                      UnknownData00_6[0xB];                                       // 0x0105   (0x000B)  MISSED
};

/// Class /Script/ConZ.ItemEntitySetup
/// Size: 0x0008 (0x000080 - 0x000088)
class UItemEntitySetup : public UEntitySetup
{ 
public:
	float                                              MaxHealth;                                                  // 0x0080   (0x0004)  
	float                                              MaxHealthRatioAfterReachingBadQuality;                      // 0x0084   (0x0004)  
};

/// Class /Script/ConZ.ClothesItemEntitySetup
/// Size: 0x0000 (0x000088 - 0x000088)
class UClothesItemEntitySetup : public UItemEntitySetup
{ 
public:
};

/// Class /Script/ConZ.ClothesModifierItemTag
/// Size: 0x0000 (0x000030 - 0x000030)
class UClothesModifierItemTag : public UBaseItemTag
{ 
public:
};

/// Class /Script/ConZ.CollapsableColorPicker
/// Size: 0x0050 (0x000260 - 0x0002B0)
class UCollapsableColorPicker : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	USelectionOverlayWidget*                           _selectionOverlay;                                          // 0x0278   (0x0008)  
	UTextBlock*                                        _label;                                                     // 0x0280   (0x0008)  
	UImage*                                            _colorPreviewSquare;                                        // 0x0288   (0x0008)  
	UColorPicker*                                      _colorPicker;                                               // 0x0290   (0x0008)  
	FText                                              dropdownLabel;                                              // 0x0298   (0x0018)  
};

/// Class /Script/ConZ.CollapsableContainer
/// Size: 0x0550 (0x000260 - 0x0007B0)
class UCollapsableContainer : public UUserWidget
{ 
public:
	FText                                              Title;                                                      // 0x0260   (0x0018)  
	UTextBlock*                                        _title;                                                     // 0x0278   (0x0008)  
	UImage*                                            _titleBackground;                                           // 0x0280   (0x0008)  
	UButton*                                           _displayContentButton;                                      // 0x0288   (0x0008)  
	UOverlay*                                          _contentAreaOverlay;                                        // 0x0290   (0x0008)  
	FDataTableRowHandle                                _titleBackgroundColor;                                      // 0x0298   (0x0010)  
	FDataTableRowHandle                                _titleTextColor;                                            // 0x02A8   (0x0010)  
	FButtonStyle                                       _buttonStyleWhenCollapsedContent;                           // 0x02B8   (0x0278)  
	FButtonStyle                                       _buttonStyleWhenExpandedContent;                            // 0x0530   (0x0278)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x07A8   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.CollapsableContainer.OnDisplayContentButtonClicked
	void OnDisplayContentButtonClicked();                                                                                    // [0x2285210] Final|Native|Private 
};

/// Class /Script/ConZ.CutObjectAssetData
/// Size: 0x0008 (0x000030 - 0x000038)
class UCutObjectAssetData : public UInteractionAssetData
{ 
public:
	UChoppingRecipeDataAsset*                          ChoppingRecipeDataAsset;                                    // 0x0030   (0x0008)  
};

/// Class /Script/ConZ.CollectObjectAssetData
/// Size: 0x0000 (0x000038 - 0x000038)
class UCollectObjectAssetData : public UCutObjectAssetData
{ 
public:
};

/// Class /Script/ConZ.CollectSeedsItemTag
/// Size: 0x0028 (0x000030 - 0x000058)
class UCollectSeedsItemTag : public UBaseItemTag
{ 
public:
	TWeakObjectPtr<UClass*>                            _seedsClass;                                                // 0x0030   (0x0028)  
};

/// Class /Script/ConZ.CollisionDamageType
/// Size: 0x0000 (0x000040 - 0x000040)
class UCollisionDamageType : public UDamageType
{ 
public:
};

/// Class /Script/ConZ.ColorPicker
/// Size: 0x0040 (0x000260 - 0x0002A0)
class UColorPicker : public UUserWidget
{ 
public:
	UImage*                                            _dynamicGradient;                                           // 0x0260   (0x0008)  
	UImage*                                            _dynamicReticle;                                            // 0x0268   (0x0008)  
	USlider*                                           _sliderHUE;                                                 // 0x0270   (0x0008)  
	FVector2D                                          _saturationAndBrightnessPickerSize;                         // 0x0278   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0280   (0x0020)  MISSED
};

/// Class /Script/ConZ.CombinationLockGetCombinationRequest
/// Size: 0x0018 (0x000028 - 0x000040)
class UCombinationLockGetCombinationRequest : public UPlayerRpcChannelServerRequest
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0028   (0x0018)  MISSED
};

/// Class /Script/ConZ.CombinationLockGetCombinationResponse
/// Size: 0x0008 (0x000028 - 0x000030)
class UCombinationLockGetCombinationResponse : public UPlayerRpcChannelServerResponse
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.CombinationLockItem
/// Size: 0x0010 (0x000910 - 0x000920)
class ACombinationLockItem : public AItem
{ 
public:
	int32_t                                            _combination;                                               // 0x0910   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x0914   (0x000C)  MISSED


	/// Functions
	// Function /Script/ConZ.CombinationLockItem.Server_SetCombination
	void Server_SetCombination(int32_t Value);                                                                               // [0x224f000] Net|NetReliableNative|Event|Public|NetServer 
};

/// Class /Script/ConZ.CombinationLockUnlockAttemptRequest
/// Size: 0x0020 (0x000028 - 0x000048)
class UCombinationLockUnlockAttemptRequest : public UPlayerRpcChannelServerRequest
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0028   (0x0020)  MISSED
};

/// Class /Script/ConZ.CombinationLockUnlockAttemptResponse
/// Size: 0x0008 (0x000028 - 0x000030)
class UCombinationLockUnlockAttemptResponse : public UPlayerRpcChannelServerResponse
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.ComboBoxStringWithIndexing
/// Size: 0x0010 (0x000E00 - 0x000E10)
class UComboBoxStringWithIndexing : public UComboBoxString
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0E00   (0x0010)  MISSED
};

/// Class /Script/ConZ.ComboBoxWrapper
/// Size: 0x0010 (0x000260 - 0x000270)
class UComboBoxWrapper : public UUserWidget
{ 
public:
	UComboBoxString*                                   ComboBox;                                                   // 0x0260   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0268   (0x0008)  MISSED
};

/// Class /Script/ConZ.CommonCraftingRecipe
/// Size: 0x0000 (0x000088 - 0x000088)
class UCommonCraftingRecipe : public UBaseCraftingRecipe
{ 
public:
};

/// Class /Script/ConZ.CompanionCrowAnimInstance
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UCompanionCrowAnimInstance : public UAnimInstance
{ 
public:
	bool                                               _isIdle;                                                    // 0x02B8   (0x0001)  
	bool                                               _isFlyingOff;                                               // 0x02B9   (0x0001)  
	bool                                               _isCruising;                                                // 0x02BA   (0x0001)  
	bool                                               _isLanding;                                                 // 0x02BB   (0x0001)  
	float                                              _landedRatio;                                               // 0x02BC   (0x0004)  
	float                                              _speed;                                                     // 0x02C0   (0x0004)  
	float                                              _prisonerSpeed;                                             // 0x02C4   (0x0004)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x02C8   (0x0008)  MISSED
};

/// Class /Script/ConZ.CompanionCrow
/// Size: 0x0008 (0x000220 - 0x000228)
class ACompanionCrow : public AActor
{ 
public:
	USkeletalMeshComponent*                            _mesh;                                                      // 0x0220   (0x0008)  
};

/// Class /Script/ConZ.CompassItemTag
/// Size: 0x0008 (0x000030 - 0x000038)
class UCompassItemTag : public UBaseItemTag
{ 
public:
	char                                               CompassLevel;                                               // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Class /Script/ConZ.CompassWidget
/// Size: 0x0040 (0x000260 - 0x0002A0)
class UCompassWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0260   (0x0008)  MISSED
	UImage*                                            _compassTrack;                                              // 0x0268   (0x0008)  
	UTexture2D*                                        _compassTrackNorthOnly;                                     // 0x0270   (0x0008)  
	UTexture2D*                                        _compassTrackCardinalOnly;                                  // 0x0278   (0x0008)  
	UTexture2D*                                        _compassTrackCardinalAndIntercardinal;                      // 0x0280   (0x0008)  
	UTexture2D*                                        _compassTrackEverything;                                    // 0x0288   (0x0008)  
	FVector2D                                          _offset;                                                    // 0x0290   (0x0008)  
	float                                              _compassTrackWidthMultiplier;                               // 0x0298   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x029C   (0x0004)  MISSED
};

/// Class /Script/ConZ.ComplexAnimal2
/// Size: 0x0180 (0x000990 - 0x000B10)
class AComplexAnimal2 : public AAnimal2
{ 
public:
	float                                              EnergyDepletionRate;                                        // 0x0988   (0x0004)  
	float                                              HungerDepletionRate;                                        // 0x098C   (0x0004)  
	float                                              HungerDepletionRateWhenResting;                             // 0x0990   (0x0004)  
	float                                              EnergyRefillRate;                                           // 0x0994   (0x0004)  
	float                                              HungerRefillRate;                                           // 0x0998   (0x0004)  
	float                                              HealthRegenerationRate;                                     // 0x099C   (0x0004)  
	float                                              HealthDepletionRate;                                        // 0x09A0   (0x0004)  
	FAnimalPaceSettings                                MovementPaceSettings;                                       // 0x09A4   (0x0010)  
	FAnimalStationaryRotationRateSettings              RotationRateSettings;                                       // 0x09B4   (0x003C)  
	FMulticastInlineDelegate                           OnActionChanged;                                            // 0x09F0   (0x0010)  
	TArray<FChargeAttackData>                          ChargeAttacks;                                              // 0x0A00   (0x0010)  
	TArray<FCloseRangeAttackData>                      CloseRangeAttacks;                                          // 0x0A10   (0x0010)  
	FTurnMontages                                      TurnMonatges;                                               // 0x0A20   (0x0010)  
	FAnimalActionMontageData                           AnimalActions;                                              // 0x0A30   (0x0018)  
	float                                              AttackRotationRate;                                         // 0x0A48   (0x0004)  
	float                                              MinActionTime;                                              // 0x0A4C   (0x0004)  
	FGameplayTag                                       HitReactTypeResting;                                        // 0x0A50   (0x0008)  
	FGameplayTag                                       HitReactTypeIntimidate;                                     // 0x0A58   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0A60   (0x0008)  MISSED
	uint16_t                                           _hungerAndEnergyReplicated;                                 // 0x0A68   (0x0002)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x0A6A   (0x0006)  MISSED
	FVector                                            _lookAtPoint;                                               // 0x0A70   (0x000C)  
	unsigned char                                      UnknownData02_5[0x50];                                      // 0x0A7C   (0x0050)  MISSED
	float                                              _maxLookUpAngle;                                            // 0x0ACC   (0x0004)  
	float                                              _maxLookRightAngle;                                         // 0x0AD0   (0x0004)  
	float                                              _headMovementLerpSpeed;                                     // 0x0AD4   (0x0004)  
	unsigned char                                      UnknownData03_6[0x38];                                      // 0x0AD8   (0x0038)  MISSED


	/// Functions
	// Function /Script/ConZ.ComplexAnimal2.Wait
	void Wait(float Time);                                                                                                   // [0x2288a50] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ComplexAnimal2.TurnTowardLocation
	float TurnTowardLocation(FVector Location);                                                                              // [0x2288900] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/ConZ.ComplexAnimal2.TurnTowardActor
	float TurnTowardActor(AActor* foe);                                                                                      // [0x2288860] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ComplexAnimal2.TurnAwayFromActor
	float TurnAwayFromActor(AActor* foe);                                                                                    // [0x22887c0] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ComplexAnimal2.Turn
	float Turn(bool directionLeft);                                                                                          // [0x2288720] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ComplexAnimal2.StopAction_Multicast
	void StopAction_Multicast();                                                                                             // [0x2288700] Net|NetReliableNative|Event|NetMulticast|Protected 
	// Function /Script/ConZ.ComplexAnimal2.StartAction_Multicast
	void StartAction_Multicast(FRepActionData newAction);                                                                    // [0x2288640] Net|NetReliableNative|Event|NetMulticast|Protected 
	// Function /Script/ConZ.ComplexAnimal2.Sit
	void Sit(float Time);                                                                                                    // [0x22885b0] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ComplexAnimal2.Rest
	void Rest(float Time);                                                                                                   // [0x2288520] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ComplexAnimal2.ResetRotationRate
	void ResetRotationRate();                                                                                                // [0x2288500] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ComplexAnimal2.PreformChargeAttack
	bool PreformChargeAttack(int32_t attackIndex, float Time);                                                               // [0x2288410] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ComplexAnimal2.OnRep_HungerAndEnergy
	void OnRep_HungerAndEnergy();                                                                                            // [0x2288270] Native|Protected     
	// Function /Script/ConZ.ComplexAnimal2.OnRep_ActionData
	void OnRep_ActionData();                                                                                                 // [0x2288250] Native|Protected     
	// Function /Script/ConZ.ComplexAnimal2.NetMulticast_ForceSetAnimalRotation
	void NetMulticast_ForceSetAnimalRotation(FRotator NewRotation);                                                          // [0x22880f0] Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults 
	// Function /Script/ConZ.ComplexAnimal2.IsAttacking
	bool IsAttacking();                                                                                                      // [0x22880c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ComplexAnimal2.Intimidate
	void Intimidate(float Time, AActor* foe);                                                                                // [0x2287fe0] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ComplexAnimal2.GetSpeed
	FVector GetSpeed();                                                                                                      // [0x2287ec0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ComplexAnimal2.GetAngularVelocity
	float GetAngularVelocity();                                                                                              // [0x2287e60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ComplexAnimal2.ForceRoattionRate
	void ForceRoattionRate(FRotator RotationRate);                                                                           // [0x2287dd0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/ConZ.ComplexAnimal2.Eat
	void Eat(float Time);                                                                                                    // [0x2287d40] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ComplexAnimal2.ChargeAttackFoe
	bool ChargeAttackFoe(AActor* foe);                                                                                       // [0x2287ca0] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ComplexAnimal2.ChangeSpeed
	void ChangeSpeed(float pace);                                                                                            // [0x2287c20] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ComplexAnimal2.ChangePace
	void ChangePace(EAnimalMovementPace pace);                                                                               // [0x2287ba0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ComplexAnimal2.Alert
	void Alert(float Time);                                                                                                  // [0x2287aa0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.ComplexAnimal2AnimInstance
/// Size: 0x0070 (0x0002F0 - 0x000360)
class UComplexAnimal2AnimInstance : public UAnimal2AnimInstance
{ 
public:
	EAnimalAction                                      CurrentAction;                                              // 0x02F0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x02F1   (0x0003)  MISSED
	float                                              HeadLookRight;                                              // 0x02F4   (0x0004)  
	float                                              HeadLookUp;                                                 // 0x02F8   (0x0004)  
	float                                              AngularVelocity;                                            // 0x02FC   (0x0004)  
	FName                                              faceMorphTargetName;                                        // 0x0300   (0x0008)  
	float                                              InterpolationSpeed;                                         // 0x0308   (0x0004)  
	float                                              BlendInTime;                                                // 0x030C   (0x0004)  
	float                                              BlendOutTime;                                               // 0x0310   (0x0004)  
	unsigned char                                      UnknownData01_5[0x3C];                                      // 0x0314   (0x003C)  MISSED
	float                                              _faceMorphValueChangePerSeconds;                            // 0x0350   (0x0004)  
	unsigned char                                      UnknownData02_6[0xC];                                       // 0x0354   (0x000C)  MISSED


	/// Functions
	// Function /Script/ConZ.ComplexAnimal2AnimInstance.GetTurnInPlaceElapsedTimeRight
	float GetTurnInPlaceElapsedTimeRight();                                                                                  // [0x2287fc0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ComplexAnimal2AnimInstance.GetTurnInPlaceElapsedTimeLeft
	float GetTurnInPlaceElapsedTimeLeft();                                                                                   // [0x2287fa0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ComplexAnimal2AnimInstance.GetTurnInPlaceDirectionBlendAlpha
	float GetTurnInPlaceDirectionBlendAlpha();                                                                               // [0x2287f50] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ComplexAnimal2AnimInstance.GetTurnInPlaceBlendAlpha
	float GetTurnInPlaceBlendAlpha();                                                                                        // [0x2287f00] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.ConsoleStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UConsoleStatics : public UObject
{ 
public:
};

/// Class /Script/ConZ.ConstitutionSkill
/// Size: 0x0018 (0x0000B0 - 0x0000C8)
class UConstitutionSkill : public USkill
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x00B0   (0x0018)  MISSED
};

/// Class /Script/ConZ.ConsumableUserData
/// Size: 0x0000 (0x000028 - 0x000028)
class UConsumableUserData : public UObject
{ 
public:
};

/// Class /Script/ConZ.FoodItem
/// Size: 0x00A0 (0x000910 - 0x0009B0)
class AFoodItem : public AItem
{ 
public:
	float                                              AccumulatedFatigueBonus;                                    // 0x0910   (0x0004)  
	float                                              ThermalConductivityFactor;                                  // 0x0914   (0x0004)  
	float                                              FreezingTemperature;                                        // 0x0918   (0x0004)  
	float                                              RoomTemperature;                                            // 0x091C   (0x0004)  
	bool                                               Spoilable;                                                  // 0x0920   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0921   (0x0003)  MISSED
	float                                              ShelfLife;                                                  // 0x0924   (0x0004)  
	float                                              SpoilageRateFrozen;                                         // 0x0928   (0x0004)  
	float                                              SpoilageRateModifierWhileSealed;                            // 0x092C   (0x0004)  
	bool                                               IsConsumable;                                               // 0x0930   (0x0001)  
	bool                                               CanCheckTaste;                                              // 0x0931   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x0932   (0x0006)  MISSED
	UParticleSystemComponent*                          SteamComponent;                                             // 0x0938   (0x0008)  
	UParticleSystem*                                   SteamParticles;                                             // 0x0940   (0x0008)  
	UParticleSystemComponent*                          SmokeComponent;                                             // 0x0948   (0x0008)  
	UParticleSystem*                                   SmokeParticles;                                             // 0x0950   (0x0008)  
	UStaticMesh*                                       ItemOpenedMesh;                                             // 0x0958   (0x0008)  
	UStaticMesh*                                       ItemEmptyMesh;                                              // 0x0960   (0x0008)  
	UAkAudioEvent*                                     StartEatingAudioEvent;                                      // 0x0968   (0x0008)  
	UAkAudioEvent*                                     StopEatingAudioEvent;                                       // 0x0970   (0x0008)  
	UAkAudioEvent*                                     StartCookingAudioEvent;                                     // 0x0978   (0x0008)  
	UAkAudioEvent*                                     StopCookingAudioEvent;                                      // 0x0980   (0x0008)  
	UClass*                                            _resourceTypeForConsumption;                                // 0x0988   (0x0008)  
	float                                              _caloriesBonus;                                             // 0x0990   (0x0004)  
	float                                              _catchSicknessModifier;                                     // 0x0994   (0x0004)  
	bool                                               _itemOpened;                                                // 0x0998   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0999   (0x0003)  MISSED
	float                                              _temperature;                                               // 0x099C   (0x0004)  
	unsigned char                                      UnknownData03_6[0x10];                                      // 0x09A0   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.FoodItem.OnRep_ItemOpened
	void OnRep_ItemOpened();                                                                                                 // [0x22d9730] Final|Native|Private 
	// Function /Script/ConZ.FoodItem.OnAudioComponentExpired
	void OnAudioComponentExpired();                                                                                          // [0x22c2bf0] Final|Native|Private|Const 
};

/// Class /Script/ConZ.ConsumableBuffItem
/// Size: 0x0000 (0x0009B0 - 0x0009B0)
class AConsumableBuffItem : public AFoodItem
{ 
public:
};

/// Class /Script/ConZ.ConsumableDigestionHandler
/// Size: 0x0000 (0x000028 - 0x000028)
class UConsumableDigestionHandler : public UObject
{ 
public:
};

/// Class /Script/ConZ.ContainerDisplay
/// Size: 0x00C0 (0x000260 - 0x000320)
class UContainerDisplay : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x60];                                      // 0x0260   (0x0060)  MISSED
	UImage*                                            _containerImage;                                            // 0x02C0   (0x0008)  
	UImage*                                            _containerImage2;                                           // 0x02C8   (0x0008)  
	USizeBox*                                          _sizeBox;                                                   // 0x02D0   (0x0008)  
	UTextBlock*                                        _name;                                                      // 0x02D8   (0x0008)  
	UTextBlock*                                        _name2;                                                     // 0x02E0   (0x0008)  
	UTextBlock*                                        _durability;                                                // 0x02E8   (0x0008)  
	UTextBlock*                                        _durability2;                                               // 0x02F0   (0x0008)  
	UProgressBar*                                      _durabilityProgressBar;                                     // 0x02F8   (0x0008)  
	UProgressBar*                                      _durabilityProgressBar2;                                    // 0x0300   (0x0008)  
	UWidgetSwitcher*                                   _selectionSwitcher;                                         // 0x0308   (0x0008)  
	float                                              _width;                                                     // 0x0310   (0x0004)  
	float                                              _height;                                                    // 0x0314   (0x0004)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0318   (0x0008)  MISSED
};

/// Class /Script/ConZ.ContainerItemDescriptor
/// Size: 0x0220 (0x000028 - 0x000248)
class UContainerItemDescriptor : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x38];                                      // 0x0028   (0x0038)  MISSED
	UClass*                                            _itemClass;                                                 // 0x0060   (0x0008)  
	unsigned char                                      UnknownData01_5[0x18];                                      // 0x0068   (0x0018)  MISSED
	FContainerItemDescriptorData                       _data;                                                      // 0x0080   (0x0060)  
	TScriptInterface<Class>                            _owningContainer;                                           // 0x00E0   (0x0010)  
	TScriptInterface<Class>                            _owningNode;                                                // 0x00F0   (0x0010)  
	unsigned char                                      UnknownData02_6[0x148];                                     // 0x0100   (0x0148)  MISSED
};

/// Class /Script/ConZ.ContinuousFuelConsumptionEntityComponentSave
/// Size: 0x0008 (0x000028 - 0x000030)
class UContinuousFuelConsumptionEntityComponentSave : public UObject
{ 
public:
	bool                                               TickEnabled;                                                // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0029   (0x0007)  MISSED
};

/// Class /Script/ConZ.ContinuousFuelConsumptionEntityComponentSetup
/// Size: 0x0020 (0x000048 - 0x000068)
class UContinuousFuelConsumptionEntityComponentSetup : public UEntityComponentSetup
{ 
public:
	bool                                               HasInfiniteResources;                                       // 0x0048   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0049   (0x0007)  MISSED
	UClass*                                            ResourceType;                                               // 0x0050   (0x0008)  
	bool                                               AutoFindResourceComponent;                                  // 0x0058   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0059   (0x0003)  MISSED
	FName                                              AssociatedResourceComponentName;                            // 0x005C   (0x0008)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0064   (0x0004)  MISSED
};

/// Class /Script/ConZ.ContinuousFuelHeatSource
/// Size: 0x00F0 (0x000220 - 0x000310)
class UContinuousFuelHeatSource : public UFueledHeatSource
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0220   (0x0008)  MISSED
	bool                                               _autoFindFuelConsumption;                                   // 0x0228   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0229   (0x0003)  MISSED
	FName                                              _associatedFuelConsumptionEntityComponent;                  // 0x022C   (0x0008)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0234   (0x0004)  MISSED
	UClass*                                            _resourceType;                                              // 0x0238   (0x0008)  
	bool                                               _requiresMinimumAvailableEnergyAmountToTurnOn;              // 0x0240   (0x0001)  
	bool                                               _isRecreateable;                                            // 0x0241   (0x0001)  
	unsigned char                                      UnknownData03_5[0x2];                                       // 0x0242   (0x0002)  MISSED
	float                                              _maxEnergyConsumptionRate;                                  // 0x0244   (0x0004)  
	char                                               _repCurrentEnergyConsumptionRatio;                          // 0x0248   (0x0001)  
	unsigned char                                      UnknownData04_5[0x7];                                       // 0x0249   (0x0007)  MISSED
	FRuntimeFloatCurve                                 _energyConsumptionRateVsTemperatureScaleCurve;              // 0x0250   (0x0088)  
	char                                               _repDialValue;                                              // 0x02D8   (0x0001)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x02D9   (0x0003)  MISSED
	float                                              _dialOffValue;                                              // 0x02DC   (0x0004)  
	float                                              _minDialDeltaValueForRPC;                                   // 0x02E0   (0x0004)  
	float                                              _updateToServerCheckInterval;                               // 0x02E4   (0x0004)  
	unsigned char                                      UnknownData06_6[0x28];                                      // 0x02E8   (0x0028)  MISSED


	/// Functions
	// Function /Script/ConZ.ContinuousFuelHeatSource.OnRep_DialValue
	void OnRep_DialValue();                                                                                                  // [0x228ee20] Final|Native|Private 
	// Function /Script/ConZ.ContinuousFuelHeatSource.OnRep_ConsumptionRate
	void OnRep_ConsumptionRate(char previousConsumptionRate);                                                                // [0x228eda0] Final|Native|Private 
};

/// Class /Script/ConZ.ConZAssetManager
/// Size: 0x0210 (0x000478 - 0x000688)
class UConZAssetManager : public UAssetManager
{ 
public:
	TArray<FImageAssetToLoad>                          _imageAssetsToLoad;                                         // 0x0478   (0x0010)  
	unsigned char                                      UnknownData00_5[0x50];                                      // 0x0488   (0x0050)  MISSED
	TMap<FName, ULWObjectSetup*>                       _lwobjectSetupByPrimaryAssetName;                           // 0x04D8   (0x0050)  
	unsigned char                                      UnknownData01_5[0xF0];                                      // 0x0528   (0x00F0)  MISSED
	TArray<UPrisonerResponseIdle*>                     _prisonerResponseIdleCDOs;                                  // 0x0618   (0x0010)  
	TArray<UPrisonerBodyEffect*>                       _autoAddablePrisonerBodyEffectCDOs;                         // 0x0628   (0x0010)  
	unsigned char                                      UnknownData02_6[0x50];                                      // 0x0638   (0x0050)  MISSED
};

/// Class /Script/ConZ.ConZBase
/// Size: 0x0128 (0x000220 - 0x000348)
class AConZBase : public AActor
{ 
public:
	TWeakObjectPtr<AConZBaseElement*>                  _baseElementActor;                                          // 0x0220   (0x0008)  
	unsigned char                                      UnknownData00_5[0x70];                                      // 0x0228   (0x0070)  MISSED
	TSet<UClass*>                                      _referencedBaseElementClasses;                              // 0x0298   (0x0050)  
	unsigned char                                      UnknownData01_5[0x28];                                      // 0x02E8   (0x0028)  MISSED
	bool                                               _overrideBlockStackingRules;                                // 0x0310   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0311   (0x0003)  MISSED
	float                                              _debugRenderingDistance;                                    // 0x0314   (0x0004)  
	int32_t                                            _decayProcessingNumberOfFrames;                             // 0x0318   (0x0004)  
	int32_t                                            _decayProcessingMaxDestroyedElementsPerUpdate;              // 0x031C   (0x0004)  
	unsigned char                                      UnknownData03_6[0x28];                                      // 0x0320   (0x0028)  MISSED


	/// Functions
	// Function /Script/ConZ.ConZBase.OnElementInteracted
	void OnElementInteracted(APrisoner* User, EInteractionType interactionType, FInteractionData& InteractionData, FBaseInteractionParams& BaseInteractionParams); // [0x228eba0] Final|Native|Public|HasOutParms 
	// Function /Script/ConZ.ConZBase.GetBaseName
	FString GetBaseName();                                                                                                   // [0x228d730] Final|Native|Public|Const 
	// Function /Script/ConZ.ConZBase.AwardFamePointsToOnlineFlagOwners
	void AwardFamePointsToOnlineFlagOwners(int32_t flagIndex, float totalFlagInterval, float fameInterval);                  // [0x228d620] Final|Native|Private|Const 
};

/// Class /Script/ConZ.ConZBaseElement
/// Size: 0x0108 (0x000220 - 0x000328)
class AConZBaseElement : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0220   (0x0030)  MISSED
	UClass*                                            _weatherMaskComponentClass;                                 // 0x0250   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0258   (0x0008)  MISSED
	TMap<UStaticMesh*, UIndexedHierarchicalInstancedStaticMeshComponent*> _elementClassMap;                        // 0x0260   (0x0050)  
	unsigned char                                      UnknownData02_6[0x78];                                      // 0x02B0   (0x0078)  MISSED
};

/// Class /Script/ConZ.ConZBaseManager
/// Size: 0x01B8 (0x000220 - 0x0003D8)
class AConZBaseManager : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x90];                                      // 0x0220   (0x0090)  MISSED
	float                                              _damageEventProcessingPeriod;                               // 0x02B0   (0x0004)  
	float                                              _decayProcessingPeriod;                                     // 0x02B4   (0x0004)  
	float                                              _flagOvertakePeriod;                                        // 0x02B8   (0x0004)  
	float                                              _baseInteractionsPeriod;                                    // 0x02BC   (0x0004)  
	UClass*                                            _baseClass;                                                 // 0x02C0   (0x0008)  
	UClass*                                            _baseElementClass;                                          // 0x02C8   (0x0008)  
	UClass*                                            _flagAreaVisualizerClass;                                   // 0x02D0   (0x0008)  
	FVector2D                                          _initialBaseSize;                                           // 0x02D8   (0x0008)  
	float                                              _flagInfluenceRadius;                                       // 0x02E0   (0x0004)  
	int32_t                                            _flagOvertakeDuration;                                      // 0x02E4   (0x0004)  
	int32_t                                            _maxElementsPerFlag;                                        // 0x02E8   (0x0004)  
	int32_t                                            _extraElementsPerFlagForAdditionalSquadMember;              // 0x02EC   (0x0004)  
	int32_t                                            _maxNumberOfExpandedElementsPerFlag;                        // 0x02F0   (0x0004)  
	bool                                               _allowMultipleFlagsPerPlayer;                               // 0x02F4   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x02F5   (0x0003)  MISSED
	float                                              _maxBaseBuildingHeight;                                     // 0x02F8   (0x0004)  
	FConZBaseRepairAreaDuration                        _shortRepairDuration;                                       // 0x02FC   (0x0008)  
	FConZBaseRepairAreaDuration                        _mediumRepairDuration;                                      // 0x0304   (0x0008)  
	FConZBaseRepairAreaDuration                        _longRepairDuration;                                        // 0x030C   (0x0008)  
	unsigned char                                      UnknownData02_5[0x1C];                                      // 0x0314   (0x001C)  MISSED
	TMap<int64_t, AConZBase*>                          _bases;                                                     // 0x0330   (0x0050)  
	unsigned char                                      UnknownData03_6[0x58];                                      // 0x0380   (0x0058)  MISSED


	/// Functions
	// Function /Script/ConZ.ConZBaseManager.NetMulticast_UpdateDoorData
	void NetMulticast_UpdateDoorData(int32_t dataVersion, FConZBaseElementIdentifier ElementIdentifier, FDoorRepData doorData); // [0x228ea20] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.ConZBaseManager.NetMulticast_TransferOwnership
	void NetMulticast_TransferOwnership(int32_t dataVersion, FDbIntegerId oldId, FDbIntegerId newId);                        // [0x228e910] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.ConZBaseManager.NetMulticast_SpawnBaseElement
	void NetMulticast_SpawnBaseElement(int32_t dataVersion, FTransform Transform, FConZBaseData baseData, UClass* ElementClass, int64_t ElementID, int64_t OwnerUserProfileId, int64_t CreatorPrisonerId, bool IsOwnedByPlayer, FBaseElementSpawnParams Params); // [0x228e580] Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults 
	// Function /Script/ConZ.ConZBaseManager.NetMulticast_SetDebugMode
	void NetMulticast_SetDebugMode(APrisoner* Prisoner, EBaseBuildingDebugMode mode);                                        // [0x228e4b0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.ConZBaseManager.NetMulticast_SetBaseOwnerPlayerId
	void NetMulticast_SetBaseOwnerPlayerId(int32_t dataVersion, FConZBaseInteractionData baseData, int64_t PlayerId);        // [0x228e380] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.ConZBaseManager.NetMulticast_ProcessDecay
	void NetMulticast_ProcessDecay(int32_t dataVersion, float DeltaSeconds);                                                 // [0x228e2b0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.ConZBaseManager.NetMulticast_InteractWithElement
	void NetMulticast_InteractWithElement(int32_t dataVersion, EInteractionType interactionType, FConZBaseInteractionData baseData, FConZBaseElementInteractionData baseElementData, APrisoner* User); // [0x228e0d0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.ConZBaseManager.NetMulticast_ExecuteFlagOvertake
	void NetMulticast_ExecuteFlagOvertake(int32_t dataVersion, int64_t ElementID, FVector elementLocation, FDbIntegerId PlayerId); // [0x228df60] Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults 
	// Function /Script/ConZ.ConZBaseManager.NetMulticast_DestroyElement
	void NetMulticast_DestroyElement(int32_t dataVersion, FConZBaseElementIdentifier ElementIdentifier, EDestroyElementReason reason, bool cascade); // [0x228dde0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.ConZBaseManager.NetMulticast_DestroyAllElementsInRadius
	void NetMulticast_DestroyAllElementsInRadius(int32_t dataVersion, FVector Center, float Radius, float minElementAreaCovered, float minAngleDeg, float maxAngleDeg, FVector forwardVector, EBaseElementType typeFilter); // [0x228db80] Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults 
	// Function /Script/ConZ.ConZBaseManager.NetMulticast_ClearBaseOwnerPlayerId
	void NetMulticast_ClearBaseOwnerPlayerId(int32_t dataVersion, FConZBaseInteractionData baseData);                        // [0x228da90] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.ConZBaseManager.NetMulticast_ChangeFlagOwner
	void NetMulticast_ChangeFlagOwner(int32_t dataVersion, FDbIntegerId oldOwnerProfileId, FDbIntegerId newOwnerProfileId);  // [0x228d980] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.ConZBaseManager.NetMulticast_ApplyDamageToBaseElement
	void NetMulticast_ApplyDamageToBaseElement(int32_t dataVersion, int64_t BaseId, int64_t ElementID, FVector elementLocation, float damageAmount); // [0x228d7b0] Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults 
};

/// Class /Script/ConZ.ModularBaseBuildingSocketType
/// Size: 0x0000 (0x000028 - 0x000028)
class UModularBaseBuildingSocketType : public UObject
{ 
public:
};

/// Class /Script/ConZ.ConZBoatAnimInstance
/// Size: 0x0090 (0x0002C0 - 0x000350)
class UConZBoatAnimInstance : public UAnimInstance
{ 
public:
	bool                                               IsAnyoneMounted;                                            // 0x02B8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x02B9   (0x0003)  MISSED
	float                                              Speed;                                                      // 0x02BC   (0x0004)  
	float                                              SpeedKph;                                                   // 0x02C0   (0x0004)  
	float                                              MaxEngineSteerAngle;                                        // 0x02C4   (0x0004)  
	float                                              EngineSteerAngleInterpSpeed;                                // 0x02C8   (0x0004)  
	float                                              CurrentEngineSteerAngle;                                    // 0x02CC   (0x0004)  
	float                                              PropellerRotationAngle;                                     // 0x02D0   (0x0004)  
	float                                              PropellerRotationSpeedScale;                                // 0x02D4   (0x0004)  
	float                                              SailsRotationAngle;                                         // 0x02D8   (0x0004)  
	bool                                               IsMounteeDriver;                                            // 0x02DC   (0x0001)  
	bool                                               IsMounteeRowing;                                            // 0x02DD   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x02DE   (0x0002)  MISSED
	FTransform                                         _prisonerLHandTransform;                                    // 0x02E0   (0x0030)  
	FTransform                                         _prisonerRHandTransform;                                    // 0x0310   (0x0030)  
	FVector                                            WindDirection;                                              // 0x0340   (0x000C)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x034C   (0x0004)  MISSED
};

/// Class /Script/ConZ.ConZBorderBase
/// Size: 0x0040 (0x000260 - 0x0002A0)
class UConZBorderBase : public UUserWidget
{ 
public:
	EBorderSizes                                       _borderSize;                                                // 0x0260   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0261   (0x0003)  MISSED
	FLinearColor                                       _color;                                                     // 0x0264   (0x0010)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0274   (0x0004)  MISSED
	UTexture2D*                                        White1x1;                                                   // 0x0278   (0x0008)  
	UTexture2D*                                        White2x2;                                                   // 0x0280   (0x0008)  
	UTexture2D*                                        White4x4;                                                   // 0x0288   (0x0008)  
	UImage*                                            Image;                                                      // 0x0290   (0x0008)  
	UNamedSlot*                                        NamedSlot;                                                  // 0x0298   (0x0008)  


	/// Functions
	// Function /Script/ConZ.ConZBorderBase.SetColor
	void SetColor(FLinearColor Color);                                                                                       // [0x2293a50] Final|Native|Public|HasDefaults|BlueprintCallable 
};

/// Class /Script/ConZ.ConZBuoyancyComponent
/// Size: 0x0048 (0x0000B0 - 0x0000F8)
class UConZBuoyancyComponent : public UActorComponent
{ 
public:
	TArray<FBuoyancyTestPoint>                         TestPoints;                                                 // 0x00B0   (0x0010)  
	int32_t                                            NumTestPointGroups;                                         // 0x00C0   (0x0004)  
	FVector                                            VelocityDamper;                                             // 0x00C4   (0x000C)  
	float                                              FluidLinearDamping;                                         // 0x00D0   (0x0004)  
	float                                              FluidAngularDamping;                                        // 0x00D4   (0x0004)  
	bool                                               ClampMaxVelocity;                                           // 0x00D8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x00D9   (0x0003)  MISSED
	float                                              MaxUnderwaterVelocity;                                      // 0x00DC   (0x0004)  
	bool                                               ShouldApplyWaterVelocity;                                   // 0x00E0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x00E1   (0x0003)  MISSED
	float                                              WaterVelocityMultiplier;                                    // 0x00E4   (0x0004)  
	bool                                               bDrawDebug;                                                 // 0x00E8   (0x0001)  
	bool                                               _isUnderwater;                                              // 0x00E9   (0x0001)  
	unsigned char                                      UnknownData02_5[0x2];                                       // 0x00EA   (0x0002)  MISSED
	float                                              _densityMultiplier;                                         // 0x00EC   (0x0004)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x00F0   (0x0008)  MISSED
};

/// Class /Script/ConZ.ConZButton
/// Size: 0x0000 (0x000028 - 0x000028)
class UConZButton : public UInterface
{ 
public:
};

/// Class /Script/ConZ.ConZCameraManager
/// Size: 0x0040 (0x002810 - 0x002850)
class AConZCameraManager : public APlayerCameraManager
{ 
public:
	unsigned char                                      UnknownData00_2[0x1C];                                      // 0x2810   (0x001C)  MISSED
	float                                              _introCinematicDuration;                                    // 0x282C   (0x0004)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x2830   (0x0020)  MISSED
};

/// Class /Script/ConZ.ConZCustomInteractionButton
/// Size: 0x0008 (0x000428 - 0x000430)
class UConZCustomInteractionButton : public UButton
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0428   (0x0008)  MISSED
};

/// Class /Script/ConZ.ConZCustomInteractionMultilineEditableText
/// Size: 0x0008 (0x000470 - 0x000478)
class UConZCustomInteractionMultilineEditableText : public UMultiLineEditableText
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0470   (0x0008)  MISSED
};

/// Class /Script/ConZ.ConZCustomInteractionWidget
/// Size: 0x0000 (0x000028 - 0x000028)
class UConZCustomInteractionWidget : public UInterface
{ 
public:
};

/// Class /Script/ConZ.ConZEconomyManager
/// Size: 0x0868 (0x000220 - 0x000A88)
class AConZEconomyManager : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0xC0];                                      // 0x0220   (0x00C0)  MISSED
	UTraderManagingComponent*                          _traderManagingComponent;                                   // 0x02E0   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x02E8   (0x0004)  MISSED
	float                                              _autoSaveInterval;                                          // 0x02EC   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x02F0   (0x0004)  MISSED
	bool                                               _shouldIgnoreDatabaseSerialization;                         // 0x02F4   (0x0001)  
	unsigned char                                      UnknownData03_5[0x1B];                                      // 0x02F5   (0x001B)  MISSED
	FTradeOutpostProsperityLevelInfo                   _prosperityLevelInfoPerLevel;                               // 0x0310   (0x00F0)  
	unsigned char                                      UnknownData04_5[0x8];                                       // 0x0400   (0x0008)  MISSED
	TMap<float, int32_t>                               _expensiveTradeablesSpawnChanceMap;                         // 0x0408   (0x0050)  
	UCurveFloat*                                       _playerPurchasePriceDeltaVsChanceCurve;                     // 0x0458   (0x0008)  
	float                                              _betterPurchasePricesChance;                                // 0x0460   (0x0004)  
	float                                              _maxOutpostBuyingCapability;                                // 0x0464   (0x0004)  
	int32_t                                            _maxOutpostGoldBuyingCapability;                            // 0x0468   (0x0004)  
	int32_t                                            _goldBasePrice;                                             // 0x046C   (0x0004)  
	float                                              _playerGoldSalePriceModifier;                               // 0x0470   (0x0004)  
	float                                              _goldPriceChangePercentageStep;                             // 0x0474   (0x0004)  
	float                                              _goldPriceChangePerStep;                                    // 0x0478   (0x0004)  
	unsigned char                                      UnknownData05_5[0x84];                                      // 0x047C   (0x0084)  MISSED
	UDataTable*                                        _tradeableDescTable;                                        // 0x0500   (0x0008)  
	unsigned char                                      UnknownData06_5[0x3D0];                                     // 0x0508   (0x03D0)  MISSED
	FString                                            _economyOverrideJSONFileName;                               // 0x08D8   (0x0010)  
	FGameplayTag                                       _vehicleSpawnGroupParentTag;                                // 0x08E8   (0x0008)  
	unsigned char                                      UnknownData07_5[0x124];                                     // 0x08F0   (0x0124)  MISSED
	int32_t                                            _defaultMaxPerGroup;                                        // 0x0A14   (0x0004)  
	float                                              _maxSaleDistance;                                           // 0x0A18   (0x0004)  
	unsigned char                                      UnknownData08_5[0x14];                                      // 0x0A1C   (0x0014)  MISSED
	UCurveFloat*                                       _tradeableBuyPriceMultiplierVsNumberOfPlayersCurve;         // 0x0A30   (0x0008)  
	UCurveFloat*                                       _tradeableSellPriceMultiplierVsNumberOfPlayersCurve;        // 0x0A38   (0x0008)  
	unsigned char                                      UnknownData09_5[0xC];                                       // 0x0A40   (0x000C)  MISSED
	float                                              _priceMultiplierBasedOnNumberOfPlayersInterval;             // 0x0A4C   (0x0004)  
	unsigned char                                      UnknownData10_5[0x8];                                       // 0x0A50   (0x0008)  MISSED
	bool                                               _tradersUnlimitedStock;                                     // 0x0A58   (0x0001)  
	unsigned char                                      UnknownData11_5[0x2];                                       // 0x0A59   (0x0002)  MISSED
	bool                                               _isFamePointRequirementEnabled;                             // 0x0A5B   (0x0001)  
	unsigned char                                      UnknownData12_5[0x4];                                       // 0x0A5C   (0x0004)  MISSED
	TArray<FPendingTraderPersonalityDataHelperStruct>  _pendingTraderPersonalities;                                // 0x0A60   (0x0010)  
	unsigned char                                      UnknownData13_5[0x10];                                      // 0x0A70   (0x0010)  MISSED
	bool                                               _shouldCommunicateWithMasterServer;                         // 0x0A80   (0x0001)  
	unsigned char                                      UnknownData14_6[0x7];                                       // 0x0A81   (0x0007)  MISSED


	/// Functions
	// Function /Script/ConZ.ConZEconomyManager.NetMulticast_UpdateTradeablePriceMultiplierFactor
	void NetMulticast_UpdateTradeablePriceMultiplierFactor(int32_t dataVersion, int32_t tradeablePriceMultiplierFactor);     // [0x2293410] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.ConZEconomyManager.NetMulticast_UpdateTradeableClassMapHelperOverrides
	void NetMulticast_UpdateTradeableClassMapHelperOverrides(int32_t dataVersion, FTradeableClassDataOverrideReplicationHelper overrideUpdates); // [0x2293220] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.ConZEconomyManager.NetMulticast_UpdateGoldPriceMasterMultiplier
	void NetMulticast_UpdateGoldPriceMasterMultiplier(int32_t dataVersion, float goldPriceMasterMultiplier);                 // [0x2293150] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.ConZEconomyManager.NetMulticast_UpdateDateVsGoldPriceMasterMultiplierMap
	void NetMulticast_UpdateDateVsGoldPriceMasterMultiplierMap(int32_t dataVersion, TArray<FDateTime> dates, TArray<float> multipliers); // [0x2293010] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/ConZ.ConZGameInstance
/// Size: 0x0340 (0x0001A8 - 0x0004E8)
class UConZGameInstance : public UGameInstance
{ 
public:
	FCommonMaps                                        CommonMaps;                                                 // 0x01A8   (0x0078)  
	FCharacterCreationMenuContext                      CharacterCreationMenuContext;                               // 0x0220   (0x0030)  
	bool                                               NetworkFailed;                                              // 0x0250   (0x0001)  
	bool                                               WasKickedFromGameSession;                                   // 0x0251   (0x0001)  
	unsigned char                                      UnknownData00_5[0x16];                                      // 0x0252   (0x0016)  MISSED
	UGameplayLog*                                      GameplayLogLogin;                                           // 0x0268   (0x0008)  
	UGameplayLog*                                      GameplayLogAdmin;                                           // 0x0270   (0x0008)  
	UGameplayLog*                                      GameplayLogEventKill;                                       // 0x0278   (0x0008)  
	UGameplayLog*                                      GameplayLogKill;                                            // 0x0280   (0x0008)  
	UGameplayLog*                                      GameplayLogViolations;                                      // 0x0288   (0x0008)  
	UGameplayLog*                                      GameplayLogChat;                                            // 0x0290   (0x0008)  
	UGameplayLog*                                      GameplayLogEconomy;                                         // 0x0298   (0x0008)  
	UGameplayLog*                                      GameplayLogMiscellanious;                                   // 0x02A0   (0x0008)  
	UGameplayLog*                                      GameplayLogFamePoints;                                      // 0x02A8   (0x0008)  
	unsigned char                                      UnknownData01_5[0x38];                                      // 0x02B0   (0x0038)  MISSED
	TMap<uint32_t, UDbConnection*>                     _databaseConnections;                                       // 0x02E8   (0x0050)  
	unsigned char                                      UnknownData02_5[0x38];                                      // 0x0338   (0x0038)  MISSED
	UDedicatedServerRequest*                           _dedicatedServerRequest;                                    // 0x0370   (0x0008)  
	UUserManager*                                      _userManager;                                               // 0x0378   (0x0008)  
	UUser*                                             _currentUser;                                               // 0x0380   (0x0008)  
	UUserProfile*                                      _currentUserProfile;                                        // 0x0388   (0x0008)  
	UClass*                                            _entitySystemClass;                                         // 0x0390   (0x0008)  
	UEntitySystem*                                     _entitySystem;                                              // 0x0398   (0x0008)  
	unsigned char                                      UnknownData03_5[0x50];                                      // 0x03A0   (0x0050)  MISSED
	UTexture2D*                                        _loadingScreenTexture;                                      // 0x03F0   (0x0008)  
	ULoadingScreen*                                    _loadingScreen;                                             // 0x03F8   (0x0008)  
	unsigned char                                      UnknownData04_5[0x88];                                      // 0x0400   (0x0088)  MISSED
	UAdminCommandRegistry*                             _adminCommandRegistry;                                      // 0x0488   (0x0008)  
	unsigned char                                      UnknownData05_6[0x58];                                      // 0x0490   (0x0058)  MISSED


	/// Functions
	// Function /Script/ConZ.ConZGameInstance.StartSingleplayerGame
	void StartSingleplayerGame();                                                                                            // [0x2293e10] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZGameInstance.StartMultiplayerGame
	void StartMultiplayerGame(FString Ip, int32_t GameplayPort, int32_t ResponsePort, FString AuthToken);                    // [0x2293c90] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZGameInstance.SetPlayAsDrone
	void SetPlayAsDrone(bool Value);                                                                                         // [0x2293c00] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZGameInstance.RemoveLoadingWidget
	void RemoveLoadingWidget();                                                                                              // [0x2293740] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZGameInstance.OnPreLoadMap
	void OnPreLoadMap(FString mapName);                                                                                      // [0x2293600] Native|Public        
	// Function /Script/ConZ.ConZGameInstance.OnPostLoadMap
	void OnPostLoadMap(UWorld* loadedWorld);                                                                                 // [0x2293570] Native|Public        
	// Function /Script/ConZ.ConZGameInstance.OnPlaySessionEnd
	void OnPlaySessionEnd(bool quit);                                                                                        // [0x22934e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZGameInstance.IsTransitioningMap
	bool IsTransitioningMap();                                                                                               // [0x2292ce0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameInstance.HandleNetworkFailure
	void HandleNetworkFailure(UWorld* World, UNetDriver* NetDriver, TEnumAsByte<ENetworkFailure> FailureType, FString errorString); // [0x2292a40] Final|Native|Public  
	// Function /Script/ConZ.ConZGameInstance.GetPlayAsDrone
	bool GetPlayAsDrone();                                                                                                   // [0x22929e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameInstance.GetLastNetworkError
	FText GetLastNetworkError();                                                                                             // [0x2292940] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameInstance.GetDedicatedServerRequest
	UDedicatedServerRequest* GetDedicatedServerRequest();                                                                    // [0x2292740] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameInstance.GetDatabaseConnection
	UDbConnection* GetDatabaseConnection();                                                                                  // [0x2292710] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameInstance.GetCurrentUserProfile
	UUserProfile* GetCurrentUserProfile();                                                                                   // [0x22926e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameInstance.GetCurrentUser
	UUser* GetCurrentUser();                                                                                                 // [0x22926b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameInstance.AddLoadingWidget
	void AddLoadingWidget(ULoadingScreen* Widget);                                                                           // [0x22923e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZGameInstance.AddDefaultLoadingWidget
	void AddDefaultLoadingWidget();                                                                                          // [0x22923c0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.ConZGameMode
/// Size: 0x0648 (0x000308 - 0x000950)
class AConZGameMode : public AGameMode
{ 
public:
	unsigned char                                      UnknownData00_2[0x60];                                      // 0x0308   (0x0060)  MISSED
	UDoorLockingRegistry*                              _doorLockingRegistry;                                       // 0x0368   (0x0008)  
	UVehicleServiceRegistry*                           _vehicleServiceRegistry;                                    // 0x0370   (0x0008)  
	UClass*                                            _prisonerClassToSpawn;                                      // 0x0378   (0x0008)  
	UClass*                                            _droneClassToSpawn;                                         // 0x0380   (0x0008)  
	unsigned char                                      UnknownData01_5[0x108];                                     // 0x0388   (0x0108)  MISSED
	UClass*                                            _itemSpawningManagerClass;                                  // 0x0490   (0x0008)  
	AItemSpawningManager*                              _itemSpawningManager;                                       // 0x0498   (0x0008)  
	UClass*                                            _itemVirtualizationManagerClass;                            // 0x04A0   (0x0008)  
	AItemVirtualizationManager*                        _itemVirtualizationManager;                                 // 0x04A8   (0x0008)  
	UClass*                                            _vehicleSpawningManagerClass2;                              // 0x04B0   (0x0008)  
	AVehicleSpawningManager2*                          _vehicleSpawningManager2;                                   // 0x04B8   (0x0008)  
	UClass*                                            _reportingManagerClass;                                     // 0x04C0   (0x0008)  
	AReportingManager*                                 _reportingManager;                                          // 0x04C8   (0x0008)  
	UClass*                                            _characterSpawningManagerClass;                             // 0x04D0   (0x0008)  
	ACharacterSpawningManager*                         _characterSpawningManager;                                  // 0x04D8   (0x0008)  
	UClass*                                            _globalAquaticLifeManagerClass;                             // 0x04E0   (0x0008)  
	AGlobalAquaticLifeManager*                         _globalAquaticLifeManager;                                  // 0x04E8   (0x0008)  
	UClass*                                            _globalGuardedZoneManagerClass;                             // 0x04F0   (0x0008)  
	AGlobalGuardedZoneManager*                         _globalGuardedZoneManager;                                  // 0x04F8   (0x0008)  
	UClass*                                            _achievementsManagerServerClass;                            // 0x0500   (0x0008)  
	AAchievementsManagerServer*                        _achievementsManagerServer;                                 // 0x0508   (0x0008)  
	UClass*                                            _missionLevelManagerClass;                                  // 0x0510   (0x0008)  
	AMissionLevelManager*                              _missionLevelManager;                                       // 0x0518   (0x0008)  
	UClass*                                            _missionSchedulerClass;                                     // 0x0520   (0x0008)  
	AMissionScheduler*                                 _missionScheduler;                                          // 0x0528   (0x0008)  
	UClass*                                            _survivalStatsHandlerClass;                                 // 0x0530   (0x0008)  
	ASurvivalStatsHandler*                             _survivalStatsHandler;                                      // 0x0538   (0x0008)  
	UClass*                                            _heatSourceManagerClass;                                    // 0x0540   (0x0008)  
	AHeatSourceManager*                                _heatSourceManager;                                         // 0x0548   (0x0008)  
	UClass*                                            _baseManagerClass;                                          // 0x0550   (0x0008)  
	AConZBaseManager*                                  _baseManager;                                               // 0x0558   (0x0008)  
	URainCollectionManager*                            _rainCollectionManager;                                     // 0x0560   (0x0008)  
	UClass*                                            _ladderMarkersReplicatorClass;                              // 0x0568   (0x0008)  
	ALadderMarkersReplicator*                          _ladderMarkersReplicator;                                   // 0x0570   (0x0008)  
	UClass*                                            _effectOverTimeDealerClass;                                 // 0x0578   (0x0008)  
	AEffectOverTimeDealer*                             _effectOverTimeDealer;                                      // 0x0580   (0x0008)  
	UClass*                                            _notificationManagerClass;                                  // 0x0588   (0x0008)  
	ANotificationsManager*                             _notificationManager;                                       // 0x0590   (0x0008)  
	UClass*                                            _voteSystemManagerClass;                                    // 0x0598   (0x0008)  
	AVoteSystemManager*                                _voteSystemManager;                                         // 0x05A0   (0x0008)  
	UClass*                                            _serverAnalyticsManagerClass;                               // 0x05A8   (0x0008)  
	AServerAnalyticsManager*                           _serverAnalyticsManager;                                    // 0x05B0   (0x0008)  
	UClass*                                            _aiDetectionTimerHandlerClass;                              // 0x05B8   (0x0008)  
	UClass*                                            _bcuLockRegistryClass;                                      // 0x05C0   (0x0008)  
	ABCULockRegistry*                                  _bcuLockRegistry;                                           // 0x05C8   (0x0008)  
	UWorldDoorOwnershipManager*                        _worldDoorOwnershipManager;                                 // 0x05D0   (0x0008)  
	AAIDetectionTimerHandler*                          _aiDetectionTimerHandler;                                   // 0x05D8   (0x0008)  
	UDedicatedServerResponse*                          _serverResponse;                                            // 0x05E0   (0x0008)  
	UChatSpamProtectionRules*                          _chatSpamProtectionRules;                                   // 0x05E8   (0x0008)  
	TArray<UPrisonerSpawnEquipment*>                   _spawnEquipment;                                            // 0x05F0   (0x0010)  
	FGameplayTag                                       _spawnParameterTag_AerialSpawn;                             // 0x0600   (0x0008)  
	FGameplayTag                                       _spawnParameterTag_ColdClimate;                             // 0x0608   (0x0008)  
	FGameplayTag                                       _spawnParameterTag_SupporterPack1;                          // 0x0610   (0x0008)  
	FGameplayTag                                       _spawnParameterTag_Tournament;                              // 0x0618   (0x0008)  
	float                                              _maxSpawningAdjustmentDistance;                             // 0x0620   (0x0004)  
	int32_t                                            _spawningAdjustmentRadialIterations;                        // 0x0624   (0x0004)  
	int32_t                                            _spawningAdjustmentVerticalIterations;                      // 0x0628   (0x0004)  
	int32_t                                            _spawningAdjustmentCheckingFrequency;                       // 0x062C   (0x0004)  
	float                                              _localChatDistance;                                         // 0x0630   (0x0004)  
	unsigned char                                      UnknownData02_6[0x31C];                                     // 0x0634   (0x031C)  MISSED


	/// Functions
	// Function /Script/ConZ.ConZGameMode.SendHUDMessageToAll
	void SendHUDMessageToAll(FString Message, bool beep);                                                                    // [0x229b450] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.ConZGameMode.KickPlayer
	bool KickPlayer(AConZPlayerController* Player, FString KickReason);                                                      // [0x229ada0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZGameMode.GetVehicleSpawningManager2
	AVehicleSpawningManager2* GetVehicleSpawningManager2();                                                                  // [0x229ab20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameMode.GetSurvivalStatsHandler
	ASurvivalStatsHandler* GetSurvivalStatsHandler();                                                                        // [0x229a990] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameMode.GetReportingManager
	AReportingManager* GetReportingManager();                                                                                // [0x229a610] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameMode.GetMissionScheduler
	AMissionScheduler* GetMissionScheduler();                                                                                // [0x229a4c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameMode.GetMissionLevelManager
	AMissionLevelManager* GetMissionLevelManager();                                                                          // [0x229a490] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameMode.GetLadderMarkersReplicator
	ALadderMarkersReplicator* GetLadderMarkersReplicator();                                                                  // [0x229a460] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameMode.GetItemVirtualizationManager
	AItemVirtualizationManager* GetItemVirtualizationManager();                                                              // [0x229a430] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameMode.GetItemSpawningManager
	AItemSpawningManager* GetItemSpawningManager();                                                                          // [0x229a400] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameMode.GetHeatSourceManager
	AHeatSourceManager* GetHeatSourceManager();                                                                              // [0x229a3d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameMode.GetGlobalGuardedZoneManager
	AGlobalGuardedZoneManager* GetGlobalGuardedZoneManager();                                                                // [0x229a3a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameMode.GetGlobalAquaticLifeManager
	AGlobalAquaticLifeManager* GetGlobalAquaticLifeManager();                                                                // [0x229a370] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameMode.GetEffectOverTimeDealer
	AEffectOverTimeDealer* GetEffectOverTimeDealer();                                                                        // [0x229a250] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameMode.GetCharacterSpawningManager
	ACharacterSpawningManager* GetCharacterSpawningManager();                                                                // [0x229a0a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameMode.GetBaseManager
	AConZBaseManager* GetBaseManager();                                                                                      // [0x229a040] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameMode.GetAIDetectionTimerHandler
	AAIDetectionTimerHandler* GetAIDetectionTimerHandler();                                                                  // [0x2299fb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameMode.GetAchievementsManagerServer
	AAchievementsManagerServer* GetAchievementsManagerServer();                                                              // [0x229a010] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.ConZGameSession
/// Size: 0x0000 (0x000238 - 0x000238)
class AConZGameSession : public AGameSession
{ 
public:
};

/// Class /Script/ConZ.ConZGameState
/// Size: 0x04D8 (0x000290 - 0x000768)
class AConZGameState : public AGameState
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x0290   (0x0050)  MISSED
	URespawnSettings*                                  RespawnSettings;                                            // 0x02E0   (0x0008)  
	unsigned char                                      UnknownData01_5[0x30];                                      // 0x02E8   (0x0030)  MISSED
	UCraftingDatabase*                                 _craftingDatabase;                                          // 0x0318   (0x0008)  
	UArchitecturalCategoriesDatabase*                  _architecturalCategoriesDatabase;                           // 0x0320   (0x0008)  
	unsigned char                                      UnknownData02_5[0x20];                                      // 0x0328   (0x0020)  MISSED
	TArray<AConZCharacter*>                            _registeredCharacters;                                      // 0x0348   (0x0010)  
	unsigned char                                      UnknownData03_5[0x50];                                      // 0x0358   (0x0050)  MISSED
	TArray<AAbandonedBunker*>                          _registeredAbandonedBunkers;                                // 0x03A8   (0x0010)  
	TArray<AConZSquad*>                                _squads;                                                    // 0x03B8   (0x0010)  
	unsigned char                                      UnknownData04_5[0xA0];                                      // 0x03C8   (0x00A0)  MISSED
	TMap<TWeakObjectPtr, int32_t>                      _currentDroneTargetDispatcherMap;                           // 0x0468   (0x0050)  
	TMap<TWeakObjectPtr, int32_t>                      _droneTargetDispatcherHistoryMap;                           // 0x04B8   (0x0050)  
	TMap<TWeakObjectPtr, UDroneTargetData*>            _droneTargetVisits;                                         // 0x0508   (0x0050)  
	UClass*                                            _ladderMarkersRegistryClass;                                // 0x0558   (0x0008)  
	ALadderMarkersRegistry*                            _ladderMarkersRegistry;                                     // 0x0560   (0x0008)  
	UClass*                                            _waterSplineRegistryClass;                                  // 0x0568   (0x0008)  
	AConZWaterSplineRegistry*                          _waterSplineRegistry;                                       // 0x0570   (0x0008)  
	unsigned char                                      UnknownData05_5[0x8];                                       // 0x0578   (0x0008)  MISSED
	URemoteSensorRegistry*                             _remoteSensorRegistry;                                      // 0x0580   (0x0008)  
	unsigned char                                      UnknownData06_5[0x48];                                      // 0x0588   (0x0048)  MISSED
	UReplenishableResourceManager*                     _replenishableResourceManager;                              // 0x05D0   (0x0008)  
	URestorableMeshInstancesManager*                   _restorableMeshInstancesManager;                            // 0x05D8   (0x0008)  
	UResourceLockingManager*                           _resourceLockingManager;                                    // 0x05E0   (0x0008)  
	UItemRegistry*                                     _itemRegistry;                                              // 0x05E8   (0x0008)  
	UCustomZoneRegistry*                               _customZoneRegistry;                                        // 0x05F0   (0x0008)  
	UGameResourceContainerProxyRegistry*               _gameResourceContainerProxyRegistry;                        // 0x05F8   (0x0008)  
	UZoneRegistry*                                     _zoneRegistry;                                              // 0x0600   (0x0008)  
	UStaticDoorReplicator*                             _staticDoorReplicator;                                      // 0x0608   (0x0008)  
	UBankAccountRegistry*                              _bankAccountRegistry;                                       // 0x0610   (0x0008)  
	unsigned char                                      UnknownData07_5[0xD0];                                      // 0x0618   (0x00D0)  MISSED
	TMap<FDbIntegerId, FDbIntegerId>                   _prisonerKillRegistry;                                      // 0x06E8   (0x0050)  
	UClass*                                            _customMapBorderClass;                                      // 0x0738   (0x0008)  
	UClass*                                            _tournamentClass;                                           // 0x0740   (0x0008)  
	ACustomMapBorder*                                  _customMapBorder;                                           // 0x0748   (0x0008)  
	ATournament*                                       _tournament;                                                // 0x0750   (0x0008)  
	unsigned char                                      UnknownData08_5[0x1];                                       // 0x0758   (0x0001)  MISSED
	bool                                               _areLockedLootContainersEnabled;                            // 0x0759   (0x0001)  
	unsigned char                                      UnknownData09_6[0xE];                                       // 0x075A   (0x000E)  MISSED


	/// Functions
	// Function /Script/ConZ.ConZGameState.StartTournament
	void StartTournament(FTournamentParameters& parameters);                                                                 // [0x229cbd0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.ConZGameState.SendServerTime
	void SendServerTime(float Time);                                                                                         // [0x229b720] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.ConZGameState.RemoveMemberFromSquad
	void RemoveMemberFromSquad(FDbIntegerId UserProfileId, AConZSquad* Squad, bool destroySquadIfEmpty);                     // [0x229b2d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZGameState.RemoveMemberFromAllSquads
	void RemoveMemberFromAllSquads(FDbIntegerId UserProfileId, bool destroySquadIfEmpty);                                    // [0x229b1f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZGameState.OnRep_Squads
	void OnRep_Squads();                                                                                                     // [0x229b110] Native|Protected     
	// Function /Script/ConZ.ConZGameState.OnRep_AreLockedLootContainersEnabled
	void OnRep_AreLockedLootContainersEnabled();                                                                             // [0x229b070] Final|Native|Private 
	// Function /Script/ConZ.ConZGameState.Multicast_RemoveFromPrisonerKillRegistry
	void Multicast_RemoveFromPrisonerKillRegistry(FDbIntegerId Target);                                                      // [0x229afa0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.ConZGameState.Multicast_AddToOrUpdatePrisonerKillRegistry
	void Multicast_AddToOrUpdatePrisonerKillRegistry(FDbIntegerId Target, FDbIntegerId killer);                              // [0x229aed0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.ConZGameState.IsTournamentInProgress
	bool IsTournamentInProgress();                                                                                           // [0x229ac70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameState.GetWaterSplineRegistry
	AConZWaterSplineRegistry* GetWaterSplineRegistry();                                                                      // [0x229ab50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameState.GetTournament
	ATournament* GetTournament();                                                                                            // [0x229a4f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameState.GetSquadForUserProfileId
	AConZSquad* GetSquadForUserProfileId(FDbIntegerId ID);                                                                   // [0x229a900] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZGameState.GetSquadForPrisoner
	AConZSquad* GetSquadForPrisoner(APrisoner* Prisoner);                                                                    // [0x229a860] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZGameState.GetSquad
	AConZSquad* GetSquad(FDbIntegerId squadId);                                                                              // [0x229a7d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZGameState.GetRegisteredPrisoners
	TArray<APrisoner*> GetRegisteredPrisoners();                                                                             // [0x229a580] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameState.GetCustomMapBorder
	ACustomMapBorder* GetCustomMapBorder();                                                                                  // [0x229a1f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZGameState.EndTournament
	void EndTournament();                                                                                                    // [0x2299f90] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZGameState.CreateSquad
	AConZSquad* CreateSquad(FDbIntegerId squadId);                                                                           // [0x2299f00] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZGameState.CleanupSquadsFromDatabase
	void CleanupSquadsFromDatabase();                                                                                        // [0x22988c0] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/ConZ.ConZGameState.AddMemberToSquad
	void AddMemberToSquad(FDbIntegerId UserProfileId, FString UserId, AConZSquad* Squad);                                    // [0x2298720] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.GameplayLog
/// Size: 0x0018 (0x000028 - 0x000040)
class UGameplayLog : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0028   (0x0018)  MISSED
};

/// Class /Script/ConZ.ConZNoiseListener
/// Size: 0x0000 (0x000028 - 0x000028)
class UConZNoiseListener : public UInterface
{ 
public:
};

/// Class /Script/ConZ.ConZNoiseListenerActor
/// Size: 0x0020 (0x000220 - 0x000240)
class AConZNoiseListenerActor : public AActor
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0220   (0x0020)  MISSED
};

/// Class /Script/ConZ.ConZNoiseListenSubject
/// Size: 0x0000 (0x000028 - 0x000028)
class UConZNoiseListenSubject : public UInterface
{ 
public:
};

/// Class /Script/ConZ.ConZPlayerController
/// Size: 0x0478 (0x000570 - 0x0009E8)
class AConZPlayerController : public APlayerController
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0570   (0x0010)  MISSED
	TArray<UPrimitiveComponent*>                       ComponentsToHide;                                           // 0x0580   (0x0010)  
	FMulticastInlineDelegate                           OnPrisonerSpawned;                                          // 0x0590   (0x0010)  
	unsigned char                                      UnknownData01_5[0x88];                                      // 0x05A0   (0x0088)  MISSED
	UInteractionContainerUserWidget*                   CurrentInteractionContainerWidget;                          // 0x0628   (0x0008)  
	bool                                               IsTalkButtonPressed;                                        // 0x0630   (0x0001)  
	unsigned char                                      UnknownData02_5[0x57];                                      // 0x0631   (0x0057)  MISSED
	UPlayerRpcChannel*                                 _playerRpcChannel;                                          // 0x0688   (0x0008)  
	unsigned char                                      UnknownData03_5[0x40];                                      // 0x0690   (0x0040)  MISSED
	UUserProfile*                                      _userProfile;                                               // 0x06D0   (0x0008)  
	unsigned char                                      UnknownData04_5[0x10];                                      // 0x06D8   (0x0010)  MISSED
	FDateTime                                          _lastNameChangeTime;                                        // 0x06E8   (0x0008)  
	FString                                            _userFakeName;                                              // 0x06F0   (0x0010)  
	int64_t                                            _bankAccountNumber;                                         // 0x0700   (0x0008)  
	APawn*                                             _spawnedPawn;                                               // 0x0708   (0x0008)  
	unsigned char                                      UnknownData05_5[0x28];                                      // 0x0710   (0x0028)  MISSED
	APawn*                                             _possessedPawn;                                             // 0x0738   (0x0008)  
	UClass*                                            _prisonerClass;                                             // 0x0740   (0x0008)  
	unsigned char                                      UnknownData06_5[0x8];                                       // 0x0748   (0x0008)  MISSED
	UPawnNoiseEmitterComponent*                        _noiseEmitterComponent;                                     // 0x0750   (0x0008)  
	unsigned char                                      UnknownData07_5[0x10];                                      // 0x0758   (0x0010)  MISSED
	float                                              _teleportWorldStreamingLocationChangeDelay;                 // 0x0768   (0x0004)  
	float                                              _teleportWorldStreamingTriggerLag;                          // 0x076C   (0x0004)  
	unsigned char                                      UnknownData08_5[0x6C];                                      // 0x0770   (0x006C)  MISSED
	int32_t                                            _repFamePoints;                                             // 0x07DC   (0x0004)  
	unsigned char                                      UnknownData09_5[0x8];                                       // 0x07E0   (0x0008)  MISSED
	int64_t                                            _moneyBalanceRep;                                           // 0x07E8   (0x0008)  
	int64_t                                            _goldBalanceRep;                                            // 0x07F0   (0x0008)  
	unsigned char                                      UnknownData10_5[0x90];                                      // 0x07F8   (0x0090)  MISSED
	float                                              _weatherHeightUpdatePeriod;                                 // 0x0888   (0x0004)  
	unsigned char                                      UnknownData11_5[0x4];                                       // 0x088C   (0x0004)  MISSED
	AAchievementsManagerClient*                        _achievementsManagerClient;                                 // 0x0890   (0x0008)  
	UClass*                                            _achievementsManagerClientClass;                            // 0x0898   (0x0008)  
	UClass*                                            _missionManagerClass;                                       // 0x08A0   (0x0008)  
	AMissionManager*                                   _missionManager;                                            // 0x08A8   (0x0008)  
	UClass*                                            _missionDialogueManagerClass;                               // 0x08B0   (0x0008)  
	unsigned char                                      UnknownData12_5[0x8];                                       // 0x08B8   (0x0008)  MISSED
	float                                              _isReadyForPlayDelay;                                       // 0x08C0   (0x0004)  
	unsigned char                                      UnknownData13_5[0xC];                                       // 0x08C4   (0x000C)  MISSED
	float                                              _reportPlayTimeInterval;                                    // 0x08D0   (0x0004)  
	unsigned char                                      UnknownData14_5[0x4];                                       // 0x08D4   (0x0004)  MISSED
	FDateTime                                          _replicatedServerUtcNow;                                    // 0x08D8   (0x0008)  
	unsigned char                                      UnknownData15_5[0x60];                                      // 0x08E0   (0x0060)  MISSED
	UPathFollowingComponent*                           _pathFollowingComponent;                                    // 0x0940   (0x0008)  
	bool                                               _forceSpawnAsDrone;                                         // 0x0948   (0x0001)  
	bool                                               _mpSpawnDroneAndPrisoner;                                   // 0x0949   (0x0001)  
	unsigned char                                      UnknownData16_5[0xE];                                       // 0x094A   (0x000E)  MISSED
	UClass*                                            _photoModePawnClass;                                        // 0x0958   (0x0008)  
	unsigned char                                      UnknownData17_5[0x14];                                      // 0x0960   (0x0014)  MISSED
	float                                              _refreshTimeForPawnLocationOnMap;                           // 0x0974   (0x0004)  
	unsigned char                                      UnknownData18_5[0x8];                                       // 0x0978   (0x0008)  MISSED
	UMaterialParameterCollection*                      _mainMPC;                                                   // 0x0980   (0x0008)  
	unsigned char                                      UnknownData19_5[0x1C];                                      // 0x0988   (0x001C)  MISSED
	int32_t                                            _numTrySpawnsForTimeout;                                    // 0x09A4   (0x0004)  
	unsigned char                                      UnknownData20_5[0x1C];                                      // 0x09A8   (0x001C)  MISSED
	float                                              _serverHeartbeatSendPeriod;                                 // 0x09C4   (0x0004)  
	float                                              _heartbeatTimeout;                                          // 0x09C8   (0x0004)  
	unsigned char                                      UnknownData21_5[0x4];                                       // 0x09CC   (0x0004)  MISSED
	int64_t                                            _nameChangeCost;                                            // 0x09D0   (0x0008)  
	unsigned char                                      UnknownData22_6[0x10];                                      // 0x09D8   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.ConZPlayerController.UpdateUserProfileDeletionMarkStatus
	void UpdateUserProfileDeletionMarkStatus();                                                                              // [0x229cd50] Final|Native|Public  
	// Function /Script/ConZ.ConZPlayerController.Teleport
	void Teleport(FTeleportRequest& request);                                                                                // [0x229cc70] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.ConZPlayerController.ShowWarningMessage
	void ShowWarningMessage(FString Message, float Duration, FLinearColor TextColor);                                        // [0x229caa0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/ConZ.ConZPlayerController.ShowLevelUpMessageFromClass
	void ShowLevelUpMessageFromClass(UClass* skillClass, ESkillLevel skillLevel);                                            // [0x229c9d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZPlayerController.ShowLevelUpMessage
	void ShowLevelUpMessage(USkill* Skill, ESkillLevel skillLevel);                                                          // [0x229c900] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZPlayerController.ShowKillFeedNotificationOnClient
	void ShowKillFeedNotificationOnClient(FString prefix, FString characterName, FString suffix, bool ping);                 // [0x229c770] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.ConZPlayerController.ShowKillFeedMessage
	void ShowKillFeedMessage(FString prefix, FString characterName, FString suffix, bool ping);                              // [0x229c5e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZPlayerController.SetTeleportWorldStreamingLocationChangeDelay
	void SetTeleportWorldStreamingLocationChangeDelay(float Value);                                                          // [0x229c560] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZPlayerController.SetRespawnOptionTime
	void SetRespawnOptionTime(ERespawnOption option, float Time, bool force);                                                // [0x229c440] Final|Native|Public  
	// Function /Script/ConZ.ConZPlayerController.SetGameEventCooldown
	void SetGameEventCooldown(float cooldown);                                                                               // [0x229c3c0] Final|Native|Private 
	// Function /Script/ConZ.ConZPlayerController.SetFamePoints
	void SetFamePoints(float Value);                                                                                         // [0x229c340] Final|Exec|Native|Public 
	// Function /Script/ConZ.ConZPlayerController.SetCurrencyBalanceRep
	void SetCurrencyBalanceRep(ECurrencyType CurrencyType, int64_t currencyBalance);                                         // [0x229c270] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZPlayerController.SetCommitSuicideOptionTime
	void SetCommitSuicideOptionTime(float Time);                                                                             // [0x229c1f0] Final|Native|Public  
	// Function /Script/ConZ.ConZPlayerController.Server_SetRefreshPawnLocationForMap
	void Server_SetRefreshPawnLocationForMap(bool Value);                                                                    // [0x229c160] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.ConZPlayerController.Server_SelfKickFromGameSession
	void Server_SelfKickFromGameSession(FString reason);                                                                     // [0x229c0c0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.ConZPlayerController.Server_RequestSurvivalStats
	void Server_RequestSurvivalStats(uint32_t ID, FDbIntegerId UserProfileId);                                               // [0x229bff0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.ConZPlayerController.Server_RequestSquadRankingData
	void Server_RequestSquadRankingData(uint32_t ID, FDbIntegerId squadId, int32_t Count);                                   // [0x229bee0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.ConZPlayerController.Server_RequestSquadMemberInfo
	void Server_RequestSquadMemberInfo(uint32_t ID, FDbIntegerId squadId);                                                   // [0x229be10] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.ConZPlayerController.Server_RequestRespawnWaitTime
	void Server_RequestRespawnWaitTime();                                                                                    // [0x229bdf0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.ConZPlayerController.Server_RequestGameEventTeamChange
	void Server_RequestGameEventTeamChange(int32_t preferredTeam);                                                           // [0x229bd60] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.ConZPlayerController.Server_RequestEventsRankingStats
	void Server_RequestEventsRankingStats(uint32_t ID, FDbIntegerId UserProfileId, int32_t Count, EEventsRankingStatsOrderByField orderByField, ESortOrder sortOrder); // [0x229bbc0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.ConZPlayerController.Server_ReportStartLeavingGame
	void Server_ReportStartLeavingGame();                                                                                    // [0x229bba0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.ConZPlayerController.Server_ReportPlayPreparationsSucceeded
	void Server_ReportPlayPreparationsSucceeded();                                                                           // [0x229bb80] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.ConZPlayerController.Server_ReportCancelLeavingGame
	void Server_ReportCancelLeavingGame();                                                                                   // [0x229bb60] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.ConZPlayerController.Server_ProcessCharacterModificationTransaction
	void Server_ProcessCharacterModificationTransaction(int32_t transactionId, FCharacterTemplate CharacterTemplate);        // [0x229ba20] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.ConZPlayerController.Server_MountedActorHasBegunPlay
	void Server_MountedActorHasBegunPlay(AActor* Actor);                                                                     // [0x229b990] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.ConZPlayerController.Server_LeaveGameEvent
	void Server_LeaveGameEvent();                                                                                            // [0x229b970] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.ConZPlayerController.Server_JoinGameEvent
	void Server_JoinGameEvent(AGameEventBase* gameEvent, int32_t preferredTeam);                                             // [0x229b8a0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.ConZPlayerController.Server_HeartbeatResponse
	void Server_HeartbeatResponse(uint32_t code);                                                                            // [0x229b810] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.ConZPlayerController.Server_ExitPhotoMode
	void Server_ExitPhotoMode();                                                                                             // [0x229b7f0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.ConZPlayerController.Server_EnterPhotoMode
	void Server_EnterPhotoMode();                                                                                            // [0x229b7d0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.ConZPlayerController.Server_AllowCertainInventoryInteractions
	void Server_AllowCertainInventoryInteractions();                                                                         // [0x229b7b0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.ConZPlayerController.SendHUDMessageToClient
	void SendHUDMessageToClient(FString Message, UAkAudioEvent* AudioEvent);                                                 // [0x229b630] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.ConZPlayerController.SendHUDMessageToAll
	void SendHUDMessageToAll(FString Message, UAkAudioEvent* AudioEvent);                                                    // [0x229b540] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.ConZPlayerController.SaveState
	void SaveState();                                                                                                        // [0x229b430] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZPlayerController.RepossesOriginalPrisoner
	void RepossesOriginalPrisoner();                                                                                         // [0x229b410] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZPlayerController.RemoveServerFromFavorites
	void RemoveServerFromFavorites();                                                                                        // [0x229b3f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZPlayerController.RegisterRespawn
	void RegisterRespawn(ERespawnOption option);                                                                             // [0x229b170] Final|Native|Public  
	// Function /Script/ConZ.ConZPlayerController.RegisterCommitSuicide
	void RegisterCommitSuicide();                                                                                            // [0x229b150] Final|Native|Public  
	// Function /Script/ConZ.ConZPlayerController.PrisonerSpawnedDelegate__DelegateSignature
	void PrisonerSpawnedDelegate__DelegateSignature(APrisoner* spawnedPrisoner);                                             // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.ConZPlayerController.OnRep_UserFakeName
	void OnRep_UserFakeName();                                                                                               // [0x229b130] Final|Native|Protected 
	// Function /Script/ConZ.ConZPlayerController.OnRep_ReplicatedServerUtcNow
	void OnRep_ReplicatedServerUtcNow();                                                                                     // [0x229b0f0] Final|Native|Private 
	// Function /Script/ConZ.ConZPlayerController.OnRep_PossessedPawn
	void OnRep_PossessedPawn();                                                                                              // [0x229b0d0] Final|Native|Private 
	// Function /Script/ConZ.ConZPlayerController.OnRep_MoneyBalance
	void OnRep_MoneyBalance();                                                                                               // [0x229b0b0] Final|Native|Protected 
	// Function /Script/ConZ.ConZPlayerController.OnRep_FamePoints
	void OnRep_FamePoints();                                                                                                 // [0x229b090] Native|Protected     
	// Function /Script/ConZ.ConZPlayerController.OnPhotoModeTransitionTimerElapsed
	void OnPhotoModeTransitionTimerElapsed();                                                                                // [0x229b050] Final|Native|Public  
	// Function /Script/ConZ.ConZPlayerController.OnFadeOutFinished
	void OnFadeOutFinished();                                                                                                // [0x229b030] Final|Native|Private 
	// Function /Script/ConZ.ConZPlayerController.LoadState
	void LoadState();                                                                                                        // [0x229aeb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZPlayerController.LeaveGameEvent
	void LeaveGameEvent();                                                                                                   // [0x229ae90] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZPlayerController.JoinGameEvent
	void JoinGameEvent(AGameEventBase* gameEvent, int32_t preferredTeam);                                                    // [0x229acd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZPlayerController.IsUserAdmin
	bool IsUserAdmin();                                                                                                      // [0x229aca0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.IsTeleportInProgress
	bool IsTeleportInProgress();                                                                                             // [0x229ac40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.IsPushToTalkPressed
	bool IsPushToTalkPressed();                                                                                              // [0x229ac10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.InitializePathFollowingComponent
	void InitializePathFollowingComponent(APrisoner* Prisoner);                                                              // [0x229ab80] Final|Native|Public  
	// Function /Script/ConZ.ConZPlayerController.GetUserProfileName
	FString GetUserProfileName();                                                                                            // [0x229aae0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.GetUserProfileId
	FDbIntegerId GetUserProfileId();                                                                                         // [0x229aaa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.GetUserProfile
	UUserProfile* GetUserProfile();                                                                                          // [0x229aa70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.GetUserName2
	FString GetUserName2();                                                                                                  // [0x229aa30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.GetUserId
	FString GetUserId();                                                                                                     // [0x229a9f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.GetTeleportWorldStreamingLocationChangeDelay
	float GetTeleportWorldStreamingLocationChangeDelay();                                                                    // [0x229a9c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.GetServerUserProfileId
	FDbIntegerId GetServerUserProfileId();                                                                                   // [0x229a790] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.GetRespawnWaitTime
	float GetRespawnWaitTime();                                                                                              // [0x229a760] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.GetRespawnOptionTimeLeft
	float GetRespawnOptionTimeLeft(ERespawnOption option);                                                                   // [0x229a6d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.GetRespawnOptionTime
	float GetRespawnOptionTime(ERespawnOption option);                                                                       // [0x229a640] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.GetPrisoner
	APrisoner* GetPrisoner();                                                                                                // [0x229a550] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.GetPlayerRpcChannel
	UPlayerRpcChannel* GetPlayerRpcChannel();                                                                                // [0x229a520] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.GetNoiseEmitterComponent
	UPawnNoiseEmitterComponent* GetNoiseEmitterComponent();                                                                  // [0x229a4f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.GetMissionDialogueManager
	AMissionDialogueManager* GetMissionDialogueManager();                                                                    // [0x229a220] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.GetGameEventCooldown
	float GetGameEventCooldown();                                                                                            // [0x229a340] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.GetFamePointsRounded
	int32_t GetFamePointsRounded();                                                                                          // [0x229a310] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.GetFamePoints
	float GetFamePoints();                                                                                                   // [0x229a2e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.GetFameMultiplier
	float GetFameMultiplier();                                                                                               // [0x229a2b0] Final|Native|Public|Const 
	// Function /Script/ConZ.ConZPlayerController.GetFameLevel
	int32_t GetFameLevel();                                                                                                  // [0x229a280] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.GetDialogueManager
	AMissionDialogueManager* GetDialogueManager();                                                                           // [0x229a220] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.GetCurrencyBalanceText
	FText GetCurrencyBalanceText(ECurrencyType CurrencyType);                                                                // [0x229a100] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.GetCommitSuicideOptionTimeLeft
	float GetCommitSuicideOptionTimeLeft();                                                                                  // [0x229a0d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.GetCameraManager
	AConZCameraManager* GetCameraManager();                                                                                  // [0x229a070] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.GetAchievementsManagerClient
	AAchievementsManagerClient* GetAchievementsManagerClient();                                                              // [0x2299fe0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.Crash
	void Crash();                                                                                                            // [0x2299ee0] Final|Exec|Native|Static|Private 
	// Function /Script/ConZ.ConZPlayerController.ComputeFameLevel
	int32_t ComputeFameLevel(float FamePoints);                                                                              // [0x2299e60] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZPlayerController.Client_UpdateRespawnSettings
	void Client_UpdateRespawnSettings(FRespawnParameters parameters);                                                        // [0x2299d10] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_TestPingLockStuff
	void Client_TestPingLockStuff(float averageDelta, float averagePing, float counter);                                     // [0x2299bf0] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_SetRespawnWaitTime
	void Client_SetRespawnWaitTime(float Seconds);                                                                           // [0x2299b60] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_SetRespawnOptionTime
	void Client_SetRespawnOptionTime(ERespawnOption option, float Time);                                                     // [0x2299a90] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_SetIsServerSettingsAdmin
	void Client_SetIsServerSettingsAdmin(bool Value);                                                                        // [0x2299a00] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_SetIsAdmin
	void Client_SetIsAdmin(bool Value);                                                                                      // [0x2299970] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_SetGameEventCooldown
	void Client_SetGameEventCooldown(float cooldown);                                                                        // [0x22998e0] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_SetCommitSuicideOptionTime
	void Client_SetCommitSuicideOptionTime(float Time);                                                                      // [0x2299850] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_SendPackedPlayerLocationsForMap
	void Client_SendPackedPlayerLocationsForMap(TArray<AConZPlayerState*> playerStates, TArray<uint32_t> packedMapLocations); // [0x2299750] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_SaveState
	void Client_SaveState();                                                                                                 // [0x2299730] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_ReceiveSurvivalStats
	void Client_ReceiveSurvivalStats(uint32_t ID, FSurvivalStats stats);                                                     // [0x2299630] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_ReceiveSquadRankingData
	void Client_ReceiveSquadRankingData(uint32_t ID, TArray<FString> names, TArray<FString> information, TArray<uint64_t> emblems, TArray<float> scores, int32_t squadRank, int32_t squadIndex); // [0x2299380] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_ReceiveSquadMemberInfo
	void Client_ReceiveSquadMemberInfo(uint32_t ID, TArray<FDbIntegerId> userProfileIds, TArray<FString> names, TArray<EConZSquadMemberRank> ranks, TArray<float> FamePoints, TArray<bool> online); // [0x2299110] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_ReceiveEventsRankingStats
	void Client_ReceiveEventsRankingStats(uint32_t ID, TArray<FEventsRankingStatsItem> stats, int32_t playerRank);           // [0x2298fc0] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_ReceiveBytesFromStream
	void Client_ReceiveBytesFromStream(int32_t streamId, TArray<char> bytes);                                                // [0x2298ee0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_Login
	void Client_Login(FPlayerLoginInfo serverLoginInfo);                                                                     // [0x2298dd0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_InitializeCharacterModificationTransaction
	void Client_InitializeCharacterModificationTransaction(int32_t transactionId, FTransform roomTransform, ECharacterModificationType Type); // [0x2298c40] Net|NetReliableNative|Event|Public|HasDefaults|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_HeartbeatRequest
	void Client_HeartbeatRequest(uint32_t code);                                                                             // [0x2298bb0] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_HasMountedActorBegunPlay
	void Client_HasMountedActorBegunPlay(AActor* Actor);                                                                     // [0x2298b20] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_EndByteStream
	void Client_EndByteStream(int32_t streamId);                                                                             // [0x2298a90] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_EnableRespawnOption
	void Client_EnableRespawnOption(ERespawnOption option);                                                                  // [0x2298a10] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_CancelCharacterModificationTransaction
	void Client_CancelCharacterModificationTransaction();                                                                    // [0x22989f0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_BeginByteStream
	void Client_BeginByteStream(int32_t streamId, ERawByteStreamType streamType);                                            // [0x2298920] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.ConZPlayerController.Client_AllowCertainInventoryInteractions
	void Client_AllowCertainInventoryInteractions();                                                                         // [0x2298900] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/ConZ.ConZPlayerController.ClearRespawnOptionTimers
	void ClearRespawnOptionTimers();                                                                                         // [0x22988e0] Final|Native|Public  
	// Function /Script/ConZ.ConZPlayerController.CheckPhotoModeTransitionFailed
	void CheckPhotoModeTransitionFailed();                                                                                   // [0x22988a0] Final|Native|Public  
	// Function /Script/ConZ.ConZPlayerController.CanAddServerToFavorites
	bool CanAddServerToFavorites();                                                                                          // [0x2298870] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZPlayerController.AddServerToFavorites
	void AddServerToFavorites();                                                                                             // [0x2298850] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.ConZPlayerPawn
/// Size: 0x0000 (0x000028 - 0x000028)
class UConZPlayerPawn : public UInterface
{ 
public:
};

/// Class /Script/ConZ.ConZPlayerState
/// Size: 0x0010 (0x000320 - 0x000330)
class AConZPlayerState : public APlayerState
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0320   (0x0010)  MISSED
};

/// Class /Script/ConZ.ConZReverbComponent
/// Size: 0x0020 (0x000280 - 0x0002A0)
class UConZReverbComponent : public UAkLateReverbComponent
{ 
public:
	UAkAuxBus*                                         IndoorSmallAuxBus;                                          // 0x0280   (0x0008)  
	UAkAuxBus*                                         IndoorMediumAuxBus;                                         // 0x0288   (0x0008)  
	UAkAuxBus*                                         IndoorLargeAuxBus;                                          // 0x0290   (0x0008)  
	UAkAuxBus*                                         OutdoorLargeAuxBus;                                         // 0x0298   (0x0008)  
};

/// Class /Script/ConZ.ConZReverbVolume
/// Size: 0x0000 (0x000290 - 0x000290)
class AConZReverbVolume : public AAkReverbVolume
{ 
public:
};

/// Class /Script/ConZ.ConZSlider
/// Size: 0x0B58 (0x000260 - 0x000DB8)
class UConZSlider : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0260   (0x0020)  MISSED
	int32_t                                            _minValue;                                                  // 0x0280   (0x0004)  
	int32_t                                            _maxValue;                                                  // 0x0284   (0x0004)  
	int32_t                                            _stepSize;                                                  // 0x0288   (0x0004)  
	bool                                               _controlWithKeyboard;                                       // 0x028C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1B];                                      // 0x028D   (0x001B)  MISSED
	UOverlay*                                          _progressBarOverlay;                                        // 0x02A8   (0x0008)  
	UImage*                                            _sliderThumb;                                               // 0x02B0   (0x0008)  
	UProgressBar*                                      _progressBar;                                               // 0x02B8   (0x0008)  
	FConZSliderStyle                                   _selectedAndFocusedSliderStyle;                             // 0x02C0   (0x0228)  
	FConZSliderStyle                                   _selectedAndUnfocusedSliderStyle;                           // 0x04E8   (0x0228)  
	FConZSliderStyle                                   _unselectedSliderStyle;                                     // 0x0710   (0x0228)  
	FConZSliderStyle                                   _highlightedSliderStyle;                                    // 0x0938   (0x0228)  
	FConZSliderStyle                                   _disabledSliderStyle;                                       // 0x0B60   (0x0228)  
	float                                              _stepSpeedStartTreshold;                                    // 0x0D88   (0x0004)  
	float                                              _stepSpeedThreshold;                                        // 0x0D8C   (0x0004)  
	float                                              _stepSpeedAtStart;                                          // 0x0D90   (0x0004)  
	float                                              _stepSpeedSlow;                                             // 0x0D94   (0x0004)  
	float                                              _stepSpeedFast;                                             // 0x0D98   (0x0004)  
	bool                                               _controlWithMouseClick;                                     // 0x0D9C   (0x0001)  
	bool                                               _controlWithMouseWheel;                                     // 0x0D9D   (0x0001)  
	unsigned char                                      UnknownData02_6[0x1A];                                      // 0x0D9E   (0x001A)  MISSED
};

/// Class /Script/ConZ.ConZSpectatorPawn
/// Size: 0x0018 (0x0002A8 - 0x0002C0)
class AConZSpectatorPawn : public ASpectatorPawn
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x02A8   (0x0008)  MISSED
	float                                              DefaultFOV;                                                 // 0x02B0   (0x0004)  
	unsigned char                                      UnknownData01_6[0xC];                                       // 0x02B4   (0x000C)  MISSED
};

/// Class /Script/ConZ.ConZSquad
/// Size: 0x00A8 (0x000220 - 0x0002C8)
class AConZSquad : public AActor
{ 
public:
	FDbIntegerId                                       squadId;                                                    // 0x0220   (0x0008)  
	FString                                            SquadName;                                                  // 0x0228   (0x0010)  
	FString                                            SquadMessage;                                               // 0x0238   (0x0010)  
	FString                                            SquadInformation;                                           // 0x0248   (0x0010)  
	FConZSquadEmblem                                   SquadEmblem;                                                // 0x0258   (0x0008)  
	unsigned char                                      UnknownData00_5[0x20];                                      // 0x0260   (0x0020)  MISSED
	TArray<FConZSquadPendingMember>                    _pendingMembers;                                            // 0x0280   (0x0010)  
	TArray<FConZSquadMember>                           _members;                                                   // 0x0290   (0x0010)  
	TArray<FConZSquadMember>                           _oldMembers;                                                // 0x02A0   (0x0010)  
	uint64_t                                           _repEmblem;                                                 // 0x02B0   (0x0008)  
	int32_t                                            _maxAllowedSquadMembers;                                    // 0x02B8   (0x0004)  
	unsigned char                                      UnknownData01_6[0xC];                                       // 0x02BC   (0x000C)  MISSED


	/// Functions
	// Function /Script/ConZ.ConZSquad.UpdateMemberStatus
	void UpdateMemberStatus();                                                                                               // [0x12357a0] Native|Public        
	// Function /Script/ConZ.ConZSquad.UpdateMemberLimit
	void UpdateMemberLimit();                                                                                                // [0x22a1e50] Native|Public        
	// Function /Script/ConZ.ConZSquad.SetMemberRank
	void SetMemberRank(FDbIntegerId UserProfileId, EConZSquadMemberRank Rank);                                               // [0x22a1d60] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZSquad.SendMessageToMembers
	void SendMessageToMembers(FString Message);                                                                              // [0x22a1c30] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ConZSquad.RemoveMember
	void RemoveMember(FDbIntegerId UserProfileId);                                                                           // [0x22a1ba0] Native|Public        
	// Function /Script/ConZ.ConZSquad.PromoteMember
	void PromoteMember(FDbIntegerId UserProfileId);                                                                          // [0x22a1a00] Native|Public        
	// Function /Script/ConZ.ConZSquad.OnRep_SquadName
	void OnRep_SquadName();                                                                                                  // [0x22a19e0] Native|Protected     
	// Function /Script/ConZ.ConZSquad.OnRep_SquadMessage
	void OnRep_SquadMessage();                                                                                               // [0x22a19c0] Native|Protected     
	// Function /Script/ConZ.ConZSquad.OnRep_Members
	void OnRep_Members();                                                                                                    // [0x22a19a0] Native|Protected     
	// Function /Script/ConZ.ConZSquad.OnRep_Emblem
	void OnRep_Emblem();                                                                                                     // [0x22a1980] Native|Protected     
	// Function /Script/ConZ.ConZSquad.IsMemberCountValid
	bool IsMemberCountValid(bool includePending);                                                                            // [0x22a17c0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZSquad.IsAnyMemberInDanger
	bool IsAnyMemberInDanger();                                                                                              // [0x22a1790] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZSquad.IsAnyMemberAlive
	bool IsAnyMemberAlive();                                                                                                 // [0x22a1760] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZSquad.InviteMember
	void InviteMember(FDbIntegerId UserProfileId);                                                                           // [0x22a16d0] Native|Public        
	// Function /Script/ConZ.ConZSquad.HasMember
	bool HasMember(FDbIntegerId UserProfileId, bool includePending);                                                         // [0x22a15f0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZSquad.GetSuccessorForMember
	FDbIntegerId GetSuccessorForMember(FDbIntegerId UserProfileId);                                                          // [0x22a1550] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZSquad.GetOnlineMembers
	TArray<FConZSquadMember> GetOnlineMembers();                                                                             // [0x22a1460] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZSquad.GetOnlineMemberCount
	int32_t GetOnlineMemberCount();                                                                                          // [0x22a1430] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZSquad.GetMembers
	TArray<FConZSquadMember> GetMembers();                                                                                   // [0x22a1330] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZSquad.GetMemberRank
	EConZSquadMemberRank GetMemberRank(FDbIntegerId UserProfileId);                                                          // [0x22a1290] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZSquad.GetMemberLockAccessibility
	EAccessLevel GetMemberLockAccessibility(FDbIntegerId UserProfileId);                                                     // [0x22a11f0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZSquad.GetMemberCount
	int32_t GetMemberCount(bool includePending);                                                                             // [0x22a1150] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZSquad.GetMember
	FConZSquadMember GetMember(FDbIntegerId UserProfileId);                                                                  // [0x22a1050] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZSquad.GetMaxAllowedMemberCount
	int32_t GetMaxAllowedMemberCount();                                                                                      // [0x22a1020] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZSquad.GetLeader
	FDbIntegerId GetLeader();                                                                                                // [0x22a0fe0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZSquad.GenerateName
	void GenerateName();                                                                                                     // [0x226ff90] Native|Public        
	// Function /Script/ConZ.ConZSquad.GenerateMessage
	void GenerateMessage();                                                                                                  // [0x22700a0] Native|Public        
	// Function /Script/ConZ.ConZSquad.GenerateInformation
	void GenerateInformation();                                                                                              // [0x22a0fc0] Native|Public        
	// Function /Script/ConZ.ConZSquad.GenerateEmblem
	void GenerateEmblem();                                                                                                   // [0x22a0fa0] Native|Public        
	// Function /Script/ConZ.ConZSquad.DemoteMember
	void DemoteMember(FDbIntegerId UserProfileId);                                                                           // [0x22a0d40] Native|Public        
	// Function /Script/ConZ.ConZSquad.CanMemberRecruitMembers
	bool CanMemberRecruitMembers(FDbIntegerId UserProfileId);                                                                // [0x22a0ca0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZSquad.CanMemberPromoteRank
	bool CanMemberPromoteRank(FDbIntegerId UserProfileId, EConZSquadMemberRank Rank);                                        // [0x22a0bc0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZSquad.CanMemberKickRank
	bool CanMemberKickRank(FDbIntegerId UserProfileId, EConZSquadMemberRank Rank);                                           // [0x22a0ae0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZSquad.CanMemberEditName
	bool CanMemberEditName(FDbIntegerId UserProfileId);                                                                      // [0x22a0a40] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZSquad.CanMemberEditMessage
	bool CanMemberEditMessage(FDbIntegerId UserProfileId);                                                                   // [0x22a09a0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZSquad.CanMemberEditInformation
	bool CanMemberEditInformation(FDbIntegerId UserProfileId);                                                               // [0x22a0900] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZSquad.CanMemberEditEmblem
	bool CanMemberEditEmblem(FDbIntegerId UserProfileId);                                                                    // [0x22a0860] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZSquad.CanMemberDemoteRank
	bool CanMemberDemoteRank(FDbIntegerId UserProfileId, EConZSquadMemberRank Rank);                                         // [0x22a0780] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ConZSquad.AddMember
	void AddMember(FDbIntegerId UserProfileId, FString UserId, EConZSquadMemberRank Rank);                                   // [0x22a0650] Native|Public        
};

/// Class /Script/ConZ.ConZStandardButton
/// Size: 0x0068 (0x000260 - 0x0002C8)
class UConZStandardButton : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x0260   (0x0050)  MISSED
	UButton*                                           MainButton;                                                 // 0x02B0   (0x0008)  
	UTextBlock*                                        TextBlock;                                                  // 0x02B8   (0x0008)  
	bool                                               OverridesHighlight;                                         // 0x02C0   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x02C1   (0x0007)  MISSED


	/// Functions
	// Function /Script/ConZ.ConZStandardButton.TriggerButton
	void TriggerButton();                                                                                                    // [0x22a1e30] Final|Native|Private 
	// Function /Script/ConZ.ConZStandardButton.SynchronizePropertiesInBlueprint
	void SynchronizePropertiesInBlueprint();                                                                                 // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.ConZStandardButton.SetTextInternal
	void SetTextInternal(FText& Text);                                                                                       // [0x2859740] BlueprintCosmetic|Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/ConZ.ConZStandardButton.SetFontSize
	void SetFontSize(int32_t FontSize);                                                                                      // [0x22a1cd0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.ConZVehicleAnimInstance
/// Size: 0x0040 (0x0002C0 - 0x000300)
class UConZVehicleAnimInstance : public UAnimInstance
{ 
public:
	EVehicleEngineState                                EngineState;                                                // 0x02B8   (0x0001)  
	bool                                               IsEngineRunning;                                            // 0x02B9   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x02BA   (0x0002)  MISSED
	float                                              EngineRpm;                                                  // 0x02BC   (0x0004)  
	float                                              EngineRpmInterpSpeed;                                       // 0x02C0   (0x0004)  
	float                                              Speed;                                                      // 0x02C4   (0x0004)  
	float                                              SpeedKph;                                                   // 0x02C8   (0x0004)  
	float                                              MaxSteeringWheelSteerAngle;                                 // 0x02CC   (0x0004)  
	float                                              SteeringWheelSteerAngleInterpSpeed;                         // 0x02D0   (0x0004)  
	float                                              CurrentSteeringWheelSteerAngle;                             // 0x02D4   (0x0004)  
	TArray<float>                                      DoorOpenPercentage;                                         // 0x02D8   (0x0010)  
	TArray<float>                                      DoorWindowOpenPercentage;                                   // 0x02E8   (0x0010)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x02F8   (0x0008)  MISSED
};

/// Class /Script/ConZ.ConZVehicleSpringArmComponent
/// Size: 0x0050 (0x000290 - 0x0002E0)
class UConZVehicleSpringArmComponent : public USpringArmComponent
{ 
public:
	float                                              _ownerAccelerationDirectionInterpSpeed;                     // 0x0290   (0x0004)  
	FVector                                            _maxCameraOffset;                                           // 0x0294   (0x000C)  
	FVector                                            _cameraOffsetInterpSpeed;                                   // 0x02A0   (0x000C)  
	float                                              _maxCameraPitch;                                            // 0x02AC   (0x0004)  
	unsigned char                                      UnknownData00_6[0x30];                                      // 0x02B0   (0x0030)  MISSED
};

/// Class /Script/ConZ.ConZWaterSpline
/// Size: 0x0098 (0x000220 - 0x0002B8)
class AConZWaterSpline : public AActor
{ 
public:
	USceneComponent*                                   SceneComponent;                                             // 0x0220   (0x0008)  
	USplineComponent*                                  SplineComponent;                                            // 0x0228   (0x0008)  
	UStaticMeshComponent*                              SurfaceMeshComponent;                                       // 0x0230   (0x0008)  
	UStaticMeshComponent*                              SubsurfaceMeshComponent;                                    // 0x0238   (0x0008)  
	bool                                               DrawDebug;                                                  // 0x0240   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0241   (0x0003)  MISSED
	int32_t                                            SelectRangeStart;                                           // 0x0244   (0x0004)  
	int32_t                                            SelectRangeEnd;                                             // 0x0248   (0x0004)  
	bool                                               SelectRange;                                                // 0x024C   (0x0001)  
	bool                                               FlattenZ;                                                   // 0x024D   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x024E   (0x0002)  MISSED
	TArray<FConZWaterSplineControlPoint>               ControlPoints;                                              // 0x0250   (0x0010)  
	float                                              MaxDepth;                                                   // 0x0260   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0264   (0x0004)  MISSED
	UStaticMesh*                                       SurfaceMesh;                                                // 0x0268   (0x0008)  
	UStaticMesh*                                       SubsurfaceMesh;                                             // 0x0270   (0x0008)  
	UMaterialInterface*                                SurfaceMeshMaterialOverride;                                // 0x0278   (0x0008)  
	UMaterialInterface*                                SubsurfaceMeshMaterialOverride;                             // 0x0280   (0x0008)  
	UMaterialInterface*                                UnderwaterPostProcessing;                                   // 0x0288   (0x0008)  
	TArray<UAssetUserData*>                            SurfaceMeshUserData;                                        // 0x0290   (0x0010)  
	TArray<FConZGerstnerWavesParameters>               GerstnerWavesParameters;                                    // 0x02A0   (0x0010)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x02B0   (0x0008)  MISSED
};

/// Class /Script/ConZ.ConZWaterSplineIsland
/// Size: 0x0000 (0x0002B8 - 0x0002B8)
class AConZWaterSplineIsland : public AConZWaterSpline
{ 
public:
};

/// Class /Script/ConZ.ConZWaterSplineLake
/// Size: 0x0008 (0x0002B8 - 0x0002C0)
class AConZWaterSplineLake : public AConZWaterSpline
{ 
public:
	float                                              SurfaceMeshCullingDistance;                                 // 0x02B8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x02BC   (0x0004)  MISSED
};

/// Class /Script/ConZ.ConZWaterSplineOcean
/// Size: 0x0010 (0x0002B8 - 0x0002C8)
class AConZWaterSplineOcean : public AConZWaterSpline
{ 
public:
	bool                                               FollowCamera;                                               // 0x02B8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x02B9   (0x0007)  MISSED
	UTexture2D*                                        OceanOpacityMaskTexture;                                    // 0x02C0   (0x0008)  
};

/// Class /Script/ConZ.ConZWaterSplineRegistry
/// Size: 0x0008 (0x000220 - 0x000228)
class AConZWaterSplineRegistry : public AActor
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0220   (0x0008)  MISSED
};

/// Class /Script/ConZ.ConZWaterSplineRiver
/// Size: 0x0058 (0x0002B8 - 0x000310)
class AConZWaterSplineRiver : public AConZWaterSpline
{ 
public:
	UStaticMesh*                                       SplineMesh;                                                 // 0x02B8   (0x0008)  
	UMaterialInterface*                                SplineMeshMaterialOverride;                                 // 0x02C0   (0x0008)  
	float                                              SplineMeshCullingDistance;                                  // 0x02C8   (0x0004)  
	bool                                               ClearRoll;                                                  // 0x02CC   (0x0001)  
	bool                                               AutoCalculateMeshCount;                                     // 0x02CD   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x02CE   (0x0002)  MISSED
	int32_t                                            SplineMeshCount;                                            // 0x02D0   (0x0004)  
	bool                                               RefreshMesh;                                                // 0x02D4   (0x0001)  
	bool                                               ArmBatchEditWidth;                                          // 0x02D5   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x02D6   (0x0002)  MISSED
	float                                              BatchEditWidth;                                             // 0x02D8   (0x0004)  
	bool                                               ArmBatchEditMaxDepth;                                       // 0x02DC   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x02DD   (0x0003)  MISSED
	float                                              BatchEditMaxDepth;                                          // 0x02E0   (0x0004)  
	bool                                               ArmBatchEditSpeed;                                          // 0x02E4   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x02E5   (0x0003)  MISSED
	float                                              BatchEditSpeed;                                             // 0x02E8   (0x0004)  
	bool                                               ArmBatchEditOpacity;                                        // 0x02EC   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x02ED   (0x0003)  MISSED
	float                                              BatchEditOpacity;                                           // 0x02F0   (0x0004)  
	bool                                               ArmBatchEdit;                                               // 0x02F4   (0x0001)  
	bool                                               BatchEditReplace;                                           // 0x02F5   (0x0001)  
	bool                                               BatchEditAdd;                                               // 0x02F6   (0x0001)  
	bool                                               BatchEditMultiply;                                          // 0x02F7   (0x0001)  
	bool                                               BatchEditFlattenZ;                                          // 0x02F8   (0x0001)  
	unsigned char                                      UnknownData05_5[0x7];                                       // 0x02F9   (0x0007)  MISSED
	TArray<USplineMeshComponent*>                      _splineMeshComponents;                                      // 0x0300   (0x0010)  
};

/// Class /Script/ConZ.ConZWorldBoundsVolume
/// Size: 0x0000 (0x000258 - 0x000258)
class AConZWorldBoundsVolume : public AVolume
{ 
public:
};

/// Class /Script/ConZ.ConZWorldSettings
/// Size: 0x01D8 (0x000380 - 0x000558)
class AConZWorldSettings : public AWorldSettings
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0380   (0x0008)  MISSED
	AWeatherController2*                               WeatherController2;                                         // 0x0388   (0x0008)  
	AWetnessManager*                                   WetnessManager;                                             // 0x0390   (0x0008)  
	AGameEventManager*                                 GameEventManager;                                           // 0x0398   (0x0008)  
	AWorldEventManager*                                WorldEventManager;                                          // 0x03A0   (0x0008)  
	ABuildingManager*                                  BuildingManager;                                            // 0x03A8   (0x0008)  
	AItemContainerManager*                             ItemContainerManager;                                       // 0x03B0   (0x0008)  
	AConZEconomyManager*                               EconomyManager;                                             // 0x03B8   (0x0008)  
	AGardenManager*                                    FarmingGardenManager;                                       // 0x03C0   (0x0008)  
	ARadiationManager*                                 RadiationManager;                                           // 0x03C8   (0x0008)  
	AHuntingManager*                                   HuntingManager;                                             // 0x03D0   (0x0008)  
	ACookingManager*                                   CookingManager;                                             // 0x03D8   (0x0008)  
	AMugshotRoom*                                      MugshotRoom;                                                // 0x03E0   (0x0008)  
	TArray<ARadioStation*>                             RadioStations;                                              // 0x03E8   (0x0010)  
	UAkAudioEvent*                                     RadioNoiseStartEvent;                                       // 0x03F8   (0x0008)  
	UAkAudioEvent*                                     RadioNoiseStopEvent;                                        // 0x0400   (0x0008)  
	UAkAudioEvent*                                     RadioStopEvent;                                             // 0x0408   (0x0008)  
	UAkAudioEvent*                                     RadioStationChangeNoiseEvent;                               // 0x0410   (0x0008)  
	UEntitySystemSettings*                             EntitySystemSettings;                                       // 0x0418   (0x0008)  
	FItemSpawningSettings                              ItemSpawningSettings;                                       // 0x0420   (0x0044)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0464   (0x0004)  MISSED
	AVolume*                                           IslandBoundsVolume;                                         // 0x0468   (0x0008)  
	bool                                               UseVirtualizationSystem;                                    // 0x0470   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0471   (0x0003)  MISSED
	FBox2D                                             WorldBounds;                                                // 0x0474   (0x0014)  
	FGameplayTag                                       HeightMapGameplayTag;                                       // 0x0488   (0x0008)  
	FGameplayTag                                       MapPropertiesGameplayTag;                                   // 0x0490   (0x0008)  
	FGameplayTag                                       GerstnerWaveOcclusionPropertiesGameplayTag;                 // 0x0498   (0x0008)  
	FGameplayTag                                       OceanOpacityGameplayTag;                                    // 0x04A0   (0x0008)  
	TArray<FConZPrisonerSpawnEquipmentProperties>      PrisonerSpawnEquipment;                                     // 0x04A8   (0x0010)  
	bool                                               SpawnInAir;                                                 // 0x04B8   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x04B9   (0x0003)  MISSED
	float                                              FirstSpawnAltitude;                                         // 0x04BC   (0x0004)  
	float                                              RespawnAltitude;                                            // 0x04C0   (0x0004)  
	FFloatInterval                                     MapMinMaxElevation;                                         // 0x04C4   (0x0008)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x04CC   (0x0004)  MISSED
	UAvailabilityGrid*                                 AvailabilityGrid;                                           // 0x04D0   (0x0008)  
	unsigned char                                      UnknownData05_5[0x68];                                      // 0x04D8   (0x0068)  MISSED
	UClass*                                            _availabilityGridClass;                                     // 0x0540   (0x0008)  
	TArray<FVehicleSpawnPointData>                     _vehicleSpawnPoints;                                        // 0x0548   (0x0010)  
};

/// Class /Script/ConZ.CookedFoodItem
/// Size: 0x0060 (0x0009B0 - 0x000A10)
class ACookedFoodItem : public AFoodItem
{ 
public:
	float                                              SpoilageRateCooked;                                         // 0x09B0   (0x0004)  
	float                                              TargetGramsPerUse;                                          // 0x09B4   (0x0004)  
	UTexture2D*                                        _inventoryIcon_Raw;                                         // 0x09B8   (0x0008)  
	UTexture2D*                                        _inventoryIconInHands_Raw;                                  // 0x09C0   (0x0008)  
	UTexture2D*                                        _outsideInventoryIcon_Raw;                                  // 0x09C8   (0x0008)  
	UTexture2D*                                        _inventoryIcon_Burnt;                                       // 0x09D0   (0x0008)  
	UTexture2D*                                        _inventoryIconInHands_Burnt;                                // 0x09D8   (0x0008)  
	UTexture2D*                                        _outsideInventoryIcon_Burnt;                                // 0x09E0   (0x0008)  
	float                                              _idealServingTemperatureMin;                                // 0x09E8   (0x0004)  
	float                                              _idealServingTemperatureMax;                                // 0x09EC   (0x0004)  
	TArray<float>                                      _exhaustionBonusDeltaPerCookQualityLevel;                   // 0x09F0   (0x0010)  
	UGameResourceType*                                 _cachedGameResourceType;                                    // 0x0A00   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0A08   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.CookedFoodItem.NetMulticast_SetupStateFromCooking
	void NetMulticast_SetupStateFromCooking(uint32_t cookState, TArray<char> ingredientData);                                // [0x22a4de0] Net|NetReliableNative|Event|NetMulticast|Public 
};

/// Class /Script/ConZ.CookedFoodItemEntitySave
/// Size: 0x0060 (0x000028 - 0x000088)
class UCookedFoodItemEntitySave : public UObject
{ 
public:
	float                                              CookAmount;                                                 // 0x0028   (0x0004)  
	float                                              ExhaustionBonus;                                            // 0x002C   (0x0004)  
	EFoodCookQuality                                   CookQuality;                                                // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	TMap<FPrimaryAssetId, float>                       OptionalResourceTypes;                                      // 0x0038   (0x0050)  
};

/// Class /Script/ConZ.FoodItemEntitySetup
/// Size: 0x0000 (0x000088 - 0x000088)
class UFoodItemEntitySetup : public UItemEntitySetup
{ 
public:
};

/// Class /Script/ConZ.CookedFoodItemEntitySetup
/// Size: 0x0000 (0x000088 - 0x000088)
class UCookedFoodItemEntitySetup : public UFoodItemEntitySetup
{ 
public:
};

/// Class /Script/ConZ.CookingAddRecipeButton
/// Size: 0x0088 (0x000260 - 0x0002E8)
class UCookingAddRecipeButton : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x0260   (0x0050)  MISSED
	UImage*                                            _addRecipeIcon;                                             // 0x02B0   (0x0008)  
	UTextBlock*                                        _emptySlotText;                                             // 0x02B8   (0x0008)  
	UTextBlock*                                        _heatSourceWarningText;                                     // 0x02C0   (0x0008)  
	FLinearColor                                       _disabledColor;                                             // 0x02C8   (0x0010)  
	FLinearColor                                       _enabledColor;                                              // 0x02D8   (0x0010)  
};

/// Class /Script/ConZ.CookingCategoryButtonWidget
/// Size: 0x00A0 (0x000260 - 0x000300)
class UCookingCategoryButtonWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0260   (0x0010)  MISSED
	UTextBlock*                                        _titleTextBlock;                                            // 0x0270   (0x0008)  
	UImage*                                            _buttonImageWidget;                                         // 0x0278   (0x0008)  
	UImage*                                            _overallBorder;                                             // 0x0280   (0x0008)  
	FGameplayTag                                       _cookingCategory;                                           // 0x0288   (0x0008)  
	FGameplayTag                                       _navigationTag;                                             // 0x0290   (0x0008)  
	FText                                              _titleText;                                                 // 0x0298   (0x0018)  
	TWeakObjectPtr<UTexture2D*>                        _buttonImage;                                               // 0x02B0   (0x0028)  
	FLinearColor                                       _unHoveredBorderColor;                                      // 0x02D8   (0x0010)  
	FLinearColor                                       _hoveredBorderColor;                                        // 0x02E8   (0x0010)  
	UAudibleButtonComponent*                           _audibleButtonComponent;                                    // 0x02F8   (0x0008)  
};

/// Class /Script/ConZ.CookingCategoryDropdown
/// Size: 0x0050 (0x000260 - 0x0002B0)
class UCookingCategoryDropdown : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0260   (0x0020)  MISSED
	UClass*                                            _textDropdownEntryClass;                                    // 0x0280   (0x0008)  
	UTextBlock*                                        _chosenCategory;                                            // 0x0288   (0x0008)  
	UMenuAnchor*                                       _popup;                                                     // 0x0290   (0x0008)  
	UClass*                                            _categoryDropdownContentClass;                              // 0x0298   (0x0008)  
	TArray<FCookingCategoryDropdownEntryData>          _cookingCategoryDropdownEntries;                            // 0x02A0   (0x0010)  


	/// Functions
	// Function /Script/ConZ.CookingCategoryDropdown.CreateContentWidget
	UUserWidget* CreateContentWidget();                                                                                      // [0x22a4db0] Final|Native|Private 
};

/// Class /Script/ConZ.CookingCommonData
/// Size: 0x0160 (0x000030 - 0x000190)
class UCookingCommonData : public UDataAsset
{ 
public:
	UCurveFloat*                                       MassReductionByPeakTemperature_Fiber;                       // 0x0030   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_Starch;                      // 0x0038   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_Sugars;                      // 0x0040   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_OtherCarbohydrates;          // 0x0048   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_SaturatedFat;                // 0x0050   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_OtherFats;                   // 0x0058   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_Protein;                     // 0x0060   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_VitaminA;                    // 0x0068   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_VitaminC;                    // 0x0070   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_VitaminD;                    // 0x0078   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_VitaminE;                    // 0x0080   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_VitaminK;                    // 0x0088   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_VitaminB1;                   // 0x0090   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_VitaminB2;                   // 0x0098   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_VitaminB3;                   // 0x00A0   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_VitaminB6;                   // 0x00A8   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_VitaminB9;                   // 0x00B0   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_VitaminB12;                  // 0x00B8   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_VitaminB5;                   // 0x00C0   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_VitaminB4;                   // 0x00C8   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_Calcium;                     // 0x00D0   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_Iron;                        // 0x00D8   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_Magnesium;                   // 0x00E0   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_Phosphorus;                  // 0x00E8   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_Potassium;                   // 0x00F0   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_Sodium;                      // 0x00F8   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_Zinc;                        // 0x0100   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_Copper;                      // 0x0108   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_Manganese;                   // 0x0110   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_Selenium;                    // 0x0118   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_Alcohol;                     // 0x0120   (0x0008)  
	UCurveFloat*                                       MassReductionByPeakTemperature_Water;                       // 0x0128   (0x0008)  
	UCurveFloat*                                       _cookQualityVsCookAmount;                                   // 0x0130   (0x0008)  
	UCurveFloat*                                       _cookQualityVsCookTimeRelativeError_NoSkill;                // 0x0138   (0x0008)  
	UCurveFloat*                                       _cookQualityVsCookTimeRelativeError_Basic;                  // 0x0140   (0x0008)  
	UCurveFloat*                                       _cookQualityVsCookTimeRelativeError_Medium;                 // 0x0148   (0x0008)  
	UCurveFloat*                                       _cookQualityVsCookTimeRelativeError_Advanced;               // 0x0150   (0x0008)  
	UCurveFloat*                                       _cookQualityVsCookTimeRelativeError_AboveAdvanced;          // 0x0158   (0x0008)  
	float                                              _recipeMemorizationChancePerSkillLevel;                     // 0x0160   (0x0004)  
	float                                              _recipeMemorizationChancePerCookQuality;                    // 0x0164   (0x0004)  
	float                                              _baseExperienceGainPerRecipe;                               // 0x0168   (0x0004)  
	float                                              _experienceGainPerRecipeCookTimeInMinutes;                  // 0x016C   (0x0004)  
	float                                              _experienceGainPerRecipeCookTemperatureInDegrees;           // 0x0170   (0x0004)  
	float                                              _experienceGainMultiplier_Ruined;                           // 0x0174   (0x0004)  
	float                                              _experienceGainMultiplier_Bad;                              // 0x0178   (0x0004)  
	float                                              _experienceGainMultiplier_Poor;                             // 0x017C   (0x0004)  
	float                                              _experienceGainMultiplier_Good;                             // 0x0180   (0x0004)  
	float                                              _experienceGainMultiplier_Excellent;                        // 0x0184   (0x0004)  
	float                                              _experienceGainMultiplier_Perfect;                          // 0x0188   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x018C   (0x0004)  MISSED
};

/// Class /Script/ConZ.CookingControlButton
/// Size: 0x00D8 (0x000260 - 0x000338)
class UCookingControlButton : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x0260   (0x0050)  MISSED
	UImage*                                            _buttonBackground;                                          // 0x02B0   (0x0008)  
	UImage*                                            _timerBorder;                                               // 0x02B8   (0x0008)  
	UWidgetSwitcher*                                   _visualSwitcher;                                            // 0x02C0   (0x0008)  
	UTextBlock*                                        _buttonTimer;                                               // 0x02C8   (0x0008)  
	UCookingTextTooltip*                               _cookingTextTooltip;                                        // 0x02D0   (0x0008)  
	UClass*                                            _cookingTextTooltipClass;                                   // 0x02D8   (0x0008)  
	ECookingControlButtonState                         _controlButtonState;                                        // 0x02E0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x02E1   (0x0007)  MISSED
	TMap<ECookingControlButtonVisual, FHoverClickButtonVisualInfo> _hoverAndClickVisualsMap;                       // 0x02E8   (0x0050)  
};

/// Class /Script/ConZ.CookingFavouriteButton
/// Size: 0x00A0 (0x000260 - 0x000300)
class UCookingFavouriteButton : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x58];                                      // 0x0260   (0x0058)  MISSED
	UImage*                                            _buttonImage;                                               // 0x02B8   (0x0008)  
	UWidgetAnimation*                                  _clickAnimation;                                            // 0x02C0   (0x0008)  
	UWidgetAnimation*                                  _hoverAnimation;                                            // 0x02C8   (0x0008)  
	FLinearColor                                       _nonFavouriteButtonColor;                                   // 0x02D0   (0x0010)  
	FLinearColor                                       _favouriteButtonColor;                                      // 0x02E0   (0x0010)  
	FLinearColor                                       _disabledButtonColor;                                       // 0x02F0   (0x0010)  
};

/// Class /Script/ConZ.CookingFinishedWidget
/// Size: 0x0148 (0x000260 - 0x0003A8)
class UCookingFinishedWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0260   (0x0010)  MISSED
	UImage*                                            _productImage;                                              // 0x0270   (0x0008)  
	UTextBlock*                                        _ratingText;                                                // 0x0278   (0x0008)  
	UHorizontalBox*                                    _starsHorizontalBox;                                        // 0x0280   (0x0008)  
	UTextBlock*                                        _qualityDescription;                                        // 0x0288   (0x0008)  
	UButton*                                           _grabButton;                                                // 0x0290   (0x0008)  
	FSlateBrush                                        _activeStarBrush;                                           // 0x0298   (0x0088)  
	FSlateBrush                                        _inactiveStarBrush;                                         // 0x0320   (0x0088)  


	/// Functions
	// Function /Script/ConZ.CookingFinishedWidget.OnGrabButtonClicked
	void OnGrabButtonClicked();                                                                                              // [0x225c1a0] Final|Native|Private 
};

/// Class /Script/ConZ.CookingHeatSourceButton
/// Size: 0x0060 (0x000260 - 0x0002C0)
class UCookingHeatSourceButton : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0260   (0x0010)  MISSED
	USizeBox*                                          _mainSizeBox;                                               // 0x0270   (0x0008)  
	UImage*                                            _heatSourceIcon;                                            // 0x0278   (0x0008)  
	UImage*                                            _borderImage;                                               // 0x0280   (0x0008)  
	bool                                               _selected;                                                  // 0x0288   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0289   (0x0003)  MISSED
	FVector2D                                          _selectedButtonSize;                                        // 0x028C   (0x0008)  
	FVector2D                                          _deselectedButtonSize;                                      // 0x0294   (0x0008)  
	FLinearColor                                       _selectedBorderColor;                                       // 0x029C   (0x0010)  
	FLinearColor                                       _deselectedBorderColor;                                     // 0x02AC   (0x0010)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x02BC   (0x0004)  MISSED
};

/// Class /Script/ConZ.CookingInfoButton
/// Size: 0x0058 (0x000260 - 0x0002B8)
class UCookingInfoButton : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x0260   (0x0050)  MISSED
	UWidgetAnimation*                                  _pulseAnimation;                                            // 0x02B0   (0x0008)  
};

/// Class /Script/ConZ.CookingIngredientInfoWidget
/// Size: 0x0060 (0x000260 - 0x0002C0)
class UCookingIngredientInfoWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0260   (0x0010)  MISSED
	FLinearColor                                       _unselectedBorderColor;                                     // 0x0270   (0x0010)  
	FLinearColor                                       _selectedBorderColor;                                       // 0x0280   (0x0010)  
	UCookingInfoButton*                                _infoButton;                                                // 0x0290   (0x0008)  
	UTextBlock*                                        _amountText;                                                // 0x0298   (0x0008)  
	UImage*                                            _ingredientIcon;                                            // 0x02A0   (0x0008)  
	UTextBlock*                                        _titleText;                                                 // 0x02A8   (0x0008)  
	UImage*                                            _border;                                                    // 0x02B0   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x02B8   (0x0008)  MISSED
};

/// Class /Script/ConZ.CookingIngredientTooltip
/// Size: 0x0010 (0x000260 - 0x000270)
class UCookingIngredientTooltip : public UUserWidget
{ 
public:
	UTextBlock*                                        _ingredientName;                                            // 0x0260   (0x0008)  
	UTextBlock*                                        _ingredientNecessity;                                       // 0x0268   (0x0008)  
};

/// Class /Script/ConZ.CookingManager
/// Size: 0x04D0 (0x000220 - 0x0006F0)
class ACookingManager : public AActor
{ 
public:
	FCookingUtilitySlotArray                           _cookingUtilitySlots;                                       // 0x0220   (0x01C0)  
	unsigned char                                      UnknownData00_5[0xC8];                                      // 0x03E0   (0x00C8)  MISSED
	FMainPointSnappedUtilities                         _mainPointSnappedCookingUtilities;                          // 0x04A8   (0x00C8)  
	unsigned char                                      UnknownData01_5[0xF0];                                      // 0x0570   (0x00F0)  MISSED
	float                                              _netRelevancyRadius;                                        // 0x0660   (0x0004)  
	float                                              _newClientCheckTimeInterval;                                // 0x0664   (0x0004)  
	float                                              _databaseUpdateInterval;                                    // 0x0668   (0x0004)  
	float                                              _utilitySnapDistance;                                       // 0x066C   (0x0004)  
	float                                              _maxMainPointSnapDistance;                                  // 0x0670   (0x0004)  
	float                                              _proxyMeshSpawnRadius;                                      // 0x0674   (0x0004)  
	float                                              _proxyMeshReleaseRadius;                                    // 0x0678   (0x0004)  
	unsigned char                                      UnknownData02_5[0x24];                                      // 0x067C   (0x0024)  MISSED
	TMap<FDbIntegerId, FCookingFoodProxyMesh>          _proxyMeshMap;                                              // 0x06A0   (0x0050)  


	/// Functions
	// Function /Script/ConZ.CookingManager.OnRep_MainPointSnap
	void OnRep_MainPointSnap();                                                                                              // [0x22aac00] Final|Native|Private 
};

/// Class /Script/ConZ.CookingPanelWidget
/// Size: 0x0050 (0x000260 - 0x0002B0)
class UCookingPanelWidget : public UTabMenuPanel
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0260   (0x0008)  MISSED
	UTabContainer*                                     _panelTabsContainer;                                        // 0x0268   (0x0008)  
	UWidgetSwitcher*                                   _mainSwitcher;                                              // 0x0270   (0x0008)  
	UCookingUtilitySlotsPanel*                         _cookingUtilitySlotsPanel;                                  // 0x0278   (0x0008)  
	UCookingRecipesPanel*                              _cookingRecipesPanel;                                       // 0x0280   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0288   (0x0004)  MISSED
	float                                              _checkIngredientsValidityPeriod;                            // 0x028C   (0x0004)  
	float                                              _checkVicinityHeatSourceItemsPeriod;                        // 0x0290   (0x0004)  
	float                                              _updateProgressBarColorsPeriod;                             // 0x0294   (0x0004)  
	unsigned char                                      UnknownData02_6[0x18];                                      // 0x0298   (0x0018)  MISSED
};

/// Class /Script/ConZ.CookingProgressWidget
/// Size: 0x0020 (0x000260 - 0x000280)
class UCookingProgressWidget : public UUserWidget
{ 
public:
	URetainerBox*                                      _progressImageRetainerBox;                                  // 0x0260   (0x0008)  
	UImage*                                            _progressImage;                                             // 0x0268   (0x0008)  
	URichTextBlock*                                    _cookingTimeText;                                           // 0x0270   (0x0008)  
	URichTextBlock*                                    _cookingTemperatureText;                                    // 0x0278   (0x0008)  
};

/// Class /Script/ConZ.CookingRecipe
/// Size: 0x0170 (0x000030 - 0x0001A0)
class UCookingRecipe : public UPrimaryDataAsset
{ 
public:
	FText                                              RecipeName;                                                 // 0x0030   (0x0018)  
	FText                                              Description;                                                // 0x0048   (0x0018)  
	TArray<FRecipeIngredient>                          MainIngredients;                                            // 0x0060   (0x0010)  
	TArray<FRecipeIngredient>                          OptionalIngredients;                                        // 0x0070   (0x0010)  
	FCookingResult                                     ResultingFood;                                              // 0x0080   (0x0028)  
	float                                              CookingTemperature;                                         // 0x00A8   (0x0004)  
	float                                              CookingTime;                                                // 0x00AC   (0x0004)  
	FGameplayTagContainer                              Utility;                                                    // 0x00B0   (0x0020)  
	FGameplayTagContainer                              Category;                                                   // 0x00D0   (0x0020)  
	TWeakObjectPtr<UStaticMesh*>                       CookProgressMesh;                                           // 0x00F0   (0x0028)  
	TWeakObjectPtr<UMaterialInterface*>                CookProgressMeshMaterial;                                   // 0x0118   (0x0028)  
	int32_t                                            CookProgressMeshMaterialSlot;                               // 0x0140   (0x0004)  
	bool                                               UseMeshRelativeTransform;                                   // 0x0144   (0x0001)  
	unsigned char                                      UnknownData00_5[0xB];                                       // 0x0145   (0x000B)  MISSED
	FTransform                                         CookProgressMeshRelativeTransform;                          // 0x0150   (0x0030)  
	bool                                               CookProgressMeshFacesHeatsource;                            // 0x0180   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0181   (0x0007)  MISSED
	UAkAudioEvent*                                     StartCookingEvent;                                          // 0x0188   (0x0008)  
	UAkAudioEvent*                                     StopCookingEvent;                                           // 0x0190   (0x0008)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0198   (0x0008)  MISSED
};

/// Class /Script/ConZ.CookingRecipeButtonWidget
/// Size: 0x00C0 (0x000260 - 0x000320)
class UCookingRecipeButtonWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x70];                                      // 0x0260   (0x0070)  MISSED
	UTextBlock*                                        _titleText;                                                 // 0x02D0   (0x0008)  
	UImage*                                            _buttonIcon;                                                // 0x02D8   (0x0008)  
	UCookingFavouriteButton*                           _favouritesButton;                                          // 0x02E0   (0x0008)  
	UCookingInfoButton*                                _infoButton;                                                // 0x02E8   (0x0008)  
	UImage*                                            _overallBorder;                                             // 0x02F0   (0x0008)  
	FLinearColor                                       _unHoveredBorderColor;                                      // 0x02F8   (0x0010)  
	FLinearColor                                       _hoveredBorderColor;                                        // 0x0308   (0x0010)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0318   (0x0008)  MISSED
};

/// Class /Script/ConZ.CookingRecipeCategoryPanel
/// Size: 0x0008 (0x000148 - 0x000150)
class UCookingRecipeCategoryPanel : public UWrapBox
{ 
public:
	FGameplayTag                                       _navigationTag;                                             // 0x0148   (0x0008)  
};

/// Class /Script/ConZ.CookingRecipeCollectionItemTag
/// Size: 0x0010 (0x000030 - 0x000040)
class UCookingRecipeCollectionItemTag : public UBaseItemTag
{ 
public:
	TArray<FPrimaryAssetId>                            _recipes;                                                   // 0x0030   (0x0010)  
};

/// Class /Script/ConZ.CookingRecipeDetailsWidget
/// Size: 0x00A8 (0x000260 - 0x000308)
class UCookingRecipeDetailsWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UClass*                                            _ingredientInfoWidgetClass;                                 // 0x0278   (0x0008)  
	UClass*                                            _possibleIngredientWidgetClass;                             // 0x0280   (0x0008)  
	UImage*                                            _recipeIcon;                                                // 0x0288   (0x0008)  
	UCookingFavouriteButton*                           _favouritesButton;                                          // 0x0290   (0x0008)  
	URichTextBlock*                                    _cookingTimeText;                                           // 0x0298   (0x0008)  
	URichTextBlock*                                    _cookingTemperatureText;                                    // 0x02A0   (0x0008)  
	UTextBlock*                                        _recipeTitle;                                               // 0x02A8   (0x0008)  
	UWrapBox*                                          _mainIngredientsWrapBox;                                    // 0x02B0   (0x0008)  
	UVerticalBox*                                      _mainIngredientDetailsVerticalBox;                          // 0x02B8   (0x0008)  
	UWrapBox*                                          _possibleMainIngredientsWrapBox;                            // 0x02C0   (0x0008)  
	UWrapBox*                                          _optionalIngredientsWrapBox;                                // 0x02C8   (0x0008)  
	UVerticalBox*                                      _optionalIngredientDetailsVerticalBox;                      // 0x02D0   (0x0008)  
	UWrapBox*                                          _possibleOptionalIngredientsWrapBox;                        // 0x02D8   (0x0008)  
	UTextBlock*                                        _detailedDescriptionText;                                   // 0x02E0   (0x0008)  
	UTextBlock*                                        _cookingUtilities;                                          // 0x02E8   (0x0008)  
	UTextBlock*                                        _cookingTimeEmphasized;                                     // 0x02F0   (0x0008)  
	UTextBlock*                                        _cookingTemperatureEmphasized;                              // 0x02F8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0300   (0x0008)  MISSED
};

/// Class /Script/ConZ.CookingRecipeRegistry
/// Size: 0x0010 (0x000030 - 0x000040)
class UCookingRecipeRegistry : public UDataAsset
{ 
public:
	TArray<FCookingRecipeRegistryEntry>                _entries;                                                   // 0x0030   (0x0010)  
};

/// Class /Script/ConZ.CookingRecipesPanel
/// Size: 0x0120 (0x000260 - 0x000380)
class UCookingRecipesPanel : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0260   (0x0008)  MISSED
	USearchBox*                                        _searchBox;                                                 // 0x0268   (0x0008)  
	UCookingCategoryDropdown*                          _cookingCategoryDropdown;                                   // 0x0270   (0x0008)  
	UCookingUtilityFilterDropdown*                     _cookingUtilityFilterDropdown;                              // 0x0278   (0x0008)  
	UCookingFavouriteButton*                           _filterFavouritesButton;                                    // 0x0280   (0x0008)  
	UCookingSortingDropdown*                           _cookingSortingDropdown;                                    // 0x0288   (0x0008)  
	UWidgetSwitcher*                                   _categorySwitcher;                                          // 0x0290   (0x0008)  
	UWrapBox*                                          _catResults;                                                // 0x0298   (0x0008)  
	UCookingRecipeDetailsWidget*                       _cookingRecipeDetailsWidget;                                // 0x02A0   (0x0008)  
	UButton*                                           _btnBack;                                                   // 0x02A8   (0x0008)  
	UButton*                                           _btnAddRecipe;                                              // 0x02B0   (0x0008)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x02B8   (0x0010)  MISSED
	UClass*                                            _cookingRecipeButtonClass;                                  // 0x02C8   (0x0008)  
	FGameplayTag                                       _rootNavigationTag;                                         // 0x02D0   (0x0008)  
	FGameplayTag                                       _resultsNavigationTag;                                      // 0x02D8   (0x0008)  
	FGameplayTag                                       _rootCookingTag;                                            // 0x02E0   (0x0008)  
	FGameplayTag                                       _favouritesCookingTag;                                      // 0x02E8   (0x0008)  
	unsigned char                                      UnknownData02_6[0x90];                                      // 0x02F0   (0x0090)  MISSED


	/// Functions
	// Function /Script/ConZ.CookingRecipesPanel.OnBackButtonClicked
	void OnBackButtonClicked();                                                                                              // [0x22aabe0] Final|Native|Private 
	// Function /Script/ConZ.CookingRecipesPanel.OnAddRecipeButtonClicked
	void OnAddRecipeButtonClicked();                                                                                         // [0x22aabc0] Final|Native|Private 
};

/// Class /Script/ConZ.CookingSkill
/// Size: 0x00C8 (0x0000B0 - 0x000178)
class UCookingSkill : public UIntelligenceSkill
{ 
public:
	TArray<FPrimaryAssetId>                            _recipesKnownByDefault;                                     // 0x00B0   (0x0010)  
	unsigned char                                      UnknownData00_5[0xA0];                                      // 0x00C0   (0x00A0)  MISSED
	float                                              _cookTimeMultiplier_NoSkill;                                // 0x0160   (0x0004)  
	float                                              _cookTimeMultiplier_Basic;                                  // 0x0164   (0x0004)  
	float                                              _cookTimeMultiplier_Medium;                                 // 0x0168   (0x0004)  
	float                                              _cookTimeMultiplier_Advanced;                               // 0x016C   (0x0004)  
	float                                              _cookTimeMultiplier_AboveAdvanced;                          // 0x0170   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0174   (0x0004)  MISSED
};

/// Class /Script/ConZ.CookingSortingDropdown
/// Size: 0x0048 (0x000260 - 0x0002A8)
class UCookingSortingDropdown : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UClass*                                            _textDropdownEntryClass;                                    // 0x0278   (0x0008)  
	UClass*                                            _categoryDropdownContentClass;                              // 0x0280   (0x0008)  
	UImage*                                            _icon;                                                      // 0x0288   (0x0008)  
	UMenuAnchor*                                       _popup;                                                     // 0x0290   (0x0008)  
	TArray<FCookingSortingDropdownEntryData>           _cookingSortingDropdownEntries;                             // 0x0298   (0x0010)  


	/// Functions
	// Function /Script/ConZ.CookingSortingDropdown.CreateContentWidget
	UUserWidget* CreateContentWidget();                                                                                      // [0x22aab60] Final|Native|Private 
};

/// Class /Script/ConZ.CookingTemperatureControlLinearWidget
/// Size: 0x0038 (0x000260 - 0x000298)
class UCookingTemperatureControlLinearWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	URetainerBox*                                      _effectBox;                                                 // 0x0278   (0x0008)  
	USlider*                                           _temperatureSlider;                                         // 0x0280   (0x0008)  
	UOverlay*                                          _temperatureValuesOverlay;                                  // 0x0288   (0x0008)  
	float                                              _minimumVisualValue;                                        // 0x0290   (0x0004)  
	float                                              _maximumVisualValue;                                        // 0x0294   (0x0004)  


	/// Functions
	// Function /Script/ConZ.CookingTemperatureControlLinearWidget.OnValueChanged
	void OnValueChanged(float Value);                                                                                        // [0x22aac20] Final|Native|Private 
};

/// Class /Script/ConZ.CookingTemperatureControlRadialWidget
/// Size: 0x0148 (0x000260 - 0x0003A8)
class UCookingTemperatureControlRadialWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0260   (0x0010)  MISSED
	UWidgetSwitcher*                                   _dialDetailSwitcher;                                        // 0x0270   (0x0008)  
	UOverlay*                                          _exactTemperaturesOverlay;                                  // 0x0278   (0x0008)  
	UImage*                                            _dialArrow;                                                 // 0x0280   (0x0008)  
	float                                              _rotationSpeedMultiplier;                                   // 0x0288   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x028C   (0x0004)  MISSED
	FSlateBrush                                        _arrowNormalBrush;                                          // 0x0290   (0x0088)  
	FSlateBrush                                        _arrowHoveredBrush;                                         // 0x0318   (0x0088)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x03A0   (0x0008)  MISSED
};

/// Class /Script/ConZ.CookingTextTooltip
/// Size: 0x0008 (0x000260 - 0x000268)
class UCookingTextTooltip : public UUserWidget
{ 
public:
	UTextBlock*                                        _text;                                                      // 0x0260   (0x0008)  
};

/// Class /Script/ConZ.CookingUIController
/// Size: 0x03D8 (0x000028 - 0x000400)
class UCookingUIController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x2A0];                                     // 0x0028   (0x02A0)  MISSED
	float                                              _vicinityRadius;                                            // 0x02C8   (0x0004)  
	FLinearColor                                       _overcookedColor;                                           // 0x02CC   (0x0010)  
	FLinearColor                                       _cookedColor;                                               // 0x02DC   (0x0010)  
	FLinearColor                                       _undercookedColor;                                          // 0x02EC   (0x0010)  
	unsigned char                                      UnknownData01_5[0xF4];                                      // 0x02FC   (0x00F4)  MISSED
	float                                              _updateAllRecipeInstanceProgressBarColorsPeriod;            // 0x03F0   (0x0004)  
	unsigned char                                      UnknownData02_6[0xC];                                       // 0x03F4   (0x000C)  MISSED
};

/// Class /Script/ConZ.CookingUtilityFilterDropdown
/// Size: 0x0048 (0x000260 - 0x0002A8)
class UCookingUtilityFilterDropdown : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UImage*                                            _utilityFilterIcon;                                         // 0x0278   (0x0008)  
	UMenuAnchor*                                       _popup;                                                     // 0x0280   (0x0008)  
	UClass*                                            _dropdownEntryClass;                                        // 0x0288   (0x0008)  
	UClass*                                            _dropdownContentClass;                                      // 0x0290   (0x0008)  
	TArray<FCookingUtilityFilterDropdownEntryData>     _cookingUtilityFilterDropdownEntries;                       // 0x0298   (0x0010)  


	/// Functions
	// Function /Script/ConZ.CookingUtilityFilterDropdown.CreateContentWidget
	UUserWidget* CreateContentWidget();                                                                                      // [0x22aab90] Final|Native|Private 
};

/// Class /Script/ConZ.CookingUtilityItemTag
/// Size: 0x0068 (0x000030 - 0x000098)
class UCookingUtilityItemTag : public UBaseItemTag
{ 
public:
	bool                                               UsesMainSnapPoint;                                          // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	FCookingUtilityMainSnapPoint                       MainSnapPoint;                                              // 0x0038   (0x0048)  
	TArray<FCookingUtilitySlot>                        Slots;                                                      // 0x0080   (0x0010)  
	bool                                               HighlightItem;                                              // 0x0090   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0091   (0x0007)  MISSED
};

/// Class /Script/ConZ.CookingUtilityOverview
/// Size: 0x0238 (0x000260 - 0x000498)
class UCookingUtilityOverview : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x70];                                      // 0x0260   (0x0070)  MISSED
	UClass*                                            _ingredientWidgetClass;                                     // 0x02D0   (0x0008)  
	UClass*                                            _ingredientWidgetTooltipClass;                              // 0x02D8   (0x0008)  
	UTextBlock*                                        _utilityTitleText;                                          // 0x02E0   (0x0008)  
	URetainerBox*                                      _recipeTitleTextEffectBox;                                  // 0x02E8   (0x0008)  
	UTextBlock*                                        _recipeTitleText;                                           // 0x02F0   (0x0008)  
	UImage*                                            _heatSourceWarningIcon;                                     // 0x02F8   (0x0008)  
	USizeBox*                                          _mainSwitcherSizeBox;                                       // 0x0300   (0x0008)  
	UWidgetSwitcher*                                   _mainSwitcher;                                              // 0x0308   (0x0008)  
	UCookingAddRecipeButton*                           _addRecipeButton;                                           // 0x0310   (0x0008)  
	UIngredientsForRecipeWidget*                       _ingredientsForRecipeWidget;                                // 0x0318   (0x0008)  
	UCookingProgressWidget*                            _cookingProgressWidget;                                     // 0x0320   (0x0008)  
	UCookingFinishedWidget*                            _cookingFinishedWidget;                                     // 0x0328   (0x0008)  
	UTextBlock*                                        _slotOrdinalNumber;                                         // 0x0330   (0x0008)  
	UCookingControlButton*                             _cookAndTimerButton;                                        // 0x0338   (0x0008)  
	UCookingControlButton*                             _cancelButton;                                              // 0x0340   (0x0008)  
	USizeBox*                                          _progressBarSizeBox;                                        // 0x0348   (0x0008)  
	FLinearColor                                       _hasCookingTimeLeftColor;                                   // 0x0350   (0x0010)  
	FLinearColor                                       _cookingTimeOverflowedColor;                                // 0x0360   (0x0010)  
	FSlateBrush                                        _heatSourceWarningIcon_MissingFuel;                         // 0x0370   (0x0088)  
	FSlateBrush                                        _heatSourceWarningIcon_NotTurnedOn;                         // 0x03F8   (0x0088)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x0480   (0x0018)  MISSED
};

/// Class /Script/ConZ.CookingUtilitySlotButton
/// Size: 0x0088 (0x000260 - 0x0002E8)
class UCookingUtilitySlotButton : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0260   (0x0010)  MISSED
	UTextBlock*                                        _titleText;                                                 // 0x0270   (0x0008)  
	UImage*                                            _utilityIcon;                                               // 0x0278   (0x0008)  
	UImage*                                            _borderImage;                                               // 0x0280   (0x0008)  
	UImage*                                            _ordinalNumberBorderImage;                                  // 0x0288   (0x0008)  
	UTextBlock*                                        _slotOrdinalNumber;                                         // 0x0290   (0x0008)  
	UImage*                                            _cookingInProgressIcon;                                     // 0x0298   (0x0008)  
	bool                                               _selected;                                                  // 0x02A0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x02A1   (0x0003)  MISSED
	FLinearColor                                       _selectedBorderColor;                                       // 0x02A4   (0x0010)  
	FLinearColor                                       _deselectedBorderColor;                                     // 0x02B4   (0x0010)  
	FLinearColor                                       _selectedTextColor;                                         // 0x02C4   (0x0010)  
	FLinearColor                                       _deselectedTextColor;                                       // 0x02D4   (0x0010)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x02E4   (0x0004)  MISSED
};

/// Class /Script/ConZ.CookingUtilitySlotsPanel
/// Size: 0x0030 (0x000260 - 0x000290)
class UCookingUtilitySlotsPanel : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0260   (0x0008)  MISSED
	UScrollBox*                                        _utilityOverviewScrollBox;                                  // 0x0268   (0x0008)  
	UClass*                                            _cookingUtilityOverviewClass;                               // 0x0270   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0278   (0x0008)  MISSED
	FMargin                                            _utilityOverviewPadding;                                    // 0x0280   (0x0010)  
};

/// Class /Script/ConZ.CookingUtilityUIDataAsset
/// Size: 0x0050 (0x000030 - 0x000080)
class UCookingUtilityUIDataAsset : public UDataAsset
{ 
public:
	FText                                              Name;                                                       // 0x0030   (0x0018)  
	bool                                               CanAddRecipeTo;                                             // 0x0048   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0049   (0x0007)  MISSED
	TWeakObjectPtr<UTexture2D*>                        Icon;                                                       // 0x0050   (0x0028)  
	ECookingTemperatureControlType                     CookingTemperatureControlType;                              // 0x0078   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0079   (0x0007)  MISSED
};

/// Class /Script/ConZ.SearchableCorpse
/// Size: 0x0000 (0x000028 - 0x000028)
class USearchableCorpse : public UInterface
{ 
public:
};

/// Class /Script/ConZ.CraftableItem
/// Size: 0x00F8 (0x000030 - 0x000128)
class UCraftableItem : public UDataAsset
{ 
public:
	ECraftingItemCategory                              ItemCategory;                                               // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	int32_t                                            ItemOrder;                                                  // 0x0034   (0x0004)  
	TArray<FCraftingPair>                              CraftedItems;                                               // 0x0038   (0x0010)  
	EInteractionType                                   Interaction;                                                // 0x0048   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0049   (0x0007)  MISSED
	FText                                              InteractionCaption;                                         // 0x0050   (0x0018)  
	bool                                               HideItemCaptionInCraftingCaption;                           // 0x0068   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0069   (0x0007)  MISSED
	TArray<FCraftingItem>                              MandatoryItems;                                             // 0x0070   (0x0010)  
	TArray<FCraftingItem>                              OptionalItems;                                              // 0x0080   (0x0010)  
	TArray<FCraftingItem>                              ToolsNeeded;                                                // 0x0090   (0x0010)  
	bool                                               AutoCalculation;                                            // 0x00A0   (0x0001)  
	unsigned char                                      UnknownData03_5[0x7];                                       // 0x00A1   (0x0007)  MISSED
	UClass*                                            Skill;                                                      // 0x00A8   (0x0008)  
	FCraftingSkillLevelData                            NoSkillLevelData;                                           // 0x00B0   (0x0014)  
	FCraftingSkillLevelData                            BasicLevelData;                                             // 0x00C4   (0x0014)  
	FCraftingSkillLevelData                            MediumLevelData;                                            // 0x00D8   (0x0014)  
	FCraftingSkillLevelData                            AdvancedLevelData;                                          // 0x00EC   (0x0014)  
	UAnimMontage*                                      CustomCraftingMontage;                                      // 0x0100   (0x0008)  
	UAkAudioEvent*                                     StartCraftingAudioEvent;                                    // 0x0108   (0x0008)  
	UAkAudioEvent*                                     StopCraftingAudioEvent;                                     // 0x0110   (0x0008)  
	bool                                               OnlyForSupporterPack;                                       // 0x0118   (0x0001)  
	bool                                               AutoCalculateHealth;                                        // 0x0119   (0x0001)  
	bool                                               AutoCalculateWeight;                                        // 0x011A   (0x0001)  
	bool                                               AutoCalculateFoodParameters;                                // 0x011B   (0x0001)  
	float                                              AlcoholContentMultiplier;                                   // 0x011C   (0x0004)  
	int32_t                                            BulletStackAmount;                                          // 0x0120   (0x0004)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x0124   (0x0004)  MISSED
};

/// Class /Script/ConZ.PlaceableCraftableItem
/// Size: 0x00C8 (0x000128 - 0x0001F0)
class UPlaceableCraftableItem : public UCraftableItem
{ 
public:
	UClass*                                            PlaceableActorOverride;                                     // 0x0128   (0x0008)  
	float                                              MaxPlacementAngle;                                          // 0x0130   (0x0004)  
	bool                                               AdjustRotation;                                             // 0x0134   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0135   (0x0003)  MISSED
	float                                              GroundOffsetWhilePlacing;                                   // 0x0138   (0x0004)  
	float                                              MaxDistanceFromGroundWhilePlacing;                          // 0x013C   (0x0004)  
	float                                              ReachabilityVerticalOffset;                                 // 0x0140   (0x0004)  
	bool                                               IgnoreFloatingCheckWhilePlacing;                            // 0x0144   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0145   (0x0003)  MISSED
	FVector                                            PlacementLocationOffset;                                    // 0x0148   (0x000C)  
	FVector                                            BoundsExtensionWhilePlacingMin;                             // 0x0154   (0x000C)  
	FVector                                            BoundsExtensionWhilePlacingMax;                             // 0x0160   (0x000C)  
	FVector                                            PlacementTracesBoundsExtension;                             // 0x016C   (0x000C)  
	FVector                                            FloatingTracesBoundsExtension;                              // 0x0178   (0x000C)  
	FVector                                            FloatingTracesCenterOffset;                                 // 0x0184   (0x000C)  
	float                                              MaxHeightAdjustmentWhilePlacing;                            // 0x0190   (0x0004)  
	float                                              MinHeightAdjustmentWhilePlacing;                            // 0x0194   (0x0004)  
	bool                                               CanPlaceOnWater;                                            // 0x0198   (0x0001)  
	bool                                               UseMeshCollisionForPlacement;                               // 0x0199   (0x0001)  
	bool                                               OnlyPlaceableInFriendlyFlagArea;                            // 0x019A   (0x0001)  
	bool                                               CanPlaceInEnemyFlagArea;                                    // 0x019B   (0x0001)  
	bool                                               CheckBaseBuildingPlacementMask;                             // 0x019C   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x019D   (0x0003)  MISSED
	int32_t                                            MaxInstancesPerFlagArea;                                    // 0x01A0   (0x0004)  
	EPlacementAlgorithm                                PlacementAlgorithm;                                         // 0x01A4   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x01A5   (0x0003)  MISSED
	float                                              MaxMissedPlacementTracesPercent;                            // 0x01A8   (0x0004)  
	bool                                               ShowDirectionIndicator;                                     // 0x01AC   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x01AD   (0x0003)  MISSED
	FVector                                            DirectionIndicatorOffset;                                   // 0x01B0   (0x000C)  
	float                                              DirectionIndicatorRotation;                                 // 0x01BC   (0x0004)  
	float                                              DirectionIndicatorSize;                                     // 0x01C0   (0x0004)  
	float                                              OutlineMaterialBaseOffset;                                  // 0x01C4   (0x0004)  
	float                                              OutlineMaterialThinness;                                    // 0x01C8   (0x0004)  
	bool                                               IsOutlineMaterialTwoSided;                                  // 0x01CC   (0x0001)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x01CD   (0x0003)  MISSED
	UMaterialInterface*                                PlacementAllowedMaterialOverride;                           // 0x01D0   (0x0008)  
	UMaterialInterface*                                PlacementDisallowedMaterialOverride;                        // 0x01D8   (0x0008)  
	UMaterialInterface*                                OutlineMaterialOverride;                                    // 0x01E0   (0x0008)  
	UMaterialInterface*                                DepthMaterialOverride;                                      // 0x01E8   (0x0008)  
};

/// Class /Script/ConZ.FortificationCraftableItem
/// Size: 0x0040 (0x0001F0 - 0x000230)
class UFortificationCraftableItem : public UPlaceableCraftableItem
{ 
public:
	UClass*                                            FortificationClass;                                         // 0x01F0   (0x0008)  
	UTexture2D*                                        Icon;                                                       // 0x01F8   (0x0008)  
	FText                                              Caption;                                                    // 0x0200   (0x0018)  
	FText                                              Description;                                                // 0x0218   (0x0018)  
};

/// Class /Script/ConZ.BaseBuildingBlockCraftableItem
/// Size: 0x0060 (0x0001F0 - 0x000250)
class UBaseBuildingBlockCraftableItem : public UPlaceableCraftableItem
{ 
public:
	UClass*                                            BaseBlockClass;                                             // 0x01F0   (0x0008)  
	UTexture2D*                                        Icon;                                                       // 0x01F8   (0x0008)  
	FText                                              Caption;                                                    // 0x0200   (0x0018)  
	FText                                              Description;                                                // 0x0218   (0x0018)  
	FVector                                            PlacementMeshOffset;                                        // 0x0230   (0x000C)  
	FVector                                            PlacementMeshScale;                                         // 0x023C   (0x000C)  
	bool                                               IsUpgrade;                                                  // 0x0248   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0249   (0x0007)  MISSED
};

/// Class /Script/ConZ.GardenCraftableItem
/// Size: 0x0040 (0x0001F0 - 0x000230)
class UGardenCraftableItem : public UPlaceableCraftableItem
{ 
public:
	UClass*                                            PlaceableItemClass;                                         // 0x01F0   (0x0008)  
	UTexture2D*                                        Icon;                                                       // 0x01F8   (0x0008)  
	FText                                              Caption;                                                    // 0x0200   (0x0018)  
	FText                                              Description;                                                // 0x0218   (0x0018)  
};

/// Class /Script/ConZ.ModularBaseBuildingBlockCraftableItem
/// Size: 0x0000 (0x000250 - 0x000250)
class UModularBaseBuildingBlockCraftableItem : public UBaseBuildingBlockCraftableItem
{ 
public:
};

/// Class /Script/ConZ.CraftingAction
/// Size: 0x0000 (0x000028 - 0x000028)
class UCraftingAction : public UObject
{ 
public:
};

/// Class /Script/ConZ.CraftingAvailableItemWidget
/// Size: 0x0078 (0x000260 - 0x0002D8)
class UCraftingAvailableItemWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	AItem*                                             _item;                                                      // 0x0278   (0x0008)  
	UAkAudioEvent*                                     _clickSound;                                                // 0x0280   (0x0008)  
	UClass*                                            _tooltipClass;                                              // 0x0288   (0x0008)  
	UTexture2D*                                        _selectedTexture;                                           // 0x0290   (0x0008)  
	UTexture2D*                                        _unselectedTexture;                                         // 0x0298   (0x0008)  
	UTexture2D*                                        _componentAddTexture;                                       // 0x02A0   (0x0008)  
	UTexture2D*                                        _componentRemoveTexture;                                    // 0x02A8   (0x0008)  
	URetainerBox*                                      MainRetainerBox;                                            // 0x02B0   (0x0008)  
	UImage*                                            _itemImage;                                                 // 0x02B8   (0x0008)  
	UImage*                                            BackgroundImage;                                            // 0x02C0   (0x0008)  
	UImage*                                            AdditionalComponentImage;                                   // 0x02C8   (0x0008)  
	UTextBlock*                                        CountText;                                                  // 0x02D0   (0x0008)  
};

/// Class /Script/ConZ.CraftingCache
/// Size: 0x0080 (0x000030 - 0x0000B0)
class UCraftingCache : public UDataAsset
{ 
public:
	TArray<FString>                                    IngredientPaths;                                            // 0x0030   (0x0010)  
	TMap<UClass*, FIngredientClassesArray>             _craftingTypes;                                             // 0x0040   (0x0050)  
	TArray<TWeakObjectPtr>                             _ingredients;                                               // 0x0090   (0x0010)  
	TArray<TWeakObjectPtr>                             _recipes;                                                   // 0x00A0   (0x0010)  


	/// Functions
	// Function /Script/ConZ.CraftingCache.Regenerate
	void Regenerate();                                                                                                       // [0x22ae2c0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.CraftingComponentTooltip
/// Size: 0x0030 (0x000260 - 0x000290)
class UCraftingComponentTooltip : public UUserWidget
{ 
public:
	UImage*                                            BackgroundImage;                                            // 0x0260   (0x0008)  
	UTextBlock*                                        ComponentTypeText;                                          // 0x0268   (0x0008)  
	UTextBlock*                                        DescriptionText;                                            // 0x0270   (0x0008)  
	UImage*                                            Image;                                                      // 0x0278   (0x0008)  
	UTextBlock*                                        NameText;                                                   // 0x0280   (0x0008)  
	UCraftingComponentWidget*                          _craftingComponentWidget;                                   // 0x0288   (0x0008)  
};

/// Class /Script/ConZ.CraftingComponentWidget
/// Size: 0x0058 (0x000260 - 0x0002B8)
class UCraftingComponentWidget : public UUserWidget
{ 
public:
	UItemClassWidget*                                  ItemWidget;                                                 // 0x0260   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0268   (0x0008)  MISSED
	UTextBlock*                                        CountText;                                                  // 0x0270   (0x0008)  
	UTextBlock*                                        OrderNumberText;                                            // 0x0278   (0x0008)  
	UImage*                                            TypeImage;                                                  // 0x0280   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0288   (0x0008)  MISSED
	UTexture2D*                                        Component_Main;                                             // 0x0290   (0x0008)  
	UTexture2D*                                        Component_Tool;                                             // 0x0298   (0x0008)  
	UTexture2D*                                        Component_Bonus;                                            // 0x02A0   (0x0008)  
	UClass*                                            _craftingComponentWidget;                                   // 0x02A8   (0x0008)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x02B0   (0x0008)  MISSED
};

/// Class /Script/ConZ.CraftingCondition
/// Size: 0x0000 (0x000028 - 0x000028)
class UCraftingCondition : public UObject
{ 
public:
};

/// Class /Script/ConZ.CraftingDatabase
/// Size: 0x00C0 (0x000030 - 0x0000F0)
class UCraftingDatabase : public UDataAsset
{ 
public:
	TArray<UCraftableItem*>                            CraftableItems;                                             // 0x0030   (0x0010)  
	TArray<FString>                                    AssetPaths;                                                 // 0x0040   (0x0010)  
	UCraftingItemTag*                                  CookableTag;                                                // 0x0050   (0x0008)  
	UCraftingItemTag*                                  SmokableTag;                                                // 0x0058   (0x0008)  
	UCraftingItemTag*                                  OpenItemTag;                                                // 0x0060   (0x0008)  
	UCraftingItemTag*                                  LightFireTag;                                               // 0x0068   (0x0008)  
	UCraftingItemTag*                                  ConservedFoodTag;                                           // 0x0070   (0x0008)  
	UItemGroup*                                        IngredientsGroup;                                           // 0x0078   (0x0008)  
	TArray<FString>                                    IngredientsGroupPaths;                                      // 0x0080   (0x0010)  
	TArray<FString>                                    IngredientsExcludePaths;                                    // 0x0090   (0x0010)  
	TMap<UCraftingItemTag*, FItemClassesArray>         _itemsByTags;                                               // 0x00A0   (0x0050)  
};

/// Class /Script/ConZ.CraftingFamePointsItemTag
/// Size: 0x0008 (0x000030 - 0x000038)
class UCraftingFamePointsItemTag : public UBaseItemTag
{ 
public:
	float                                              _fameAmount;                                                // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Class /Script/ConZ.CraftingInfoWidget
/// Size: 0x0100 (0x000260 - 0x000360)
class UCraftingInfoWidget : public UUserWidget
{ 
public:
	UInspectedItemWidget*                              ItemWidget;                                                 // 0x0260   (0x0008)  
	UGridPanel*                                        ComponentsGridPanel;                                        // 0x0268   (0x0008)  
	UGridPanel*                                        CraftingGridPanel;                                          // 0x0270   (0x0008)  
	UUserWidget*                                       ComponentsMinimizableWidget;                                // 0x0278   (0x0008)  
	UUserWidget*                                       CraftingMinimizableWidget;                                  // 0x0280   (0x0008)  
	unsigned char                                      UnknownData00_5[0x58];                                      // 0x0288   (0x0058)  MISSED
	TArray<UPreviousNextSwitchWidget*>                 _switchWidgets;                                             // 0x02E0   (0x0010)  
	TWeakObjectPtr<UPrisonerInventoryComponent*>       _inventoryComponent;                                        // 0x02F0   (0x0008)  
	FCraftingRecipe                                    _craftingRecipe;                                            // 0x02F8   (0x0038)  
	unsigned char                                      UnknownData01_5[0x20];                                      // 0x0330   (0x0020)  MISSED
	UTextBlock*                                        TitleText;                                                  // 0x0350   (0x0008)  
	UTextBlock*                                        DescriptionText;                                            // 0x0358   (0x0008)  


	/// Functions
	// Function /Script/ConZ.CraftingInfoWidget.SwapIngredient
	void SwapIngredient(int32_t widgetIndex, int32_t orderIndex);                                                            // [0x22ae2e0] Final|Native|Private 
};

/// Class /Script/ConZ.CraftingIngredient
/// Size: 0x0000 (0x000028 - 0x000028)
class UCraftingIngredient : public UInterface
{ 
public:
};

/// Class /Script/ConZ.CraftingItemTag
/// Size: 0x0000 (0x000030 - 0x000030)
class UCraftingItemTag : public UBaseItemTag
{ 
public:
};

/// Class /Script/ConZ.CraftingPanel
/// Size: 0x00D0 (0x000298 - 0x000368)
class UCraftingPanel : public UBuildingCraftingPanelBase
{ 
public:
	UGridPanel*                                        _toolsAndWeaponsBox;                                        // 0x0298   (0x0008)  
	UGridPanel*                                        _toolsAndWeaponsSubBox1;                                    // 0x02A0   (0x0008)  
	UGridPanel*                                        _toolsAndWeaponsSubBox2;                                    // 0x02A8   (0x0008)  
	UGridPanel*                                        _toolsAndWeaponsSubBox3;                                    // 0x02B0   (0x0008)  
	UGridPanel*                                        _toolsAndWeaponsSubBox4;                                    // 0x02B8   (0x0008)  
	UGridPanel*                                        _toolsAndWeaponsSubBox5;                                    // 0x02C0   (0x0008)  
	UUserWidget*                                       ToolsAndWeaponsSubContainer1;                               // 0x02C8   (0x0008)  
	UUserWidget*                                       ToolsAndWeaponsSubContainer2;                               // 0x02D0   (0x0008)  
	UUserWidget*                                       ToolsAndWeaponsSubContainer3;                               // 0x02D8   (0x0008)  
	UUserWidget*                                       ToolsAndWeaponsSubContainer4;                               // 0x02E0   (0x0008)  
	UUserWidget*                                       ToolsAndWeaponsSubContainer5;                               // 0x02E8   (0x0008)  
	UGridPanel*                                        _itemsBox;                                                  // 0x02F0   (0x0008)  
	UGridPanel*                                        _itemsSubBox1;                                              // 0x02F8   (0x0008)  
	UGridPanel*                                        _itemsSubBox2;                                              // 0x0300   (0x0008)  
	UGridPanel*                                        _itemsSubBox3;                                              // 0x0308   (0x0008)  
	UGridPanel*                                        _itemsSubBox4;                                              // 0x0310   (0x0008)  
	UGridPanel*                                        _itemsSubBox5;                                              // 0x0318   (0x0008)  
	UUserWidget*                                       ItemsSubContainer1;                                         // 0x0320   (0x0008)  
	UUserWidget*                                       ItemsSubContainer2;                                         // 0x0328   (0x0008)  
	UUserWidget*                                       ItemsSubContainer3;                                         // 0x0330   (0x0008)  
	UUserWidget*                                       ItemsSubContainer4;                                         // 0x0338   (0x0008)  
	UUserWidget*                                       ItemsSubContainer5;                                         // 0x0340   (0x0008)  
	UScrollBox*                                        _toolsAndWeaponsScrollBox;                                  // 0x0348   (0x0008)  
	UScrollBox*                                        _itemsScrollBox;                                            // 0x0350   (0x0008)  
	UScaleBox*                                         _toolsAndWeaponsScaleBox;                                   // 0x0358   (0x0008)  
	UScaleBox*                                         _itemsScaleBox;                                             // 0x0360   (0x0008)  
};

/// Class /Script/ConZ.CraftingPanelWidget
/// Size: 0x0028 (0x000260 - 0x000288)
class UCraftingPanelWidget : public UUserWidget
{ 
public:
	UCraftingRecipeDescriptionPanel*                   _craftingRecipeDescriptionPanel;                            // 0x0260   (0x0008)  
	UBuildingPanel*                                    _buildingPanel;                                             // 0x0268   (0x0008)  
	UCraftingPanel*                                    _craftingPanel;                                             // 0x0270   (0x0008)  
	UCentralBuildingPanel*                             _centralBuildingPanel;                                      // 0x0278   (0x0008)  
	UWidgetSwitcher*                                   _buildingCraftingWidgetSwitcher;                            // 0x0280   (0x0008)  
};

/// Class /Script/ConZ.CraftingProduct
/// Size: 0x0000 (0x000028 - 0x000028)
class UCraftingProduct : public UInterface
{ 
public:
};

/// Class /Script/ConZ.CraftingRecipeDescriptionPanel
/// Size: 0x0098 (0x000260 - 0x0002F8)
class UCraftingRecipeDescriptionPanel : public UTabMenuPanel
{ 
public:
	UCraftingInfoWidget*                               _craftingInfo;                                              // 0x0260   (0x0008)  
	UGridPanel*                                        _inventoryBox;                                              // 0x0268   (0x0008)  
	UGridPanel*                                        _vicinityBox;                                               // 0x0270   (0x0008)  
	FText                                              _blueprintNumberExceededMessage;                            // 0x0278   (0x0018)  
	UClass*                                            _tooltipClass;                                              // 0x0290   (0x0008)  
	TArray<AItem*>                                     _ingredientsToUseForCrafting;                               // 0x0298   (0x0010)  
	unsigned char                                      UnknownData00_5[0x20];                                      // 0x02A8   (0x0020)  MISSED
	TArray<UUserWidget*>                               _inventoryEmptyWidgets;                                     // 0x02C8   (0x0010)  
	TArray<UUserWidget*>                               _vicinityEmptyWidgets;                                      // 0x02D8   (0x0010)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x02E8   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.CraftingRecipeDescriptionPanel.OnAdditionalIngredientSelected
	void OnAdditionalIngredientSelected(UCraftingAvailableItemWidget* Widget, AItem* Item);                                  // [0x22b2330] Final|Native|Private 
};

/// Class /Script/ConZ.CraftingRecipeWidget
/// Size: 0x00A8 (0x000260 - 0x000308)
class UCraftingRecipeWidget : public UUserWidget
{ 
public:
	UItemClassWidget*                                  ItemWidget;                                                 // 0x0260   (0x0008)  
	unsigned char                                      UnknownData00_5[0x20];                                      // 0x0268   (0x0020)  MISSED
	UImage*                                            _itemImage;                                                 // 0x0288   (0x0008)  
	UTextBlock*                                        _additionalText;                                            // 0x0290   (0x0008)  
	UCraftableItem*                                    _craftableItem;                                             // 0x0298   (0x0008)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x02A0   (0x0010)  MISSED
	UAkAudioEvent*                                     _clickSound;                                                // 0x02B0   (0x0008)  
	UClass*                                            _tooltipClass;                                              // 0x02B8   (0x0008)  
	UMaterial*                                         _greyedOutMaterial;                                         // 0x02C0   (0x0008)  
	UMaterial*                                         _nonGreyedOutMaterial;                                      // 0x02C8   (0x0008)  
	UEmptySlot*                                        EmptySlot;                                                  // 0x02D0   (0x0008)  
	URetainerBox*                                      MainRetainerBox;                                            // 0x02D8   (0x0008)  
	UImage*                                            BackgroundImage;                                            // 0x02E0   (0x0008)  
	UImage*                                            SelectionBox;                                               // 0x02E8   (0x0008)  
	UTexture2D*                                        BoxNextLevel;                                               // 0x02F0   (0x0008)  
	UTexture2D*                                        BoxRedNoComponents;                                         // 0x02F8   (0x0008)  
	UTexture2D*                                        BoxYellowComponentsMissing;                                 // 0x0300   (0x0008)  


	/// Functions
	// Function /Script/ConZ.CraftingRecipeWidget.RecipeSelectedDelegate__DelegateSignature
	void RecipeSelectedDelegate__DelegateSignature(UCraftingRecipeWidget* Widget);                                           // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.CraftingRecipeWidget.GetCaption
	FText GetCaption();                                                                                                      // [0x22b2260] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.CraftingRecipeWidget.GetAvailabilityState
	ERecipeAvailabilityState GetAvailabilityState();                                                                         // [0x22b21f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.CraftingIngredientType
/// Size: 0x0008 (0x000028 - 0x000030)
class UCraftingIngredientType : public UObject
{ 
public:
	float                                              Amount;                                                     // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Class /Script/ConZ.CraftingSlotType
/// Size: 0x0010 (0x000028 - 0x000038)
class UCraftingSlotType : public UObject
{ 
public:
	TArray<UClass*>                                    IngredientTypes;                                            // 0x0028   (0x0010)  
};

/// Class /Script/ConZ.CraftItemAction
/// Size: 0x00B8 (0x0000A8 - 0x000160)
class UCraftItemAction : public UInteractionAction
{ 
public:
	unsigned char                                      UnknownData00_1[0xB8];                                      // 0x00A8   (0x00B8)  MISSED
};

/// Class /Script/ConZ.CriminalRecord
/// Size: 0x0110 (0x000260 - 0x000370)
class UCriminalRecord : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0260   (0x0030)  MISSED
	UClass*                                            _criminalRecordSkillClass;                                  // 0x0290   (0x0008)  
	UCriminalRecordText*                               _textName;                                                  // 0x0298   (0x0008)  
	UCriminalRecordText*                               _textAliases;                                               // 0x02A0   (0x0008)  
	UCriminalRecordText*                               _textCrime;                                                 // 0x02A8   (0x0008)  
	UCriminalRecordText*                               _textNumber;                                                // 0x02B0   (0x0008)  
	UCriminalRecordText*                               _textDateOfArrest;                                          // 0x02B8   (0x0008)  
	UCriminalRecordText*                               _textCountry;                                               // 0x02C0   (0x0008)  
	UCriminalRecordText*                               _textCity;                                                  // 0x02C8   (0x0008)  
	UCriminalRecordText*                               _textGender;                                                // 0x02D0   (0x0008)  
	UCriminalRecordText*                               _textHeight;                                                // 0x02D8   (0x0008)  
	UCriminalRecordText*                               _textWeight;                                                // 0x02E0   (0x0008)  
	UCriminalRecordText*                               _textAge;                                                   // 0x02E8   (0x0008)  
	UCriminalRecordText*                               _textBirthDate;                                             // 0x02F0   (0x0008)  
	UCriminalRecordText*                               _textEyeColor;                                              // 0x02F8   (0x0008)  
	UCriminalRecordText*                               _textHairColor;                                             // 0x0300   (0x0008)  
	UCriminalRecordText*                               _textFlaws;                                                 // 0x0308   (0x0008)  
	UCriminalRecordText*                               _textServerLocation;                                        // 0x0310   (0x0008)  
	UCriminalRecordText*                               _textBuildAndOccupation;                                    // 0x0318   (0x0008)  
	UCriminalRecordText*                               _textStrengthCategory;                                      // 0x0320   (0x0008)  
	UVerticalBox*                                      _verticalBoxStrengthSkills;                                 // 0x0328   (0x0008)  
	UCriminalRecordText*                               _textConstitutionCategory;                                  // 0x0330   (0x0008)  
	UVerticalBox*                                      _verticalBoxConstitutionSkills;                             // 0x0338   (0x0008)  
	UCriminalRecordText*                               _textDexterityCategory;                                     // 0x0340   (0x0008)  
	UVerticalBox*                                      _verticalBoxDexteritySkills;                                // 0x0348   (0x0008)  
	UCriminalRecordText*                               _textIntelligenceCategory;                                  // 0x0350   (0x0008)  
	UVerticalBox*                                      _verticalBoxIntelligenceSkills;                             // 0x0358   (0x0008)  
	UConZStandardButton*                               _buttonCancel;                                              // 0x0360   (0x0008)  
	UConZStandardButton*                               _buttonOk;                                                  // 0x0368   (0x0008)  


	/// Functions
	// Function /Script/ConZ.CriminalRecord.OnButtonOkClicked
	void OnButtonOkClicked();                                                                                                // [0x22b2420] Final|Native|Private 
	// Function /Script/ConZ.CriminalRecord.OnButtonCancelClicked
	void OnButtonCancelClicked();                                                                                            // [0x22b2400] Final|Native|Private 
};

/// Class /Script/ConZ.CriminalRecordSkill
/// Size: 0x0018 (0x000260 - 0x000278)
class UCriminalRecordSkill : public UUserWidget
{ 
public:
	UQuartalPieProgressBar*                            _quartalPieProgressBar;                                     // 0x0260   (0x0008)  
	UTextBlock*                                        _textName;                                                  // 0x0268   (0x0008)  
	UTextBlock*                                        _textPercentage;                                            // 0x0270   (0x0008)  
};

/// Class /Script/ConZ.CriminalRecordText
/// Size: 0x0190 (0x000260 - 0x0003F0)
class UCriminalRecordText : public UUserWidget
{ 
public:
	UBorder*                                           _mainBorder;                                                // 0x0260   (0x0008)  
	UTextBlock*                                        _textTitle;                                                 // 0x0268   (0x0008)  
	UTextBlock*                                        _textValue;                                                 // 0x0270   (0x0008)  
	bool                                               _hasLeftBorder;                                             // 0x0278   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0279   (0x0007)  MISSED
	FSlateBrush                                        _leftAndBottomBorder;                                       // 0x0280   (0x0088)  
	FSlateBrush                                        _bottomBorder;                                              // 0x0308   (0x0088)  
	FText                                              _title;                                                     // 0x0390   (0x0018)  
	int32_t                                            _titleFontSize;                                             // 0x03A8   (0x0004)  
	FMargin                                            _titlePadding;                                              // 0x03AC   (0x0010)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x03BC   (0x0004)  MISSED
	FText                                              _value;                                                     // 0x03C0   (0x0018)  
	int32_t                                            _valueFontSize;                                             // 0x03D8   (0x0004)  
	FMargin                                            _valuePadding;                                              // 0x03DC   (0x0010)  
	TEnumAsByte<EHorizontalAlignment>                  _horizontalAlignment;                                       // 0x03EC   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x03ED   (0x0003)  MISSED
};

/// Class /Script/ConZ.CTFBase
/// Size: 0x0030 (0x000220 - 0x000250)
class ACTFBase : public AActor
{ 
public:
	USphereComponent*                                  SphereComponent;                                            // 0x0220   (0x0008)  
	UStaticMeshComponent*                              Mesh;                                                       // 0x0228   (0x0008)  
	TArray<UMaterialInstance*>                         TeamMaterials;                                              // 0x0230   (0x0010)  
	ACTFGameEvent*                                     _gameEvent;                                                 // 0x0240   (0x0008)  
	int32_t                                            _team;                                                      // 0x0248   (0x0004)  
	float                                              _radius;                                                    // 0x024C   (0x0004)  


	/// Functions
	// Function /Script/ConZ.CTFBase.SphereOverlap
	void SphereOverlap(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x22b26f0] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.CTFBase.OnRep_Team
	void OnRep_Team();                                                                                                       // [0x22b2610] Final|Native|Private 
	// Function /Script/ConZ.CTFBase.OnRep_Radius
	void OnRep_Radius();                                                                                                     // [0x22b25f0] Final|Native|Private 
};

/// Class /Script/ConZ.CTFFlag
/// Size: 0x00B0 (0x000220 - 0x0002D0)
class ACTFFlag : public AActor
{ 
public:
	USphereComponent*                                  SphereComponent;                                            // 0x0220   (0x0008)  
	USkeletalMeshComponent*                            FlagMesh;                                                   // 0x0228   (0x0008)  
	TArray<UMaterialInstance*>                         TeamMaterials;                                              // 0x0230   (0x0010)  
	FName                                              AttachSocketName;                                           // 0x0240   (0x0008)  
	ACTFGameEvent*                                     _gameEvent;                                                 // 0x0248   (0x0008)  
	int32_t                                            _team;                                                      // 0x0250   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0254   (0x0004)  MISSED
	APrisoner*                                         _carrier;                                                   // 0x0258   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0260   (0x0008)  MISSED
	float                                              _resetProgress;                                             // 0x0268   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x026C   (0x0004)  MISSED
	FTransform                                         _baseTransform;                                             // 0x0270   (0x0030)  
	FTransform                                         _flagTransform;                                             // 0x02A0   (0x0030)  


	/// Functions
	// Function /Script/ConZ.CTFFlag.SphereOverlap
	void SphereOverlap(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x22b2910] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.CTFFlag.OnRep_Team
	void OnRep_Team();                                                                                                       // [0x22b2630] Final|Native|Private 
	// Function /Script/ConZ.CTFFlag.OnRep_FlagTransform
	void OnRep_FlagTransform();                                                                                              // [0x22b25b0] Final|Native|Private 
};

/// Class /Script/ConZ.CTFFlagStand
/// Size: 0x0020 (0x000220 - 0x000240)
class ACTFFlagStand : public AActor
{ 
public:
	UStaticMeshComponent*                              Mesh;                                                       // 0x0220   (0x0008)  
	UPointLightComponent*                              Light;                                                      // 0x0228   (0x0008)  
	FLinearColor                                       _lightColor;                                                // 0x0230   (0x0010)  


	/// Functions
	// Function /Script/ConZ.CTFFlagStand.OnRep_LightColor
	void OnRep_LightColor();                                                                                                 // [0x22b25d0] Final|Native|Private 
};

/// Class /Script/ConZ.GameEventBase
/// Size: 0x0340 (0x000220 - 0x000560)
class AGameEventBase : public AActor
{ 
public:
	FText                                              EventName;                                                  // 0x0220   (0x0018)  
	UClass*                                            ParticipantStatsClass;                                      // 0x0238   (0x0008)  
	UClass*                                            RoundInfoWidgetClass;                                       // 0x0240   (0x0008)  
	UClass*                                            TeamHeaderWidgetClass;                                      // 0x0248   (0x0008)  
	UClass*                                            StatWidgetClass;                                            // 0x0250   (0x0008)  
	UClass*                                            MiniStatWidgetClass;                                        // 0x0258   (0x0008)  
	UClass*                                            TransportClass;                                             // 0x0260   (0x0008)  
	UAkAudioEvent*                                     TimesUpAnnouncement;                                        // 0x0268   (0x0008)  
	UAkAudioEvent*                                     BlueTeamWonRoundAnnouncement;                               // 0x0270   (0x0008)  
	UAkAudioEvent*                                     RedTeamWonRoundAnnouncement;                                // 0x0278   (0x0008)  
	UAkAudioEvent*                                     RoundDrawAnnouncement;                                      // 0x0280   (0x0008)  
	UAkAudioEvent*                                     BlueTeamWonEventAnnouncement;                               // 0x0288   (0x0008)  
	UAkAudioEvent*                                     RedTeamWonEventAnnouncement;                                // 0x0290   (0x0008)  
	UAkAudioEvent*                                     EventDrawAnnouncement;                                      // 0x0298   (0x0008)  
	UAkAudioEvent*                                     Time30sAnnouncement;                                        // 0x02A0   (0x0008)  
	UAkAudioEvent*                                     Time15sAnnouncement;                                        // 0x02A8   (0x0008)  
	UAkAudioEvent*                                     Time10sCountdownAnnouncement;                               // 0x02B0   (0x0008)  
	UAkAudioEvent*                                     TensionMusicStart;                                          // 0x02B8   (0x0008)  
	UAkAudioEvent*                                     TensionMusicStop;                                           // 0x02C0   (0x0008)  
	EGameEventState                                    _state;                                                     // 0x02C8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x02C9   (0x0003)  MISSED
	int32_t                                            _activeParticipantCount;                                    // 0x02CC   (0x0004)  
	int32_t                                            _numberOfTeams;                                             // 0x02D0   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x02D4   (0x0004)  MISSED
	TArray<int32_t>                                    _teamMemberCount;                                           // 0x02D8   (0x0010)  
	TArray<int32_t>                                    _teamScores;                                                // 0x02E8   (0x0010)  
	TArray<int32_t>                                    _roundWinningTeam;                                          // 0x02F8   (0x0010)  
	int32_t                                            _round;                                                     // 0x0308   (0x0004)  
	float                                              _roundTimeLeft;                                             // 0x030C   (0x0004)  
	float                                              _cancelTimeLeft;                                            // 0x0310   (0x0004)  
	unsigned char                                      UnknownData02_5[0x1C];                                      // 0x0314   (0x001C)  MISSED
	AGameEventLocationMarker*                          _marker;                                                    // 0x0330   (0x0008)  
	AGameEventBorder*                                  _border;                                                    // 0x0338   (0x0008)  
	AGameEventManager*                                 _manager;                                                   // 0x0340   (0x0008)  
	TArray<FGameEventParticipantInfo>                  _participantInfo;                                           // 0x0348   (0x0010)  
	FGameEventParameters                               _parameters;                                                // 0x0358   (0x0188)  
	UGameEventCardWidget*                              _cardWidget;                                                // 0x04E0   (0x0008)  
	UGameEventScoreboardWidget*                        _scoreboardWidget;                                          // 0x04E8   (0x0008)  
	UGameEventScoreboardWidget*                        _miniScoreboardWidget;                                      // 0x04F0   (0x0008)  
	TArray<int32_t>                                    _rankings;                                                  // 0x04F8   (0x0010)  
	unsigned char                                      UnknownData03_5[0x20];                                      // 0x0508   (0x0020)  MISSED
	UAkComponent*                                      _lastAnnouncement;                                          // 0x0528   (0x0008)  
	UAkComponent*                                      _lastCountdownAnnouncement;                                 // 0x0530   (0x0008)  
	unsigned char                                      UnknownData04_6[0x28];                                      // 0x0538   (0x0028)  MISSED


	/// Functions
	// Function /Script/ConZ.GameEventBase.UpdateTeamMemberCount
	void UpdateTeamMemberCount();                                                                                            // [0x22e0670] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.UpdateRanking
	void UpdateRanking(int32_t Index);                                                                                       // [0x22e05e0] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.SetTeamScore
	void SetTeamScore(int32_t TeamIndex, float Score);                                                                       // [0x22e0510] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.SetParticipantTeam
	void SetParticipantTeam(APrisoner* Prisoner, int32_t TeamIndex);                                                         // [0x22e0440] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.SetParameters
	void SetParameters(FGameEventParameters& parameters);                                                                    // [0x22e0390] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.SetNumberOfTeams
	void SetNumberOfTeams(int32_t Value);                                                                                    // [0x22e0300] Final|Native|Public  
	// Function /Script/ConZ.GameEventBase.ScheduleEvent
	bool ScheduleEvent();                                                                                                    // [0x22e02d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.SavePrisonerState
	void SavePrisonerState(APrisoner* Prisoner);                                                                             // [0x22e0240] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.SameTeam
	bool SameTeam(APrisoner* prisonerA, APrisoner* prisonerB);                                                               // [0x22e0170] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.ResetGameEventArea
	void ResetGameEventArea();                                                                                               // [0x22e0150] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.RegisterParticipant
	void RegisterParticipant(APrisoner* Prisoner, int32_t preferredTeam);                                                    // [0x22e0080] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.PresentSpawnScreen
	void PresentSpawnScreen(APrisoner* Prisoner);                                                                            // [0x22dfff0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.ParticipantEnter
	void ParticipantEnter(APrisoner* Prisoner);                                                                              // [0x22dff60] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.OnRep_Rankings
	void OnRep_Rankings();                                                                                                   // [0x22dff20] Final|Native|Private 
	// Function /Script/ConZ.GameEventBase.OnRep_ParticipantInfo
	void OnRep_ParticipantInfo();                                                                                            // [0x22dff00] Final|Native|Private 
	// Function /Script/ConZ.GameEventBase.NetMulticast_UpdateScoreboard
	void NetMulticast_UpdateScoreboard(int32_t victimIndex, int32_t killerIndex, bool IsHeadShot);                           // [0x22dfdf0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.GameEventBase.Multicast_StopMusic
	void Multicast_StopMusic(UAkAudioEvent* StopAudioEvent);                                                                 // [0x22cad10] Net|NetReliableNative|Event|NetMulticast|Protected|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.Multicast_StopCountdownAnnouncement
	void Multicast_StopCountdownAnnouncement();                                                                              // [0x22a0fc0] Net|NetReliableNative|Event|NetMulticast|Protected|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.Multicast_ShowScoreboardForEveryone
	void Multicast_ShowScoreboardForEveryone();                                                                              // [0x12375f0] Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.Multicast_ShowEventNotification
	void Multicast_ShowEventNotification(EGameEventNotificationType Type, FString auxString);                                // [0x22dfd00] Net|NetReliableNative|Event|NetMulticast|Protected 
	// Function /Script/ConZ.GameEventBase.Multicast_PlayMusic
	void Multicast_PlayMusic(UAkAudioEvent* StartAudioEvent);                                                                // [0x22dfc70] Net|NetReliableNative|Event|NetMulticast|Protected|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.Multicast_PlayCountdownAnnouncement
	void Multicast_PlayCountdownAnnouncement(UAkAudioEvent* Sound);                                                          // [0x22dfbe0] Net|NetReliableNative|Event|NetMulticast|Protected|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.Multicast_PlayAnnouncementToTeam
	void Multicast_PlayAnnouncementToTeam(int32_t TeamIndex, UAkAudioEvent* Sound);                                          // [0x22dfb10] Net|NetReliableNative|Event|NetMulticast|Protected|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.Multicast_PlayAnnouncementToParticipant
	void Multicast_PlayAnnouncementToParticipant(APrisoner* Prisoner, UAkAudioEvent* Sound);                                 // [0x22dfa40] Net|NetReliableNative|Event|NetMulticast|Protected|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.Multicast_PlayAnnouncementToAllParticipants
	void Multicast_PlayAnnouncementToAllParticipants(UAkAudioEvent* Sound);                                                  // [0x22df9b0] Net|NetReliableNative|Event|NetMulticast|Protected|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.Multicast_HideScoreboardForEveryone
	void Multicast_HideScoreboardForEveryone();                                                                              // [0x22df990] Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.KickParticipant
	void KickParticipant(APrisoner* Prisoner);                                                                               // [0x22df900] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.IsTeamFull
	bool IsTeamFull(int32_t TeamIndex);                                                                                      // [0x22df860] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.IsParticipating
	bool IsParticipating(APrisoner* Prisoner);                                                                               // [0x22df7c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.InitEvent
	void InitEvent(AGameEventLocationMarker* marker, AGameEventManager* manager);                                            // [0x22df6f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.GetWinningTeamsPerRound
	TArray<int32_t> GetWinningTeamsPerRound();                                                                               // [0x22df6b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.GetTeamScore
	float GetTeamScore(int32_t TeamIndex);                                                                                   // [0x22df610] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.GetTeamMemberCount
	int32_t GetTeamMemberCount(int32_t TeamIndex);                                                                           // [0x22df570] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.GetStatusTime
	float GetStatusTime();                                                                                                   // [0x22df530] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.GetSpawnRotationForLocation
	FRotator GetSpawnRotationForLocation(FVector Location);                                                                  // [0x22df480] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.GetScoreboardWidget
	UGameEventScoreboardWidget* GetScoreboardWidget();                                                                       // [0x229a370] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.GetRoundTimeLeft
	float GetRoundTimeLeft();                                                                                                // [0x22df420] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.GetPossibleLoadout
	void GetPossibleLoadout(APrisoner* Prisoner, TArray<UItemSelection*>& primaryWeapons, TArray<UItemSelection*>& secondaryWeapons, TArray<UItemSelection*>& tertiaryWeapons, TArray<UItemSelection*>& outfits, TArray<UItemSelection*>& support, TArray<UItemSelection*>& Gear); // [0x22df130] Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.GetParticipantTeam
	int32_t GetParticipantTeam(APrisoner* Prisoner);                                                                         // [0x22df090] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.GetParticipantJoinLocation
	FVector GetParticipantJoinLocation(APrisoner* Prisoner);                                                                 // [0x22defe0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.GetParticipantInfo
	TArray<FGameEventParticipantInfo> GetParticipantInfo();                                                                  // [0x22defa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.GetParticipantAtRank
	int32_t GetParticipantAtRank(int32_t Rank);                                                                              // [0x22def00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.GetParameters
	FGameEventParameters GetParameters();                                                                                    // [0x22deec0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.GetNumberOfTeams
	int32_t GetNumberOfTeams();                                                                                              // [0x22dee90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.GetNumberOfParticipants
	int32_t GetNumberOfParticipants();                                                                                       // [0x22dee60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.GetNumberOfActiveParticipants
	int32_t GetNumberOfActiveParticipants();                                                                                 // [0x22dee30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.GetMiniScoreboardWidget
	UGameEventScoreboardWidget* GetMiniScoreboardWidget();                                                                   // [0x22dee00] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.GetMaxDurationLeft
	float GetMaxDurationLeft();                                                                                              // [0x22dedc0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.GetMarker
	AGameEventLocationMarker* GetMarker();                                                                                   // [0x22ded90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.GetEventState
	EGameEventState GetEventState();                                                                                         // [0x22ded30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.GetDatabaseEventId
	FDbIntegerId GetDatabaseEventId();                                                                                       // [0x22dec90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.GetCurrentRoundDatabaseId
	FDbIntegerId GetCurrentRoundDatabaseId();                                                                                // [0x22dec50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.GetCurrentRound
	int32_t GetCurrentRound();                                                                                               // [0x22dec20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.GetCardWidget
	UGameEventCardWidget* GetCardWidget();                                                                                   // [0x22debf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.GetCancelTimeLeft
	float GetCancelTimeLeft();                                                                                               // [0x22debc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.GetBorder
	AGameEventBorder* GetBorder();                                                                                           // [0x22deb90] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/ConZ.GameEventBase.ForceParticipantStatsRep
	void ForceParticipantStatsRep(int32_t Index);                                                                            // [0x22dead0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.FindParticipantIndex
	int32_t FindParticipantIndex(APrisoner* Prisoner);                                                                       // [0x22dea30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.EquipParticipantLoadout
	void EquipParticipantLoadout(APrisoner* Prisoner);                                                                       // [0x22de9a0] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.DeclareWinningTeam
	int32_t DeclareWinningTeam();                                                                                            // [0x22de970] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.ConvertScoreToFame
	void ConvertScoreToFame(APrisoner* Prisoner);                                                                            // [0x22de8e0] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.ClearTeamScores
	void ClearTeamScores();                                                                                                  // [0x22de8c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.ChooseSpawnLocation
	FVector ChooseSpawnLocation(APrisoner* Prisoner);                                                                        // [0x22de810] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.CheckParticipatingPrisoners
	void CheckParticipatingPrisoners();                                                                                      // [0x22de7f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.CanStart
	bool CanStart();                                                                                                         // [0x22de730] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.CanSchedule
	bool CanSchedule();                                                                                                      // [0x22de700] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.CanJoin
	bool CanJoin(APrisoner* Prisoner, int32_t preferredTeam);                                                                // [0x22de630] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBase.CancelEvent
	void CancelEvent(bool force);                                                                                            // [0x22de760] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.CallInParticipant
	void CallInParticipant(APrisoner* Prisoner);                                                                             // [0x22de5a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.AwardParticipant
	void AwardParticipant(int32_t Index, FGameEventRewardPoints& reward);                                                    // [0x22de4c0] Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.GameEventBase.AssignParticipantTeam
	int32_t AssignParticipantTeam(APrisoner* Prisoner);                                                                      // [0x22de420] Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.GameEventParticipantStats
/// Size: 0x0020 (0x000028 - 0x000048)
class UGameEventParticipantStats : public UObject
{ 
public:
	float                                              _score;                                                     // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_6[0x1C];                                      // 0x002C   (0x001C)  MISSED


	/// Functions
	// Function /Script/ConZ.GameEventParticipantStats.GetTeamKills
	int32_t GetTeamKills();                                                                                                  // [0x1381d90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventParticipantStats.GetSuicides
	int32_t GetSuicides();                                                                                                   // [0x1381dc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventParticipantStats.GetScore
	float GetScore();                                                                                                        // [0x22df450] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventParticipantStats.GetHeadshots
	int32_t GetHeadshots();                                                                                                  // [0x22ded60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventParticipantStats.GetEnemyKills
	int32_t GetEnemyKills();                                                                                                 // [0x22ded00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventParticipantStats.GetDeaths
	int32_t GetDeaths();                                                                                                     // [0x22decd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventParticipantStats.GetAssists
	int32_t GetAssists();                                                                                                    // [0x22deb60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.CTFParticipantStats
/// Size: 0x0010 (0x000048 - 0x000058)
class UCTFParticipantStats : public UGameEventParticipantStats
{ 
public:
	int32_t                                            Pickups;                                                    // 0x0048   (0x0004)  
	int32_t                                            Captures;                                                   // 0x004C   (0x0004)  
	int32_t                                            Returns;                                                    // 0x0050   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0054   (0x0004)  MISSED
};

/// Class /Script/ConZ.CTFGameEvent
/// Size: 0x0128 (0x000560 - 0x000688)
class ACTFGameEvent : public AGameEventBase
{ 
public:
	UClass*                                            FlagClass;                                                  // 0x0560   (0x0008)  
	UClass*                                            CaptureBaseClass;                                           // 0x0568   (0x0008)  
	UClass*                                            FlagStandClass;                                             // 0x0570   (0x0008)  
	UTexture2D*                                        FlagIconTexture;                                            // 0x0578   (0x0008)  
	UTexture2D*                                        FlagAccentTexture;                                          // 0x0580   (0x0008)  
	UTexture2D*                                        BaseIconTexture;                                            // 0x0588   (0x0008)  
	UTexture2D*                                        BaseAccentTexture;                                          // 0x0590   (0x0008)  
	UTexture2D*                                        EmptyBaseIconTexture;                                       // 0x0598   (0x0008)  
	UTexture2D*                                        EmptyBaseAccentTexture;                                     // 0x05A0   (0x0008)  
	FLinearColor                                       TeamColorA;                                                 // 0x05A8   (0x0010)  
	FLinearColor                                       TeamColorB;                                                 // 0x05B8   (0x0010)  
	UAkAudioEvent*                                     BlueTeamPickedUpFlagAnnouncement;                           // 0x05C8   (0x0008)  
	UAkAudioEvent*                                     BlueTeamCapturedFlagAnnouncement;                           // 0x05D0   (0x0008)  
	UAkAudioEvent*                                     BlueTeamFlagDroppedAnnouncement;                            // 0x05D8   (0x0008)  
	UAkAudioEvent*                                     BlueTeamFlagReturnedAnnouncement;                           // 0x05E0   (0x0008)  
	UAkAudioEvent*                                     RedTeamPickedUpFlagAnnouncement;                            // 0x05E8   (0x0008)  
	UAkAudioEvent*                                     RedTeamCapturedFlagAnnouncement;                            // 0x05F0   (0x0008)  
	UAkAudioEvent*                                     RedTeamFlagDroppedAnnouncement;                             // 0x05F8   (0x0008)  
	UAkAudioEvent*                                     RedTeamFlagReturnedAnnouncement;                            // 0x0600   (0x0008)  
	FCTFParameters                                     _CTFParameters;                                             // 0x0608   (0x0030)  
	ACTFFlag*                                          _flagA;                                                     // 0x0638   (0x0008)  
	ACTFFlag*                                          _flagB;                                                     // 0x0640   (0x0008)  
	ACTFBase*                                          _baseA;                                                     // 0x0648   (0x0008)  
	ACTFBase*                                          _baseB;                                                     // 0x0650   (0x0008)  
	unsigned char                                      UnknownData00_6[0x30];                                      // 0x0658   (0x0030)  MISSED


	/// Functions
	// Function /Script/ConZ.CTFGameEvent.SetCTFParameters
	void SetCTFParameters(FCTFParameters& Params);                                                                           // [0x22b2650] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.CTFGameEvent.OnParticipantDied
	void OnParticipantDied(APrisoner* victim, FDamageEvent& DamageEvent, AController* eventInstigator, AActor* causer);      // [0x22b2440] Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.CTFGameEvent.GetFlagB
	ACTFFlag* GetFlagB();                                                                                                    // [0x22b2300] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.CTFGameEvent.GetFlagA
	ACTFFlag* GetFlagA();                                                                                                    // [0x22b2300] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.CTFGameEvent.GetCTFParameters
	FCTFParameters GetCTFParameters();                                                                                       // [0x22b2220] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.GameEventLocationMarker
/// Size: 0x01F8 (0x000220 - 0x000418)
class AGameEventLocationMarker : public AActor
{ 
public:
	FText                                              LocationName;                                               // 0x0220   (0x0018)  
	UTexture2D*                                        LocationImage;                                              // 0x0238   (0x0008)  
	UTexture2D*                                        LocationImageGrayscale;                                     // 0x0240   (0x0008)  
	bool                                               EligibleForRandomPick;                                      // 0x0248   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0249   (0x0007)  MISSED
	UClass*                                            GameEventClass;                                             // 0x0250   (0x0008)  
	FGameEventParameters                               GameEventParameters;                                        // 0x0258   (0x0188)  
	UClass*                                            BorderClass;                                                // 0x03E0   (0x0008)  
	FVector                                            AreaCenterOffset;                                           // 0x03E8   (0x000C)  
	float                                              Radius;                                                     // 0x03F4   (0x0004)  
	TArray<FSpawnArea>                                 SpawnAreas;                                                 // 0x03F8   (0x0010)  
	USphereComponent*                                  Sphere;                                                     // 0x0408   (0x0008)  
	UBillboardComponent*                               Sprite;                                                     // 0x0410   (0x0008)  


	/// Functions
	// Function /Script/ConZ.GameEventLocationMarker.GetAreaCenter
	FVector GetAreaCenter();                                                                                                 // [0x22e3f70] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventLocationMarker.CreateGameEvent
	AGameEventBase* CreateGameEvent();                                                                                       // [0x22e3bf0] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventLocationMarker.CreateBorder
	AGameEventBorder* CreateBorder();                                                                                        // [0x22e3bc0] Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.CTFLocationMarker
/// Size: 0x00C8 (0x000418 - 0x0004E0)
class ACTFLocationMarker : public AGameEventLocationMarker
{ 
public:
	FCTFParameters                                     CTFParameters;                                              // 0x0418   (0x0030)  
	FVector                                            CaptureOffsetA;                                             // 0x0448   (0x000C)  
	FVector                                            CaptureOffsetB;                                             // 0x0454   (0x000C)  
	float                                              CaptureRadiusA;                                             // 0x0460   (0x0004)  
	float                                              CaptureRadiusB;                                             // 0x0464   (0x0004)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0468   (0x0008)  MISSED
	FTransform                                         FlagOffsetA;                                                // 0x0470   (0x0030)  
	FTransform                                         FlagOffsetB;                                                // 0x04A0   (0x0030)  
	UStaticMeshComponent*                              FlagAPreviewMesh;                                           // 0x04D0   (0x0008)  
	UStaticMeshComponent*                              FlagBPreviewMesh;                                           // 0x04D8   (0x0008)  
};

/// Class /Script/ConZ.CurrencyConversionRequest
/// Size: 0x0028 (0x000028 - 0x000050)
class UCurrencyConversionRequest : public UPlayerRpcChannelServerRequest
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0028   (0x0028)  MISSED
};

/// Class /Script/ConZ.CurrencyConversionResponse
/// Size: 0x0008 (0x000028 - 0x000030)
class UCurrencyConversionResponse : public UPlayerRpcChannelServerResponse
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.CurrencyItemComponent
/// Size: 0x0010 (0x0000C8 - 0x0000D8)
class UCurrencyItemComponent : public UItemComponent
{ 
public:
	int32_t                                            _value;                                                     // 0x00C8   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x00CC   (0x000C)  MISSED
};

/// Class /Script/ConZ.CursedScrollBar
/// Size: 0x0028 (0x000260 - 0x000288)
class UCursedScrollBar : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	float                                              ScrollBarValue;                                             // 0x0278   (0x0004)  
	float                                              ViewportHeight;                                             // 0x027C   (0x0004)  
	float                                              ContentHeight;                                              // 0x0280   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0284   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.CursedScrollBar.UpdateFromValueInternal2
	void UpdateFromValueInternal2(float Value, float MaxCountOnScreen, float MaxValue);                                      // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.CursedScrollBar.CallSetToUpdateFromValue
	void CallSetToUpdateFromValue(float Value, float MaxCountOnScreen, float MaxValue);                                      // [0x2859740] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/ConZ.CursedScrollBar.CallOnSliderMoved
	void CallOnSliderMoved(float Value);                                                                                     // [0x22b6630] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.CustomBorder
/// Size: 0x0038 (0x000260 - 0x000298)
class UCustomBorder : public UUserWidget
{ 
public:
	UImage*                                            Left;                                                       // 0x0260   (0x0008)  
	UImage*                                            Right;                                                      // 0x0268   (0x0008)  
	UImage*                                            Top;                                                        // 0x0270   (0x0008)  
	UImage*                                            Bottom;                                                     // 0x0278   (0x0008)  
	float                                              BorderThickness;                                            // 0x0280   (0x0004)  
	FLinearColor                                       BorderColor;                                                // 0x0284   (0x0010)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0294   (0x0004)  MISSED
};

/// Class /Script/ConZ.CustomMapBorder
/// Size: 0x0068 (0x000220 - 0x000288)
class ACustomMapBorder : public AActor
{ 
public:
	UStaticMeshComponent*                              Mesh;                                                       // 0x0220   (0x0008)  
	UStaticMeshComponent*                              TournamentMesh;                                             // 0x0228   (0x0008)  
	UMaterialInstanceDynamic*                          Material;                                                   // 0x0230   (0x0008)  
	FVector2D                                          _minCustomMapSize;                                          // 0x0238   (0x0008)  
	bool                                               _isInTournamentMode;                                        // 0x0240   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0241   (0x0003)  MISSED
	float                                              _tournamentModeCompletionPercentage;                        // 0x0244   (0x0004)  
	float                                              _nearingCompletionPercentage;                               // 0x0248   (0x0004)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x024C   (0x0008)  MISSED
	FVector2D                                          _minTournamentMapSize;                                      // 0x0254   (0x0008)  
	FBox2D                                             _tournamentFinalBorderDimensions;                           // 0x025C   (0x0014)  
	bool                                               _active;                                                    // 0x0270   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0271   (0x0003)  MISSED
	FBox2D                                             _customMapDimensions;                                       // 0x0274   (0x0014)  


	/// Functions
	// Function /Script/ConZ.CustomMapBorder.OnRep_TournamentCompletionPercentage
	void OnRep_TournamentCompletionPercentage();                                                                             // [0x22b7150] Final|Native|Private 
	// Function /Script/ConZ.CustomMapBorder.OnRep_IsInTournamentMode
	void OnRep_IsInTournamentMode();                                                                                         // [0x22b7150] Final|Native|Private 
	// Function /Script/ConZ.CustomMapBorder.OnRep_CustomMapDimensions
	void OnRep_CustomMapDimensions();                                                                                        // [0x22b7150] Final|Native|Private 
	// Function /Script/ConZ.CustomMapBorder.OnRep_Active
	void OnRep_Active();                                                                                                     // [0x22b7130] Final|Native|Private 
};

/// Class /Script/ConZ.CustomZoneDataAsset
/// Size: 0x0020 (0x000030 - 0x000050)
class UCustomZoneDataAsset : public UDataAsset
{ 
public:
	TArray<FCustomZoneDisplayData>                     CustomZoneEventDisplayData;                                 // 0x0030   (0x0010)  
	TArray<FCustomZoneDisplayData>                     CustomZoneHandlingMethodDisplayData;                        // 0x0040   (0x0010)  
};

/// Class /Script/ConZ.CustomZoneRegistry
/// Size: 0x0158 (0x0000B0 - 0x000208)
class UCustomZoneRegistry : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x00B0   (0x0010)  MISSED
	UMaterialInterface*                                _mapMaterial;                                               // 0x00C0   (0x0008)  
	FCustomZoneConfiguration                           _defaultGlobalConfiguration;                                // 0x00C8   (0x0040)  
	FCustomZoneConfiguration                           _defaultConfiguration;                                      // 0x0108   (0x0040)  
	TMap<FName, FCustomZoneRegion>                     _defaultRegions;                                            // 0x0148   (0x0050)  
	UCanvasRenderTarget2D*                             _mapTexture;                                                // 0x0198   (0x0008)  
	UTexture2D*                                        _shaderData;                                                // 0x01A0   (0x0008)  
	unsigned char                                      UnknownData01_6[0x60];                                      // 0x01A8   (0x0060)  MISSED


	/// Functions
	// Function /Script/ConZ.CustomZoneRegistry.NetMulticast_ReceiveCustomZoneData
	void NetMulticast_ReceiveCustomZoneData(FCustomZoneConfiguration globalConfiguration, TArray<FCustomZoneConfiguration> configurations, TArray<FCustomZoneRegion> Regions); // [0x22b6f50] Net|NetReliableNative|Event|NetMulticast|Public 
};

/// Class /Script/ConZ.CustomZoneSettingsApplyNotification
/// Size: 0x0010 (0x000260 - 0x000270)
class UCustomZoneSettingsApplyNotification : public UUserWidget
{ 
public:
	UTextBlock*                                        _text;                                                      // 0x0260   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0268   (0x0008)  MISSED
};

/// Class /Script/ConZ.CustomZoneSettingsColorPicker
/// Size: 0x00C0 (0x000260 - 0x000320)
class UCustomZoneSettingsColorPicker : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UButton*                                           _button0;                                                   // 0x0278   (0x0008)  
	UButton*                                           _button1;                                                   // 0x0280   (0x0008)  
	UButton*                                           _button2;                                                   // 0x0288   (0x0008)  
	UButton*                                           _button3;                                                   // 0x0290   (0x0008)  
	UButton*                                           _button4;                                                   // 0x0298   (0x0008)  
	UButton*                                           _button5;                                                   // 0x02A0   (0x0008)  
	UButton*                                           _button6;                                                   // 0x02A8   (0x0008)  
	UButton*                                           _button7;                                                   // 0x02B0   (0x0008)  
	UGridPanel*                                        _border0;                                                   // 0x02B8   (0x0008)  
	UGridPanel*                                        _border1;                                                   // 0x02C0   (0x0008)  
	UGridPanel*                                        _border2;                                                   // 0x02C8   (0x0008)  
	UGridPanel*                                        _border3;                                                   // 0x02D0   (0x0008)  
	UGridPanel*                                        _border4;                                                   // 0x02D8   (0x0008)  
	UGridPanel*                                        _border5;                                                   // 0x02E0   (0x0008)  
	UGridPanel*                                        _border6;                                                   // 0x02E8   (0x0008)  
	UGridPanel*                                        _border7;                                                   // 0x02F0   (0x0008)  
	unsigned char                                      UnknownData01_6[0x28];                                      // 0x02F8   (0x0028)  MISSED


	/// Functions
	// Function /Script/ConZ.CustomZoneSettingsColorPicker.HandleButtonPress7
	void HandleButtonPress7();                                                                                               // [0x22b68f0] Final|Native|Private 
	// Function /Script/ConZ.CustomZoneSettingsColorPicker.HandleButtonPress6
	void HandleButtonPress6();                                                                                               // [0x22b68d0] Final|Native|Private 
	// Function /Script/ConZ.CustomZoneSettingsColorPicker.HandleButtonPress5
	void HandleButtonPress5();                                                                                               // [0x22b68b0] Final|Native|Private 
	// Function /Script/ConZ.CustomZoneSettingsColorPicker.HandleButtonPress4
	void HandleButtonPress4();                                                                                               // [0x22b6890] Final|Native|Private 
	// Function /Script/ConZ.CustomZoneSettingsColorPicker.HandleButtonPress3
	void HandleButtonPress3();                                                                                               // [0x22b6870] Final|Native|Private 
	// Function /Script/ConZ.CustomZoneSettingsColorPicker.HandleButtonPress2
	void HandleButtonPress2();                                                                                               // [0x22b6850] Final|Native|Private 
	// Function /Script/ConZ.CustomZoneSettingsColorPicker.HandleButtonPress1
	void HandleButtonPress1();                                                                                               // [0x22b6830] Final|Native|Private 
	// Function /Script/ConZ.CustomZoneSettingsColorPicker.HandleButtonPress0
	void HandleButtonPress0();                                                                                               // [0x22b6810] Final|Native|Private 
};

/// Class /Script/ConZ.CustomZoneSettingsConfiguration
/// Size: 0x00B0 (0x000260 - 0x000310)
class UCustomZoneSettingsConfiguration : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0260   (0x0030)  MISSED
	UBorder*                                           _border;                                                    // 0x0290   (0x0008)  
	UTextBlock*                                        _configurationName;                                         // 0x0298   (0x0008)  
	UButton*                                           _buttonRemove;                                              // 0x02A0   (0x0008)  
	FLinearColor                                       _unhighlightedColor;                                        // 0x02A8   (0x0010)  
	FLinearColor                                       _highlightedColor;                                          // 0x02B8   (0x0010)  
	unsigned char                                      UnknownData01_6[0x48];                                      // 0x02C8   (0x0048)  MISSED


	/// Functions
	// Function /Script/ConZ.CustomZoneSettingsConfiguration.HandleRemoveButtonClicked
	void HandleRemoveButtonClicked();                                                                                        // [0x22b6930] Final|Native|Private 
};

/// Class /Script/ConZ.CustomZoneSettingsConfigurationDetails
/// Size: 0x00A0 (0x000260 - 0x000300)
class UCustomZoneSettingsConfigurationDetails : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UEditableText*                                     _name;                                                      // 0x0278   (0x0008)  
	UCustomZoneSettingsColorPicker*                    _color;                                                     // 0x0280   (0x0008)  
	UVerticalBox*                                      _handlingMethodSelectorContainer;                           // 0x0288   (0x0008)  
	TArray<FLinearColor>                               _colors;                                                    // 0x0290   (0x0010)  
	UClass*                                            _handlingMethodSelectorClass;                               // 0x02A0   (0x0008)  
	bool                                               _shouldShowSkipOption;                                      // 0x02A8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x57];                                      // 0x02A9   (0x0057)  MISSED


	/// Functions
	// Function /Script/ConZ.CustomZoneSettingsConfigurationDetails.HandleNameChange
	void HandleNameChange(FText& Text, TEnumAsByte<ETextCommit> CommitMethod);                                               // [0x22b6a20] Final|Native|Private|HasOutParms 
};

/// Class /Script/ConZ.CustomZoneSettingsConfigurationsList
/// Size: 0x0060 (0x000260 - 0x0002C0)
class UCustomZoneSettingsConfigurationsList : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0260   (0x0030)  MISSED
	UTextBlock*                                        _configurationCountDisplay;                                 // 0x0290   (0x0008)  
	UButton*                                           _buttonAddConfiguration;                                    // 0x0298   (0x0008)  
	UScrollBox*                                        _scrollBox;                                                 // 0x02A0   (0x0008)  
	UClass*                                            _configurationWidgetClass;                                  // 0x02A8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x02B0   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.CustomZoneSettingsConfigurationsList.UpdateConfiguration
	void UpdateConfiguration(int32_t ConfigurationIndex, FCustomZoneConfiguration& configuration);                           // [0x22b7220] Final|Native|Public|HasOutParms 
	// Function /Script/ConZ.CustomZoneSettingsConfigurationsList.RemoveConfiguration
	void RemoveConfiguration(int32_t ConfigurationIndex);                                                                    // [0x22b7190] Final|Native|Public  
	// Function /Script/ConZ.CustomZoneSettingsConfigurationsList.AddConfiguration
	void AddConfiguration(FCustomZoneConfiguration& configuration);                                                          // [0x22b6530] Final|Native|Public|HasOutParms 
};

/// Class /Script/ConZ.CustomZoneSettingsDetailsDisplay
/// Size: 0x0098 (0x000260 - 0x0002F8)
class UCustomZoneSettingsDetailsDisplay : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x60];                                      // 0x0260   (0x0060)  MISSED
	UBorder*                                           _displayBox;                                                // 0x02C0   (0x0008)  
	UClass*                                            _globalConfigurationDetailsWidgetClass;                     // 0x02C8   (0x0008)  
	UClass*                                            _configurationDetailsWidgetClass;                           // 0x02D0   (0x0008)  
	UClass*                                            _regionDetailsWidgetClass;                                  // 0x02D8   (0x0008)  
	UCustomZoneSettingsConfigurationDetails*           _globalConfigurationDetails;                                // 0x02E0   (0x0008)  
	UCustomZoneSettingsConfigurationDetails*           _configurationDetails;                                      // 0x02E8   (0x0008)  
	UCustomZoneSettingsRegionDetails*                  _regionDetails;                                             // 0x02F0   (0x0008)  
};

/// Class /Script/ConZ.CustomZoneSettingsEventDisplay
/// Size: 0x0018 (0x000260 - 0x000278)
class UCustomZoneSettingsEventDisplay : public UUserWidget
{ 
public:
	UTextBlock*                                        _eventNameText;                                             // 0x0260   (0x0008)  
	UTextBlock*                                        _handlingMethodText;                                        // 0x0268   (0x0008)  
	UCustomZoneDataAsset*                              _customZoneData;                                            // 0x0270   (0x0008)  
};

/// Class /Script/ConZ.CustomZoneSettingsHandlingMethodSelector
/// Size: 0x0060 (0x000260 - 0x0002C0)
class UCustomZoneSettingsHandlingMethodSelector : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	FText                                              _description;                                               // 0x0278   (0x0018)  
	UTextBlock*                                        _nameText;                                                  // 0x0290   (0x0008)  
	UButton*                                           _buttonSkip;                                                // 0x0298   (0x0008)  
	UButton*                                           _buttonAllow;                                               // 0x02A0   (0x0008)  
	UButton*                                           _buttonBlock;                                               // 0x02A8   (0x0008)  
	UCustomZoneDataAsset*                              _customZoneData;                                            // 0x02B0   (0x0008)  
	bool                                               _showSkipOption;                                            // 0x02B8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x02B9   (0x0007)  MISSED


	/// Functions
	// Function /Script/ConZ.CustomZoneSettingsHandlingMethodSelector.HandleSelectionSkip
	void HandleSelectionSkip();                                                                                              // [0x22b6ce0] Final|Native|Private 
	// Function /Script/ConZ.CustomZoneSettingsHandlingMethodSelector.HandleSelectionBlock
	void HandleSelectionBlock();                                                                                             // [0x22b6cc0] Final|Native|Private 
	// Function /Script/ConZ.CustomZoneSettingsHandlingMethodSelector.HandleSelectionAllow
	void HandleSelectionAllow();                                                                                             // [0x22b6ca0] Final|Native|Private 
	// Function /Script/ConZ.CustomZoneSettingsHandlingMethodSelector.GetHandlingMethodDescription
	FText GetHandlingMethodDescription(ECustomZoneEventHandlingMethod Method);                                               // [0x22b6720] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.CustomZoneSettingsMap
/// Size: 0x00A0 (0x000260 - 0x000300)
class UCustomZoneSettingsMap : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UImage*                                            _map;                                                       // 0x0278   (0x0008)  
	UTextBlock*                                        _infoLeft;                                                  // 0x0280   (0x0008)  
	UTextBlock*                                        _infoRight;                                                 // 0x0288   (0x0008)  
	UButton*                                           _buttonAddCircleRegion;                                     // 0x0290   (0x0008)  
	UButton*                                           _buttonAddRectangleRegion;                                  // 0x0298   (0x0008)  
	UButton*                                           _buttonRemoveRegion;                                        // 0x02A0   (0x0008)  
	FLinearColor                                       _buttonHighlightColor;                                      // 0x02A8   (0x0010)  
	UTexture2D*                                        _shaderData;                                                // 0x02B8   (0x0008)  
	UMaterialInstanceDynamic*                          _mapMaterial;                                               // 0x02C0   (0x0008)  
	unsigned char                                      UnknownData01_6[0x38];                                      // 0x02C8   (0x0038)  MISSED
};

/// Class /Script/ConZ.CustomZoneSettingsMenu
/// Size: 0x0070 (0x000260 - 0x0002D0)
class UCustomZoneSettingsMenu : public UBaseMenu
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UCustomZoneSettingsMap*                            _map;                                                       // 0x0278   (0x0008)  
	UCustomZoneSettingsConfigurationsList*             _configurationsList;                                        // 0x0280   (0x0008)  
	UCustomZoneSettingsRegionsList*                    _regionsList;                                               // 0x0288   (0x0008)  
	UCustomZoneSettingsDetailsDisplay*                 _detailsDisplay;                                            // 0x0290   (0x0008)  
	UCustomZoneSettingsApplyNotification*              _applyNotification;                                         // 0x0298   (0x0008)  
	UVerticalBox*                                      _messageBoxPanel;                                           // 0x02A0   (0x0008)  
	UButton*                                           _buttonBack;                                                // 0x02A8   (0x0008)  
	UButton*                                           _buttonApply;                                               // 0x02B0   (0x0008)  
	UButton*                                           _buttonReset;                                               // 0x02B8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x02C0   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.CustomZoneSettingsMenu.CloseMenu
	void CloseMenu();                                                                                                        // [0x22b66b0] Final|Native|Private 
};

/// Class /Script/ConZ.CustomZoneSettingsRegion
/// Size: 0x0150 (0x000260 - 0x0003B0)
class UCustomZoneSettingsRegion : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x60];                                      // 0x0260   (0x0060)  MISSED
	UBorder*                                           _border;                                                    // 0x02C0   (0x0008)  
	UTextBlock*                                        _regionName;                                                // 0x02C8   (0x0008)  
	UTextBlock*                                        _regionData;                                                // 0x02D0   (0x0008)  
	UButton*                                           _buttonIncreasePriority;                                    // 0x02D8   (0x0008)  
	UButton*                                           _buttonDecreasePriority;                                    // 0x02E0   (0x0008)  
	UButton*                                           _buttonRemove;                                              // 0x02E8   (0x0008)  
	FLinearColor                                       _unhighlightedColor;                                        // 0x02F0   (0x0010)  
	FLinearColor                                       _highlightedColor;                                          // 0x0300   (0x0010)  
	FLinearColor                                       _defaultZoneUnmodifiedUnhighlightedColor;                   // 0x0310   (0x0010)  
	FLinearColor                                       _defaultZoneUnmodifiedHighlightedColor;                     // 0x0320   (0x0010)  
	FLinearColor                                       _defaultZoneModifiedUnhighlightedColor;                     // 0x0330   (0x0010)  
	FLinearColor                                       _defaultZoneModifiedHighlightedColor;                       // 0x0340   (0x0010)  
	FLinearColor                                       _defaultZoneDeletedUnhighlightedColor;                      // 0x0350   (0x0010)  
	FLinearColor                                       _defaultZoneDeletedHighlightedColor;                        // 0x0360   (0x0010)  
	unsigned char                                      UnknownData01_6[0x40];                                      // 0x0370   (0x0040)  MISSED


	/// Functions
	// Function /Script/ConZ.CustomZoneSettingsRegion.HandleRemoveButtonClicked
	void HandleRemoveButtonClicked();                                                                                        // [0x22b6c60] Final|Native|Private 
	// Function /Script/ConZ.CustomZoneSettingsRegion.HandleIncreasePriorityButtonClicked
	void HandleIncreasePriorityButtonClicked();                                                                              // [0x22b6930] Final|Native|Private 
	// Function /Script/ConZ.CustomZoneSettingsRegion.HandleDecreasePriorityButtonClicked
	void HandleDecreasePriorityButtonClicked();                                                                              // [0x22b6910] Final|Native|Private 
	// Function /Script/ConZ.CustomZoneSettingsRegion.GetDefaultZoneState
	EDefaultCustomZoneState GetDefaultZoneState();                                                                           // [0x22b66f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.CustomZoneSettingsRegionDetails
/// Size: 0x0108 (0x000260 - 0x000368)
class UCustomZoneSettingsRegionDetails : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x0260   (0x0050)  MISSED
	UEditableText*                                     _name;                                                      // 0x02B0   (0x0008)  
	UButton*                                           _buttonRestore;                                             // 0x02B8   (0x0008)  
	UCarouselWithLabel*                                _shape;                                                     // 0x02C0   (0x0008)  
	USpinBox*                                          _locationX;                                                 // 0x02C8   (0x0008)  
	USpinBox*                                          _locationY;                                                 // 0x02D0   (0x0008)  
	UTextBlock*                                        _textSize;                                                  // 0x02D8   (0x0008)  
	USpinBox*                                          _sizeX;                                                     // 0x02E0   (0x0008)  
	USpinBox*                                          _sizeY;                                                     // 0x02E8   (0x0008)  
	UTextBlock*                                        _textConfiguration;                                         // 0x02F0   (0x0008)  
	UButton*                                           _buttonOpenConfiguration;                                   // 0x02F8   (0x0008)  
	UButton*                                           _buttonNextConfiguration;                                   // 0x0300   (0x0008)  
	UButton*                                           _buttonPreviousConfiguration;                               // 0x0308   (0x0008)  
	UVerticalBox*                                      _eventDisplayContainer;                                     // 0x0310   (0x0008)  
	UClass*                                            _eventDisplayClass;                                         // 0x0318   (0x0008)  
	unsigned char                                      UnknownData01_6[0x48];                                      // 0x0320   (0x0048)  MISSED


	/// Functions
	// Function /Script/ConZ.CustomZoneSettingsRegionDetails.OpenConfiguration
	void OpenConfiguration();                                                                                                // [0x22b7170] Final|Native|Private 
	// Function /Script/ConZ.CustomZoneSettingsRegionDetails.IncrementConfiguration
	void IncrementConfiguration();                                                                                           // [0x22b6f30] Final|Native|Private 
	// Function /Script/ConZ.CustomZoneSettingsRegionDetails.HandleSizeChange
	void HandleSizeChange(float Value, TEnumAsByte<ETextCommit> CommitMethod);                                               // [0x22b6e60] Final|Native|Private 
	// Function /Script/ConZ.CustomZoneSettingsRegionDetails.HandleShapeChange
	void HandleShapeChange(int32_t oldValue, int32_t NewValue, UWidget* Source, EChangeSource changeSource);                 // [0x22b6d00] Final|Native|Private 
	// Function /Script/ConZ.CustomZoneSettingsRegionDetails.HandleRestoreClicked
	void HandleRestoreClicked();                                                                                             // [0x22b6c80] Final|Native|Private 
	// Function /Script/ConZ.CustomZoneSettingsRegionDetails.HandleNameChange
	void HandleNameChange(FText& Text, TEnumAsByte<ETextCommit> CommitMethod);                                               // [0x22b6b40] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.CustomZoneSettingsRegionDetails.HandleLocationChange
	void HandleLocationChange(float Value, TEnumAsByte<ETextCommit> CommitMethod);                                           // [0x22b6950] Final|Native|Private 
	// Function /Script/ConZ.CustomZoneSettingsRegionDetails.DecrementConfiguration
	void DecrementConfiguration();                                                                                           // [0x22b66d0] Final|Native|Private 
};

/// Class /Script/ConZ.CustomZoneSettingsRegionsList
/// Size: 0x0090 (0x000260 - 0x0002F0)
class UCustomZoneSettingsRegionsList : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x60];                                      // 0x0260   (0x0060)  MISSED
	UTextBlock*                                        _regionCountDisplay;                                        // 0x02C0   (0x0008)  
	UButton*                                           _buttonAddRegion;                                           // 0x02C8   (0x0008)  
	UScrollBox*                                        _scrollBox;                                                 // 0x02D0   (0x0008)  
	UClass*                                            _regionWidgetClass;                                         // 0x02D8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x02E0   (0x0010)  MISSED
};

/// Class /Script/ConZ.CustomZoneSettingsUIController
/// Size: 0x0248 (0x000028 - 0x000270)
class UCustomZoneSettingsUIController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x248];                                     // 0x0028   (0x0248)  MISSED
};

/// Class /Script/ConZ.CutObjectAction
/// Size: 0x0028 (0x0000A8 - 0x0000D0)
class UCutObjectAction : public UInteractionAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x00A8   (0x0028)  MISSED
};

/// Class /Script/ConZ.CuttingObjective
/// Size: 0x0030 (0x000330 - 0x000360)
class ACuttingObjective : public ARequirementObjective
{ 
public:
	TArray<TWeakObjectPtr>                             _targetMeshes;                                              // 0x0330   (0x0010)  
	bool                                               _specificItem;                                              // 0x0340   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0341   (0x0007)  MISSED
	UClass*                                            _itemToFound;                                               // 0x0348   (0x0008)  
	int32_t                                            _itemAmount;                                                // 0x0350   (0x0004)  
	unsigned char                                      UnknownData01_6[0xC];                                       // 0x0354   (0x000C)  MISSED
};

/// Class /Script/ConZ.DamageCustomization
/// Size: 0x0000 (0x000028 - 0x000028)
class UDamageCustomization : public UObject
{ 
public:
};

/// Class /Script/ConZ.DamageData
/// Size: 0x00D0 (0x000030 - 0x000100)
class UDamageData : public UDataAsset
{ 
public:
	FGameplayTag                                       DamageResponseTag;                                          // 0x0030   (0x0008)  
	FGameplayTag                                       GameEventTag;                                               // 0x0038   (0x0008)  
	FGameplayTag                                       IgnoreForStatsTag;                                          // 0x0040   (0x0008)  
	FGameplayTag                                       CauseHeadExplosionTag;                                      // 0x0048   (0x0008)  
	FGameplayTag                                       ApplyBleedingOnlyTag;                                       // 0x0050   (0x0008)  
	UDataTable*                                        WeaponDescTable;                                            // 0x0058   (0x0008)  
	TArray<FDamageTargetTypeMapping>                   DamageTargetTypeMap;                                        // 0x0060   (0x0010)  
	float                                              BurnDamageTemperatureThreshold;                             // 0x0070   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0074   (0x0004)  MISSED
	FRuntimeFloatCurve                                 BurnDamagePerSecondVsTemperature;                           // 0x0078   (0x0088)  
};

/// Class /Script/ConZ.DamageDealer
/// Size: 0x0000 (0x000028 - 0x000028)
class UDamageDealer : public UInterface
{ 
public:
};

/// Class /Script/ConZ.DamageDirectionIndicator
/// Size: 0x0048 (0x000028 - 0x000070)
class UDamageDirectionIndicator : public UObject
{ 
public:
	bool                                               Visible;                                                    // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0029   (0x0007)  MISSED
	UTexture*                                          Texture;                                                    // 0x0030   (0x0008)  
	float                                              Radius;                                                     // 0x0038   (0x0004)  
	float                                              OpacityMultiplier;                                          // 0x003C   (0x0004)  
	float                                              DefaultDelayDuration;                                       // 0x0040   (0x0004)  
	float                                              DefaultSustainDuration;                                     // 0x0044   (0x0004)  
	float                                              DefaultReleaseDuration;                                     // 0x0048   (0x0004)  
	unsigned char                                      UnknownData01_6[0x24];                                      // 0x004C   (0x0024)  MISSED
};

/// Class /Script/ConZ.DamageReceiver
/// Size: 0x0000 (0x000028 - 0x000028)
class UDamageReceiver : public UInterface
{ 
public:
};

/// Class /Script/ConZ.ScumPointDamageType
/// Size: 0x0000 (0x000040 - 0x000040)
class UScumPointDamageType : public UDamageType
{ 
public:
};

/// Class /Script/ConZ.ScumRadialDamageType
/// Size: 0x0000 (0x000040 - 0x000040)
class UScumRadialDamageType : public UDamageType
{ 
public:
};

/// Class /Script/ConZ.DamageStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UDamageStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.TrapItem
/// Size: 0x0150 (0x000910 - 0x000A60)
class ATrapItem : public AItem
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0910   (0x0030)  MISSED
	UBuriableTrapItemComponent*                        _buriableTrapItemComponent;                                 // 0x0940   (0x0008)  
	ETrapType                                          _trapType;                                                  // 0x0948   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0949   (0x0003)  MISSED
	float                                              _autoDestroyTimeWhenArmed;                                  // 0x094C   (0x0004)  
	float                                              _autoDestroyTimeWhenOwnerless;                              // 0x0950   (0x0004)  
	bool                                               _destroyAfterTriggered;                                     // 0x0954   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0955   (0x0003)  MISSED
	float                                              _destroyDelay;                                              // 0x0958   (0x0004)  
	bool                                               _canEverBeRefueled;                                         // 0x095C   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x095D   (0x0003)  MISSED
	UTrapRefuelItemTag*                                _refuelItemTag;                                             // 0x0960   (0x0008)  
	FVector                                            _triggerForwardVector;                                      // 0x0968   (0x000C)  
	float                                              _ragdollDuration;                                           // 0x0974   (0x0004)  
	bool                                               _isArmedByDefault;                                          // 0x0978   (0x0001)  
	bool                                               _shouldApplyPhysicalDamage;                                 // 0x0979   (0x0001)  
	unsigned char                                      UnknownData04_5[0x2];                                       // 0x097A   (0x0002)  MISSED
	FBox                                               _physicalDamageBoundsBox;                                   // 0x097C   (0x001C)  
	float                                              _actorDestructionDelay;                                     // 0x0998   (0x0004)  
	int32_t                                            _numRemainingDefuseAttempts;                                // 0x099C   (0x0004)  
	bool                                               _numRemainingDefuseAttemptsDependsOnSkill;                  // 0x09A0   (0x0001)  
	bool                                               _logTrapTriggered;                                          // 0x09A1   (0x0001)  
	bool                                               _hasFixedTrigger;                                           // 0x09A2   (0x0001)  
	unsigned char                                      UnknownData05_5[0x1];                                       // 0x09A3   (0x0001)  MISSED
	float                                              _minDamageForTrigger;                                       // 0x09A4   (0x0004)  
	bool                                               _triggeredByRadialDamage;                                   // 0x09A8   (0x0001)  
	bool                                               _triggerableWhenBuried;                                     // 0x09A9   (0x0001)  
	unsigned char                                      UnknownData06_5[0x2];                                       // 0x09AA   (0x0002)  MISSED
	float                                              _maxTriggerAngle;                                           // 0x09AC   (0x0004)  
	bool                                               _canEverShowTriggerVisuals;                                 // 0x09B0   (0x0001)  
	unsigned char                                      UnknownData07_5[0xF];                                       // 0x09B1   (0x000F)  MISSED
	FTransform                                         _triggerVisualTransform;                                    // 0x09C0   (0x0030)  
	UClass*                                            _minigameClass;                                             // 0x09F0   (0x0008)  
	UClass*                                            _minigameToolTag;                                           // 0x09F8   (0x0008)  
	unsigned char                                      UnknownData08_5[0x1];                                       // 0x0A00   (0x0001)  MISSED
	bool                                               _isDestroyed;                                               // 0x0A01   (0x0001)  
	unsigned char                                      UnknownData09_5[0x1E];                                      // 0x0A02   (0x001E)  MISSED
	bool                                               _isArmed;                                                   // 0x0A20   (0x0001)  
	bool                                               _wasTriggered;                                              // 0x0A21   (0x0001)  
	bool                                               _canBeTriggered;                                            // 0x0A22   (0x0001)  
	unsigned char                                      UnknownData10_5[0x11];                                      // 0x0A23   (0x0011)  MISSED
	ETrapTriggerType                                   _currentTrigger;                                            // 0x0A34   (0x0001)  
	unsigned char                                      UnknownData11_5[0x3];                                       // 0x0A35   (0x0003)  MISSED
	FDbIntegerId                                       _lastTriggerOwner;                                          // 0x0A38   (0x0008)  
	float                                              _quality;                                                   // 0x0A40   (0x0004)  
	unsigned char                                      UnknownData12_6[0x1C];                                      // 0x0A44   (0x001C)  MISSED


	/// Functions
	// Function /Script/ConZ.TrapItem.OnTriggerEvent
	void OnTriggerEvent(FTriggeredEventData& eventData);                                                                     // [0x23efc70] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.TrapItem.OnTrapDestroyTimer
	void OnTrapDestroyTimer();                                                                                               // [0x23efc50] Final|Native|Private 
	// Function /Script/ConZ.TrapItem.OnRep_WasTriggered
	void OnRep_WasTriggered();                                                                                               // [0x23efc30] Final|Native|Private 
	// Function /Script/ConZ.TrapItem.OnRep_LastTriggerOwner
	void OnRep_LastTriggerOwner();                                                                                           // [0x23efc10] Final|Native|Private 
	// Function /Script/ConZ.TrapItem.OnRep_IsDestroyed
	void OnRep_IsDestroyed();                                                                                                // [0x23efbf0] Final|Native|Private 
	// Function /Script/ConZ.TrapItem.OnRep_IsArmed
	void OnRep_IsArmed();                                                                                                    // [0x23efbd0] Final|Native|Private 
	// Function /Script/ConZ.TrapItem.OnRep_CurrentTrigger
	void OnRep_CurrentTrigger();                                                                                             // [0x23efbb0] Final|Native|Private 
	// Function /Script/ConZ.TrapItem.OnLocalPrisonerSpawned
	void OnLocalPrisonerSpawned(APrisoner* Prisoner);                                                                        // [0x23efb20] Final|Native|Public  
	// Function /Script/ConZ.TrapItem.OnActorDestroyTimer
	void OnActorDestroyTimer();                                                                                              // [0x23efb00] Final|Native|Private 
	// Function /Script/ConZ.TrapItem.NetMulticast_TriggerTrap
	void NetMulticast_TriggerTrap(FTrapTriggerParams Params);                                                                // [0x23efa60] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.TrapItem.Multicast_SetOnlyManualTrigger
	void Multicast_SetOnlyManualTrigger(bool onlyManualTrigger);                                                             // [0x22707a0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.TrapItem.IsBuried
	bool IsBuried();                                                                                                         // [0x23efa30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.TrapItem.IsArmed
	bool IsArmed();                                                                                                          // [0x23efa00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.TrapItem.BP_OnTriggered
	void BP_OnTriggered();                                                                                                   // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.TrapItem.BP_OnRefueled
	void BP_OnRefueled();                                                                                                    // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.TrapItem.BP_OnDisarmed
	void BP_OnDisarmed();                                                                                                    // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.TrapItem.BP_OnArmed
	void BP_OnArmed();                                                                                                       // [0x2859740] Event|Public|BlueprintEvent 
};

/// Class /Script/ConZ.DamagingTrapItem
/// Size: 0x0010 (0x000A60 - 0x000A70)
class ADamagingTrapItem : public ATrapItem
{ 
public:
	float                                              _initialDamageAmount;                                       // 0x0A60   (0x0004)  
	float                                              _damagePerSecond;                                           // 0x0A64   (0x0004)  
	UAkAudioEvent*                                     _triggerSound;                                              // 0x0A68   (0x0008)  
};

/// Class /Script/ConZ.DataSingleton
/// Size: 0x0D80 (0x000028 - 0x000DA8)
class UDataSingleton : public UObject
{ 
public:
	TArray<FProjectileImpulseMultiplier>               ImpulseMultipliers;                                         // 0x0028   (0x0010)  
	FCanvasIcon                                        CrosshairIconUp;                                            // 0x0038   (0x0018)  
	FCanvasIcon                                        CrosshairIconDown;                                          // 0x0050   (0x0018)  
	FCanvasIcon                                        CrosshairIconLeft;                                          // 0x0068   (0x0018)  
	FCanvasIcon                                        CrosshairIconRight;                                         // 0x0080   (0x0018)  
	FCanvasIcon                                        CrosshairIconCenter;                                        // 0x0098   (0x0018)  
	FCanvasIcon                                        CrosshairIconCenterThrowing;                                // 0x00B0   (0x0018)  
	FCanvasIcon                                        CrosshairBlockedIcon;                                       // 0x00C8   (0x0018)  
	FCanvasIcon                                        BowSpreadCircle;                                            // 0x00E0   (0x0018)  
	UTexture2D*                                        SingleFireIcon;                                             // 0x00F8   (0x0008)  
	UTexture2D*                                        AutoFireIcon;                                               // 0x0100   (0x0008)  
	UTexture2D*                                        BurstFireIcon;                                              // 0x0108   (0x0008)  
	float                                              WeaponSpreadBase;                                           // 0x0110   (0x0004)  
	FWeaponSpreadData                                  WeaponSpreadData;                                           // 0x0114   (0x0240)  
	float                                              BowArrowDeviationDegreesAngleByStep;                        // 0x0354   (0x0004)  
	FWeaponViewKickData                                WeaponViewKickData;                                         // 0x0358   (0x00D8)  
	float                                              WeaponAimingAutoCorrectAngle;                               // 0x0430   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0434   (0x0004)  MISSED
	FWeaponMalfunctionProbabilityCurves                WeaponMalfunctionProbabilityCurves;                         // 0x0438   (0x03B8)  
	float                                              UpperBoundStaminaAmountToDrain;                             // 0x07F0   (0x0004)  
	float                                              LowerBoundWeaponWeightForStaminaDrain;                      // 0x07F4   (0x0004)  
	float                                              UpperBoundWeaponWeightForStaminaDrain;                      // 0x07F8   (0x0004)  
	FFloatInterval                                     FOVFirstPersonMultiplierRange;                              // 0x07FC   (0x0008)  
	FFloatInterval                                     FOVThirdPersonMultiplierRange;                              // 0x0804   (0x0008)  
	FFloatInterval                                     FOVFirstPersonDrivingMultiplierRange;                       // 0x080C   (0x0008)  
	FFloatInterval                                     FOVThirdPersonDrivingMultiplierRange;                       // 0x0814   (0x0008)  
	float                                              WeaponFOVWhileScoping;                                      // 0x081C   (0x0004)  
	UCurveFloat*                                       DownTheSightsModeLerpCurve;                                 // 0x0820   (0x0008)  
	UMaterialParameterCollection*                      WeaponFOVParameterCollection;                               // 0x0828   (0x0008)  
	FFloatInterval                                     LoadMagazineSpeedModifierSkillFactor;                       // 0x0830   (0x0008)  
	FFloatInterval                                     LoadMagazineSpeedModifierDexterityFactor;                   // 0x0838   (0x0008)  
	FCanvasIcon                                        InteractIcon;                                               // 0x0840   (0x0018)  
	FCanvasIcon                                        BondageIcon;                                                // 0x0858   (0x0018)  
	UInputDataAsset*                                   DefaultInputData;                                           // 0x0870   (0x0008)  
	UDerivedWidgetsData*                               Widgets;                                                    // 0x0878   (0x0008)  
	UMaterialInterface*                                PlaceablePrimaryMatValid;                                   // 0x0880   (0x0008)  
	UMaterialInterface*                                PlaceablePrimaryMatInvalid;                                 // 0x0888   (0x0008)  
	UMaterialInterface*                                PlaceablePrimaryMatFriendlyFlag;                            // 0x0890   (0x0008)  
	UMaterialInterface*                                PlaceableOutlineMat;                                        // 0x0898   (0x0008)  
	UMaterialInterface*                                PlaceableDepthMat;                                          // 0x08A0   (0x0008)  
	UMaterialInterface*                                PlaceableMaterialRadiusSphere;                              // 0x08A8   (0x0008)  
	UMaterialInterface*                                ItemPlacementMatValid;                                      // 0x08B0   (0x0008)  
	UMaterialInterface*                                ItemPlacementMatInvalid;                                    // 0x08B8   (0x0008)  
	UMaterialInterface*                                WidgetMaterial;                                             // 0x08C0   (0x0008)  
	UBaseItemTag*                                      ToolBoxItemTag;                                             // 0x08C8   (0x0008)  
	UBaseItemTag*                                      MushroomItemTag;                                            // 0x08D0   (0x0008)  
	UBaseItemTag*                                      AlcoholItemTag;                                             // 0x08D8   (0x0008)  
	UBaseItemTag*                                      SoapItemTag;                                                // 0x08E0   (0x0008)  
	TWeakObjectPtr<UClass*>                            AnimalSkinItemClass;                                        // 0x08E8   (0x0028)  
	UTrapData*                                         TrapData;                                                   // 0x0910   (0x0008)  
	TWeakObjectPtr<UClass*>                            DogTagItemClass;                                            // 0x0918   (0x0028)  
	TMap<TWeakObjectPtr, TWeakObjectPtr>               ClothesItemChoppingRecipeIngredientsClassesToReplaceWhenDirty; // 0x0940   (0x0050)  
	UDataTable*                                        ItemGeneralParametersDataTable;                             // 0x0990   (0x0008)  
	TWeakObjectPtr<UDataTable*>                        ItemSpawningParametersTable;                                // 0x0998   (0x0028)  
	TEnumAsByte<ECollisionChannel>                     ItemObstructionCollisionChannel;                            // 0x09C0   (0x0001)  
	bool                                               ShouldTraceComplexCollisionForItemObstruction;              // 0x09C1   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x09C2   (0x0006)  MISSED
	TSet<FPrimaryAssetId>                              AssetsHiddenFromAdminCommands;                              // 0x09C8   (0x0050)  
	UMissionDataGroup*                                 MissonDataGroup;                                            // 0x0A18   (0x0008)  
	UDialogueData*                                     DialogueData;                                               // 0x0A20   (0x0008)  
	USoundClass*                                       VoiceSoundClass;                                            // 0x0A28   (0x0008)  
	UNetworkDataIdAsset*                               NetworkDataIdAsset;                                         // 0x0A30   (0x0008)  
	UWashClothesData*                                  WashClothesData;                                            // 0x0A38   (0x0008)  
	UDecontaminateData*                                DecontaminateData;                                          // 0x0A40   (0x0008)  
	UBuryData*                                         BuryData;                                                   // 0x0A48   (0x0008)  
	UEmblemData*                                       SquadEmblemData;                                            // 0x0A50   (0x0008)  
	UMaterialInterface*                                ItemTetrisMaterial;                                         // 0x0A58   (0x0008)  
	UPhysicalSurfacesEffectsData*                      PhysicalSurfaceEffectsData;                                 // 0x0A60   (0x0008)  
	UTexture2D*                                        ChestLockedIcon;                                            // 0x0A68   (0x0008)  
	UTexture2D*                                        ChestUnlockedIcon;                                          // 0x0A70   (0x0008)  
	UAkAudioEvent*                                     ChestLockingSound;                                          // 0x0A78   (0x0008)  
	UClass*                                            UIData;                                                     // 0x0A80   (0x0008)  
	UParticleSystem*                                   WaterSplashParticleSystem;                                  // 0x0A88   (0x0008)  
	UAkAudioEvent*                                     WaterSplashAudioEvent;                                      // 0x0A90   (0x0008)  
	USurfaceHardnessData*                              SurfaceHardnessData;                                        // 0x0A98   (0x0008)  
	UDamageData*                                       DamageData;                                                 // 0x0AA0   (0x0008)  
	UClass*                                            DefaultDamageCustomizationClass;                            // 0x0AA8   (0x0008)  
	UClass*                                            LandingDamageCustomizationClass;                            // 0x0AB0   (0x0008)  
	TWeakObjectPtr<UClass*>                            BackpackCharacterMeshClass;                                 // 0x0AB8   (0x0028)  
	UClass*                                            RainWaterResourceClass;                                     // 0x0AE0   (0x0008)  
	TArray<FGameResourceMixingRule>                    GameResourceMixingRules;                                    // 0x0AE8   (0x0010)  
	TEnumAsByte<EPhysicalSurface>                      WaterSurfaceType;                                           // 0x0AF8   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0AF9   (0x0007)  MISSED
	UAkAudioEvent*                                     TransactionCompleteSound;                                   // 0x0B00   (0x0008)  
	unsigned char                                      UnknownData03_5[0xE8];                                      // 0x0B08   (0x00E8)  MISSED
	FGameplayTag                                       GenderEnumVsGenderTagMapping;                               // 0x0BF0   (0x0018)  
	UClass*                                            SurgeryRoomClass;                                           // 0x0C08   (0x0008)  
	UClass*                                            BarberShopClass;                                            // 0x0C10   (0x0008)  
	UClass*                                            DefaultPrisonerCommonData;                                  // 0x0C18   (0x0008)  
	UPrisonerAppearanceSetDataAsset*                   PrisonerAppearanceSet;                                      // 0x0C20   (0x0008)  
	UCookingCommonData*                                CookingCommonData;                                          // 0x0C28   (0x0008)  
	UCookingRecipeRegistry*                            CookingRecipeRegistry;                                      // 0x0C30   (0x0008)  
	UWeaponPaintjobCommonData*                         WeaponPaintjobCommonData;                                   // 0x0C38   (0x0008)  
	TWeakObjectPtr<UDataTable*>                        CookingUtilityUIDataTable;                                  // 0x0C40   (0x0028)  
	UFamePointSettings*                                FamePointSettings;                                          // 0x0C68   (0x0008)  
	TArray<FPrimaryAssetId>                            AlwaysFunctioningVehicles;                                  // 0x0C70   (0x0010)  
	UClass*                                            DefaultEntitySystemSettings;                                // 0x0C80   (0x0008)  
	unsigned char                                      UnknownData04_5[0x58];                                      // 0x0C88   (0x0058)  MISSED
	UDataTable*                                        _cookingUtilityTagToUIDataTable;                            // 0x0CE0   (0x0008)  
	float                                              _noiseLevelValues;                                          // 0x0CE8   (0x0018)  
	FAITeamAttitudeData                                _teamAttitudes;                                             // 0x0D00   (0x0040)  
	unsigned char                                      UnknownData05_5[0x58];                                      // 0x0D40   (0x0058)  MISSED
	UDataTable*                                        _economyTradeablesDataTable;                                // 0x0D98   (0x0008)  
	UEconomySpecificData*                              _economySpecificData;                                       // 0x0DA0   (0x0008)  
};

/// Class /Script/ConZ.DbConnection
/// Size: 0x0028 (0x000028 - 0x000050)
class UDbConnection : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0028   (0x0028)  MISSED
};

/// Class /Script/ConZ.DbStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UDbStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.VehicleBaseSavePreDbV183
/// Size: 0x0040 (0x000028 - 0x000068)
class UVehicleBaseSavePreDbV183 : public UObject
{ 
public:
	int64_t                                            LastAccessTime;                                             // 0x0028   (0x0008)  
	float                                              TimeUntilDestructionInSeconds;                              // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	uint64_t                                           PackedSimulationState;                                      // 0x0038   (0x0008)  
	float                                              Mileage;                                                    // 0x0040   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0044   (0x0004)  MISSED
	TArray<FVehicleAttachmentSave>                     VehicleAttachments;                                         // 0x0048   (0x0010)  
	FVector                                            LastSteadyLocation;                                         // 0x0058   (0x000C)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0064   (0x0004)  MISSED
};

/// Class /Script/ConZ.DcxWheeledVehicle
/// Size: 0x02B0 (0x000B30 - 0x000DE0)
class ADcxWheeledVehicle : public AVehicleBase
{ 
public:
	unsigned char                                      UnknownData00_2[0x28];                                      // 0x0B30   (0x0028)  MISSED
	UDcxVehicleDriveComponent*                         _driveComponent;                                            // 0x0B58   (0x0008)  
	UVehicleDoorsComponent*                            _doorsComponent;                                            // 0x0B60   (0x0008)  
	UDcxWheeledVehicleEffectsComponent*                _effectsComponent;                                          // 0x0B68   (0x0008)  
	unsigned char                                      UnknownData01_5[0x54];                                      // 0x0B70   (0x0054)  MISSED
	FGameplayTag                                       _ignitionStartEventDeviceControlTag;                        // 0x0BC4   (0x0008)  
	FGameplayTag                                       _ignitionEndEventDeviceControlTag;                          // 0x0BCC   (0x0008)  
	FGameplayTag                                       _brakeLightsEnableDeviceControlTag;                         // 0x0BD4   (0x0008)  
	FGameplayTag                                       _brakeLightsDisableDeviceControlTag;                        // 0x0BDC   (0x0008)  
	FGameplayTag                                       _reverseLightsEnableDeviceControlTag;                       // 0x0BE4   (0x0008)  
	FGameplayTag                                       _reverseLightsDisableDeviceControlTag;                      // 0x0BEC   (0x0008)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0BF4   (0x0004)  MISSED
	int32_t                                            _minimumNumberOfWheelsToBeDriven;                           // 0x0BF8   (0x0004)  
	int32_t                                            _minimumNumberOfWheelsToBePushed;                           // 0x0BFC   (0x0004)  
	float                                              _minPushStartVelocity;                                      // 0x0C00   (0x0004)  
	float                                              _minPushStartVelocityIgnition;                              // 0x0C04   (0x0004)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x0C08   (0x0008)  MISSED
	UAkAudioEvent*                                     _hornStartAudioEvent;                                       // 0x0C10   (0x0008)  
	UAkAudioEvent*                                     _hornStopAudioEvent;                                        // 0x0C18   (0x0008)  
	float                                              _maxPushForce;                                              // 0x0C20   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x0C24   (0x0004)  MISSED
	float                                              _minPushForce;                                              // 0x0C28   (0x0004)  
	float                                              _maxPushForcePerPusher;                                     // 0x0C2C   (0x0004)  
	float                                              _minPushStartForce;                                         // 0x0C30   (0x0004)  
	unsigned char                                      UnknownData05_5[0x4];                                       // 0x0C34   (0x0004)  MISSED
	UCurveFloat*                                       _speedToPushForceCurve;                                     // 0x0C38   (0x0008)  
	float                                              _maxLinearVelocityWhenPushing;                              // 0x0C40   (0x0004)  
	float                                              _maxAllowedDistanceFromPushStartingPlayer;                  // 0x0C44   (0x0004)  
	FRuntimeFloatCurve                                 _pusherActionDifficultyVsSpeed;                             // 0x0C48   (0x0088)  
	FRuntimeFloatCurve                                 _pusherBaseStrengthChangeRateSpeedInfluenceVsSpeed;         // 0x0CD0   (0x0088)  
	FRuntimeFloatCurve                                 _pusherBaseConstitutionChangeRateModifierVsSpeed;           // 0x0D58   (0x0088)  


	/// Functions
	// Function /Script/ConZ.DcxWheeledVehicle.UpdateHandlingParametersOnClient
	void UpdateHandlingParametersOnClient(float WheelSteeringLerpSpeedMultiplier, float engineIgnitionDurationMultiplier, float engineIgnitionFailureChance, float gearboxGearChangeDelayMultiplier, float gearboxGearUpRatioMultiplier, float gearboxGearDownRatioMultiplier); // [0x22be4d0] Net|NetReliableNative|Event|NetMulticast|Public 
};

/// Class /Script/ConZ.DcxWheeledVehicle4W
/// Size: 0x0010 (0x000DE0 - 0x000DF0)
class ADcxWheeledVehicle4W : public ADcxWheeledVehicle
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0DE0   (0x0010)  MISSED
};

/// Class /Script/ConZ.DcxBike
/// Size: 0x0040 (0x000DF0 - 0x000E30)
class ADcxBike : public ADcxWheeledVehicle4W
{ 
public:
	bool                                               _shouldApplyStabilization;                                  // 0x0DEC   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0DED   (0x0003)  MISSED
	FVector                                            _centerOfMassOffset;                                        // 0x0DF0   (0x000C)  
	FVector                                            _centerOfMassOffsetNotMounted;                              // 0x0DFC   (0x000C)  
	float                                              _angVelXDamping;                                            // 0x0E08   (0x0004)  
	float                                              _angVelYDamping;                                            // 0x0E0C   (0x0004)  
	float                                              _angVelZDamping;                                            // 0x0E10   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0E14   (0x0004)  MISSED
	float                                              _bicycleDriftAmount;                                        // 0x0E18   (0x0004)  
	float                                              _bicycleDriftLeanAmount;                                    // 0x0E1C   (0x0004)  
	float                                              _impactSpeedForUnmount;                                     // 0x0E20   (0x0004)  
	unsigned char                                      UnknownData02_6[0xC];                                       // 0x0E24   (0x000C)  MISSED
};

/// Class /Script/ConZ.DcxBicycle
/// Size: 0x0080 (0x000E30 - 0x000EB0)
class ADcxBicycle : public ADcxBike
{ 
public:
	float                                              _baseStrengthChangeRate;                                    // 0x0E30   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0E34   (0x0004)  MISSED
	UCurveFloat*                                       _strengthChangeRateFactorVsVehicleSpeedKmh;                 // 0x0E38   (0x0008)  
	UCurveFloat*                                       _strengthChangeRateFactorVsGroundSlope;                     // 0x0E40   (0x0008)  
	float                                              _baseConstitutionChangeRate;                                // 0x0E48   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0E4C   (0x0004)  MISSED
	UCurveFloat*                                       _constitutionChangeRateFactorVsVehicleSpeedKmh;             // 0x0E50   (0x0008)  
	UCurveFloat*                                       _constitutionChangeRateFactorVsGroundSlope;                 // 0x0E58   (0x0008)  
	UCurveFloat*                                       _runningSkillExperienceGainRateFactorVsVehicleSpeedKmh;     // 0x0E60   (0x0008)  
	UCurveFloat*                                       _runningSkillExperienceGainRateFactorVsGroundSlope;         // 0x0E68   (0x0008)  
	float                                              _baseEnduranceSkillExperienceGainRate;                      // 0x0E70   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0E74   (0x0004)  MISSED
	UCurveFloat*                                       _enduranceSkillExperienceGainRateFactorVsVehicleSpeedKmh;   // 0x0E78   (0x0008)  
	UCurveFloat*                                       _enduranceSkillExperienceGainRateFactorVsGroundSlope;       // 0x0E80   (0x0008)  
	float                                              _baseActionDifficulty;                                      // 0x0E88   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x0E8C   (0x0004)  MISSED
	UCurveFloat*                                       _actionDifficultyFactorVsVehicleSpeedKmh;                   // 0x0E90   (0x0008)  
	UCurveFloat*                                       _actionDifficultyFactorVsGroundSlope;                       // 0x0E98   (0x0008)  
	float                                              _speedThresholdForAINoise;                                  // 0x0EA0   (0x0004)  
	unsigned char                                      UnknownData04_6[0xC];                                       // 0x0EA4   (0x000C)  MISSED
};

/// Class /Script/ConZ.DcxBikeAnimInstance
/// Size: 0x0050 (0x000A50 - 0x000AA0)
class UDcxBikeAnimInstance : public UDcxVehicleAnimInstance
{ 
public:
	float                                              RPM;                                                        // 0x0A48   (0x0004)  
	float                                              Speed;                                                      // 0x0A4C   (0x0004)  
	float                                              SpeedKph;                                                   // 0x0A50   (0x0004)  
	float                                              SteerRotation;                                              // 0x0A54   (0x0004)  
	float                                              SteerAmount;                                                // 0x0A58   (0x0004)  
	float                                              ThrottleAmount;                                             // 0x0A5C   (0x0004)  
	float                                              BrakeAmount;                                                // 0x0A60   (0x0004)  
	FRotator                                           FrontWheelRotator;                                          // 0x0A64   (0x000C)  
	FRotator                                           RearWheelRotator;                                           // 0x0A70   (0x000C)  
	FRotator                                           TransmissionRotator;                                        // 0x0A7C   (0x000C)  
	float                                              FrontSuspensionOffset;                                      // 0x0A88   (0x0004)  
	float                                              RearSuspensionRotation;                                     // 0x0A8C   (0x0004)  
	FVector                                            MeshLocation;                                               // 0x0A90   (0x000C)  
	bool                                               IsMounteeDriver;                                            // 0x0A9C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0A9D   (0x0003)  MISSED
};

/// Class /Script/ConZ.DcxBicycleAnimInstance
/// Size: 0x0000 (0x000AA0 - 0x000AA0)
class UDcxBicycleAnimInstance : public UDcxBikeAnimInstance
{ 
public:
};

/// Class /Script/ConZ.DcxBikeDriverMountSlot
/// Size: 0x00A0 (0x000140 - 0x0001E0)
class UDcxBikeDriverMountSlot : public UVehicleBaseMountSlot
{ 
public:
	FName                                              DriverLHandleSocketName;                                    // 0x0140   (0x0008)  
	FName                                              DriverRHandleSocketName;                                    // 0x0148   (0x0008)  
	FName                                              DriverReverseSeatHandSocketName;                            // 0x0150   (0x0008)  
	UBlendSpace*                                       _forwardIdleAnimation;                                      // 0x0158   (0x0008)  
	UAnimSequenceBase*                                 _forwardSteeringAnimation;                                  // 0x0160   (0x0008)  
	UAnimSequenceBase*                                 _forwardSteeringAnimationFP;                                // 0x0168   (0x0008)  
	UBlendSpace*                                       _reverseIdleAnimation;                                      // 0x0170   (0x0008)  
	UAnimSequenceBase*                                 _reverseSteeringAnimation;                                  // 0x0178   (0x0008)  
	UAnimSequenceBase*                                 _reverseSteeringAnimationFP;                                // 0x0180   (0x0008)  
	UAnimSequence*                                     _standUpStartAnimation;                                     // 0x0188   (0x0008)  
	UAnimSequence*                                     _standUpLoopAnimation;                                      // 0x0190   (0x0008)  
	UAnimSequence*                                     _standUpEndAnimation;                                       // 0x0198   (0x0008)  
	UAnimSequence*                                     _startEngineStartAnimation;                                 // 0x01A0   (0x0008)  
	UAnimSequence*                                     _startEngineLoopAnimation;                                  // 0x01A8   (0x0008)  
	UAnimSequence*                                     _startEngineLongLoopAnimation;                              // 0x01B0   (0x0008)  
	UAnimSequence*                                     _startEngineEndAnimation;                                   // 0x01B8   (0x0008)  
	UAimOffsetBlendSpace*                              _turnAimOffset;                                             // 0x01C0   (0x0008)  
	float                                              _playratePerMovementPace;                                   // 0x01C8   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x01D8   (0x0008)  MISSED
};

/// Class /Script/ConZ.DcxBikePassengerMountSlot
/// Size: 0x0000 (0x000140 - 0x000140)
class UDcxBikePassengerMountSlot : public UVehicleBaseMountSlot
{ 
public:
};

/// Class /Script/ConZ.DcxBicycleDriverMountSlot
/// Size: 0x0000 (0x0001E0 - 0x0001E0)
class UDcxBicycleDriverMountSlot : public UDcxBikeDriverMountSlot
{ 
public:
};

/// Class /Script/ConZ.DcxMotorcycle
/// Size: 0x0000 (0x000E30 - 0x000E30)
class ADcxMotorcycle : public ADcxBike
{ 
public:
};

/// Class /Script/ConZ.DcxMotorcycleAnimInstance
/// Size: 0x0000 (0x000AA0 - 0x000AA0)
class UDcxMotorcycleAnimInstance : public UDcxBikeAnimInstance
{ 
public:
};

/// Class /Script/ConZ.DcxWheeledVehicleAnimInstance
/// Size: 0x0040 (0x000A50 - 0x000A90)
class UDcxWheeledVehicleAnimInstance : public UDcxVehicleAnimInstance
{ 
public:
	EVehicleEngineState                                EngineState;                                                // 0x0A48   (0x0001)  
	bool                                               IsEngineRunning;                                            // 0x0A49   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0A4A   (0x0002)  MISSED
	float                                              EngineRpm;                                                  // 0x0A4C   (0x0004)  
	float                                              EngineRpmInterpSpeed;                                       // 0x0A50   (0x0004)  
	float                                              Speed;                                                      // 0x0A54   (0x0004)  
	float                                              SpeedKph;                                                   // 0x0A58   (0x0004)  
	float                                              MaxSteeringWheelSteerAngle;                                 // 0x0A5C   (0x0004)  
	float                                              SteeringWheelSteerAngleInterpSpeed;                         // 0x0A60   (0x0004)  
	float                                              CurrentSteeringWheelSteerAngle;                             // 0x0A64   (0x0004)  
	TArray<float>                                      DoorOpenPercentage;                                         // 0x0A68   (0x0010)  
	TArray<float>                                      DoorWindowOpenPercentage;                                   // 0x0A78   (0x0010)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0A88   (0x0008)  MISSED
};

/// Class /Script/ConZ.DcxWheeledVehicleDriveComponent4W
/// Size: 0x0098 (0x000408 - 0x0004A0)
class UDcxWheeledVehicleDriveComponent4W : public UDcxVehicleDriveComponent4W
{ 
public:
	FRuntimeFloatCurve                                 _maxArtificialBrakingForceVsSpeedKph;                       // 0x0408   (0x0088)  
	TArray<FDcxWheeledVehicleFlatTireWheelConfiguration> _flatTireWheelConfigurations;                             // 0x0490   (0x0010)  


	/// Functions
	// Function /Script/ConZ.DcxWheeledVehicleDriveComponent4W.InflateWheelTire
	void InflateWheelTire(int32_t WheelIndex);                                                                               // [0x22bd900] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.DcxWheeledVehicleDriveComponent4W.GetEngineLoad
	float GetEngineLoad();                                                                                                   // [0x22bd8d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.DcxWheeledVehicleDriveComponent4W.DeflateWheelTire
	void DeflateWheelTire(int32_t WheelIndex);                                                                               // [0x22bd800] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.DcxWheeledVehicleEffectsComponent
/// Size: 0x0078 (0x0000B0 - 0x000128)
class UDcxWheeledVehicleEffectsComponent : public UActorComponent
{ 
public:
	float                                              _soundCullDistance;                                         // 0x00B0   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00B4   (0x0004)  MISSED
	UAkAudioEvent*                                     _chassisStartedMovingAudioEvent;                            // 0x00B8   (0x0008)  
	UAkAudioEvent*                                     _chassisStoppedMovingAudioEvent;                            // 0x00C0   (0x0008)  
	float                                              _speedOfSoundMultiplerForDoppler;                           // 0x00C8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x00CC   (0x0004)  MISSED
	UTireToSurfaceAudioData*                           _tireToSurfaceAudioData;                                    // 0x00D0   (0x0008)  
	int32_t                                            _numAudioObjectsForTires;                                   // 0x00D8   (0x0004)  
	unsigned char                                      UnknownData02_5[0x24];                                      // 0x00DC   (0x0024)  MISSED
	float                                              _tireEffectUpdateRange;                                     // 0x0100   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x0104   (0x0004)  MISSED
	TArray<FDcxWheeledVehicleTireEffectProperties>     _tireEffectProperties;                                      // 0x0108   (0x0010)  
	unsigned char                                      UnknownData04_6[0x10];                                      // 0x0118   (0x0010)  MISSED
};

/// Class /Script/ConZ.DcxWheeledVehicleTire
/// Size: 0x0028 (0x0000E0 - 0x000108)
class UDcxWheeledVehicleTire : public UDcxVehicleTire
{ 
public:
	FDcxVehicleTireParticleData                        ParticleTrail;                                              // 0x00E0   (0x0014)  
	FDcxVehicleTireParticleData                        ParticleWave;                                               // 0x00F4   (0x0014)  
};

/// Class /Script/ConZ.DeathmatchParticipantStats
/// Size: 0x0010 (0x000048 - 0x000058)
class UDeathmatchParticipantStats : public UGameEventParticipantStats
{ 
public:
	float                                              LongestHeadshot;                                            // 0x0048   (0x0004)  
	int32_t                                            MeleeKills;                                                 // 0x004C   (0x0004)  
	float                                              LongestLife;                                                // 0x0050   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0054   (0x0004)  MISSED
};

/// Class /Script/ConZ.DeathmatchGameEvent
/// Size: 0x0020 (0x000560 - 0x000580)
class ADeathmatchGameEvent : public AGameEventBase
{ 
public:
	FDeathmatchParameters                              _deathmatchParameters;                                      // 0x0560   (0x0014)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x0574   (0x000C)  MISSED


	/// Functions
	// Function /Script/ConZ.DeathmatchGameEvent.SetDeathmatchParameters
	void SetDeathmatchParameters(FDeathmatchParameters& Params);                                                             // [0x22be430] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.DeathmatchGameEvent.RestrictGameEventArea
	void RestrictGameEventArea();                                                                                            // [0x22bd9b0] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.DeathmatchGameEvent.GetDeathmatchParameters
	FDeathmatchParameters GetDeathmatchParameters();                                                                         // [0x22bd890] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.DeathmatchLocationMarker
/// Size: 0x0028 (0x000418 - 0x000440)
class ADeathmatchLocationMarker : public AGameEventLocationMarker
{ 
public:
	FDeathmatchParameters                              DeathmatchParameters;                                       // 0x0418   (0x0014)  
	FVector                                            FocusOffset;                                                // 0x042C   (0x000C)  
	float                                              MinimalRadius;                                              // 0x0438   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x043C   (0x0004)  MISSED
};

/// Class /Script/ConZ.DebugRpcChannel
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UDebugRpcChannel : public UActorComponent
{ 
public:
};

/// Class /Script/ConZ.DecontaminateData
/// Size: 0x0018 (0x000030 - 0x000048)
class UDecontaminateData : public UDataAsset
{ 
public:
	UClass*                                            SkillToIncrease;                                            // 0x0030   (0x0008)  
	float                                              SkillIncreaseAmount;                                        // 0x0038   (0x0004)  
	float                                              SkillIncreaseModifier;                                      // 0x003C   (0x0004)  
	float                                              RadiationDecontaminationAmountPerSoapUse;                   // 0x0040   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Class /Script/ConZ.DedicatedServerRequest
/// Size: 0x00C0 (0x000028 - 0x0000E8)
class UDedicatedServerRequest : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0xC0];                                      // 0x0028   (0x00C0)  MISSED
};

/// Class /Script/ConZ.DedicatedServerResponse
/// Size: 0x00A8 (0x000028 - 0x0000D0)
class UDedicatedServerResponse : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0028   (0x0030)  MISSED
	UDbConnection*                                     _dbConnection;                                              // 0x0058   (0x0008)  
	unsigned char                                      UnknownData01_6[0x70];                                      // 0x0060   (0x0070)  MISSED
};

/// Class /Script/ConZ.Deer2
/// Size: 0x0040 (0x000B10 - 0x000B50)
class ADeer2 : public AComplexAnimal2
{ 
public:
	float                                              _hartBaseScale;                                             // 0x0B08   (0x0004)  
	float                                              _hartScaleVariance;                                         // 0x0B0C   (0x0004)  
	float                                              _hindBaseScale;                                             // 0x0B10   (0x0004)  
	float                                              _hindScaleVariance;                                         // 0x0B14   (0x0004)  
	float                                              _maleChance;                                                // 0x0B18   (0x0004)  
	bool                                               _isMale;                                                    // 0x0B1C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0B1D   (0x0003)  MISSED
	USkeletalMesh*                                     _maleSkeletalMesh;                                          // 0x0B20   (0x0008)  
	TArray<UStaticMesh*>                               _antlerMeshes;                                              // 0x0B28   (0x0010)  
	UStaticMeshComponent*                              _antlers;                                                   // 0x0B38   (0x0008)  
	uint32_t                                           _hartHind;                                                  // 0x0B40   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0B44   (0x0004)  MISSED
	UChoppingRecipeDataAsset*                          _maleChoppingRecipeDataAsset;                               // 0x0B48   (0x0008)  


	/// Functions
	// Function /Script/ConZ.Deer2.OnRep_HartHind
	void OnRep_HartHind();                                                                                                   // [0x22bd990] Final|Native|Private 
};

/// Class /Script/ConZ.DefaultDamageCustomization
/// Size: 0x0058 (0x000028 - 0x000080)
class UDefaultDamageCustomization : public UDamageCustomization
{ 
public:
	TArray<FPrisonerInjuryTypeLikelihoods>             PrisonerInjuryTypeLikelihoodsPerBodyPart;                   // 0x0028   (0x0010)  
	TArray<float>                                      PrisonerBleedingSeverityEnergyThreshold;                    // 0x0038   (0x0010)  
	float                                              PrisonerDamageMultiplierPerBodyPart;                        // 0x0048   (0x0030)  
	float                                              StaminaDrainPerHundredJoules;                               // 0x0078   (0x0004)  
	float                                              HeadshotInstantKillEnergyThreshold;                         // 0x007C   (0x0004)  
};

/// Class /Script/ConZ.DefusingCuttingToolItemTag
/// Size: 0x0010 (0x000030 - 0x000040)
class UDefusingCuttingToolItemTag : public UBaseItemTag
{ 
public:
	USkeletalMesh*                                     SkeletalMesh;                                               // 0x0030   (0x0008)  
	UAnimMontage*                                      Montage;                                                    // 0x0038   (0x0008)  
};

/// Class /Script/ConZ.DemolitionSkill
/// Size: 0x02B0 (0x0000B0 - 0x000360)
class UDemolitionSkill : public UDexteritySkill
{ 
public:
	FDemolitionSkillExperienceAwards                   NoSkillExperienceAwards;                                    // 0x00B0   (0x0020)  
	FDemolitionSkillExperienceAwards                   BasicSkillExperienceAwards;                                 // 0x00D0   (0x0020)  
	FDemolitionSkillExperienceAwards                   MediumSkillExperienceAwards;                                // 0x00F0   (0x0020)  
	FDemolitionSkillExperienceAwards                   AdvancedSkillExperienceAwards;                              // 0x0110   (0x0020)  
	FDemolitionSkillExperienceAwards                   AboveAdvancedSkillExperienceAwards;                         // 0x0130   (0x0020)  
	FDemolitionSkillParametersPerSkillLevel            NoSkillParameters;                                          // 0x0150   (0x0068)  
	FDemolitionSkillParametersPerSkillLevel            BasicSkillParameters;                                       // 0x01B8   (0x0068)  
	FDemolitionSkillParametersPerSkillLevel            MediumSkillParameters;                                      // 0x0220   (0x0068)  
	FDemolitionSkillParametersPerSkillLevel            AdvancedSkillParameters;                                    // 0x0288   (0x0068)  
	FDemolitionSkillParametersPerSkillLevel            AboveAdvancedSkillParameters;                               // 0x02F0   (0x0068)  
	float                                              _practiceTrapExperienceAwardBaseDuration;                   // 0x0358   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x035C   (0x0004)  MISSED
};

/// Class /Script/ConZ.DepotItemState
/// Size: 0x0020 (0x000100 - 0x000120)
class UDepotItemState : public UItemState
{ 
public:
	FDbIntegerId                                       OwnerUserProfileId;                                         // 0x0100   (0x0008)  
	FString                                            TraderPersistentId;                                         // 0x0108   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0118   (0x0008)  MISSED
};

/// Class /Script/ConZ.DepotItemUserData
/// Size: 0x0020 (0x000028 - 0x000048)
class UDepotItemUserData : public UVirtualizedItemUserData
{ 
public:
	FDbIntegerId                                       OwnerUserProfileId;                                         // 0x0028   (0x0008)  
	FString                                            TraderPersistentId;                                         // 0x0030   (0x0010)  
	bool                                               ShouldClearContents;                                        // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0041   (0x0007)  MISSED
};

/// Class /Script/ConZ.DepotItem
/// Size: 0x0020 (0x000A30 - 0x000A50)
class ADepotItem : public AChestItem
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0A30   (0x0018)  MISSED
	ATradePost*                                        _assignedTradePost;                                         // 0x0A48   (0x0008)  
};

/// Class /Script/ConZ.DerivedWidgetsData
/// Size: 0x01E8 (0x000030 - 0x000218)
class UDerivedWidgetsData : public UDataAsset
{ 
public:
	UClass*                                            AvailableItem;                                              // 0x0030   (0x0008)  
	UClass*                                            WorldCraftingMarker;                                        // 0x0038   (0x0008)  
	UClass*                                            LoadingScreen;                                              // 0x0040   (0x0008)  
	UClass*                                            InteractionWidgetClass;                                     // 0x0048   (0x0008)  
	UClass*                                            InteractionGroupWidgetClass;                                // 0x0050   (0x0008)  
	UClass*                                            InteractionContainerWidgetClass;                            // 0x0058   (0x0008)  
	UClass*                                            ItemWidgetClass;                                            // 0x0060   (0x0008)  
	UClass*                                            InventorySlotWidgetClass;                                   // 0x0068   (0x0008)  
	UClass*                                            WarningWidgetClass;                                         // 0x0070   (0x0008)  
	UClass*                                            HudWidgetClass;                                             // 0x0078   (0x0008)  
	UClass*                                            LoadingWidgetClass;                                         // 0x0080   (0x0008)  
	UClass*                                            LoadingIconWidgetClass;                                     // 0x0088   (0x0008)  
	UClass*                                            SpawnScreenWidgetClass;                                     // 0x0090   (0x0008)  
	UClass*                                            WaypointScreenWidgetClass;                                  // 0x0098   (0x0008)  
	UClass*                                            ActionProgressWidgetClass;                                  // 0x00A0   (0x0008)  
	UClass*                                            TeamInvitationWidgetClass;                                  // 0x00A8   (0x0008)  
	UClass*                                            CraftingInfoWidgetClass;                                    // 0x00B0   (0x0008)  
	UClass*                                            CraftingComponentWidgetClass;                               // 0x00B8   (0x0008)  
	UClass*                                            CraftingRecipeWidgetClass;                                  // 0x00C0   (0x0008)  
	UClass*                                            EmptySlotWidgetClass;                                       // 0x00C8   (0x0008)  
	UClass*                                            PreviousNextSwitchWidgetClass;                              // 0x00D0   (0x0008)  
	UClass*                                            QuickAccessItemWidget;                                      // 0x00D8   (0x0008)  
	UClass*                                            ChangeTextWidgetClass;                                      // 0x00E0   (0x0008)  
	UClass*                                            ItemStatusWidgetClass;                                      // 0x00E8   (0x0008)  
	UClass*                                            HealthWidgetClass;                                          // 0x00F0   (0x0008)  
	UClass*                                            GameEventCardWidgetClass;                                   // 0x00F8   (0x0008)  
	UClass*                                            GameEventScoreboardWidgetClass;                             // 0x0100   (0x0008)  
	UClass*                                            GameEventMiniScoreboardWidgetClass;                         // 0x0108   (0x0008)  
	UClass*                                            TournamentScoreboardWidgetClass;                            // 0x0110   (0x0008)  
	UClass*                                            CircularMenuWidgetClass;                                    // 0x0118   (0x0008)  
	UClass*                                            CircularMenuSegmentWidgetClass;                             // 0x0120   (0x0008)  
	UClass*                                            LockpickingWidgetClass;                                     // 0x0128   (0x0008)  
	UClass*                                            DoorUpgradeWidgetClass;                                     // 0x0130   (0x0008)  
	UClass*                                            InventoryContainerWidget2Test;                              // 0x0138   (0x0008)  
	UClass*                                            InventoryItemWidget2Test;                                   // 0x0140   (0x0008)  
	UClass*                                            ItemInventoryWidget2;                                       // 0x0148   (0x0008)  
	UClass*                                            InventoryPanelSideLayerWidget;                              // 0x0150   (0x0008)  
	UClass*                                            ItemSplittingWidgetClass;                                   // 0x0158   (0x0008)  
	TMap<EWidgetType, UClass*>                         Widgets;                                                    // 0x0160   (0x0050)  
	UClass*                                            ObjectivesWidgetClass;                                      // 0x01B0   (0x0008)  
	UClass*                                            MissionPromptClass;                                         // 0x01B8   (0x0008)  
	UClass*                                            MissionResultClass;                                         // 0x01C0   (0x0008)  
	UClass*                                            MissionItemClass;                                           // 0x01C8   (0x0008)  
	UClass*                                            ObjectiveItemClass;                                         // 0x01D0   (0x0008)  
	UClass*                                            MissionRewardClass;                                         // 0x01D8   (0x0008)  
	UClass*                                            RewardItemWidgetClass;                                      // 0x01E0   (0x0008)  
	UClass*                                            StatisticsListRow;                                          // 0x01E8   (0x0008)  
	TArray<FTooltipPanelData>                          ItemTooltipPanels;                                          // 0x01F0   (0x0010)  
	UClass*                                            MalfunctionsContainerClass;                                 // 0x0200   (0x0008)  
	UClass*                                            WeaponAmmoCountContainerClass;                              // 0x0208   (0x0008)  
	UClass*                                            PlaceableElementWidgetClass;                                // 0x0210   (0x0008)  
};

/// Class /Script/ConZ.DetectableMetalAssetData
/// Size: 0x0000 (0x000028 - 0x000028)
class UDetectableMetalAssetData : public UAssetUserData
{ 
public:
};

/// Class /Script/ConZ.DetectableTag
/// Size: 0x0000 (0x000030 - 0x000030)
class UDetectableTag : public UBaseItemTag
{ 
public:
};

/// Class /Script/ConZ.DialLockMinigameBase
/// Size: 0x0060 (0x0002F8 - 0x000358)
class ADialLockMinigameBase : public AMinigame
{ 
public:
	UStaticMeshComponent*                              _lockBody;                                                  // 0x02F8   (0x0008)  
	UStaticMeshComponent*                              _lockClamp;                                                 // 0x0300   (0x0008)  
	float                                              _animationLength;                                           // 0x0308   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x030C   (0x0004)  MISSED
	TArray<FWheelData>                                 _wheels;                                                    // 0x0310   (0x0010)  
	unsigned char                                      UnknownData01_5[0x30];                                      // 0x0320   (0x0030)  MISSED
	UAkAudioEvent*                                     _wheelTurnedAudioEvent;                                     // 0x0350   (0x0008)  
};

/// Class /Script/ConZ.DialLockMinigame
/// Size: 0x0068 (0x000358 - 0x0003C0)
class ADialLockMinigame : public ADialLockMinigameBase
{ 
public:
	UAkAudioEvent*                                     _incorrectCombinationAudioEvent;                            // 0x0358   (0x0008)  
	UAkAudioEvent*                                     _unlockedAudioEvent;                                        // 0x0360   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0368   (0x0008)  MISSED
	FTransform                                         _protectionParticlesTransform;                              // 0x0370   (0x0030)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x03A0   (0x0010)  MISSED
	float                                              _throbberDelay;                                             // 0x03B0   (0x0004)  
	unsigned char                                      UnknownData02_6[0xC];                                       // 0x03B4   (0x000C)  MISSED
};

/// Class /Script/ConZ.LockpickingMinigameConfiguration
/// Size: 0x0020 (0x000048 - 0x000068)
class ULockpickingMinigameConfiguration : public UMinigameConfiguration
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0048   (0x0008)  MISSED
	ULockData*                                         LockData;                                                   // 0x0050   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0058   (0x0010)  MISSED
};

/// Class /Script/ConZ.DialLockMinigameConfiguration
/// Size: 0x0000 (0x000068 - 0x000068)
class UDialLockMinigameConfiguration : public ULockpickingMinigameConfiguration
{ 
public:
};

/// Class /Script/ConZ.DialLockSetCombinationMinigame
/// Size: 0x0008 (0x000358 - 0x000360)
class ADialLockSetCombinationMinigame : public ADialLockMinigameBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0358   (0x0008)  MISSED
};

/// Class /Script/ConZ.DialLockSetConfigurationMinigameConfiguration
/// Size: 0x0008 (0x000068 - 0x000070)
class UDialLockSetConfigurationMinigameConfiguration : public UDialLockMinigameConfiguration
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0068   (0x0008)  MISSED
};

/// Class /Script/ConZ.DialLockWidget
/// Size: 0x0028 (0x000278 - 0x0002A0)
class UDialLockWidget : public UMinigameWidget
{ 
public:
	UWidgetAnimation*                                  _onSuccess;                                                 // 0x0278   (0x0008)  
	UWidgetAnimation*                                  _onFailure;                                                 // 0x0280   (0x0008)  
	UWidgetAnimation*                                  _showThrobber;                                              // 0x0288   (0x0008)  
	UWidgetAnimation*                                  _hideThrobber;                                              // 0x0290   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0298   (0x0008)  MISSED
};

/// Class /Script/ConZ.DialogButton
/// Size: 0x06C8 (0x000260 - 0x000928)
class UDialogButton : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x0260   (0x0050)  MISSED
	bool                                               PreviewSelectedState;                                       // 0x02B0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x02B1   (0x0007)  MISSED
	UButton*                                           _button;                                                    // 0x02B8   (0x0008)  
	UTextBlock*                                        _text;                                                      // 0x02C0   (0x0008)  
	USizeBox*                                          _sizeBox;                                                   // 0x02C8   (0x0008)  
	FText                                              _initialTitle;                                              // 0x02D0   (0x0018)  
	FTabButtonStyle                                    _selectedButtonStyle;                                       // 0x02E8   (0x0288)  
	FTabButtonStyle                                    _deselectedButtonStyle;                                     // 0x0570   (0x0288)  
	FTabTextStyle                                      _selectedTextStyle;                                         // 0x07F8   (0x0098)  
	FTabTextStyle                                      _deselectedTextStyle;                                       // 0x0890   (0x0098)  


	/// Functions
	// Function /Script/ConZ.DialogButton.OnClick
	void OnClick();                                                                                                          // [0x22a1e30] Final|Native|Private 
};

/// Class /Script/ConZ.DialogueContainerWidget
/// Size: 0x0020 (0x000260 - 0x000280)
class UDialogueContainerWidget : public UUserWidget
{ 
public:
	USubtitleWidget*                                   _subtitleWidget;                                            // 0x0260   (0x0008)  
	UOverlay*                                          _avatarImageOverlay;                                        // 0x0268   (0x0008)  
	UTextBlock*                                        _actionText;                                                // 0x0270   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0278   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.DialogueContainerWidget.StartAvatarAnimation
	void StartAvatarAnimation(EDialogAnimationState AnimationState);                                                         // [0x22c2db0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.DialogueContainerWidget.GetShowAvatarAnimation
	UWidgetAnimation* GetShowAvatarAnimation();                                                                              // [0x2859740] Event|Protected|BlueprintEvent|Const 
	// Function /Script/ConZ.DialogueContainerWidget.GetHideAvatarAnimation
	UWidgetAnimation* GetHideAvatarAnimation();                                                                              // [0x2859740] Event|Protected|BlueprintEvent|Const 
};

/// Class /Script/ConZ.DialogueData
/// Size: 0x0050 (0x000030 - 0x000080)
class UDialogueData : public UDataAsset
{ 
public:
	TMap<EDialogEvent, FDialogInfoContainer>           Dialogs;                                                    // 0x0030   (0x0050)  
};

/// Class /Script/ConZ.DialPadButtonAssetData
/// Size: 0x00C8 (0x000028 - 0x0000F0)
class UDialPadButtonAssetData : public UAssetUserData
{ 
public:
	FGameplayTag                                       ButtonTag;                                                  // 0x0028   (0x0008)  
	EDialPadButtonType                                 ButtonType;                                                 // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	FString                                            ButtonInput;                                                // 0x0038   (0x0010)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0048   (0x0008)  MISSED
	FTransform                                         ReleasedRelativeTransform;                                  // 0x0050   (0x0030)  
	FTransform                                         PressedRelativeTransform;                                   // 0x0080   (0x0030)  
	float                                              TransitionDuration;                                         // 0x00B0   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x00B4   (0x0004)  MISSED
	UAkAudioEvent*                                     ToggleAudio;                                                // 0x00B8   (0x0008)  
	FLinearColor                                       PressedEmissiveColor;                                       // 0x00C0   (0x0010)  
	FLinearColor                                       ReleasedEmissiveColor;                                      // 0x00D0   (0x0010)  
	UMaterialInterface*                                DefaultButtonMaterial;                                      // 0x00E0   (0x0008)  
	UMaterialInterface*                                WornButtonMaterial;                                         // 0x00E8   (0x0008)  
};

/// Class /Script/ConZ.DialPadMinigame
/// Size: 0x0118 (0x0002F8 - 0x000410)
class ADialPadMinigame : public AMinigame
{ 
public:
	FVector                                            _zoomStartLocation;                                         // 0x02F8   (0x000C)  
	FVector                                            _zoomEndLocation;                                           // 0x0304   (0x000C)  
	UCurveFloat*                                       _zoomCurve;                                                 // 0x0310   (0x0008)  
	UCurveFloat*                                       _fadeCurve;                                                 // 0x0318   (0x0008)  
	FLinearColor                                       _deactivatedColor;                                          // 0x0320   (0x0010)  
	FLinearColor                                       _activatedColor;                                            // 0x0330   (0x0010)  
	FLinearColor                                       _neutralColor;                                              // 0x0340   (0x0010)  
	float                                              _resetTime;                                                 // 0x0350   (0x0004)  
	int32_t                                            _defaultCombinationLength;                                  // 0x0354   (0x0004)  
	UAkAudioEvent*                                     _buttonPressedAudioEvent;                                   // 0x0358   (0x0008)  
	UAkAudioEvent*                                     _correctCodeAudioEvent;                                     // 0x0360   (0x0008)  
	UAkAudioEvent*                                     _incorrectCodeAudioEvent;                                   // 0x0368   (0x0008)  
	unsigned char                                      UnknownData00_6[0xA0];                                      // 0x0370   (0x00A0)  MISSED
};

/// Class /Script/ConZ.DialPadMinigameConfiguration
/// Size: 0x0020 (0x000048 - 0x000068)
class UDialPadMinigameConfiguration : public UMinigameConfiguration
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0048   (0x0020)  MISSED
};

/// Class /Script/ConZ.DialPadWidget
/// Size: 0x0018 (0x000278 - 0x000290)
class UDialPadWidget : public UMinigameWidget
{ 
public:
	UTextBlock*                                        _screenText;                                                // 0x0278   (0x0008)  
	UTextBlock*                                        _timerText;                                                 // 0x0280   (0x0008)  
	int32_t                                            _maxLettersOnScreen;                                        // 0x0288   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x028C   (0x0004)  MISSED
};

/// Class /Script/ConZ.DiegeticLockState
/// Size: 0x0060 (0x000260 - 0x0002C0)
class UDiegeticLockState : public UUserWidget
{ 
public:
	FSlateColor                                        LockedColor;                                                // 0x0260   (0x0028)  
	FSlateColor                                        UnlockedColor;                                              // 0x0288   (0x0028)  
	UTextBlock*                                        _lockState;                                                 // 0x02B0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x02B8   (0x0008)  MISSED
};

/// Class /Script/ConZ.DistantLevel
/// Size: 0x0078 (0x000220 - 0x000298)
class ADistantLevel : public AActor
{ 
public:
	UStaticMeshComponent*                              _previewMeshComponent;                                      // 0x0220   (0x0008)  
	FString                                            _streamingLevelName;                                        // 0x0228   (0x0010)  
	EDistantMeshStreamingBehavior                      _meshStreamingBehavior;                                     // 0x0238   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0239   (0x0003)  MISSED
	float                                              _maxDrawDistance;                                           // 0x023C   (0x0004)  
	bool                                               _neverDistanceCull;                                         // 0x0240   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0241   (0x0003)  MISSED
	FBoxSphereBounds                                   _meshBounds;                                                // 0x0244   (0x001C)  
	TWeakObjectPtr<UStaticMesh*>                       _collisionMesh;                                             // 0x0260   (0x0028)  
	TArray<TWeakObjectPtr>                             _meshLODs;                                                  // 0x0288   (0x0010)  
};

/// Class /Script/ConZ.DistantLevelManager
/// Size: 0x01A0 (0x000220 - 0x0003C0)
class ADistantLevelManager : public AActor
{ 
public:
	USceneComponent*                                   _rootComponent;                                             // 0x0220   (0x0008)  
	float                                              _minCameraLocationChangeToUpdateDistantLevels;              // 0x0228   (0x0004)  
	float                                              _distantMeshPreloadDistance;                                // 0x022C   (0x0004)  
	int32_t                                            _maxNumSimultaneouslyStreamedDistantMeshLODs;               // 0x0230   (0x0004)  
	float                                              _distantCollisionMeshUnloadDistance;                        // 0x0234   (0x0004)  
	int32_t                                            _maxNumSimultaneouslyStreamedDistantCollisionMeshes;        // 0x0238   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x023C   (0x0004)  MISSED
	TArray<FDistantLevelDescription>                   _distantLevelDescriptions;                                  // 0x0240   (0x0010)  
	unsigned char                                      UnknownData01_6[0x170];                                     // 0x0250   (0x0170)  MISSED


	/// Functions
	// Function /Script/ConZ.DistantLevelManager.HandleStreamingLevelsVisibilityChanged
	void HandleStreamingLevelsVisibilityChanged();                                                                           // [0x22c2bd0] Final|Native|Private 
};

/// Class /Script/ConZ.DivingMaskTag
/// Size: 0x0000 (0x000030 - 0x000030)
class UDivingMaskTag : public UBaseItemTag
{ 
public:
};

/// Class /Script/ConZ.Trader
/// Size: 0x0020 (0x000910 - 0x000930)
class ATrader : public ASedentaryNPC
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0910   (0x0010)  MISSED
	TWeakObjectPtr<UTraderPersonalityDataAsset*>       _traderPersonalityDataAsset;                                // 0x0920   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0928   (0x0008)  MISSED
};

/// Class /Script/ConZ.Doctor
/// Size: 0x0060 (0x000930 - 0x000990)
class ADoctor : public ATrader
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x0930   (0x0050)  MISSED
	TArray<TWeakObjectPtr>                             _tradeableServicesForInteractions;                          // 0x0980   (0x0010)  
};

/// Class /Script/ConZ.DogTagItem
/// Size: 0x0030 (0x000910 - 0x000940)
class ADogTagItem : public AItem
{ 
public:
	FDbIntegerId                                       _userProfileId;                                             // 0x0910   (0x0008)  
	FString                                            _userProfileName;                                           // 0x0918   (0x0010)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0928   (0x0008)  MISSED
	UExpirableItemComponent*                           _expirableItemComponent;                                    // 0x0930   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0938   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.DogTagItem.OnRep_UserProfileName
	void OnRep_UserProfileName();                                                                                            // [0x22c2d60] Final|Native|Private 
};

/// Class /Script/ConZ.PriceCategory
/// Size: 0x0008 (0x000030 - 0x000038)
class UPriceCategory : public UDataAsset
{ 
public:
	float                                              Price;                                                      // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Class /Script/ConZ.Door
/// Size: 0x02C0 (0x000220 - 0x0004E0)
class ADoor : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0220   (0x0020)  MISSED
	FName                                              ControlName;                                                // 0x0240   (0x0008)  
	UMeshComponent*                                    Mesh;                                                       // 0x0248   (0x0008)  
	FMulticastInlineDelegate                           OnOpened;                                                   // 0x0250   (0x0010)  
	unsigned char                                      UnknownData01_5[0x70];                                      // 0x0260   (0x0070)  MISSED
	EDoorType                                          _doorType;                                                  // 0x02D0   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x02D1   (0x0007)  MISSED
	USceneComponent*                                   _rootComponent;                                             // 0x02D8   (0x0008)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x02E0   (0x0004)  MISSED
	int32_t                                            _maxNumberOfLocks;                                          // 0x02E4   (0x0004)  
	int32_t                                            _maxNumberOfZappers;                                        // 0x02E8   (0x0004)  
	bool                                               _supportsRemoteSensor;                                      // 0x02EC   (0x0001)  
	bool                                               CanOpenOnBothSides;                                         // 0x02ED   (0x0001)  
	bool                                               _canOpen;                                                   // 0x02EE   (0x0001)  
	unsigned char                                      UnknownData04_5[0x1];                                       // 0x02EF   (0x0001)  MISSED
	float                                              _openingDuration;                                           // 0x02F0   (0x0004)  
	float                                              _closingDuration;                                           // 0x02F4   (0x0004)  
	bool                                               _canInteractWhileInTransition;                              // 0x02F8   (0x0001)  
	bool                                               _shouldSelfClose;                                           // 0x02F9   (0x0001)  
	unsigned char                                      UnknownData05_5[0x2];                                       // 0x02FA   (0x0002)  MISSED
	float                                              _openedDurationBeforeSelfClosing;                           // 0x02FC   (0x0004)  
	float                                              _selfCloseDuration;                                         // 0x0300   (0x0004)  
	EOpenStateNavigationControl                        _openStateNavigationControl;                                // 0x0304   (0x0001)  
	unsigned char                                      UnknownData06_5[0x3];                                       // 0x0305   (0x0003)  MISSED
	UAkAudioEvent*                                     _openingSoundCue;                                           // 0x0308   (0x0008)  
	UAkAudioEvent*                                     _openedSoundCue;                                            // 0x0310   (0x0008)  
	UAkAudioEvent*                                     _closingSoundCue;                                           // 0x0318   (0x0008)  
	UAkAudioEvent*                                     _closedSoundCue;                                            // 0x0320   (0x0008)  
	float                                              _noiseLoudness;                                             // 0x0328   (0x0004)  
	unsigned char                                      UnknownData07_5[0x4];                                       // 0x032C   (0x0004)  MISSED
	UClass*                                            _doorUnlockData;                                            // 0x0330   (0x0008)  
	unsigned char                                      UnknownData08_5[0x20];                                      // 0x0338   (0x0020)  MISSED
	EDoorStateFlags                                    _stateFlags;                                                // 0x0358   (0x0001)  
	unsigned char                                      UnknownData09_5[0x1];                                       // 0x0359   (0x0001)  MISSED
	bool                                               _canEverBeOpened;                                           // 0x035A   (0x0001)  
	bool                                               _canEverBeClosed;                                           // 0x035B   (0x0001)  
	unsigned char                                      UnknownData10_5[0xC];                                       // 0x035C   (0x000C)  MISSED
	UPriceCategory*                                    _priceCategory;                                             // 0x0368   (0x0008)  
	FTransform                                         _unlockTransformInside;                                     // 0x0370   (0x0030)  
	FTransform                                         _unlockTransformOutside;                                    // 0x03A0   (0x0030)  
	float                                              _forceUnlockMovementAcceptanceRadius;                       // 0x03D0   (0x0004)  
	unsigned char                                      UnknownData11_5[0x4];                                       // 0x03D4   (0x0004)  MISSED
	TArray<UClass*>                                    _upgradeItemsClasses;                                       // 0x03D8   (0x0010)  
	TArray<ULockData*>                                 _lockData;                                                  // 0x03E8   (0x0010)  
	unsigned char                                      UnknownData12_5[0x10];                                      // 0x03F8   (0x0010)  MISSED
	TArray<UClass*>                                    _originalUpgradeItemsClasses;                               // 0x0408   (0x0010)  
	TArray<ULockData*>                                 _originalLockData;                                          // 0x0418   (0x0010)  
	unsigned char                                      UnknownData13_5[0x10];                                      // 0x0428   (0x0010)  MISSED
	FDbIntegerId                                       _owningUserProfileId;                                       // 0x0438   (0x0008)  
	unsigned char                                      UnknownData14_5[0x10];                                      // 0x0440   (0x0010)  MISSED
	UDoorUpgradeWidget*                                _upgradeWidget;                                             // 0x0450   (0x0008)  
	unsigned char                                      UnknownData15_5[0x8];                                       // 0x0458   (0x0008)  MISSED
	FDoorRepData                                       _doorRepData;                                               // 0x0460   (0x0038)  
	unsigned char                                      UnknownData16_5[0x11];                                      // 0x0498   (0x0011)  MISSED
	bool                                               _disableSerialization;                                      // 0x04A9   (0x0001)  
	unsigned char                                      UnknownData17_5[0x1E];                                      // 0x04AA   (0x001E)  MISSED
	TArray<AItem*>                                     _attachedItems;                                             // 0x04C8   (0x0010)  
	unsigned char                                      UnknownData18_6[0x8];                                       // 0x04D8   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.Door.ShouldOpen
	bool ShouldOpen();                                                                                                       // [0x22c2d80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Door.OnUnlockFailed__DelegateSignature
	void OnUnlockFailed__DelegateSignature();                                                                                // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.Door.OnUnlocked__DelegateSignature
	void OnUnlocked__DelegateSignature(ADoor* Door);                                                                         // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.Door.OnRep_StateFlags
	void OnRep_StateFlags(EDoorStateFlags Previous);                                                                         // [0x22c2ce0] Native|Protected     
	// Function /Script/ConZ.Door.OnRep_OwningUserProfileId
	void OnRep_OwningUserProfileId();                                                                                        // [0x22c2cc0] Final|Native|Private 
	// Function /Script/ConZ.Door.OnRep_Locks
	void OnRep_Locks();                                                                                                      // [0x22c2ca0] Final|Native|Private 
	// Function /Script/ConZ.Door.OnOpened__DelegateSignature
	void OnOpened__DelegateSignature();                                                                                      // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.Door.OnLockRemoved__DelegateSignature
	void OnLockRemoved__DelegateSignature(ADoor* Door);                                                                      // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.Door.OnLocked__DelegateSignature
	void OnLocked__DelegateSignature(ADoor* Door);                                                                           // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.Door.OnDestroyedEvent
	void OnDestroyedEvent(AActor* Self);                                                                                     // [0x22c2c10] Native|Protected     
	// Function /Script/ConZ.Door.OnAudioStopped
	void OnAudioStopped();                                                                                                   // [0x22c2bf0] Final|Native|Private|Const 
	// Function /Script/ConZ.Door.ChangeOpenState
	void ChangeOpenState(bool ShouldOpen);                                                                                   // [0x22c2b40] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.DoorEntitySetup
/// Size: 0x0000 (0x000080 - 0x000080)
class UDoorEntitySetup : public UEntitySetup
{ 
public:
};

/// Class /Script/ConZ.DoorLockingRegistry
/// Size: 0x0058 (0x0000B0 - 0x000108)
class UDoorLockingRegistry : public UActorComponent
{ 
public:
	TMap<EDoorUnlockDataType, FDoorUnlockDataCollection> _doorUnlockDataByType;                                    // 0x00B0   (0x0050)  
	int32_t                                            _countNormalizationThreshold;                               // 0x0100   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0104   (0x0004)  MISSED
};

/// Class /Script/ConZ.DoorUnlockData
/// Size: 0x0030 (0x000028 - 0x000058)
class UDoorUnlockData : public UObject
{ 
public:
	EDoorUnlockDataType                                Type;                                                       // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0029   (0x0007)  MISSED
	FText                                              DescriptionText;                                            // 0x0030   (0x0018)  
	FString                                            Description;                                                // 0x0048   (0x0010)  
};

/// Class /Script/ConZ.ExpirableItemComponent
/// Size: 0x0010 (0x0000C8 - 0x0000D8)
class UExpirableItemComponent : public UItemComponent
{ 
public:
	int64_t                                            _expirationTimeSeconds;                                     // 0x00C8   (0x0008)  
	int64_t                                            _itemCreatedTimestamp;                                      // 0x00D0   (0x0008)  
};

/// Class /Script/ConZ.DoorUnlockItemComponent
/// Size: 0x0010 (0x0000D8 - 0x0000E8)
class UDoorUnlockItemComponent : public UExpirableItemComponent
{ 
public:
	EDoorUnlockDataType                                _unlockDataType;                                            // 0x00D8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x00D9   (0x0007)  MISSED
	UClass*                                            _doorUnlockData;                                            // 0x00E0   (0x0008)  


	/// Functions
	// Function /Script/ConZ.DoorUnlockItemComponent.OnRep_DoorLockingDescriptor
	void OnRep_DoorLockingDescriptor();                                                                                      // [0xb92f40] Final|Native|Private 
};

/// Class /Script/ConZ.UpgradeSlotWidget
/// Size: 0x0080 (0x000260 - 0x0002E0)
class UUpgradeSlotWidget : public UUserWidget
{ 
public:
	UImage*                                            _itemIcon;                                                  // 0x0260   (0x0008)  
	UImage*                                            _gridSymbol;                                                // 0x0268   (0x0008)  
	UImage*                                            _backgroundImage;                                           // 0x0270   (0x0008)  
	UImage*                                            _defaultImage;                                              // 0x0278   (0x0008)  
	FLinearColor                                       _regularColour;                                             // 0x0280   (0x0010)  
	FLinearColor                                       _dropUnavailableColour;                                     // 0x0290   (0x0010)  
	FLinearColor                                       _dropAvailableColour;                                       // 0x02A0   (0x0010)  
	ESlotType                                          _slotType;                                                  // 0x02B0   (0x0001)  
	unsigned char                                      UnknownData00_5[0xF];                                       // 0x02B1   (0x000F)  MISSED
	TArray<UClass*>                                    _buyableUpgrades;                                           // 0x02C0   (0x0010)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x02D0   (0x0010)  MISSED
};

/// Class /Script/ConZ.BCUUpgradeSlotWidget
/// Size: 0x0138 (0x0002E0 - 0x000418)
class UBCUUpgradeSlotWidget : public UUpgradeSlotWidget
{ 
public:
	FLinearColor                                       _connectedBackgroundColor;                                  // 0x02E0   (0x0010)  
	FSlateBrush                                        _connectedIconTexture;                                      // 0x02F0   (0x0088)  
	FSlateBrush                                        _disconnectedIconTexture;                                   // 0x0378   (0x0088)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0400   (0x0018)  MISSED
};

/// Class /Script/ConZ.DoorUpgradeWidget
/// Size: 0x0068 (0x0002F8 - 0x000360)
class UDoorUpgradeWidget : public UWaypointWidgetBase
{ 
public:
	UVerticalBox*                                      _lockSlotsBox;                                              // 0x02F8   (0x0008)  
	UVerticalBox*                                      _protectionSlotsBox;                                        // 0x0300   (0x0008)  
	UVerticalBox*                                      _sensorSlotsBox;                                            // 0x0308   (0x0008)  
	UVerticalBox*                                      _bcuLockSlotBox;                                            // 0x0310   (0x0008)  
	ADoor*                                             _door;                                                      // 0x0318   (0x0008)  
	unsigned char                                      UnknownData00_6[0x40];                                      // 0x0320   (0x0040)  MISSED
};

/// Class /Script/ConZ.DoubleDoor
/// Size: 0x0000 (0x0004E0 - 0x0004E0)
class ADoubleDoor : public ADoor
{ 
public:
};

/// Class /Script/ConZ.DoubleRegularDoorStatic
/// Size: 0x0030 (0x0004E0 - 0x000510)
class ADoubleRegularDoorStatic : public ADoubleDoor
{ 
public:
	FRotator                                           _openRotation0;                                             // 0x04E0   (0x000C)  
	FRotator                                           _openRotation1;                                             // 0x04EC   (0x000C)  
	FRotator                                           _closedRotation0;                                           // 0x04F8   (0x000C)  
	FRotator                                           _closedRotation1;                                           // 0x0504   (0x000C)  
};

/// Class /Script/ConZ.DoubleSlidingDoorStatic
/// Size: 0x0030 (0x0004E0 - 0x000510)
class ADoubleSlidingDoorStatic : public ADoubleDoor
{ 
public:
	USceneComponent*                                   ClosedPositionComponent0;                                   // 0x04E0   (0x0008)  
	USceneComponent*                                   ClosedPositionComponent1;                                   // 0x04E8   (0x0008)  
	USceneComponent*                                   OpenPositionComponent0;                                     // 0x04F0   (0x0008)  
	USceneComponent*                                   OpenPositionComponent1;                                     // 0x04F8   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0500   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.DoubleSlidingDoorStatic.AddDoorPartInfo
	void AddDoorPartInfo(FVector& cloasedPosition, FVector& OpenedPosition, USceneComponent* moveableComponent);             // [0x22c5e30] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
};

/// Class /Script/ConZ.DrinkItem
/// Size: 0x0010 (0x0009B0 - 0x0009C0)
class ADrinkItem : public AFoodItem
{ 
public:
	UBasicGameResourceContainerComponent*              _gameResourceContainer;                                     // 0x09B0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x09B8   (0x0008)  MISSED
};

/// Class /Script/ConZ.DrinkWaterAssetData
/// Size: 0x0020 (0x000030 - 0x000050)
class UDrinkWaterAssetData : public UInteractionAssetData
{ 
public:
	UClass*                                            ResourceType;                                               // 0x0030   (0x0008)  
	float                                              QuantityPerDrink;                                           // 0x0038   (0x0004)  
	float                                              Salinity;                                                   // 0x003C   (0x0004)  
	UAkAudioEvent*                                     StartDrinkingAudioEvent;                                    // 0x0040   (0x0008)  
	UAkAudioEvent*                                     StopDrinkingAudioEvent;                                     // 0x0048   (0x0008)  
};

/// Class /Script/ConZ.DrivingSkill
/// Size: 0x0528 (0x0000B0 - 0x0005D8)
class UDrivingSkill : public UVehicleHandlingSkill
{ 
public:
	FVehicleHandlingExperienceAwards                   NoSkillExperienceAwards;                                    // 0x00B0   (0x0008)  
	FVehicleHandlingExperienceAwards                   BasicSkillExperienceAwards;                                 // 0x00B8   (0x0008)  
	FVehicleHandlingExperienceAwards                   MediumSkillExperienceAwards;                                // 0x00C0   (0x0008)  
	FVehicleHandlingExperienceAwards                   AdvancedSkillExperienceAwards;                              // 0x00C8   (0x0008)  
	FVehicleHandlingExperienceAwards                   AboveAdvancedSkillExperienceAwards;                         // 0x00D0   (0x0008)  
	FDrivingSkillParametersPerSkillLevel               NoSkillParameters;                                          // 0x00D8   (0x0100)  
	FDrivingSkillParametersPerSkillLevel               BasicSkillParameters;                                       // 0x01D8   (0x0100)  
	FDrivingSkillParametersPerSkillLevel               MediumSkillParameters;                                      // 0x02D8   (0x0100)  
	FDrivingSkillParametersPerSkillLevel               AdvancedSkillParameters;                                    // 0x03D8   (0x0100)  
	FDrivingSkillParametersPerSkillLevel               AboveAdvancedSkillParameters;                               // 0x04D8   (0x0100)  
};

/// Class /Script/ConZ.Drone
/// Size: 0x0110 (0x0007B0 - 0x0008C0)
class ADrone : public AConZCharacter
{ 
public:
	UAkAudioEvent*                                     _engineAudioEvent;                                          // 0x07B0   (0x0008)  
	UAkAudioEvent*                                     _engineStopAudioEvent;                                      // 0x07B8   (0x0008)  
	TArray<float>                                      _speedSteps;                                                // 0x07C0   (0x0010)  
	float                                              _movementInertiaAI;                                         // 0x07D0   (0x0004)  
	float                                              _movementRotationSpeedExpFactor;                            // 0x07D4   (0x0004)  
	float                                              _engineParticlesChangeSpeedExpFactor;                       // 0x07D8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x07DC   (0x0004)  MISSED
	UCurveFloat*                                       _engineVolumeFromSpeed;                                     // 0x07E0   (0x0008)  
	float                                              _movementBreathingInterval;                                 // 0x07E8   (0x0004)  
	float                                              _movementBreathingIntensity;                                // 0x07EC   (0x0004)  
	UParticleSystem*                                   _selfDestructParticles;                                     // 0x07F0   (0x0008)  
	UParticleSystem*                                   _smokeParticles;                                            // 0x07F8   (0x0008)  
	UParticleSystemComponent*                          _smokeParticleSystemComponent;                              // 0x0800   (0x0008)  
	UAkAudioEvent*                                     _selfDestructAudioEvent;                                    // 0x0808   (0x0008)  
	unsigned char                                      UnknownData01_5[0x18];                                      // 0x0810   (0x0018)  MISSED
	char                                               _currentSpeedStep;                                          // 0x0828   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0829   (0x0003)  MISSED
	float                                              _movementInertia;                                           // 0x082C   (0x0004)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x0830   (0x0008)  MISSED
	UStaticMeshComponent*                              _cameraMesh;                                                // 0x0838   (0x0008)  
	UParticleSystemComponent*                          _engineParticlesM;                                          // 0x0840   (0x0008)  
	UParticleSystemComponent*                          _engineParticlesML;                                         // 0x0848   (0x0008)  
	UParticleSystemComponent*                          _engineParticlesMR;                                         // 0x0850   (0x0008)  
	UParticleSystemComponent*                          _engineParticlesLL;                                         // 0x0858   (0x0008)  
	UParticleSystemComponent*                          _engineParticlesLR;                                         // 0x0860   (0x0008)  
	USpotLightComponent*                               _lightComponent;                                            // 0x0868   (0x0008)  
	float                                              _speedOfSoundMultiplerForDoppler;                           // 0x0870   (0x0004)  
	unsigned char                                      UnknownData04_5[0x3C];                                      // 0x0874   (0x003C)  MISSED
	float                                              _health;                                                    // 0x08B0   (0x0004)  
	unsigned char                                      UnknownData05_6[0xC];                                       // 0x08B4   (0x000C)  MISSED


	/// Functions
	// Function /Script/ConZ.Drone.Server_SetCurrentSpeedStep
	void Server_SetCurrentSpeedStep(int32_t step);                                                                           // [0x22c6600] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Drone.SelfDestruct
	void SelfDestruct(bool shouldSpawnItem);                                                                                 // [0x22c6570] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Drone.OnRep_CurrentSpeedStep
	void OnRep_CurrentSpeedStep();                                                                                           // [0x22c6550] Final|Native|Private 
	// Function /Script/ConZ.Drone.OnHit
	void OnHit(UPrimitiveComponent* HitComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, FVector NormalImpulse, FHitResult& Hit); // [0x22c6370] Final|Native|Private|HasOutParms|HasDefaults 
	// Function /Script/ConZ.Drone.NetMulticast_ToggleSmokeParticles
	void NetMulticast_ToggleSmokeParticles(bool shouldPlay);                                                                 // [0x22c62a0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Drone.NetMulticast_SpawnDestroyedEffects
	void NetMulticast_SpawnDestroyedEffects();                                                                               // [0x2267fb0] Final|Net|NetReliableNative|Event|NetMulticast|Private|Const 
	// Function /Script/ConZ.Drone.NetMulticast_PlaySoundOnClients
	void NetMulticast_PlaySoundOnClients(EDroneSound SoundToPlay, bool force);                                               // [0x22c61c0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/ConZ.DroneAIController
/// Size: 0x0190 (0x000328 - 0x0004B8)
class ADroneAIController : public AAIController
{ 
public:
	float                                              _followingDuration;                                         // 0x0328   (0x0004)  
	float                                              _followingTargetSpeedThreshold;                             // 0x032C   (0x0004)  
	float                                              _forcedSelfDestructTime;                                    // 0x0330   (0x0004)  
	float                                              _followingHeight;                                           // 0x0334   (0x0004)  
	float                                              _followingDistance;                                         // 0x0338   (0x0004)  
	float                                              _resumeFollowingExtraDistance;                              // 0x033C   (0x0004)  
	float                                              _resumeFollowingSeconds;                                    // 0x0340   (0x0004)  
	float                                              _resumeFollowingExtendedSeconds;                            // 0x0344   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0348   (0x0004)  MISSED
	float                                              _followingCirclingMinTime;                                  // 0x034C   (0x0004)  
	float                                              _followingCirclingMaxTime;                                  // 0x0350   (0x0004)  
	float                                              _followingCirclingNewDirectionMinTime;                      // 0x0354   (0x0004)  
	float                                              _followingCirclingNewDirectionMaxTime;                      // 0x0358   (0x0004)  
	float                                              _switchFollowingTargetsMaxDistance;                         // 0x035C   (0x0004)  
	unsigned char                                      UnknownData01_5[0x30];                                      // 0x0360   (0x0030)  MISSED
	float                                              _flybyHorizontalDistanceFromTarget;                         // 0x0390   (0x0004)  
	float                                              _flybyVerticalDistanceFromTarget;                           // 0x0394   (0x0004)  
	float                                              _flybyPathLength;                                           // 0x0398   (0x0004)  
	float                                              _minFlybyAngleDeg;                                          // 0x039C   (0x0004)  
	float                                              _maxFlybyAngleDeg;                                          // 0x03A0   (0x0004)  
	unsigned char                                      UnknownData02_5[0x14];                                      // 0x03A4   (0x0014)  MISSED
	float                                              _crashingDistance;                                          // 0x03B8   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x03BC   (0x0004)  MISSED
	float                                              _leavingForwardDistance;                                    // 0x03C0   (0x0004)  
	float                                              _leavingVerticalDistance;                                   // 0x03C4   (0x0004)  
	float                                              _minimumNavigationProximityPerState;                        // 0x03C8   (0x0018)  
	float                                              _boundsInflation;                                           // 0x03E0   (0x0004)  
	float                                              _bypassAccelerationScale;                                   // 0x03E4   (0x0004)  
	float                                              _bypassTurningSpeed;                                        // 0x03E8   (0x0004)  
	float                                              _findPathBypassMultiplier;                                  // 0x03EC   (0x0004)  
	float                                              _maxTimePerDestinationMultiplier;                           // 0x03F0   (0x0004)  
	float                                              _droneTurningSpeed;                                         // 0x03F4   (0x0004)  
	float                                              _maxPathSegment;                                            // 0x03F8   (0x0004)  
	float                                              _flyUpwardsDistance;                                        // 0x03FC   (0x0004)  
	int32_t                                            _maximumAttemptedHeightGains;                               // 0x0400   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x0404   (0x0004)  MISSED
	FVector                                            _randomMovementExtent;                                      // 0x0408   (0x000C)  
	float                                              _repeatChooseLocationTime;                                  // 0x0414   (0x0004)  
	float                                              _highAccelerationScaleMultiplier;                           // 0x0418   (0x0004)  
	float                                              _distanceForHighAcceleration;                               // 0x041C   (0x0004)  
	unsigned char                                      UnknownData05_5[0x8];                                       // 0x0420   (0x0008)  MISSED
	float                                              _brakingDecelerationFlyingMovementRestore;                  // 0x0428   (0x0004)  
	unsigned char                                      UnknownData06_6[0x8C];                                      // 0x042C   (0x008C)  MISSED


	/// Functions
	// Function /Script/ConZ.DroneAIController.FollowCharacter
	void FollowCharacter(ACharacter* characterToFollow);                                                                     // [0x22c6130] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.DroneCameraActor
/// Size: 0x0000 (0x0007B0 - 0x0007B0)
class ADroneCameraActor : public ACameraActor
{ 
public:
};

/// Class /Script/ConZ.DroneDestructibleItemComponent
/// Size: 0x0000 (0x0000C8 - 0x0000C8)
class UDroneDestructibleItemComponent : public UItemComponent
{ 
public:
};

/// Class /Script/ConZ.DroneSoundComponent
/// Size: 0x0048 (0x0000D8 - 0x000120)
class UDroneSoundComponent : public UCharacterSoundComponent
{ 
public:
	USoundCue*                                         IdleSound;                                                  // 0x00D8   (0x0008)  
	UAkAudioEvent*                                     IdleAudioEvent;                                             // 0x00E0   (0x0008)  
	USoundCue*                                         AngrySound;                                                 // 0x00E8   (0x0008)  
	UAkAudioEvent*                                     AngryAudioEvent;                                            // 0x00F0   (0x0008)  
	USoundCue*                                         AttackSound;                                                // 0x00F8   (0x0008)  
	UAkAudioEvent*                                     AttackAudioEvent;                                           // 0x0100   (0x0008)  
	USoundCue*                                         KillSound;                                                  // 0x0108   (0x0008)  
	UAkAudioEvent*                                     KillAudioEvent;                                             // 0x0110   (0x0008)  
	float                                              MinSilenceTimeout;                                          // 0x0118   (0x0004)  
	float                                              MaxSilenceTimeout;                                          // 0x011C   (0x0004)  
};

/// Class /Script/ConZ.DroneTargetData
/// Size: 0x0008 (0x000028 - 0x000030)
class UDroneTargetData : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.DropdownContainerWithDialogue
/// Size: 0x0040 (0x000260 - 0x0002A0)
class UDropdownContainerWithDialogue : public UUserWidget
{ 
public:
	USelectionOverlayWidget*                           _selectionOverlay;                                          // 0x0260   (0x0008)  
	UTextBlock*                                        _label;                                                     // 0x0268   (0x0008)  
	UVerticalBox*                                      _dropdownContainer;                                         // 0x0270   (0x0008)  
	UButton*                                           _cancelButton;                                              // 0x0278   (0x0008)  
	UButton*                                           _applyButton;                                               // 0x0280   (0x0008)  
	FText                                              dropdownLabel;                                              // 0x0288   (0x0018)  


	/// Functions
	// Function /Script/ConZ.DropdownContainerWithDialogue.OnCancelButtonClicked
	void OnCancelButtonClicked();                                                                                            // [0x22c6350] Native|Protected     
	// Function /Script/ConZ.DropdownContainerWithDialogue.OnApplyButtonClicked
	void OnApplyButtonClicked();                                                                                             // [0x22c6330] Native|Protected     
};

/// Class /Script/ConZ.DropdownColorPicker
/// Size: 0x0040 (0x0002A0 - 0x0002E0)
class UDropdownColorPicker : public UDropdownContainerWithDialogue
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x02A0   (0x0030)  MISSED
	UImage*                                            _colorPreviewSquare;                                        // 0x02D0   (0x0008)  
	UColorPicker*                                      _colorPicker;                                               // 0x02D8   (0x0008)  
};

/// Class /Script/ConZ.DropdownMenuSelectionWidget
/// Size: 0x0048 (0x000260 - 0x0002A8)
class UDropdownMenuSelectionWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0260   (0x0030)  MISSED
	UImage*                                            SelectionImage;                                             // 0x0290   (0x0008)  
	UCustomBorder*                                     SelectionBorder;                                            // 0x0298   (0x0008)  
	UDropdownMenuWidget*                               _dropdownMenu;                                              // 0x02A0   (0x0008)  


	/// Functions
	// Function /Script/ConZ.DropdownMenuSelectionWidget.Update
	void Update();                                                                                                           // [0x22c6350] Native|Public        
	// Function /Script/ConZ.DropdownMenuSelectionWidget.OnDropdownSelectionDelegate__DelegateSignature
	void OnDropdownSelectionDelegate__DelegateSignature(UDropdownMenuSelectionWidget* Widget);                               // [0x2859740] Public|Delegate      
	// Function /Script/ConZ.DropdownMenuSelectionWidget.Click
	FEventReply Click(FGeometry MyGeometry, FPointerEvent& MouseEvent);                                                      // [0x22c5f60] Native|Public|HasOutParms 
};

/// Class /Script/ConZ.DropdownMenuColorSelectionWidget
/// Size: 0x0010 (0x0002A8 - 0x0002B8)
class UDropdownMenuColorSelectionWidget : public UDropdownMenuSelectionWidget
{ 
public:
	FLinearColor                                       Color;                                                      // 0x02A8   (0x0010)  
};

/// Class /Script/ConZ.DropdownMenuTextureSelectionWidget
/// Size: 0x0008 (0x0002A8 - 0x0002B0)
class UDropdownMenuTextureSelectionWidget : public UDropdownMenuSelectionWidget
{ 
public:
	UTexture2D*                                        Texture;                                                    // 0x02A8   (0x0008)  
};

/// Class /Script/ConZ.DropdownMenuWidget
/// Size: 0x0028 (0x000260 - 0x000288)
class UDropdownMenuWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0260   (0x0010)  MISSED
	UScrollBox*                                        ScrollPanel;                                                // 0x0270   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0278   (0x0008)  MISSED
	UNamedSlot*                                        _panelSlot;                                                 // 0x0280   (0x0008)  
};

/// Class /Script/ConZ.DropZoneDroppable
/// Size: 0x0060 (0x000220 - 0x000280)
class ADropZoneDroppable : public AActor
{ 
public:
	UStaticMeshComponent*                              Mesh;                                                       // 0x0220   (0x0008)  
	UAkAudioEvent*                                     LandSound;                                                  // 0x0228   (0x0008)  
	ADropZoneGameEvent*                                _gameEvent;                                                 // 0x0230   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0238   (0x0008)  MISSED
	UParticleSystemComponent*                          _flareParticles0;                                           // 0x0240   (0x0008)  
	UParticleSystemComponent*                          _flareParticles1;                                           // 0x0248   (0x0008)  
	UParticleSystemComponent*                          _flareParticles2;                                           // 0x0250   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0258   (0x0008)  MISSED
	FVector                                            _endLocation;                                               // 0x0260   (0x000C)  
	float                                              _fallingSpeed;                                              // 0x026C   (0x0004)  
	bool                                               _flareParticlesEnabled;                                     // 0x0270   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0271   (0x0003)  MISSED
	int32_t                                            _flareParticlesTeam;                                        // 0x0274   (0x0004)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x0278   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.DropZoneDroppable.SetGameEvent
	void SetGameEvent(ADropZoneGameEvent* gameEvent);                                                                        // [0x22cae40] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.DropZoneDroppable.OnRep_FlareParticlesTeam
	void OnRep_FlareParticlesTeam();                                                                                         // [0x22cab50] Final|Native|Private 
	// Function /Script/ConZ.DropZoneDroppable.OnRep_FlareParticlesEnabled
	void OnRep_FlareParticlesEnabled();                                                                                      // [0x22cab50] Final|Native|Private 
	// Function /Script/ConZ.DropZoneDroppable.GetGameEvent
	ADropZoneGameEvent* GetGameEvent();                                                                                      // [0x1466ed0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.DropZoneCargo
/// Size: 0x0010 (0x000280 - 0x000290)
class ADropZoneCargo : public ADropZoneDroppable
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0280   (0x0008)  MISSED
	UChildActorComponent*                              Slot;                                                       // 0x0288   (0x0008)  
};

/// Class /Script/ConZ.DropZoneCrate
/// Size: 0x0010 (0x000280 - 0x000290)
class ADropZoneCrate : public ADropZoneDroppable
{ 
public:
	UClass*                                            KeyClass;                                                   // 0x0280   (0x0008)  
	bool                                               _hasKey;                                                    // 0x0288   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0289   (0x0007)  MISSED


	/// Functions
	// Function /Script/ConZ.DropZoneCrate.OnRep_HasKey
	void OnRep_HasKey();                                                                                                     // [0x22a0fc0] Native|Protected     
};

/// Class /Script/ConZ.DropZoneEquipmentTable
/// Size: 0x0018 (0x000220 - 0x000238)
class ADropZoneEquipmentTable : public AActor
{ 
public:
	TArray<AItem*>                                     _trackedItems;                                              // 0x0220   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0230   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.DropZoneEquipmentTable.UntrackItem
	void UntrackItem(AItem* Item);                                                                                           // [0x22cb2a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.DropZoneEquipmentTable.TrackItem
	void TrackItem(AItem* Item);                                                                                             // [0x22cb210] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.DropZoneEquipmentTable.PerformItemCleanup
	void PerformItemCleanup();                                                                                               // [0x22cac20] Final|Native|Public  
	// Function /Script/ConZ.DropZoneEquipmentTable.OnTrackedItemDestroyed
	void OnTrackedItemDestroyed(AActor* Actor);                                                                              // [0x22cab90] Final|Native|Public  
	// Function /Script/ConZ.DropZoneEquipmentTable.BeginCleaningItems
	void BeginCleaningItems();                                                                                               // [0x22ca720] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.DropZoneParticipantStats
/// Size: 0x0008 (0x000048 - 0x000050)
class UDropZoneParticipantStats : public UGameEventParticipantStats
{ 
public:
	int32_t                                            Activations;                                                // 0x0048   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x004C   (0x0004)  MISSED
};

/// Class /Script/ConZ.DropZoneGameEvent
/// Size: 0x0158 (0x000560 - 0x0006B8)
class ADropZoneGameEvent : public AGameEventBase
{ 
public:
	UClass*                                            TableAClass;                                                // 0x0560   (0x0008)  
	UClass*                                            TableBClass;                                                // 0x0568   (0x0008)  
	UClass*                                            CrateClass;                                                 // 0x0570   (0x0008)  
	UClass*                                            CargoClass;                                                 // 0x0578   (0x0008)  
	UAkAudioEvent*                                     IntroAnnouncement;                                          // 0x0580   (0x0008)  
	UAkAudioEvent*                                     LocateTheKeyAnnouncement;                                   // 0x0588   (0x0008)  
	UAkAudioEvent*                                     BlueTeamFoundKeyAnnouncement;                               // 0x0590   (0x0008)  
	UAkAudioEvent*                                     BlueTeamUnlockedAnnouncement;                               // 0x0598   (0x0008)  
	UAkAudioEvent*                                     BlueTeamStolenAnnouncement;                                 // 0x05A0   (0x0008)  
	UAkAudioEvent*                                     RedTeamFoundKeyAnnouncement;                                // 0x05A8   (0x0008)  
	UAkAudioEvent*                                     RedTeamUnlockedAnnouncement;                                // 0x05B0   (0x0008)  
	UAkAudioEvent*                                     RedTeamStolenAnnouncement;                                  // 0x05B8   (0x0008)  
	UAkAudioEvent*                                     CargoDropAnnouncement;                                      // 0x05C0   (0x0008)  
	UAkAudioEvent*                                     CargoLandedAnnouncement;                                    // 0x05C8   (0x0008)  
	UTexture2D*                                        KeyIcon;                                                    // 0x05D0   (0x0008)  
	UTexture2D*                                        CargoIcon;                                                  // 0x05D8   (0x0008)  
	FLinearColor                                       FriendlyColor;                                              // 0x05E0   (0x0010)  
	FLinearColor                                       EnemyColor;                                                 // 0x05F0   (0x0010)  
	FDropZoneParameters                                _dropZoneParameters;                                        // 0x0600   (0x002C)  
	unsigned char                                      UnknownData00_5[0xC];                                       // 0x062C   (0x000C)  MISSED
	EDropZoneGameEventPhase                            _phase;                                                     // 0x0638   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0639   (0x0003)  MISSED
	int32_t                                            _capturingTeam;                                             // 0x063C   (0x0004)  
	float                                              _phaseTimeLeft;                                             // 0x0640   (0x0004)  
	float                                              _captureProgress;                                           // 0x0644   (0x0004)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x0648   (0x0008)  MISSED
	AGameEventBorder*                                  _barrierA;                                                  // 0x0650   (0x0008)  
	AGameEventBorder*                                  _barrierB;                                                  // 0x0658   (0x0008)  
	ADropZoneEquipmentTable*                           _tableA;                                                    // 0x0660   (0x0008)  
	ADropZoneEquipmentTable*                           _tableB;                                                    // 0x0668   (0x0008)  
	ADropZoneCrate*                                    _crateA;                                                    // 0x0670   (0x0008)  
	ADropZoneCrate*                                    _crateB;                                                    // 0x0678   (0x0008)  
	ADropZoneKey*                                      _key;                                                       // 0x0680   (0x0008)  
	APrisoner*                                         _keyCarrier;                                                // 0x0688   (0x0008)  
	AActor*                                            _topmostKeyOwner;                                           // 0x0690   (0x0008)  
	ADropZoneCargo*                                    _cargo;                                                     // 0x0698   (0x0008)  
	ADropZoneSlot*                                     _slot;                                                      // 0x06A0   (0x0008)  
	unsigned char                                      UnknownData03_6[0x10];                                      // 0x06A8   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.DropZoneGameEvent.SetDropZoneParameters
	void SetDropZoneParameters(FDropZoneParameters& Params);                                                                 // [0x22cada0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.DropZoneGameEvent.OnRep_CapturingTeam
	void OnRep_CapturingTeam();                                                                                              // [0x22cab30] Final|Native|Private 
	// Function /Script/ConZ.DropZoneGameEvent.GetSlot
	ADropZoneSlot* GetSlot();                                                                                                // [0x22ca9a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.DropZoneGameEvent.GetPhaseTimeLeft
	float GetPhaseTimeLeft();                                                                                                // [0x22ca970] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.DropZoneGameEvent.GetPhase
	EDropZoneGameEventPhase GetPhase();                                                                                      // [0x22ca940] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.DropZoneGameEvent.GetKeyCarrier
	APrisoner* GetKeyCarrier();                                                                                              // [0x229a520] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.DropZoneGameEvent.GetKey
	ADropZoneKey* GetKey();                                                                                                  // [0x22ca8e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.DropZoneGameEvent.GetDropZoneParameters
	FDropZoneParameters GetDropZoneParameters();                                                                             // [0x22ca830] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.DropZoneGameEvent.GetCrateB
	ADropZoneCrate* GetCrateB();                                                                                             // [0x22ca800] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.DropZoneGameEvent.GetCrateA
	ADropZoneCrate* GetCrateA();                                                                                             // [0x22ca7d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.DropZoneGameEvent.GetCargo
	ADropZoneCargo* GetCargo();                                                                                              // [0x22ca7a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.DropZoneGameEvent.GetCapturingTeam
	int32_t GetCapturingTeam();                                                                                              // [0x22ca770] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.DropZoneGameEvent.GetCaptureProgress
	float GetCaptureProgress();                                                                                              // [0x22ca740] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.DropZoneKey
/// Size: 0x0010 (0x000910 - 0x000920)
class ADropZoneKey : public AItem
{ 
public:
	USphereComponent*                                  SphereComponent;                                            // 0x0910   (0x0008)  
	ADropZoneGameEvent*                                _gameEvent;                                                 // 0x0918   (0x0008)  


	/// Functions
	// Function /Script/ConZ.DropZoneKey.SphereOverlap
	void SphereOverlap(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x22caff0] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.DropZoneKey.SetGameEvent
	void SetGameEvent(ADropZoneGameEvent* gameEvent);                                                                        // [0x22caed0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.DropZoneKey.GetGameEvent
	ADropZoneGameEvent* GetGameEvent();                                                                                      // [0x22ca880] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.DropZoneLocationMarker
/// Size: 0x0108 (0x000418 - 0x000520)
class ADropZoneLocationMarker : public AGameEventLocationMarker
{ 
public:
	FDropZoneParameters                                DropZoneParameters;                                         // 0x0418   (0x002C)  
	FVector                                            SpawnOffsetA;                                               // 0x0444   (0x000C)  
	FVector                                            SpawnOffsetB;                                               // 0x0450   (0x000C)  
	float                                              SpawnRadiusA;                                               // 0x045C   (0x0004)  
	float                                              SpawnRadiusB;                                               // 0x0460   (0x0004)  
	unsigned char                                      UnknownData00_5[0xC];                                       // 0x0464   (0x000C)  MISSED
	FTransform                                         CargoDropOffset;                                            // 0x0470   (0x0030)  
	FTransform                                         CrateDropOffsetA;                                           // 0x04A0   (0x0030)  
	FTransform                                         CrateDropOffsetB;                                           // 0x04D0   (0x0030)  
	UStaticMeshComponent*                              CrateAPreviewMesh;                                          // 0x0500   (0x0008)  
	UStaticMeshComponent*                              CrateBPreviewMesh;                                          // 0x0508   (0x0008)  
	UStaticMeshComponent*                              CargoPreviewMesh;                                           // 0x0510   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0518   (0x0008)  MISSED
};

/// Class /Script/ConZ.DropZoneSlot
/// Size: 0x0030 (0x000220 - 0x000250)
class ADropZoneSlot : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0220   (0x0008)  MISSED
	UStaticMeshComponent*                              Mesh;                                                       // 0x0228   (0x0008)  
	float                                              ActivationDuration;                                         // 0x0230   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0234   (0x0004)  MISSED
	UStaticMesh*                                       UnlockedMesh;                                               // 0x0238   (0x0008)  
	UAkAudioEvent*                                     ActivateSound;                                              // 0x0240   (0x0008)  
	ADropZoneGameEvent*                                _gameEvent;                                                 // 0x0248   (0x0008)  


	/// Functions
	// Function /Script/ConZ.DropZoneSlot.SetGameEvent
	void SetGameEvent(ADropZoneGameEvent* gameEvent);                                                                        // [0x22caf60] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.DropZoneSlot.Server_Activate
	void Server_Activate(APrisoner* Prisoner);                                                                               // [0x22cad10] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.DropZoneSlot.GetOpeningDuration
	float GetOpeningDuration();                                                                                              // [0x22ca910] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.DropZoneSlot.GetGameEvent
	ADropZoneGameEvent* GetGameEvent();                                                                                      // [0x22ca8b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.DualArcedProgressBar
/// Size: 0x0050 (0x000260 - 0x0002B0)
class UDualArcedProgressBar : public UUserWidget
{ 
public:
	UImage*                                            _frontFillImage;                                            // 0x0260   (0x0008)  
	UImage*                                            _backFillImage;                                             // 0x0268   (0x0008)  
	UMaterialInstanceConstant*                         _frontFillMaterial;                                         // 0x0270   (0x0008)  
	UMaterialInstanceConstant*                         _backFillMaterial;                                          // 0x0278   (0x0008)  
	FLinearColor                                       _frontFillColor;                                            // 0x0280   (0x0010)  
	FLinearColor                                       _backFillColor;                                             // 0x0290   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x02A0   (0x0010)  MISSED
};

/// Class /Script/ConZ.DummyCollisionCapsule
/// Size: 0x0010 (0x000470 - 0x000480)
class UDummyCollisionCapsule : public UCapsuleComponent
{ 
public:
	FGameplayTag                                       _attachment;                                                // 0x0470   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0478   (0x0008)  MISSED
};

/// Class /Script/ConZ.EconomyManagerRequest
/// Size: 0x00B0 (0x000028 - 0x0000D8)
class UEconomyManagerRequest : public UPlayerRpcChannelServerRequest
{ 
public:
	unsigned char                                      UnknownData00_1[0xB0];                                      // 0x0028   (0x00B0)  MISSED
};

/// Class /Script/ConZ.EconomyManagerResponse
/// Size: 0x0008 (0x000028 - 0x000030)
class UEconomyManagerResponse : public UPlayerRpcChannelServerResponse
{ 
public:
	UEconomyManagerResponseData*                       _payload;                                                   // 0x0028   (0x0008)  
};

/// Class /Script/ConZ.EconomySpecificData
/// Size: 0x0358 (0x000030 - 0x000388)
class UEconomySpecificData : public UDataAsset
{ 
public:
	TWeakObjectPtr<UClass*>                            CashItemClass;                                              // 0x0030   (0x0028)  
	int32_t                                            CashStackMaxValue;                                          // 0x0058   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x005C   (0x0004)  MISSED
	TWeakObjectPtr<UClass*>                            DepotItemClass;                                             // 0x0060   (0x0028)  
	TWeakObjectPtr<UClass*>                            VehicleLockItemClass;                                       // 0x0088   (0x0028)  
	float                                              BasePriceModifierPerTradeCategory;                          // 0x00B0   (0x0070)  
	float                                              BaseSalePriceReductionModifierPerTradeCategory;             // 0x0120   (0x0070)  
	FCurrencyDescription                               CurrencyDescriptions;                                       // 0x0190   (0x0138)  
	TMap<EBankCardType, FBankCardTypeData>             CardDataPerBankCardType;                                    // 0x02C8   (0x0050)  
	float                                              ATMProvisionPercentage;                                     // 0x0318   (0x0004)  
	float                                              BankerProvisionPercentage;                                  // 0x031C   (0x0004)  
	TMap<FGameplayTag, float>                          RotationRarityVsAvailabilityChance;                         // 0x0320   (0x0050)  
	float                                              OutpostProsperityVsAvailabilityChanceIncrease;              // 0x0370   (0x0018)  
};

/// Class /Script/ConZ.EconomyStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UEconomyStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.EffectOverTimeDealer
/// Size: 0x0050 (0x000220 - 0x000270)
class AEffectOverTimeDealer : public AActor
{ 
public:
	TArray<FDamageOverTimeUpdateGroup>                 _updateGroups;                                              // 0x0220   (0x0010)  
	int32_t                                            _actorLimitPerTick;                                         // 0x0230   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0234   (0x0004)  MISSED
	float                                              _timeDilation;                                              // 0x0238   (0x0004)  
	unsigned char                                      UnknownData01_6[0x34];                                      // 0x023C   (0x0034)  MISSED
};

/// Class /Script/ConZ.ElectricDoorAssetData
/// Size: 0x0000 (0x000028 - 0x000028)
class UElectricDoorAssetData : public UAssetUserData
{ 
public:
};

/// Class /Script/ConZ.ElectricianGlovesTag
/// Size: 0x0008 (0x000030 - 0x000038)
class UElectricianGlovesTag : public UBaseItemTag
{ 
public:
	float                                              PrisonerDamageModifier;                                     // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Class /Script/ConZ.ElectricityGeneratorItem
/// Size: 0x0030 (0x000910 - 0x000940)
class AElectricityGeneratorItem : public AItem
{ 
public:
	UBasicGameResourceContainerComponent*              _resourceContainerComponent;                                // 0x0910   (0x0008)  
	URangedResourceProviderComponentContinousAmount*   _rangedResourceProviderComponent;                           // 0x0918   (0x0008)  
	UAkAudioEvent*                                     _turnOnAudioEvent;                                          // 0x0920   (0x0008)  
	UAkAudioEvent*                                     _turnOffAudioEvent;                                         // 0x0928   (0x0008)  
	bool                                               _isTurnedOn;                                                // 0x0930   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0931   (0x0003)  MISSED
	float                                              _power;                                                     // 0x0934   (0x0004)  
	float                                              _load;                                                      // 0x0938   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x093C   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.ElectricityGeneratorItem.RangedResourceProvider_ResourceAmountChanged
	void RangedResourceProvider_ResourceAmountChanged(URangedResourceProviderComponent* Component, float Value);             // [0x22cac40] Final|Native|Private 
	// Function /Script/ConZ.ElectricityGeneratorItem.RangedResourceProvider_AvailableResourceAmountChanged
	void RangedResourceProvider_AvailableResourceAmountChanged(URangedResourceProviderComponent* Component, float Value);    // [0x22cac40] Final|Native|Private 
	// Function /Script/ConZ.ElectricityGeneratorItem.OnRep_IsTurnedOn
	void OnRep_IsTurnedOn();                                                                                                 // [0x22cab70] Final|Native|Private 
	// Function /Script/ConZ.ElectricityGeneratorItem.OnComponentDeactivated
	void OnComponentDeactivated(UActorComponent* Component);                                                                 // [0x22caaa0] Final|Native|Private 
	// Function /Script/ConZ.ElectricityGeneratorItem.OnComponentActivated
	void OnComponentActivated(UActorComponent* Component, bool wasReset);                                                    // [0x22ca9d0] Final|Native|Private 
};

/// Class /Script/ConZ.EmblemData
/// Size: 0x0030 (0x000030 - 0x000060)
class UEmblemData : public UDataAsset
{ 
public:
	TArray<UTexture2D*>                                BackgroundTextures;                                         // 0x0030   (0x0010)  
	TArray<UTexture2D*>                                SymbolTextures;                                             // 0x0040   (0x0010)  
	TArray<FLinearColor>                               ColorPalette;                                               // 0x0050   (0x0010)  
};

/// Class /Script/ConZ.EmptySlot
/// Size: 0x0008 (0x000260 - 0x000268)
class UEmptySlot : public UUserWidget
{ 
public:
	UImage*                                            MainImage;                                                  // 0x0260   (0x0008)  
};

/// Class /Script/ConZ.EnduranceSkill
/// Size: 0x00A8 (0x0000C8 - 0x000170)
class UEnduranceSkill : public UConstitutionSkill
{ 
public:
	FEnduranceSkillExperienceAwards                    NoSkillExperienceAwards;                                    // 0x00C8   (0x000C)  
	FEnduranceSkillExperienceAwards                    BasicSkillExperienceAwards;                                 // 0x00D4   (0x000C)  
	FEnduranceSkillExperienceAwards                    MediumSkillExperienceAwards;                                // 0x00E0   (0x000C)  
	FEnduranceSkillExperienceAwards                    AdvancedSkillExperienceAwards;                              // 0x00EC   (0x000C)  
	FEnduranceSkillExperienceAwards                    AboveAdvancedSkillExperienceAwards;                         // 0x00F8   (0x000C)  
	FEnduranceSkillParametersPerSkillLevel             NoSkillParameters;                                          // 0x0104   (0x0018)  
	FEnduranceSkillParametersPerSkillLevel             BasicSkillParameters;                                       // 0x011C   (0x0018)  
	FEnduranceSkillParametersPerSkillLevel             MediumSkillParameters;                                      // 0x0134   (0x0018)  
	FEnduranceSkillParametersPerSkillLevel             AdvancedSkillParameters;                                    // 0x014C   (0x0018)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x0164   (0x000C)  MISSED
};

/// Class /Script/ConZ.Prisoner
/// Size: 0x1770 (0x0007B0 - 0x001F20)
class APrisoner : public AConZCharacter
{ 
public:
	unsigned char                                      UnknownData00_2[0x48];                                      // 0x07B0   (0x0048)  MISSED
	UPrisonerSkillComponent*                           SkillComponent;                                             // 0x07F8   (0x0008)  
	UPrisonerInventoryComponent*                       InventoryComponent;                                         // 0x0800   (0x0008)  
	UPrisonerAppearanceComponent*                      AppearanceComponent;                                        // 0x0808   (0x0008)  
	UMeleeCombatComponent*                             MeleeCombatComponent;                                       // 0x0810   (0x0008)  
	UHitReactComponent*                                HitReactComponent;                                          // 0x0818   (0x0008)  
	UPhysicalAnimationComponent*                       PhysicalAnimationComponent;                                 // 0x0820   (0x0008)  
	UInteractionComponent*                             InteractionComponent;                                       // 0x0828   (0x0008)  
	UPawnSensingComponent*                             SensingComponent;                                           // 0x0830   (0x0008)  
	UBaseInteractionComponent*                         BaseInteractionComponent;                                   // 0x0838   (0x0008)  
	bool                                               IgnoreMovementSettings;                                     // 0x0840   (0x0001)  
	bool                                               OverrideAimOffset;                                          // 0x0841   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x0842   (0x0002)  MISSED
	FRotator                                           AimOffsetOverride;                                          // 0x0844   (0x000C)  
	AActor*                                            EyesLookAtTargetOverride;                                   // 0x0850   (0x0008)  
	bool                                               IsFriendly;                                                 // 0x0858   (0x0001)  
	bool                                               CanEverBeKnockedOutByMeleeAttack;                           // 0x0859   (0x0001)  
	bool                                               ShouldOverrideCharacterTemplate;                            // 0x085A   (0x0001)  
	unsigned char                                      UnknownData02_5[0x5];                                       // 0x085B   (0x0005)  MISSED
	FCharacterTemplate                                 CharacterTemplateOverride;                                  // 0x0860   (0x00E8)  
	FAttachmentSocket                                  LeftHandAttachmentSocket;                                   // 0x0948   (0x0010)  
	FAttachmentSocket                                  RightHandAttachmentSocket;                                  // 0x0958   (0x0010)  
	FAttachmentSocket                                  LeftShoulderHolsterSocket;                                  // 0x0968   (0x0010)  
	FAttachmentSocket                                  RightShoulderHolsterSocket;                                 // 0x0978   (0x0010)  
	unsigned char                                      UnknownData03_5[0x198];                                     // 0x0988   (0x0198)  MISSED
	FMulticastInlineDelegate                           TabModeOpened;                                              // 0x0B20   (0x0010)  
	FMulticastInlineDelegate                           TabModeClosed;                                              // 0x0B30   (0x0010)  
	FMulticastInlineDelegate                           HoveredActorChanged;                                        // 0x0B40   (0x0010)  
	unsigned char                                      UnknownData04_5[0x28];                                      // 0x0B50   (0x0028)  MISSED
	bool                                               RespawnOnKill;                                              // 0x0B78   (0x0001)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x0B79   (0x0003)  MISSED
	float                                              IKOffsetLeftFoot;                                           // 0x0B7C   (0x0004)  
	float                                              IKOffsetRightFoot;                                          // 0x0B80   (0x0004)  
	EPrisonerBorderCrossingPenalty                     BorderCrossingPenalty;                                      // 0x0B84   (0x0001)  
	unsigned char                                      UnknownData06_5[0x3];                                       // 0x0B85   (0x0003)  MISSED
	FMulticastInlineDelegate                           BorderCrossingPenaltyChange;                                // 0x0B88   (0x0010)  
	unsigned char                                      UnknownData07_5[0x1E0];                                     // 0x0B98   (0x01E0)  MISSED
	UPrisonerBodySimulationComponent*                  _bodySimulationComponent;                                   // 0x0D78   (0x0008)  
	UThermalSensorComponent*                           _skinThermalSensingComponent;                               // 0x0D80   (0x0008)  
	UPrisonerMeshManager*                              _prisonerMeshManager;                                       // 0x0D88   (0x0008)  
	UUserProfile*                                      _userProfile;                                               // 0x0D90   (0x0008)  
	FString                                            _userId;                                                    // 0x0D98   (0x0010)  
	FDbIntegerId                                       _serverUserProfileId;                                       // 0x0DA8   (0x0008)  
	FString                                            _userProfileName;                                           // 0x0DB0   (0x0010)  
	FString                                            _userFakeName;                                              // 0x0DC0   (0x0010)  
	unsigned char                                      UnknownData08_5[0x68];                                      // 0x0DD0   (0x0068)  MISSED
	UParticleSystemComponent*                          _waterParticlesComponentWhenIdle;                           // 0x0E38   (0x0008)  
	UParticleSystemComponent*                          _waterParticlesComponentWhenMoving;                         // 0x0E40   (0x0008)  
	UParticleSystemComponent*                          _waterParticlesComponentWhenDiving;                         // 0x0E48   (0x0008)  
	unsigned char                                      UnknownData09_5[0x6];                                       // 0x0E50   (0x0006)  MISSED
	EPrisonerStance                                    _desiredStance;                                             // 0x0E56   (0x0001)  
	unsigned char                                      UnknownData10_5[0xD];                                       // 0x0E57   (0x000D)  MISSED
	float                                              _targetCrouchStage;                                         // 0x0E64   (0x0004)  
	EPrisonerMovementPace                              _desiredPace;                                               // 0x0E68   (0x0001)  
	unsigned char                                      UnknownData11_5[0x2];                                       // 0x0E69   (0x0002)  MISSED
	bool                                               _freeLookEnabled;                                           // 0x0E6B   (0x0001)  
	unsigned char                                      UnknownData12_5[0x28];                                      // 0x0E6C   (0x0028)  MISSED
	bool                                               _postFreeLookControllerRotationBlendActive;                 // 0x0E94   (0x0001)  
	unsigned char                                      UnknownData13_5[0xF];                                       // 0x0E95   (0x000F)  MISSED
	FRotator                                           _repAimOffset;                                              // 0x0EA4   (0x000C)  
	unsigned char                                      UnknownData14_5[0x40];                                      // 0x0EB0   (0x0040)  MISSED
	APrisonerCorpse*                                   _lastCorpse;                                                // 0x0EF0   (0x0008)  
	APrisonerCorpse*                                   _lastEventCorpse;                                           // 0x0EF8   (0x0008)  
	unsigned char                                      UnknownData15_5[0x34];                                      // 0x0F00   (0x0034)  MISSED
	float                                              _targetLeanAmount;                                          // 0x0F34   (0x0004)  
	unsigned char                                      UnknownData16_5[0x7B0];                                     // 0x0F38   (0x07B0)  MISSED
	AActor*                                            _meleeTarget;                                               // 0x16E8   (0x0008)  
	unsigned char                                      UnknownData17_5[0x8];                                       // 0x16F0   (0x0008)  MISSED
	UMeleeSkill*                                       _activeMeleeSkill;                                          // 0x16F8   (0x0008)  
	unsigned char                                      UnknownData18_5[0x10];                                      // 0x1700   (0x0010)  MISSED
	AActor*                                            _rotationTarget;                                            // 0x1710   (0x0008)  
	UUnarmedCombatInputRedirector*                     _unarmedCombatInputRedirector;                              // 0x1718   (0x0008)  
	USkillEventHandler*                                _skillEventHandler;                                         // 0x1720   (0x0008)  
	unsigned char                                      UnknownData19_5[0x10];                                      // 0x1728   (0x0010)  MISSED
	AItem*                                             _itemInHands;                                               // 0x1738   (0x0008)  
	unsigned char                                      UnknownData20_5[0x25];                                      // 0x1740   (0x0025)  MISSED
	EScopingWithItemInHandsState                       _scopingWithItemInHandsState;                               // 0x1765   (0x0001)  
	unsigned char                                      UnknownData21_5[0x2A];                                      // 0x1766   (0x002A)  MISSED
	EWeaponAimingType                                  _weaponAimingType;                                          // 0x1790   (0x0001)  
	unsigned char                                      UnknownData22_5[0x23];                                      // 0x1791   (0x0023)  MISSED
	char                                               _itemInHandsVisualObstructionDepthRep;                      // 0x17B4   (0x0001)  
	unsigned char                                      UnknownData23_5[0x10B];                                     // 0x17B5   (0x010B)  MISSED
	bool                                               _isInCombatMode;                                            // 0x18C0   (0x0001)  
	unsigned char                                      UnknownData24_5[0x57];                                      // 0x18C1   (0x0057)  MISSED
	AItem*                                             _leftShoulderHolsteredItemReplicated;                       // 0x1918   (0x0008)  
	unsigned char                                      UnknownData25_5[0x8];                                       // 0x1920   (0x0008)  MISSED
	AItem*                                             _rightShoulderHolsteredItemReplicated;                      // 0x1928   (0x0008)  
	unsigned char                                      UnknownData26_5[0x38];                                      // 0x1930   (0x0038)  MISSED
	FTimerHandle                                       _interactDefaultContextMenuTimerHandle;                     // 0x1968   (0x0008)  
	TArray<APrisoner*>                                 _examinedBy;                                                // 0x1970   (0x0010)  
	UMaterialInstanceDynamic*                          _tacticsBlobMaterial;                                       // 0x1980   (0x0008)  
	TArray<UParticleSystemComponent*>                  _bodyPartEffects;                                           // 0x1988   (0x0010)  
	UBondageComponent*                                 _handsBondage;                                              // 0x1998   (0x0008)  
	UPrisonerPrisonWalletComponent*                    _prisonWalletComponent;                                     // 0x19A0   (0x0008)  
	UPrisonerFishingComponent*                         _fishingComponent;                                          // 0x19A8   (0x0008)  
	UPrisonerMusicPlayerComponent*                     _musicPlayerComponent;                                      // 0x19B0   (0x0008)  
	UPrisonerTradingComponent*                         _tradingComponent;                                          // 0x19B8   (0x0008)  
	UPrisonerThrowComponent*                           _throwingComponent;                                         // 0x19C0   (0x0008)  
	UCharacterItemDragComponent*                       _itemDragComponent;                                         // 0x19C8   (0x0008)  
	unsigned char                                      UnknownData27_5[0x1C];                                      // 0x19D0   (0x001C)  MISSED
	uint32_t                                           _packedWaterWeight;                                         // 0x19EC   (0x0004)  
	unsigned char                                      UnknownData28_5[0x30];                                      // 0x19F0   (0x0030)  MISSED
	AGameEventBase*                                    _gameEvent;                                                 // 0x1A20   (0x0008)  
	UPrisonerLoadout*                                  _gameEventLoadout;                                          // 0x1A28   (0x0008)  
	unsigned char                                      UnknownData29_5[0x10];                                      // 0x1A30   (0x0010)  MISSED
	FPrisonerNearbyFoliageInfo                         _nearbyFoliageInfo;                                         // 0x1A40   (0x0010)  
	FPrisonerNearbyFoliageInfo                         _collidingNearbyFoliageInfo;                                // 0x1A50   (0x0010)  
	unsigned char                                      UnknownData30_5[0xC0];                                      // 0x1A60   (0x00C0)  MISSED
	UWidgetComponent*                                  _nameWidgetComponent;                                       // 0x1B20   (0x0008)  
	UBaseItemTag*                                      SaveSpawnLocationTag;                                       // 0x1B28   (0x0008)  
	unsigned char                                      UnknownData31_5[0x28];                                      // 0x1B30   (0x0028)  MISSED
	FDeluxeVersion                                     _deluxeVersion;                                             // 0x1B58   (0x0007)  
	unsigned char                                      UnknownData32_5[0x5];                                       // 0x1B5F   (0x0005)  MISSED
	TWeakObjectPtr<APrisoner*>                         _examinedPrisoner;                                          // 0x1B64   (0x0008)  
	bool                                               _killClaimed;                                               // 0x1B6C   (0x0001)  
	unsigned char                                      UnknownData33_5[0x1B];                                      // 0x1B6D   (0x001B)  MISSED
	EPlayingInstrumentState                            _playingInstrumentState;                                    // 0x1B88   (0x0001)  
	unsigned char                                      UnknownData34_5[0x1];                                       // 0x1B89   (0x0001)  MISSED
	ECarryingItemState                                 _carryingItemState;                                         // 0x1B8A   (0x0001)  
	unsigned char                                      UnknownData35_5[0x35];                                      // 0x1B8B   (0x0035)  MISSED
	bool                                               _shouldShowGenitalsOverride;                                // 0x1BC0   (0x0001)  
	unsigned char                                      UnknownData36_5[0x2F];                                      // 0x1BC1   (0x002F)  MISSED
	FPrisonerMountReplication                          _repMount;                                                  // 0x1BF0   (0x0010)  
	UMIDIDeviceController*                             _midiDeviceController;                                      // 0x1C00   (0x0008)  
	unsigned char                                      UnknownData37_5[0x40];                                      // 0x1C08   (0x0040)  MISSED
	bool                                               _hasInfiniteAmmo;                                           // 0x1C48   (0x0001)  
	bool                                               _isInGodMode;                                               // 0x1C49   (0x0001)  
	bool                                               _isImmortal;                                                // 0x1C4A   (0x0001)  
	bool                                               _isSuperJumpEnabled;                                        // 0x1C4B   (0x0001)  
	unsigned char                                      UnknownData38_5[0x24];                                      // 0x1C4C   (0x0024)  MISSED
	bool                                               _enablePerComponentReplicationFrequency;                    // 0x1C70   (0x0001)  
	unsigned char                                      UnknownData39_5[0x3];                                       // 0x1C71   (0x0003)  MISSED
	float                                              _componentsReplicationFrequency;                            // 0x1C74   (0x0014)  
	unsigned char                                      UnknownData40_5[0x60];                                      // 0x1C88   (0x0060)  MISSED
	UNavigationInvokerComponent*                       _navigationInvokerComponent;                                // 0x1CE8   (0x0008)  
	unsigned char                                      UnknownData41_5[0x94];                                      // 0x1CF0   (0x0094)  MISSED
	FGameplayTag                                       LegsInjuryTag;                                              // 0x1D84   (0x0008)  
	unsigned char                                      UnknownData42_5[0x8C];                                      // 0x1D8C   (0x008C)  MISSED
	EVehicleWeaponAimingStance                         _vehicleWeaponAimingStance;                                 // 0x1E18   (0x0001)  
	unsigned char                                      UnknownData43_5[0x2B];                                      // 0x1E19   (0x002B)  MISSED
	float                                              _vehicleAimingYawReplicated;                                // 0x1E44   (0x0004)  
	unsigned char                                      UnknownData44_5[0x88];                                      // 0x1E48   (0x0088)  MISSED
	TWeakObjectPtr<AClothesItem*>                      _activeParachute;                                           // 0x1ED0   (0x0008)  
	unsigned char                                      UnknownData45_5[0xC];                                       // 0x1ED8   (0x000C)  MISSED
	char                                               _replicatedBooleans;                                        // 0x1EE4   (0x0001)  
	unsigned char                                      UnknownData46_5[0x2B];                                      // 0x1EE5   (0x002B)  MISSED
	UPrisonerCommonData*                               _commonData;                                                // 0x1F10   (0x0008)  
	int32_t                                            _meshForcedLodIfNotPlayerControlled;                        // 0x1F18   (0x0004)  
	unsigned char                                      UnknownData47_6[0x4];                                       // 0x1F1C   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.Prisoner.UpdateZoomEffect
	void UpdateZoomEffect(float Fraction);                                                                                   // [0x2366fb0] Final|Native|Public|Const 
	// Function /Script/ConZ.Prisoner.UpdateWristwatchVisibility
	void UpdateWristwatchVisibility();                                                                                       // [0x2366f90] Final|Native|Public  
	// Function /Script/ConZ.Prisoner.UpdateSquadPanel
	void UpdateSquadPanel();                                                                                                 // [0x2366f70] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.UpdateDeluxePlayerStatus
	void UpdateDeluxePlayerStatus();                                                                                         // [0x2366f50] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.TryInteractDefault
	void TryInteractDefault();                                                                                               // [0x2366f30] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.Teleport
	void Teleport(FPrisonerTeleportRequest& request);                                                                        // [0x2362da0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.TakeItemInHandsOnServer
	void TakeItemInHandsOnServer(AItem* Item);                                                                               // [0x2366ea0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.TakeItemInHands
	void TakeItemInHands(AItem* Item);                                                                                       // [0x2366e10] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.TabModeOpened__DelegateSignature
	void TabModeOpened__DelegateSignature(ETabMode tabMode);                                                                 // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.Prisoner.TabModeClosed__DelegateSignature
	void TabModeClosed__DelegateSignature();                                                                                 // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.Prisoner.SwitchToVehicleSeatIndex
	void SwitchToVehicleSeatIndex(int32_t Index);                                                                            // [0x2366d80] Final|Native|Private|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.StartPrimaryMeleeAttack
	void StartPrimaryMeleeAttack();                                                                                          // [0x2366d20] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.StartMeleeDodge
	void StartMeleeDodge(EDodgeDirectionType Direction);                                                                     // [0x2366ca0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.StartMeleeAttack
	void StartMeleeAttack(FGameplayTag& meleeAttackType);                                                                    // [0x2366c10] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.ShowSpawnScreen
	void ShowSpawnScreen(bool loadoutMenu);                                                                                  // [0x2366b80] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.ShouldLookatMeleeTarget
	bool ShouldLookatMeleeTarget();                                                                                          // [0x2366b50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.ShouldIgnoreRotation
	bool ShouldIgnoreRotation();                                                                                             // [0x2366b20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.SetWristwatchBrightness
	void SetWristwatchBrightness(float Value);                                                                               // [0x2366aa0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.SetWeaponAimingTypeOnServer
	void SetWeaponAimingTypeOnServer(EWeaponAimingType Value);                                                               // [0x2366a20] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.SetTargetOnServer
	void SetTargetOnServer(AActor* Target);                                                                                  // [0x2366990] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.SetTargetLeanAmountOnServer
	void SetTargetLeanAmountOnServer(float Value);                                                                           // [0x2366900] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.SetTargetCrouchStage
	void SetTargetCrouchStage(float Value);                                                                                  // [0x2366880] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.SetStance
	void SetStance(EPrisonerStance Value);                                                                                   // [0x2366800] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.SetShouldIgnoreHeadTurningAndLeaning
	void SetShouldIgnoreHeadTurningAndLeaning(bool Value);                                                                   // [0x2366770] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.SetRotationTarget
	void SetRotationTarget(AActor* rotationTarget);                                                                          // [0x23666e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.SetPlayerSoundLevel
	void SetPlayerSoundLevel(float Value);                                                                                   // [0x2366660] Final|Native|Private|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.SetPartWaterWeight
	void SetPartWaterWeight(EPrisonerWettablePart part, float Value);                                                        // [0x2366590] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.SetOverrideIsLimping
	void SetOverrideIsLimping(bool Value);                                                                                   // [0x2366500] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.SetNightVisionEnabled
	void SetNightVisionEnabled(bool Value);                                                                                  // [0x2366470] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.SetMidiDeviceByName
	bool SetMidiDeviceByName(FString Name);                                                                                  // [0x2366370] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.SetMidiDeviceByIndex
	bool SetMidiDeviceByIndex(int32_t Index);                                                                                // [0x23662d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.SetMeleeTargetSelectionMode
	void SetMeleeTargetSelectionMode(EPrisonerMeleeTargetSelectionMode Value);                                               // [0x2366250] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.SetMeleeTarget
	void SetMeleeTarget(AActor* Value);                                                                                      // [0x23661c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.SetItemInHandsOnClient
	void SetItemInHandsOnClient(AItem* Item);                                                                                // [0x2366130] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.Prisoner.SetIsLimpingOverrideEnabled
	void SetIsLimpingOverrideEnabled(bool Value);                                                                            // [0x23660a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.SetIsInCombatModeOnServer
	void SetIsInCombatModeOnServer(bool Value);                                                                              // [0x2366010] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.SetIsInCombatMode
	void SetIsInCombatMode(bool Value);                                                                                      // [0x2365f80] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.SetIsEnabled
	void SetIsEnabled(bool Value);                                                                                           // [0x2365ef0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.SetGameEvent
	void SetGameEvent(AGameEventBase* gameEvent);                                                                            // [0x2365e60] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.SetFreeLookEnabledOnServer
	void SetFreeLookEnabledOnServer(bool Value);                                                                             // [0x2365dd0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.SetFreeLookEnabled
	void SetFreeLookEnabled(bool Value);                                                                                     // [0x2365d40] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.SetDesiredPaceOnServer
	void SetDesiredPaceOnServer(char Value);                                                                                 // [0x2365cc0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.SetDesiredPace
	void SetDesiredPace(EPrisonerMovementPace Value);                                                                        // [0x2365c40] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.SetDesiredLeanAmount
	void SetDesiredLeanAmount(float Value);                                                                                  // [0x2365bc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.Server_UnpackAmmoBox
	void Server_UnpackAmmoBox(AAmmunitionBoxItem* Item);                                                                     // [0x23659f0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_UnloadAmmoFromMagazine
	void Server_UnloadAmmoFromMagazine(AWeaponAttachmentMagazine* magazine);                                                 // [0x2365960] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_TurnPrisonerInPlace
	void Server_TurnPrisonerInPlace(float turnAngle);                                                                        // [0x23658d0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_ThrowRequested
	void Server_ThrowRequested();                                                                                            // [0x23658b0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.Server_SyncWeaponState
	void Server_SyncWeaponState(AWeapon* Weapon, FWeaponStateSyncData Data);                                                 // [0x23657b0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_SwapWeaponAttachments
	void Server_SwapWeaponAttachments(AWeapon* Weapon, AWeaponAttachment* oldAttachment, AWeaponAttachment* newAttachment);  // [0x23656a0] Net|NetReliableNative|Event|Protected|NetServer 
	// Function /Script/ConZ.Prisoner.Server_StoreAmmoInAmmoBox
	void Server_StoreAmmoInAmmoBox(AAmmunitionItem* ammo, AAmmunitionBoxItem* Box);                                          // [0x23655d0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_SplitCurrencyItem
	void Server_SplitCurrencyItem(AItem* currencyItem, int32_t newAmount);                                                   // [0x2365500] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_SplitAmmo
	void Server_SplitAmmo(AAmmunitionItem* ammoItem);                                                                        // [0x2365470] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_SpawnScreenWakeUp
	void Server_SpawnScreenWakeUp();                                                                                         // [0x2365450] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.Server_SpawnAmmunitionArrow
	void Server_SpawnAmmunitionArrow(FAmmunitionArrowSpawningParamsHelper AmmunitionArrowSpawningParamsHelper, USceneComponent* AttachComponent, FName attachBoneName, FTransform relativeAttachTransform); // [0x23652a0] Net|NetReliableNative|Event|Public|NetServer|HasDefaults 
	// Function /Script/ConZ.Prisoner.Server_SetVehicleWeaponAimingStance
	void Server_SetVehicleWeaponAimingStance(EVehicleWeaponAimingStance stance);                                             // [0x2365220] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_SetVehicleAimingYaw
	void Server_SetVehicleAimingYaw(float angle);                                                                            // [0x2365190] Final|Net|Native|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.Server_SetTargetCrouchStage
	void Server_SetTargetCrouchStage(float Value);                                                                           // [0x2365100] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_SetShouldIgnoreHeadTurning
	void Server_SetShouldIgnoreHeadTurning(bool Value);                                                                      // [0x2365070] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.Server_SetShadowIntensity
	void Server_SetShadowIntensity(char Value);                                                                              // [0x2364ff0] Final|Net|Native|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.Server_SetScopingWithItemInHandsState
	void Server_SetScopingWithItemInHandsState(EScopingWithItemInHandsState Value);                                          // [0x22d5a10] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.Server_SetRotationTarget
	void Server_SetRotationTarget(AActor* rotationTarget);                                                                   // [0x2364f60] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.Server_SetPlayingInstrumentState
	void Server_SetPlayingInstrumentState(EPlayingInstrumentState Value);                                                    // [0x2364ee0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.Server_SetMeleeTarget
	void Server_SetMeleeTarget(AActor* Value);                                                                               // [0x22d26f0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.Server_SetItemInHandsVisualObstructionDepth
	void Server_SetItemInHandsVisualObstructionDepth(float Value);                                                           // [0x2364e50] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.Server_SetItemInHandsActualObstructionDepth
	void Server_SetItemInHandsActualObstructionDepth(float Value);                                                           // [0x2364dc0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.Server_SetHoldBreathState
	void Server_SetHoldBreathState(EHoldBreathState Value);                                                                  // [0x2364d40] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.Server_SetGameEventLoadout
	void Server_SetGameEventLoadout(UClass* primary, TArray<UClass*> primaryAttachments, UClass* secondary, TArray<UClass*> secondaryAttachments, UClass* tertiary, TArray<UClass*> tertiaryAttachments, TArray<UClass*> outfit, TArray<UClass*> support); // [0x2364a70] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.Server_SetExaminedPrisoner
	void Server_SetExaminedPrisoner(APrisoner* Prisoner);                                                                    // [0x23649e0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_SetDangerCooldown
	void Server_SetDangerCooldown(float cooldown, APrisoner* Prisoner);                                                      // [0x2364900] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_SetCarryingItemState
	void Server_SetCarryingItemState(ECarryingItemState State);                                                              // [0x2364880] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.Server_SetActiveParachute
	void Server_SetActiveParachute(AClothesItem* Parachute);                                                                 // [0x23647f0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.Server_RespawnAtCommonSpawnLocation
	void Server_RespawnAtCommonSpawnLocation(EPrisonerCommonSpawnLocation commonSpawnLocation, FSectorId SectorId);          // [0x2364720] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_ReportVote
	void Server_ReportVote(bool Vote);                                                                                       // [0x2364690] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.Server_RemoveNearbyFoliageInstances
	void Server_RemoveNearbyFoliageInstances(TArray<FPrisonerNearbyFoliageInstanceInfoReplicated> replicatedInstanceInfo);   // [0x23645f0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.Server_RemoveInventoryNode
	void Server_RemoveInventoryNode(UObject* Item, UObject* container, FInventoryPositionDataRepHelper position, UObject* Target); // [0x2364490] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.Server_PropagateFootstepEnhancerSound
	void Server_PropagateFootstepEnhancerSound();                                                                            // [0x2364470] Net|Native|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_PrisonWalletHandleItemSpawning
	void Server_PrisonWalletHandleItemSpawning(FVector Location);                                                            // [0x23643e0] Net|NetReliableNative|Event|Public|NetServer|HasDefaults 
	// Function /Script/ConZ.Prisoner.Server_OnLockpickingProtectionTriggered
	void Server_OnLockpickingProtectionTriggered(UObject* Lockpickable);                                                     // [0x2364350] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_MinigameEnded
	void Server_MinigameEnded(UClass* minigameClass, bool isPractice, bool Succeeded, TArray<TWeakObjectPtr> tools);         // [0x23641d0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_lockpickingEnded
	void Server_lockpickingEnded(UObject* Lockpickable, bool Succeeded, FConZBaseElementIdentifier lockpickableBaseElement); // [0x2365a80] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_LoadAmmoIntoMagazine
	void Server_LoadAmmoIntoMagazine(AAmmunitionItem* AmmunitionItem, AWeaponAttachmentMagazine* magazine, int32_t Count);   // [0x23640c0] Net|NetReliableNative|Event|Protected|NetServer 
	// Function /Script/ConZ.Prisoner.Server_JumpOffLadder
	void Server_JumpOffLadder();                                                                                             // [0x23640a0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_JoinCurrencyItem
	void Server_JoinCurrencyItem(AItem* finalItem, AItem* initiatingItem);                                                   // [0x2363fd0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_JoinAmmo
	void Server_JoinAmmo(AAmmunitionItem* finalItem, AAmmunitionItem* initiatingItem);                                       // [0x2363f00] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_InteractWithLadder
	void Server_InteractWithLadder(FVector traceOrigin, FVector traceDirection);                                             // [0x2363e40] Net|NetReliableNative|Event|Public|NetServer|HasDefaults 
	// Function /Script/ConZ.Prisoner.Server_InstrumentStopTone
	void Server_InstrumentStopTone(EPlayableInstrumentTone tone, float timeOffset, int32_t octave);                          // [0x2363d30] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.Server_InstrumentPlayTone
	void Server_InstrumentPlayTone(EPlayableInstrumentTone tone, float timeOffset, int32_t octave);                          // [0x2363c20] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.Server_InstrumentOctaveUp
	void Server_InstrumentOctaveUp();                                                                                        // [0x2363c00] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.Server_InstrumentOctaveDown
	void Server_InstrumentOctaveDown();                                                                                      // [0x2363be0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.Server_InitiateCraftedUpgradePlacement
	void Server_InitiateCraftedUpgradePlacement(FConZBaseElementIdentifier elementToBeUpgraded, UPlaceableCraftableItem* upgradeRecipe, FTransform Transform); // [0x2363a50] Net|NetReliableNative|Event|Public|NetServer|HasDefaults 
	// Function /Script/ConZ.Prisoner.Server_InitiateCraftedPlacement
	void Server_InitiateCraftedPlacement(UPlaceableCraftableItem* CraftableItem);                                            // [0x23639c0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_HandleGearMotion
	void Server_HandleGearMotion(EMotionIntensity motionIntensity, bool shouldMakeNoise);                                    // [0x23638e0] Net|Native|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_HandleFootstep
	void Server_HandleFootstep(EMotionIntensity motionIntensity, bool shouldMakeNoise);                                      // [0x2363800] Net|Native|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_ForceUnmount
	void Server_ForceUnmount();                                                                                              // [0x23637e0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_DestroyPlaceable
	void Server_DestroyPlaceable(FDbIntegerId ID);                                                                           // [0x2363750] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_DamageLockpickingTools
	void Server_DamageLockpickingTools(AItem* lockpick, AItem* tensionTool);                                                 // [0x2363680] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_CommitSuicide
	void Server_CommitSuicide();                                                                                             // [0x2363660] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_ClimbWindow
	void Server_ClimbWindow();                                                                                               // [0x2363640] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_Climb
	void Server_Climb();                                                                                                     // [0x2363620] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_ClearDangerCooldown
	void Server_ClearDangerCooldown();                                                                                       // [0x2363600] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_ApplyPointDamage
	void Server_ApplyPointDamage(float Damage, FHitResult HitResult, EDamageChannel damageChannel);                          // [0x2363490] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.Server_AIMovementFinished
	void Server_AIMovementFinished(bool wasSuccessful);                                                                      // [0x2363200] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.Server_AddNearbyFoliageInstances
	void Server_AddNearbyFoliageInstances(TArray<FPrisonerNearbyFoliageInstanceInfoReplicated> replicatedInstanceInfo);      // [0x23633f0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.Server_AddInventoryNode
	void Server_AddInventoryNode(UObject* Item, UObject* container, FInventoryPositionDataRepHelper position, UObject* Target); // [0x2363290] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.Prisoner.SendSquadInvitationOnServer
	void SendSquadInvitationOnServer(APrisoner* invited);                                                                    // [0x2363170] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.SendSquadInvitationOnClient
	void SendSquadInvitationOnClient(APrisoner* invitor, FString invitorName);                                               // [0x2363080] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.Prisoner.SendMessageToClient
	void SendMessageToClient(FString Message, UAkAudioEvent* AudioEvent);                                                    // [0x2362fa0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.RightShoulderHolsterInteract
	void RightShoulderHolsterInteract();                                                                                     // [0x2362f80] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.Revive
	void Revive();                                                                                                           // [0x2362f60] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.RespawnAtCommonSpawnLocation
	void RespawnAtCommonSpawnLocation(EPrisonerCommonSpawnLocation commonSpawnLocation, FSectorId SectorId);                 // [0x2362e90] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.RequestRespawn
	void RequestRespawn(FPrisonerTeleportRequest& request);                                                                  // [0x2362da0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.RemoveWeaponAttachment
	void RemoveWeaponAttachment(AWeapon* Weapon, AWeaponAttachment* Attachment);                                             // [0x2362cd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.RemoveItemFromHands
	void RemoveItemFromHands(EHandsHolstersType preferedHolsterType);                                                        // [0x2362c50] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.RemoveFromSquadOnServer
	void RemoveFromSquadOnServer(FDbIntegerId UserProfileId);                                                                // [0x2362bc0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.RemoveBondage
	void RemoveBondage();                                                                                                    // [0x2362ba0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.PromoteSquadMemberOnServer
	void PromoteSquadMemberOnServer(FDbIntegerId UserProfileId);                                                             // [0x2362b10] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.PlaceItemInInventoryOrHolster
	void PlaceItemInInventoryOrHolster(AItem* Item, bool tryToJoinItems);                                                    // [0x2362a40] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.OpenInteractDefaultContextMenu
	void OpenInteractDefaultContextMenu();                                                                                   // [0x2362a20] Final|Native|Public  
	// Function /Script/ConZ.Prisoner.OnRep_VehicleWeaponAimingStance
	void OnRep_VehicleWeaponAimingStance();                                                                                  // [0x2362a00] Final|Native|Protected 
	// Function /Script/ConZ.Prisoner.OnRep_UserProfileName
	void OnRep_UserProfileName();                                                                                            // [0x23629e0] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.OnRep_UserFakeName
	void OnRep_UserFakeName();                                                                                               // [0x23629c0] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.OnRep_ThrowingComponent
	void OnRep_ThrowingComponent();                                                                                          // [0xb92f40] Final|Native|Public  
	// Function /Script/ConZ.Prisoner.OnRep_ScopingWithItemInHandsState
	void OnRep_ScopingWithItemInHandsState();                                                                                // [0x23629a0] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.OnRep_RotationTarget
	void OnRep_RotationTarget();                                                                                             // [0x2362980] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.OnRep_RightShoulderHolsteredItem
	void OnRep_RightShoulderHolsteredItem();                                                                                 // [0x2362960] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.OnRep_PlayingInstrumentState
	void OnRep_PlayingInstrumentState();                                                                                     // [0x2362940] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.OnRep_PackedWetness
	void OnRep_PackedWetness(uint32_t oldWetness);                                                                           // [0x23628b0] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.OnRep_PackedBooleans
	void OnRep_PackedBooleans();                                                                                             // [0x2362890] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.OnRep_Mount
	void OnRep_Mount();                                                                                                      // [0x2362870] Native|Protected     
	// Function /Script/ConZ.Prisoner.OnRep_MeleeTarget
	void OnRep_MeleeTarget();                                                                                                // [0x2362850] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.OnRep_LeftShoulderHolsteredItem
	void OnRep_LeftShoulderHolsteredItem();                                                                                  // [0x2362830] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.OnRep_ItemInHandsVisualObstructionDepth
	void OnRep_ItemInHandsVisualObstructionDepth(char oldValue);                                                             // [0x23627b0] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.OnRep_IsInCombatMode
	void OnRep_IsInCombatMode();                                                                                             // [0x2362790] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.OnRep_HandBondage
	void OnRep_HandBondage();                                                                                                // [0x2362770] Final|Native|Public  
	// Function /Script/ConZ.Prisoner.OnRep_GameEvent
	void OnRep_GameEvent();                                                                                                  // [0x2362750] Final|Native|Public  
	// Function /Script/ConZ.Prisoner.OnRep_FreeLookEnabled
	void OnRep_FreeLookEnabled();                                                                                            // [0x2362730] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.OnRep_FishingComponent
	void OnRep_FishingComponent();                                                                                           // [0xb92f40] Final|Native|Public  
	// Function /Script/ConZ.Prisoner.OnRep_DesiredStance
	void OnRep_DesiredStance();                                                                                              // [0x2362710] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.OnRep_DesiredPace
	void OnRep_DesiredPace();                                                                                                // [0xb92f40] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.OnRep_DeluxeVersion
	void OnRep_DeluxeVersion();                                                                                              // [0x23626f0] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.OnRep_CarryingItemState
	void OnRep_CarryingItemState();                                                                                          // [0x23626d0] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.OnRep_AimOffset
	void OnRep_AimOffset();                                                                                                  // [0x23626b0] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.OnPlaceableDestroyed
	void OnPlaceableDestroyed(AActor* Actor);                                                                                // [0x2362620] Final|Native|Public  
	// Function /Script/ConZ.Prisoner.OnMovementUpdated
	void OnMovementUpdated(float DeltaSeconds, FVector OldLocation, FVector OldVelocity);                                    // [0x23624f0] Native|Public|HasDefaults 
	// Function /Script/ConZ.Prisoner.OnMidiEvent
	void OnMidiEvent(UMIDIDeviceController* MIDIDeviceController, int32_t Timestamp, EMIDIEventType EventType, int32_t Channel, int32_t ControlID, int32_t Velocity, int32_t RawEventType); // [0x23622e0] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.OnInteractDefaultContextMenuClosed
	void OnInteractDefaultContextMenuClosed();                                                                               // [0x23622c0] Final|Native|Public  
	// Function /Script/ConZ.Prisoner.OnHearNoise
	void OnHearNoise(APawn* instigatorPawn, FVector& Location, float Volume);                                                // [0x23621b0] Final|Native|Protected|HasOutParms|HasDefaults 
	// Function /Script/ConZ.Prisoner.OnExaminedPrisonerUnequippedItem
	void OnExaminedPrisonerUnequippedItem(UPrisonerInventoryComponent* inventory, AItem* Item);                              // [0x23620e0] Final|Native|Public  
	// Function /Script/ConZ.Prisoner.OnExaminedPrisonerEquippedItem
	void OnExaminedPrisonerEquippedItem(UPrisonerInventoryComponent* inventory, AItem* Item);                                // [0x2362010] Final|Native|Public  
	// Function /Script/ConZ.Prisoner.OnBorderCrossingPenaltyChange
	void OnBorderCrossingPenaltyChange(APrisoner* Prisoner, EPrisonerBorderCrossingPenalty newPenalty);                      // [0x2361f40] Final|Native|Public  
	// Function /Script/ConZ.Prisoner.NetMulticast_UpdateAdminStates
	void NetMulticast_UpdateAdminStates(char states);                                                                        // [0x2361ec0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Prisoner.NetMulticast_TurnPrisonerInPlace
	void NetMulticast_TurnPrisonerInPlace(float turnAngle);                                                                  // [0x2361e30] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.Prisoner.NetMulticast_SpawnVomitingEffects
	void NetMulticast_SpawnVomitingEffects(bool isForced);                                                                   // [0x2361da0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Prisoner.NetMulticast_SpawnUrinationEffects
	void NetMulticast_SpawnUrinationEffects(bool isForced);                                                                  // [0x2361d10] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Prisoner.NetMulticast_SpawnDefecationEffects
	void NetMulticast_SpawnDefecationEffects(bool shouldBeDiarrhea, bool isForced);                                          // [0x2361c40] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Prisoner.NetMulticast_SetUserFakeName
	void NetMulticast_SetUserFakeName(FString fakeName);                                                                     // [0x2361ba0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.Prisoner.NetMulticast_SetupInitialHandBondage
	void NetMulticast_SetupInitialHandBondage();                                                                             // [0x224f460] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.Prisoner.NetMulticast_SetActiveParachute
	void NetMulticast_SetActiveParachute(AClothesItem* Parachute);                                                           // [0x2361b10] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Prisoner.NetMulticast_RemoveNearbyFoliageInstances
	void NetMulticast_RemoveNearbyFoliageInstances(TArray<FPrisonerNearbyFoliageInstanceInfoReplicated> replicatedInstanceInfo); // [0x2361a70] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Prisoner.NetMulticast_PostAudioEventOnPrisoner
	void NetMulticast_PostAudioEventOnPrisoner(UAkAudioEvent* akEvent, bool multiCastToClients);                             // [0x23619a0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Prisoner.NetMulticast_PlayLockpickingProtectionEffects
	void NetMulticast_PlayLockpickingProtectionEffects(UObject* Lockpickable);                                               // [0x2361910] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.Prisoner.NetMulticast_PlayFootstepEnhancerSound
	void NetMulticast_PlayFootstepEnhancerSound();                                                                           // [0x23618f0] Net|Native|Event|NetMulticast|Public 
	// Function /Script/ConZ.Prisoner.NetMulticast_InstrumentStopTone
	void NetMulticast_InstrumentStopTone(EPlayableInstrumentTone tone, float timeOffset, int32_t octave);                    // [0x23617e0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Prisoner.NetMulticast_InstrumentPlayTone
	void NetMulticast_InstrumentPlayTone(EPlayableInstrumentTone tone, float timeOffset, int32_t octave);                    // [0x23616d0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Prisoner.NetMulticast_InstrumentOctaveUp
	void NetMulticast_InstrumentOctaveUp();                                                                                  // [0x2288270] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Prisoner.NetMulticast_InstrumentOctaveDown
	void NetMulticast_InstrumentOctaveDown();                                                                                // [0x23616b0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Prisoner.NetMulticast_HandleLanded
	void NetMulticast_HandleLanded(FVector ImpactVelocity, FHitResult HitResult);                                            // [0x23615a0] Net|Native|Event|NetMulticast|Public|HasDefaults 
	// Function /Script/ConZ.Prisoner.NetMulticast_ForceDeluxePlayer
	void NetMulticast_ForceDeluxePlayer(EDeluxeVersion DeluxeVersion);                                                       // [0x2361520] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.Prisoner.NetMulticast_DespawnUrinationEffects
	void NetMulticast_DespawnUrinationEffects();                                                                             // [0x2361500] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Prisoner.NetMulticast_ApplyPlasticSurgery
	void NetMulticast_ApplyPlasticSurgery(FCharacterTemplate CharacterTemplate);                                             // [0x2361420] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.Prisoner.NetMulticast_ApplyHaircutAndMakeup
	void NetMulticast_ApplyHaircutAndMakeup(FCharacterTemplate CharacterTemplate);                                           // [0x2361340] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.Prisoner.NetMulticast_AIMovementFinished
	void NetMulticast_AIMovementFinished(bool wasSuccessful);                                                                // [0x2361210] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.Prisoner.NetMulticast_AddNearbyFoliageInstances
	void NetMulticast_AddNearbyFoliageInstances(TArray<FPrisonerNearbyFoliageInstanceInfoReplicated> replicatedInstanceInfo); // [0x23612a0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Prisoner.LeftShoulderHolsterInteract
	void LeftShoulderHolsterInteract();                                                                                      // [0x23611f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.LeaveSquadOnServer
	void LeaveSquadOnServer();                                                                                               // [0x23611d0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.LeaveCombatMode
	void LeaveCombatMode(bool PlayAnimation, bool overrideAbilityCheck);                                                     // [0x2361100] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.IsThrowing
	bool IsThrowing();                                                                                                       // [0x23610d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.IsThrowAiming
	bool IsThrowAiming();                                                                                                    // [0x23610a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.IsTeleportInProgress
	bool IsTeleportInProgress();                                                                                             // [0x2361070] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.IsSquadInvitationReceived
	bool IsSquadInvitationReceived();                                                                                        // [0x2361040] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.IsPostFreeLookControllerRotationBlendActive
	bool IsPostFreeLookControllerRotationBlendActive();                                                                      // [0x2361010] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.IsNightVisionEnabled
	bool IsNightVisionEnabled();                                                                                             // [0x2360fe0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.IsMemberOfMySquad
	bool IsMemberOfMySquad(APrisoner* Prisoner);                                                                             // [0x2360f40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.IsMemberOf
	bool IsMemberOf(AConZSquad* Squad);                                                                                      // [0x2360ea0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.IsLimping
	bool IsLimping();                                                                                                        // [0x2360e70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.IsInteracting
	bool IsInteracting();                                                                                                    // [0x2360e40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.IsInFishingMinigame
	bool IsInFishingMinigame();                                                                                              // [0x2360e10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.IsInDanger
	bool IsInDanger();                                                                                                       // [0x2360de0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.IsInCombatMode
	bool IsInCombatMode();                                                                                                   // [0x2360db0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.IsFreeLookEnabled
	bool IsFreeLookEnabled();                                                                                                // [0x2360d80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.IsFishing
	bool IsFishing();                                                                                                        // [0x2360d50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.IsEnabled
	bool IsEnabled();                                                                                                        // [0x2360d20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.IsCompletelyInitialized
	bool IsCompletelyInitialized();                                                                                          // [0x2360cf0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.IsAliveInGameEvent
	bool IsAliveInGameEvent();                                                                                               // [0x2360cc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.IsActorMeleeTargetCandidate
	bool IsActorMeleeTargetCandidate(AActor* Actor);                                                                         // [0x2360c20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.IsActivelyParticipatingInGameEvent
	bool IsActivelyParticipatingInGameEvent();                                                                               // [0x2360bf0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.IsActivelyFishing
	bool IsActivelyFishing();                                                                                                // [0x2360bc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.InventoryComponent_ItemUnequipped
	void InventoryComponent_ItemUnequipped(UPrisonerInventoryComponent* sender, AItem* Item);                                // [0x2360af0] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.InventoryComponent_ItemEquipped
	void InventoryComponent_ItemEquipped(UPrisonerInventoryComponent* sender, AItem* Item);                                  // [0x2360a20] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.InteractWithObjectOnServer
	void InteractWithObjectOnServer(UObject* interactable, EInteractionType interactionType, FInteractionData InteractionData); // [0x2360880] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.InitFromCharacterTemplate
	void InitFromCharacterTemplate(FCharacterTemplate& CharacterTemplate);                                                   // [0x23607a0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.IncreaseCrouchStage
	void IncreaseCrouchStage();                                                                                              // [0x2360780] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.HoveredActorChanged__DelegateSignature
	void HoveredActorChanged__DelegateSignature(AActor* hoveredActor);                                                       // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.Prisoner.HolsterItemOnServer
	void HolsterItemOnServer(AItem* Item, int32_t attachmentSocketHelper);                                                   // [0x23606b0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Prisoner.HitReactComponent_StateChanged
	void HitReactComponent_StateChanged();                                                                                   // [0x2360690] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.HideSpawnScreen
	void HideSpawnScreen();                                                                                                  // [0x2360670] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.HasItemOfClass
	bool HasItemOfClass(UClass* ItemClass);                                                                                  // [0x23605d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.HasItem
	bool HasItem(AItem* Item);                                                                                               // [0x2360530] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.HasHandsUp
	bool HasHandsUp();                                                                                                       // [0x2360500] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.HasHandBondage
	bool HasHandBondage();                                                                                                   // [0x23604d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.HandleIntroCinematicFinished
	void HandleIntroCinematicFinished(AConZCameraManager* cameraManager);                                                    // [0x2360440] Final|Native|Public  
	// Function /Script/ConZ.Prisoner.GetWristwatchComponent
	UChildActorComponent* GetWristwatchComponent();                                                                          // [0x2360410] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetWetness
	float GetWetness();                                                                                                      // [0x23603e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetWeightLoad
	float GetWeightLoad();                                                                                                   // [0x23603b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetWeapon
	AWeapon* GetWeapon();                                                                                                    // [0x2360380] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetWaterMovementParameters
	FPrisonerWaterMovementParameters GetWaterMovementParameters();                                                           // [0x2360340] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetVisionEffectsComponent
	UVisionEffectsComponent* GetVisionEffectsComponent();                                                                    // [0x2360310] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetVehicleWeaponAimingStance
	EVehicleWeaponAimingStance GetVehicleWeaponAimingStance();                                                               // [0x23602e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetUserProfileName
	FString GetUserProfileName();                                                                                            // [0x23602a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetUserProfile
	UUserProfile* GetUserProfile();                                                                                          // [0x2360270] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetUserId
	FString GetUserId();                                                                                                     // [0x2360230] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetUserActiveName
	FString GetUserActiveName();                                                                                             // [0x23601f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetThrowingComponent
	UPrisonerThrowComponent* GetThrowingComponent();                                                                         // [0x23601c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetTargetCrouchStage
	float GetTargetCrouchStage();                                                                                            // [0x2360190] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetTacticsBlobMaterial
	UMaterialInstanceDynamic* GetTacticsBlobMaterial();                                                                      // [0x2360160] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetStance
	EPrisonerStance GetStance();                                                                                             // [0x2360130] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetSquad
	AConZSquad* GetSquad();                                                                                                  // [0x2360100] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetShouldIgnoreHeadTurningAndLeaning
	bool GetShouldIgnoreHeadTurningAndLeaning();                                                                             // [0x23600d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetServerUserProfileId
	FDbIntegerId GetServerUserProfileId();                                                                                   // [0x23600a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetSavedSpawnRotation
	FRotator GetSavedSpawnRotation();                                                                                        // [0x2360060] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetSavedSpawnLocationActive
	bool GetSavedSpawnLocationActive();                                                                                      // [0x2360030] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetSavedSpawnLocation
	FVector GetSavedSpawnLocation();                                                                                         // [0x235fff0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetRotationTarget
	AActor* GetRotationTarget();                                                                                             // [0x235ffc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetPrisonWalletComponent
	UPrisonerPrisonWalletComponent* GetPrisonWalletComponent();                                                              // [0x235ff30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetPrisonerMovement
	UPrisonerMovementComponent* GetPrisonerMovement();                                                                       // [0x235ff90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetPrisonerAnimInstance
	UPrisonerAnimInstance* GetPrisonerAnimInstance();                                                                        // [0x235ff60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetPenisSkeletalMeshComponent
	USkeletalMeshComponent* GetPenisSkeletalMeshComponent();                                                                 // [0x235ff00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetPartWetness
	float GetPartWetness(EPrisonerWettablePart part);                                                                        // [0x235fe70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetPartWaterWeight
	float GetPartWaterWeight(EPrisonerWettablePart part);                                                                    // [0x235fde0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetOverrideIsLimping
	bool GetOverrideIsLimping();                                                                                             // [0x235fdb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetNearbyFoliageInfo
	FPrisonerNearbyFoliageInfo GetNearbyFoliageInfo();                                                                       // [0x235fd70] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetMusicPlayerComponent
	UPrisonerMusicPlayerComponent* GetMusicPlayerComponent();                                                                // [0x235fd40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetMotionIntensity
	EMotionIntensity GetMotionIntensity();                                                                                   // [0x235fd10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetMeleeTargetSelectionMode
	EPrisonerMeleeTargetSelectionMode GetMeleeTargetSelectionMode();                                                         // [0x235fce0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetMeleeTarget
	AActor* GetMeleeTarget();                                                                                                // [0x235fcb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetMaxPartWaterWeight
	float GetMaxPartWaterWeight(EPrisonerWettablePart part);                                                                 // [0x235fc20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetMaxAllowedPace
	EPrisonerMovementPace GetMaxAllowedPace();                                                                               // [0x235fbf0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetLookatMeleeTargetAimOffset
	FRotator GetLookatMeleeTargetAimOffset();                                                                                // [0x235fbb0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetLeanAmount
	float GetLeanAmount();                                                                                                   // [0x235fb80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetItemOfClass
	AItem* GetItemOfClass(UClass* ItemClass);                                                                                // [0x235fae0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.GetItemInHands
	AItem* GetItemInHands();                                                                                                 // [0x235fab0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetIsLimpingOverrideEnabled
	bool GetIsLimpingOverrideEnabled();                                                                                      // [0x235fa80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetIsInFirstPersonView
	bool GetIsInFirstPersonView();                                                                                           // [0x235fa50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetHoldBreathState
	EHoldBreathState GetHoldBreathState();                                                                                   // [0x235fa20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetHandBondage
	UBondageComponent* GetHandBondage();                                                                                     // [0x235f9f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetGroundMovementParameters
	FPrisonerGroundMovementParameters GetGroundMovementParameters();                                                         // [0x235f9b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetGameEvent
	AGameEventBase* GetGameEvent();                                                                                          // [0x235f980] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetFishingRod
	AFishingRod* GetFishingRod();                                                                                            // [0x235f950] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetFishingComponent
	UPrisonerFishingComponent* GetFishingComponent();                                                                        // [0x235f920] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetDesiredPace
	EPrisonerMovementPace GetDesiredPace();                                                                                  // [0x235f8f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetDesiredLeanAmount
	float GetDesiredLeanAmount();                                                                                            // [0x235f8c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetCurrentMidiDeviceIndex
	int32_t GetCurrentMidiDeviceIndex();                                                                                     // [0x235f890] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetCurrentHitReactType
	FGameplayTag GetCurrentHitReactType();                                                                                   // [0x235f850] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetCrouchStage
	float GetCrouchStage();                                                                                                  // [0x235f820] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetCombatMode
	EPrisonerCombatMode GetCombatMode();                                                                                     // [0x235f7f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetCollidingNearbyFoliageInfo
	FPrisonerNearbyFoliageInfo GetCollidingNearbyFoliageInfo();                                                              // [0x235f7b0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetClampedDesiredPace
	EPrisonerMovementPace GetClampedDesiredPace();                                                                           // [0x235f780] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetBruisingComponent
	UBruisingComponent* GetBruisingComponent();                                                                              // [0x235f750] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetBodySimulation
	UPrisonerBodySimulationComponent* GetBodySimulation();                                                                   // [0x235f720] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetAngularVelocity
	float GetAngularVelocity();                                                                                              // [0x235f6f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GetAimOffset
	FRotator GetAimOffset();                                                                                                 // [0x235f6b0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.GameEventFriendlyFireCheck
	bool GameEventFriendlyFireCheck(APrisoner* Other);                                                                       // [0x235f610] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.FindNextOrPreviousMeleeTarget
	AActor* FindNextOrPreviousMeleeTarget(AActor* Target, bool Next);                                                        // [0x235f540] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.ExamineItem
	void ExamineItem(AItem* Item);                                                                                           // [0x235f4b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.EquippedNightVisionGoggles_ActivatedChanged
	void EquippedNightVisionGoggles_ActivatedChanged(ANightVisionGogglesItem* Item);                                         // [0x235f420] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.EnterCombatMode
	bool EnterCombatMode();                                                                                                  // [0x235f3f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.DropItemFromHands
	void DropItemFromHands();                                                                                                // [0x235f3d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.DidGameEventRoundStarted
	bool DidGameEventRoundStarted();                                                                                         // [0x235f3a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.DetonateHead
	void DetonateHead(bool shouldDestroyHeadgear);                                                                           // [0x23537e0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.Prisoner.DestroyThrowingComponent
	void DestroyThrowingComponent();                                                                                         // [0x235f380] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.DestroyPrisonWalletComponent
	void DestroyPrisonWalletComponent();                                                                                     // [0x235f360] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.DestroyPlaceable
	void DestroyPlaceable(FDbIntegerId ID);                                                                                  // [0x235f2e0] Final|Native|Public  
	// Function /Script/ConZ.Prisoner.DestroyFishingComponent
	void DestroyFishingComponent();                                                                                          // [0x235f2c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.DemoteSquadMemberOnServer
	void DemoteSquadMemberOnServer(FDbIntegerId UserProfileId);                                                              // [0x235f230] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.DecreaseCrouchStage
	void DecreaseCrouchStage();                                                                                              // [0x235f210] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.CreateThrowingComponent
	UPrisonerThrowComponent* CreateThrowingComponent(AItem* itemToThrow, EThrowingAnimationType animationType);              // [0x235f140] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.CreateSquadOnServer
	void CreateSquadOnServer();                                                                                              // [0x235f120] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.CreatePrisonWalletComponent
	UPrisonerPrisonWalletComponent* CreatePrisonWalletComponent();                                                           // [0x235f0f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.CreateMusicPlayerComponent
	UPrisonerMusicPlayerComponent* CreateMusicPlayerComponent();                                                             // [0x235f0c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.CreateFishingComponent
	UPrisonerFishingComponent* CreateFishingComponent();                                                                     // [0x235f090] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.ConstructWristwatchChildActor
	void ConstructWristwatchChildActor();                                                                                    // [0x235f070] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.CommitSuicide
	void CommitSuicide();                                                                                                    // [0x235f050] Final|Exec|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.Client_TriggerMeleeHitEffect
	void Client_TriggerMeleeHitEffect();                                                                                     // [0x22d5e20] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/ConZ.Prisoner.Client_TriggerBulletHitEffect
	void Client_TriggerBulletHitEffect();                                                                                    // [0x235f030] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/ConZ.Prisoner.Client_SpawnScreenAllowWakeUp
	void Client_SpawnScreenAllowWakeUp();                                                                                    // [0x235f010] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.Prisoner.Client_ShowSpawnScreen
	void Client_ShowSpawnScreen(bool loadoutMenu);                                                                           // [0x235ef80] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.Prisoner.Client_SetSavedSpawnLocation
	void Client_SetSavedSpawnLocation(bool Active, FVector Location, FVector Velocity, FRotator Rotation);                   // [0x235edf0] Net|NetReliableNative|Event|Public|HasDefaults|NetClient 
	// Function /Script/ConZ.Prisoner.Client_SetIsEligibleForFreePlasticSurgeryChanged
	void Client_SetIsEligibleForFreePlasticSurgeryChanged(bool Value);                                                       // [0x235ed60] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/ConZ.Prisoner.Client_OpenParachute
	void Client_OpenParachute();                                                                                             // [0x2353010] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/ConZ.Prisoner.Client_OnTakeDamage
	void Client_OnTakeDamage(float Damage, FDamageEvent DamageEvent, AController* eventInstigator, AActor* damageObject);    // [0x235ec00] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.Prisoner.Client_OnPhoenixTearsInjection
	void Client_OnPhoenixTearsInjection();                                                                                   // [0x2267fb0] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/ConZ.Prisoner.Client_OnNoiseInstigated
	void Client_OnNoiseInstigated(float noiseLevel);                                                                         // [0x235eb70] Net|Native|Event|Public|NetClient 
	// Function /Script/ConZ.Prisoner.Client_OnExitPhotoMode
	void Client_OnExitPhotoMode();                                                                                           // [0x2288700] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.Prisoner.Client_OnEnterPhotoMode
	void Client_OnEnterPhotoMode();                                                                                          // [0x235eb50] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.Prisoner.Client_OnAIDetectionTimerChanged
	void Client_OnAIDetectionTimerChanged(float detectionTimer);                                                             // [0x235eac0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.Prisoner.Client_LoadAmmoIntoMagazine
	void Client_LoadAmmoIntoMagazine(AWeaponAttachmentMagazine* magazine, TArray<FAmmunitionData> ammoData);                 // [0x235e9d0] Net|NetReliableNative|Event|Protected|NetClient 
	// Function /Script/ConZ.Prisoner.Client_Interact
	void Client_Interact(UObject* interactable, EInteractionType interactionType, FInteractionData InteractionData);         // [0x235e830] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.Prisoner.Client_HighlightKeyboardOnDamage
	void Client_HighlightKeyboardOnDamage();                                                                                 // [0x235e810] Final|Net|Native|Event|Private|NetClient 
	// Function /Script/ConZ.Prisoner.Client_HideSpawnScreen
	void Client_HideSpawnScreen();                                                                                           // [0x235e7f0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.Prisoner.Client_FadeInVision
	void Client_FadeInVision(float Duration);                                                                                // [0x235e760] Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.Client_ActivateIntroCinematic
	void Client_ActivateIntroCinematic(float initialAltitude);                                                               // [0x235e6d0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.Prisoner.ClearMalfunction
	void ClearMalfunction(EWeaponMalfunction malfunction);                                                                   // [0x235e650] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.ClearGameEventLoadout
	void ClearGameEventLoadout();                                                                                            // [0x235e630] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.ClearEquipment
	void ClearEquipment();                                                                                                   // [0x235e610] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.ChooseFirstMeleeTarget
	AActor* ChooseFirstMeleeTarget();                                                                                        // [0x235e5e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.ChangeSquadData
	void ChangeSquadData(FString Name, FString Message, FString information, FConZSquadEmblem emblem);                       // [0x235e450] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.CarryItem
	void CarryItem(AItem* Item);                                                                                             // [0x235e3c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.CarriedItemsVisibilityChanged__DelegateSignature
	void CarriedItemsVisibilityChanged__DelegateSignature(bool Visible);                                                     // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.Prisoner.CapsuleComponent_PhysicsVolumeChanged
	void CapsuleComponent_PhysicsVolumeChanged(APhysicsVolume* Volume);                                                      // [0x235e330] Final|Native|Private 
	// Function /Script/ConZ.Prisoner.CanTakeItemInHands
	bool CanTakeItemInHands(AItem* Item);                                                                                    // [0x235e230] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.CanLeaveCombatMode
	bool CanLeaveCombatMode();                                                                                               // [0x235e200] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.CanEnterMeleeCombatMode
	bool CanEnterMeleeCombatMode();                                                                                          // [0x235e1d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.CanEnterCombatMode
	bool CanEnterCombatMode();                                                                                               // [0x235e1a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.CancelSquadInvitationOnServer
	void CancelSquadInvitationOnServer();                                                                                    // [0x235e310] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.CancelSquadInvitationOnClient
	void CancelSquadInvitationOnClient();                                                                                    // [0x235e2f0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.Prisoner.CancelInteractableDragging
	void CancelInteractableDragging();                                                                                       // [0x235e2d0] Final|Native|Public  
	// Function /Script/ConZ.Prisoner.CalculateRespawnPriceBasedOnSquadSize
	int32_t CalculateRespawnPriceBasedOnSquadSize(int32_t defaultPrice, EPrisonerCommonSpawnLocation SpawnLocation);         // [0x235e0d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.CalculateAIPerceptionPercentage
	float CalculateAIPerceptionPercentage();                                                                                 // [0x235e0a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Prisoner.BorderCrossingPenaltyChange__DelegateSignature
	void BorderCrossingPenaltyChange__DelegateSignature(APrisoner* sender, EPrisonerBorderCrossingPenalty newPenalty);       // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.Prisoner.BaseInteractionComponent_OnBaseInteractionEvent
	void BaseInteractionComponent_OnBaseInteractionEvent(UBaseInteractionComponent* Component, FBaseInteractionEvent& BaseInteractionEvent); // [0x235dfb0] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.Prisoner.AreGenitalsExposed
	bool AreGenitalsExposed();                                                                                               // [0x235df80] Final|Native|Public|Const 
	// Function /Script/ConZ.Prisoner.AreBreastsExposed
	bool AreBreastsExposed();                                                                                                // [0x235df50] Final|Native|Public|Const 
	// Function /Script/ConZ.Prisoner.AddWeaponAttachment
	void AddWeaponAttachment(AWeapon* Weapon, AWeaponAttachment* Attachment);                                                // [0x235de80] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.AddToSquadOnServer
	void AddToSquadOnServer(FDbIntegerId squadId);                                                                           // [0x235ddf0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.AddHandBondage
	void AddHandBondage(AItem* bondageItem);                                                                                 // [0x235dd60] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Prisoner.AcceptSquadInvitationOnServer
	void AcceptSquadInvitationOnServer(AConZSquad* Squad, bool accepted);                                                    // [0x235dc90] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
};

/// Class /Script/ConZ.PrisonerUIData
/// Size: 0x07E0 (0x000028 - 0x000808)
class UPrisonerUIData : public UObject
{ 
public:
	FText                                              _attributeDescriptions;                                     // 0x0028   (0x07E0)  
};

/// Class /Script/ConZ.PrisonerSkillsUIData
/// Size: 0x0000 (0x000028 - 0x000028)
class UPrisonerSkillsUIData : public UObject
{ 
public:
};

/// Class /Script/ConZ.PrisonerSkillUIData
/// Size: 0x0028 (0x000028 - 0x000050)
class UPrisonerSkillUIData : public UObject
{ 
public:
	FText                                              _description;                                               // 0x0028   (0x0018)  
	UClass*                                            _skillClass;                                                // 0x0040   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0048   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerSkillUIData_Endurance
/// Size: 0x0010 (0x000050 - 0x000060)
class UPrisonerSkillUIData_Endurance : public UPrisonerSkillUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0050   (0x0010)  MISSED
};

/// Class /Script/ConZ.EngineeringSkill
/// Size: 0x00F0 (0x0000B0 - 0x0001A0)
class UEngineeringSkill : public UIntelligenceSkill
{ 
public:
	FEngineeringSkillExperienceAwards                  NoSkillExperienceAwards;                                    // 0x00B0   (0x0010)  
	FEngineeringSkillExperienceAwards                  BasicSkillExperienceAwards;                                 // 0x00C0   (0x0010)  
	FEngineeringSkillExperienceAwards                  MediumSkillExperienceAwards;                                // 0x00D0   (0x0010)  
	FEngineeringSkillExperienceAwards                  AdvancedSkillExperienceAwards;                              // 0x00E0   (0x0010)  
	FEngineeringSkillExperienceAwards                  AboveAdvancedSkillExperienceAwards;                         // 0x00F0   (0x0010)  
	FEngineeringSkillParametersPerSkillLevel           NoSkillParameters;                                          // 0x0100   (0x0020)  
	FEngineeringSkillParametersPerSkillLevel           BasicSkillParameters;                                       // 0x0120   (0x0020)  
	FEngineeringSkillParametersPerSkillLevel           MediumSkillParameters;                                      // 0x0140   (0x0020)  
	FEngineeringSkillParametersPerSkillLevel           AdvancedSkillParameters;                                    // 0x0160   (0x0020)  
	FEngineeringSkillParametersPerSkillLevel           AboveAdvancedSkillParameters;                               // 0x0180   (0x0020)  
};

/// Class /Script/ConZ.EntityDebuggerEntitySetup
/// Size: 0x0010 (0x000080 - 0x000090)
class UEntityDebuggerEntitySetup : public UEntitySetup
{ 
public:
	bool                                               DrawQuerySphere;                                            // 0x0080   (0x0001)  
	bool                                               DrawTopLevelEntitiesOnly;                                   // 0x0081   (0x0001)  
	bool                                               DrawEntityBounds;                                           // 0x0082   (0x0001)  
	bool                                               DrawEntityDebugStrings;                                     // 0x0083   (0x0001)  
	bool                                               DrawEntityComponentDebugStrings;                            // 0x0084   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0085   (0x0003)  MISSED
	int32_t                                            DebugStringLineBreak;                                       // 0x0088   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x008C   (0x0004)  MISSED
};

/// Class /Script/ConZ.EntityLifeTimeComponentSetup
/// Size: 0x0000 (0x000048 - 0x000048)
class UEntityLifeTimeComponentSetup : public UEntityComponentSetup
{ 
public:
};

/// Class /Script/ConZ.EntitySystem
/// Size: 0x0700 (0x000028 - 0x000728)
class UEntitySystem : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0028   (0x0010)  MISSED
	UEntitySystemSettings*                             _settings;                                                  // 0x0038   (0x0008)  
	unsigned char                                      UnknownData01_5[0x648];                                     // 0x0040   (0x0648)  MISSED
	TMap<UObject*, int32_t>                            _uobjectReferences;                                         // 0x0688   (0x0050)  
	unsigned char                                      UnknownData02_6[0x50];                                      // 0x06D8   (0x0050)  MISSED
};

/// Class /Script/ConZ.EntitySystemSettings
/// Size: 0x0060 (0x000028 - 0x000088)
class UEntitySystemSettings : public UObject
{ 
public:
	TArray<FEntityToCreateOnStartupParams>             EntitiesToCreateOnStartup;                                  // 0x0028   (0x0010)  
	TMap<FName, UClass*>                               EntitiesToDestroyOnDisabledSetting;                         // 0x0038   (0x0050)  
};

/// Class /Script/ConZ.EntitySystemSettingsProvider
/// Size: 0x0000 (0x000028 - 0x000028)
class UEntitySystemSettingsProvider : public UInterface
{ 
public:
};

/// Class /Script/ConZ.EnvironmentDescriptionComponent
/// Size: 0x0010 (0x0004E0 - 0x0004F0)
class UEnvironmentDescriptionComponent : public UStaticMeshComponent
{ 
public:
	EEnvironmentClass                                  EnvironmentClass;                                           // 0x04E0   (0x0001)  
	bool                                               IsUnderground;                                              // 0x04E1   (0x0001)  
	bool                                               IsAbandonedBunker;                                          // 0x04E2   (0x0001)  
	bool                                               ShouldBlockWeatherEffects;                                  // 0x04E3   (0x0001)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x04E4   (0x000C)  MISSED
};

/// Class /Script/ConZ.ObtainItemObjective
/// Size: 0x0048 (0x000330 - 0x000378)
class AObtainItemObjective : public ARequirementObjective
{ 
public:
	TArray<TWeakObjectPtr>                             _targetItems;                                               // 0x0330   (0x0010)  
	bool                                               _itemInHands;                                               // 0x0340   (0x0001)  
	bool                                               _itemInHolster;                                             // 0x0341   (0x0001)  
	bool                                               _itemInInventory;                                           // 0x0342   (0x0001)  
	unsigned char                                      UnknownData00_6[0x35];                                      // 0x0343   (0x0035)  MISSED
};

/// Class /Script/ConZ.EquipItemObjective
/// Size: 0x0008 (0x000378 - 0x000380)
class AEquipItemObjective : public AObtainItemObjective
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0378   (0x0008)  MISSED
};

/// Class /Script/ConZ.EquipmentItemState
/// Size: 0x0000 (0x000100 - 0x000100)
class UEquipmentItemState : public UItemState
{ 
public:
};

/// Class /Script/ConZ.EvaluatedEntitySpawnerRegistrySetup
/// Size: 0x0000 (0x000080 - 0x000080)
class UEvaluatedEntitySpawnerRegistrySetup : public UEntitySetup
{ 
public:
};

/// Class /Script/ConZ.EventInsertCartridge
/// Size: 0x0010 (0x000090 - 0x0000A0)
class UEventInsertCartridge : public UWeaponActionReloadSequence
{ 
public:
	FName                                              MontageEndSectionName;                                      // 0x0090   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0098   (0x0008)  MISSED
};

/// Class /Script/ConZ.EventInsertMagazine
/// Size: 0x0000 (0x000090 - 0x000090)
class UEventInsertMagazine : public UWeaponActionReloadSequence
{ 
public:
};

/// Class /Script/ConZ.ExamineAction
/// Size: 0x0000 (0x0000A8 - 0x0000A8)
class UExamineAction : public UInteractionAction
{ 
public:
};

/// Class /Script/ConZ.ExamineAssetData
/// Size: 0x01B8 (0x000030 - 0x0001E8)
class UExamineAssetData : public UInteractionAssetData
{ 
public:
	FExamineItemSpawnerData                            ExamineData;                                                // 0x0030   (0x00B0)  
	FItemSpawnerPresetWithOverrides                    SpawnerPreset;                                              // 0x00E0   (0x00B8)  
	UAkAudioEvent*                                     StartExamineAudioEvent;                                     // 0x0198   (0x0008)  
	UAkAudioEvent*                                     StopExamineAudioEvent;                                      // 0x01A0   (0x0008)  
	ENoiseLevel                                        noiseLevel;                                                 // 0x01A8   (0x0001)  
	bool                                               CanStore;                                                   // 0x01A9   (0x0001)  
	bool                                               CanSave;                                                    // 0x01AA   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3D];                                      // 0x01AB   (0x003D)  MISSED
};

/// Class /Script/ConZ.ExaminePrisonerAction
/// Size: 0x0008 (0x0000A8 - 0x0000B0)
class UExaminePrisonerAction : public UExamineAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00A8   (0x0008)  MISSED
};

/// Class /Script/ConZ.ExecuteInteractionAction
/// Size: 0x00B8 (0x0000A8 - 0x000160)
class UExecuteInteractionAction : public UInteractionAction
{ 
public:
	unsigned char                                      UnknownData00_1[0xB8];                                      // 0x00A8   (0x00B8)  MISSED
};

/// Class /Script/ConZ.ExpandableContainer
/// Size: 0x0020 (0x000260 - 0x000280)
class UExpandableContainer : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0260   (0x0010)  MISSED
	UTextBlock*                                        _titleText;                                                 // 0x0270   (0x0008)  
	UNamedSlot*                                        _contentNamedSlot;                                          // 0x0278   (0x0008)  


	/// Functions
	// Function /Script/ConZ.ExpandableContainer.InvokeExpansionChanged
	void InvokeExpansionChanged(bool maximized);                                                                             // [0x22cf5c0] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/ConZ.ExplosionDamageType
/// Size: 0x0000 (0x000040 - 0x000040)
class UExplosionDamageType : public UDamageType
{ 
public:
};

/// Class /Script/ConZ.FailurePenalty
/// Size: 0x0008 (0x000028 - 0x000030)
class UFailurePenalty : public UObject
{ 
public:
	bool                                               _shouldExecuteOnClients;                                    // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0029   (0x0007)  MISSED
};

/// Class /Script/ConZ.ExplosionFailurePenalty
/// Size: 0x0038 (0x000030 - 0x000068)
class UExplosionFailurePenalty : public UFailurePenalty
{ 
public:
	float                                              _explosionBaseDamage;                                       // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	FTargetTypeDamageMultiplier                        _targetTypeMultiplier;                                      // 0x0038   (0x0010)  
	float                                              _minimumDamage;                                             // 0x0048   (0x0004)  
	float                                              _damageInnerRadius;                                         // 0x004C   (0x0004)  
	float                                              _damageOuterRadius;                                         // 0x0050   (0x0004)  
	float                                              _damageFalloff;                                             // 0x0054   (0x0004)  
	UParticleSystem*                                   _explosionPS;                                               // 0x0058   (0x0008)  
	UAkAudioEvent*                                     _explosionAudioEvent;                                       // 0x0060   (0x0008)  
};

/// Class /Script/ConZ.ExplosiveProtectionItemComponentState
/// Size: 0x0008 (0x000040 - 0x000048)
class UExplosiveProtectionItemComponentState : public UItemComponentStateBase
{ 
public:
	bool                                               IsArmed;                                                    // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0041   (0x0007)  MISSED
};

/// Class /Script/ConZ.ExplosiveProtectionItemComponent
/// Size: 0x0088 (0x0000C8 - 0x000150)
class UExplosiveProtectionItemComponent : public UItemComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00C8   (0x0008)  MISSED
	UClass*                                            _minigameClass;                                             // 0x00D0   (0x0008)  
	UClass*                                            _minigameToolTag;                                           // 0x00D8   (0x0008)  
	ULockItemTag*                                      _lockItem;                                                  // 0x00E0   (0x0008)  
	ULockData*                                         _lockData;                                                  // 0x00E8   (0x0008)  
	UParticleSystem*                                   _explosionParticles;                                        // 0x00F0   (0x0008)  
	FVector                                            _explosionParticlesLocation;                                // 0x00F8   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0104   (0x0004)  MISSED
	UAkAudioEvent*                                     _explosionAudioEvent;                                       // 0x0108   (0x0008)  
	float                                              _explosionBaseDamage;                                       // 0x0110   (0x0004)  
	float                                              _explosionMinimalDamage;                                    // 0x0114   (0x0004)  
	float                                              _explosionDamagePositionOffset;                             // 0x0118   (0x0004)  
	float                                              _explosionDamageFalloff;                                    // 0x011C   (0x0004)  
	float                                              _explosionInnerRadius;                                      // 0x0120   (0x0004)  
	float                                              _explosionOuterRadius;                                      // 0x0124   (0x0004)  
	FTargetTypeDamageMultiplier                        _targetTypeMultiplier;                                      // 0x0128   (0x0010)  
	float                                              _hearingDamageRadius;                                       // 0x0138   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x013C   (0x0004)  MISSED
	UClass*                                            _explosionCameraShakeClass;                                 // 0x0140   (0x0008)  
	bool                                               _isArmed;                                                   // 0x0148   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0149   (0x0007)  MISSED


	/// Functions
	// Function /Script/ConZ.ExplosiveProtectionItemComponent.NetMulticast_PlayDetonationEffects
	void NetMulticast_PlayDetonationEffects();                                                                               // [0x2256df0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/ConZ.ExplosiveTrapItem
/// Size: 0x0100 (0x000A60 - 0x000B60)
class AExplosiveTrapItem : public ATrapItem
{ 
public:
	float                                              _detonationDelay;                                           // 0x0A60   (0x0004)  
	FVector                                            _trapForwardVector;                                         // 0x0A64   (0x000C)  
	float                                              _netCullDistanceSquaredMeters;                              // 0x0A70   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0A74   (0x0004)  MISSED
	UAkAudioEvent*                                     _triggerSound;                                              // 0x0A78   (0x0008)  
	UAkAudioEvent*                                     _detonationSound;                                           // 0x0A80   (0x0008)  
	UParticleSystem*                                   _detonationParticles;                                       // 0x0A88   (0x0008)  
	FTransform                                         _detonationParticlesTransform;                              // 0x0A90   (0x0030)  
	bool                                               _hasPrimaryExplosion;                                       // 0x0AC0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0AC1   (0x0003)  MISSED
	float                                              _primaryBaseDamage;                                         // 0x0AC4   (0x0004)  
	float                                              _primaryMinimumDamage;                                      // 0x0AC8   (0x0004)  
	float                                              _primaryDamageInnerRadius;                                  // 0x0ACC   (0x0004)  
	float                                              _primaryDamageOuterRadius;                                  // 0x0AD0   (0x0004)  
	float                                              _primaryDamageMinAngleDeg;                                  // 0x0AD4   (0x0004)  
	float                                              _primaryDamageMaxAngleDeg;                                  // 0x0AD8   (0x0004)  
	float                                              _primaryDamageChanceMultiplier;                             // 0x0ADC   (0x0004)  
	float                                              _primaryDamageMinChance;                                    // 0x0AE0   (0x0004)  
	float                                              _primaryDamageMaxChance;                                    // 0x0AE4   (0x0004)  
	float                                              _primaryDamageFalloff;                                      // 0x0AE8   (0x0004)  
	float                                              _primaryDamageAngleFalloff;                                 // 0x0AEC   (0x0004)  
	FTargetTypeDamageMultiplier                        _primaryTargetTypeMultiplier;                               // 0x0AF0   (0x0010)  
	bool                                               _hasSecondaryExplosion;                                     // 0x0B00   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0B01   (0x0003)  MISSED
	float                                              _secondaryBaseDamage;                                       // 0x0B04   (0x0004)  
	float                                              _secondaryMinimumDamage;                                    // 0x0B08   (0x0004)  
	float                                              _secondaryDamageInnerRadius;                                // 0x0B0C   (0x0004)  
	float                                              _secondaryDamageOuterRadius;                                // 0x0B10   (0x0004)  
	float                                              _secondaryDamageFalloff;                                    // 0x0B14   (0x0004)  
	FTargetTypeDamageMultiplier                        _secondaryTargetTypeMultiplier;                             // 0x0B18   (0x0010)  
	bool                                               _instantlyDestroysStructures;                               // 0x0B28   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x0B29   (0x0003)  MISSED
	float                                              _structureDestructionRadius;                                // 0x0B2C   (0x0004)  
	float                                              _minimalElementAreaCovered;                                 // 0x0B30   (0x0004)  
	float                                              _structureDestructionMinAngleDeg;                           // 0x0B34   (0x0004)  
	float                                              _structureDestructionMaxAngleDeg;                           // 0x0B38   (0x0004)  
	float                                              _explosionDamagePositionOffset;                             // 0x0B3C   (0x0004)  
	float                                              _explosionForce;                                            // 0x0B40   (0x0004)  
	unsigned char                                      UnknownData04_6[0x1C];                                      // 0x0B44   (0x001C)  MISSED


	/// Functions
	// Function /Script/ConZ.ExplosiveTrapItem.Detonate
	void Detonate();                                                                                                         // [0x22cf5a0] Final|Native|Private 
};

/// Class /Script/ConZ.ExteriorCharacterSpawnerComponent
/// Size: 0x0010 (0x000230 - 0x000240)
class UExteriorCharacterSpawnerComponent : public UCharacterSpawnerComponent
{ 
public:
	ECharacterSpawnerRange                             Range;                                                      // 0x0230   (0x0001)  
	unsigned char                                      UnknownData00_6[0xF];                                       // 0x0231   (0x000F)  MISSED
};

/// Class /Script/ConZ.FakeItem
/// Size: 0x0078 (0x000220 - 0x000298)
class AFakeItem : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0220   (0x0008)  MISSED
	UStaticMeshComponent*                              _staticMesh;                                                // 0x0228   (0x0008)  
	UNiagaraComponent*                                 _niagaraComponent;                                          // 0x0230   (0x0008)  
	FVector                                            _spawnLocationOffset;                                       // 0x0238   (0x000C)  
	FRotator                                           _spawnRotationOffset;                                       // 0x0244   (0x000C)  
	float                                              _spawnRotationRandomization;                                // 0x0250   (0x0004)  
	float                                              _lifeTimeAfterInteraction;                                  // 0x0254   (0x0004)  
	float                                              _additionalLifetimeForParticles;                            // 0x0258   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x025C   (0x0004)  MISSED
	UAkAudioEvent*                                     _interactionAudioEvent;                                     // 0x0260   (0x0008)  
	UMaterialInterface*                                _niagaraParticleMaterial;                                   // 0x0268   (0x0008)  
	float                                              _niagaraParticleForce;                                      // 0x0270   (0x0004)  
	float                                              _niagaraParticleAmount;                                     // 0x0274   (0x0004)  
	TArray<UMaterialInstanceDynamic*>                  _meshMaterials;                                             // 0x0278   (0x0010)  
	UMaterialInstanceDynamic*                          _particleMaterial;                                          // 0x0288   (0x0008)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0290   (0x0008)  MISSED
};

/// Class /Script/ConZ.FamePointDebugComponent
/// Size: 0x0018 (0x0000B0 - 0x0000C8)
class UFamePointDebugComponent : public UActorComponent
{ 
public:
	UClass*                                            _widgetClass;                                               // 0x00B0   (0x0008)  
	UFamePointDebugWidget*                             _widget;                                                    // 0x00B8   (0x0008)  
	float                                              _famePoints;                                                // 0x00C0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00C4   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.FamePointDebugComponent.OnRep_FamePoints
	void OnRep_FamePoints();                                                                                                 // [0x22d28a0] Final|Native|Private 
};

/// Class /Script/ConZ.FamePointDebugWidget
/// Size: 0x0008 (0x000260 - 0x000268)
class UFamePointDebugWidget : public UUserWidget
{ 
public:
	UTextBlock*                                        _famePointsText;                                            // 0x0260   (0x0008)  
};

/// Class /Script/ConZ.FamePointSettings
/// Size: 0x0188 (0x000030 - 0x0001B8)
class UFamePointSettings : public UDataAsset
{ 
public:
	FFamePointAwards                                   Awards;                                                     // 0x0030   (0x0160)  
	FFamePointPenalties                                Penalties;                                                  // 0x0190   (0x0018)  
	UFamePointTagSettings*                             FamePointTagSettings;                                       // 0x01A8   (0x0008)  
	UCurveFloat*                                       FameGainCurve;                                              // 0x01B0   (0x0008)  
};

/// Class /Script/ConZ.FamePointStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UFamePointStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.FamePointTagSettings
/// Size: 0x00F0 (0x000030 - 0x000120)
class UFamePointTagSettings : public UDataAsset
{ 
public:
	TMap<FGameplayTag, float>                          _famePointAmountWhenLootedForTag;                           // 0x0030   (0x0050)  
	TMap<FGameplayTag, float>                          _famePointAmountWhenSellingForTag;                          // 0x0080   (0x0050)  
	TMap<FGameplayTag, float>                          _famePointAmountWhenBuyingForTag;                           // 0x00D0   (0x0050)  
};

/// Class /Script/ConZ.FarmingSkill
/// Size: 0x0230 (0x0000B0 - 0x0002E0)
class UFarmingSkill : public UIntelligenceSkill
{ 
public:
	FFarmingSkillParametersPerSkillLevel               NoSkillParameters;                                          // 0x00B0   (0x0070)  
	FFarmingSkillParametersPerSkillLevel               BasicSkillParameters;                                       // 0x0120   (0x0070)  
	FFarmingSkillParametersPerSkillLevel               MediumSkillParameters;                                      // 0x0190   (0x0070)  
	FFarmingSkillParametersPerSkillLevel               AdvancedSkillParameters;                                    // 0x0200   (0x0070)  
	FFarmingSkillParametersPerSkillLevel               AboveAdvancedSkillParameters;                               // 0x0270   (0x0070)  
};

/// Class /Script/ConZ.FertilizerItemComponent
/// Size: 0x0010 (0x0000C8 - 0x0000D8)
class UFertilizerItemComponent : public UItemComponent
{ 
public:
	EFertilizerType                                    _type;                                                      // 0x00C8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x00C9   (0x0007)  MISSED
	UAnimMontage*                                      _addFertilizerMontage;                                      // 0x00D0   (0x0008)  
};

/// Class /Script/ConZ.FillItemWithReplenishableResourceAssetData
/// Size: 0x0040 (0x000030 - 0x000070)
class UFillItemWithReplenishableResourceAssetData : public UInteractionAssetData
{ 
public:
	FFillItemWithReplenishableResourceInteractionData  InteractionData;                                            // 0x0030   (0x0040)  
};

/// Class /Script/ConZ.FillWaterAction
/// Size: 0x0028 (0x0000A8 - 0x0000D0)
class UFillWaterAction : public UInteractionAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x00A8   (0x0028)  MISSED
};

/// Class /Script/ConZ.FireItem
/// Size: 0x0010 (0x000930 - 0x000940)
class AFireItem : public AEquipmentItem
{ 
public:
	float                                              _touchDamage;                                               // 0x0928   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x092C   (0x0004)  MISSED
	UHeatSourceItemComponent*                          _heatSourceItemComponent;                                   // 0x0930   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0938   (0x0008)  MISSED
};

/// Class /Script/ConZ.FireplaceItem
/// Size: 0x0020 (0x000940 - 0x000960)
class AFireplaceItem : public AFireItem
{ 
public:
	UStaticMeshComponent*                              _collisionMesh;                                             // 0x0938   (0x0008)  
	float                                              _fireDamageProcessingPeriod;                                // 0x0940   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0944   (0x0004)  MISSED
	float                                              _fireBaseDamageToItemsPerSecond;                            // 0x0948   (0x0004)  
	float                                              _fireDamageRadius;                                          // 0x094C   (0x0004)  
	int32_t                                            _minBurningStageForManualPutOut;                            // 0x0950   (0x0004)  
	unsigned char                                      UnknownData01_6[0xC];                                       // 0x0954   (0x000C)  MISSED
};

/// Class /Script/ConZ.FireSourceItemTag
/// Size: 0x0000 (0x000030 - 0x000030)
class UFireSourceItemTag : public UCraftingItemTag
{ 
public:
};

/// Class /Script/ConZ.FireworksItemState
/// Size: 0x0010 (0x000100 - 0x000110)
class UFireworksItemState : public UItemState
{ 
public:
	bool                                               IsFiring;                                                   // 0x0100   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0101   (0x0003)  MISSED
	int32_t                                            LaunchedShells;                                             // 0x0104   (0x0004)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0108   (0x0008)  MISSED
};

/// Class /Script/ConZ.FireworksItem
/// Size: 0x0030 (0x000910 - 0x000940)
class AFireworksItem : public AItem
{ 
public:
	bool                                               _isFiring;                                                  // 0x0910   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0911   (0x0007)  MISSED
	int32_t                                            _totalShells;                                               // 0x0918   (0x0004)  
	unsigned char                                      UnknownData01_5[0xC];                                       // 0x091C   (0x000C)  MISSED
	float                                              _secondsBetweenLaunches;                                    // 0x0928   (0x0004)  
	float                                              _noiseLoudnessOnLaunch;                                     // 0x092C   (0x0004)  
	bool                                               _canBePickedUpWhenLit;                                      // 0x0930   (0x0001)  
	bool                                               _hasFuse;                                                   // 0x0931   (0x0001)  
	unsigned char                                      UnknownData02_6[0xE];                                       // 0x0932   (0x000E)  MISSED


	/// Functions
	// Function /Script/ConZ.FireworksItem.SetIsFiring
	void SetIsFiring(bool IsFiring);                                                                                         // [0x22d2a00] Final|Native|Private 
	// Function /Script/ConZ.FireworksItem.OnRep_IsFiring
	void OnRep_IsFiring();                                                                                                   // [0x22d28c0] Final|Native|Private 
	// Function /Script/ConZ.FireworksItem.OnFuseLit
	void OnFuseLit();                                                                                                        // [0x2859740] Event|Protected|BlueprintEvent 
	// Function /Script/ConZ.FireworksItem.LaunchShell
	void LaunchShell();                                                                                                      // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.FireworksItem.IsFiring
	bool IsFiring();                                                                                                         // [0x22d2870] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.FireworksItem.GetTotalShells
	int32_t GetTotalShells();                                                                                                // [0x22d2840] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.FireworksItem.GetSecondsBetweenLaunches
	float GetSecondsBetweenLaunches();                                                                                       // [0x22d27b0] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.FireworksItem.CanStartFiring
	bool CanStartFiring(APrisoner* Prisoner);                                                                                // [0x22d2630] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.FireworksItem.AutoLaunchShells
	void AutoLaunchShells();                                                                                                 // [0x22d2610] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/ConZ.FireworksTrapItem
/// Size: 0x0030 (0x000A60 - 0x000A90)
class AFireworksTrapItem : public ATrapItem
{ 
public:
	UAkAudioEvent*                                     _triggerSound;                                              // 0x0A60   (0x0008)  
	int32_t                                            _numShells;                                                 // 0x0A68   (0x0004)  
	float                                              _shellLaunchPeriod;                                         // 0x0A6C   (0x0004)  
	float                                              _detonationDelay;                                           // 0x0A70   (0x0004)  
	unsigned char                                      UnknownData00_5[0xD];                                       // 0x0A74   (0x000D)  MISSED
	bool                                               _isFiring;                                                  // 0x0A81   (0x0001)  
	unsigned char                                      UnknownData01_6[0xE];                                       // 0x0A82   (0x000E)  MISSED


	/// Functions
	// Function /Script/ConZ.FireworksTrapItem.OnRep_IsFiring
	void OnRep_IsFiring();                                                                                                   // [0x22d28e0] Final|Native|Private 
	// Function /Script/ConZ.FireworksTrapItem.LaunchShell
	void LaunchShell();                                                                                                      // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.FireworksTrapItem.Detonate
	void Detonate();                                                                                                         // [0x22d26d0] Final|Native|Private 
};

/// Class /Script/ConZ.FishInstancedStaticMeshComponent
/// Size: 0x0000 (0x000590 - 0x000590)
class UFishInstancedStaticMeshComponent : public UInstancedStaticMeshComponent
{ 
public:
};

/// Class /Script/ConZ.FishingAttachment
/// Size: 0x0020 (0x000910 - 0x000930)
class AFishingAttachment : public AItem
{ 
public:
	UStaticMesh*                                       _staticMeshWhenAttached;                                    // 0x0910   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0918   (0x0018)  MISSED


	/// Functions
	// Function /Script/ConZ.FishingAttachment.Unequip
	void Unequip();                                                                                                          // [0x22d2a90] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.FishingAttachment.GetStaticMeshWhenAttached
	UStaticMesh* GetStaticMeshWhenAttached();                                                                                // [0x22d2810] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.FishingAttachment.GetSkeletalMeshWhenAttached
	USkeletalMesh* GetSkeletalMeshWhenAttached();                                                                            // [0x22d27e0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.FishingAttachment.GetOwningFishingRod
	AFishingRod* GetOwningFishingRod();                                                                                      // [0x22d2780] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.FishingAttachment.Equip
	void Equip(AFishingRod* FishingRod);                                                                                     // [0x22d26f0] Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.FishingAttachmentBait
/// Size: 0x0050 (0x000930 - 0x000980)
class AFishingAttachmentBait : public AFishingAttachment
{ 
public:
	TMap<EFishSpecies, float>                          _baitCatchingChanceMultiplier;                              // 0x0930   (0x0050)  
};

/// Class /Script/ConZ.FishingAttachmentFloater
/// Size: 0x0100 (0x000930 - 0x000A30)
class AFishingAttachmentFloater : public AFishingAttachment
{ 
public:
	UConZBuoyancyComponent*                            _floatingComponent;                                         // 0x0930   (0x0008)  
	int32_t                                            _floaterBreakSegmentIndex;                                  // 0x0938   (0x0004)  
	float                                              _sinkSpeed;                                                 // 0x093C   (0x0004)  
	float                                              _sinkSpeedDuringFastReel;                                   // 0x0940   (0x0004)  
	float                                              _minDistanceForSizeIncrease;                                // 0x0944   (0x0004)  
	float                                              _maxDistanceForSizeIncrease;                                // 0x0948   (0x0004)  
	float                                              _maxScale;                                                  // 0x094C   (0x0004)  
	float                                              _velocityThreshold;                                         // 0x0950   (0x0004)  
	float                                              _shouldCheckVelocityThreshold;                              // 0x0954   (0x0004)  
	float                                              _movingRippleThreshold;                                     // 0x0958   (0x0004)  
	FVector                                            _floaterWaterCheckOffset;                                   // 0x095C   (0x000C)  
	float                                              _sendStateInterval;                                         // 0x0968   (0x0004)  
	unsigned char                                      UnknownData00_5[0x74];                                      // 0x096C   (0x0074)  MISSED
	UParticleSystem*                                   _hitWaterParticles;                                         // 0x09E0   (0x0008)  
	UParticleSystemComponent*                          _rippleParticleSystemComponent;                             // 0x09E8   (0x0008)  
	UParticleSystemComponent*                          _movingRippleParticleSystemComponent;                       // 0x09F0   (0x0008)  
	UParticleSystemComponent*                          _sinkParticleSystemComponent;                               // 0x09F8   (0x0008)  
	UMaterialInterface*                                _scaledMaterial;                                            // 0x0A00   (0x0008)  
	UMaterialInterface*                                _storedMaterial;                                            // 0x0A08   (0x0008)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x0A10   (0x0020)  MISSED


	/// Functions
	// Function /Script/ConZ.FishingAttachmentFloater.Server_SendState
	void Server_SendState(float DeltaTime, FRigidBodyState State);                                                           // [0x22d2900] Net|NetReliableNative|Event|Public|NetServer 
};

/// Class /Script/ConZ.FishingAttachmentHook
/// Size: 0x0080 (0x000930 - 0x0009B0)
class AFishingAttachmentHook : public AFishingAttachment
{ 
public:
	float                                              _visibilityFactor;                                          // 0x0930   (0x0004)  
	float                                              _maxTension;                                                // 0x0934   (0x0004)  
	float                                              _hookedWeight;                                              // 0x0938   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x093C   (0x0004)  MISSED
	FTransform                                         _hookedFishTransform;                                       // 0x0940   (0x0030)  
	UStaticMeshComponent*                              _hookedFishMesh;                                            // 0x0970   (0x0008)  
	FName                                              _hookedFishHookPositionName;                                // 0x0978   (0x0008)  
	float                                              _checkIfFishIsHookedRate;                                   // 0x0980   (0x0004)  
	float                                              _timeToLooseTheFishWhenHookBitten;                          // 0x0984   (0x0004)  
	UParticleSystemComponent*                          _movingRippleParticleSystemComponent;                       // 0x0988   (0x0008)  
	UParticleSystemComponent*                          _splashParticleSystemComponent;                             // 0x0990   (0x0008)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x0998   (0x0018)  MISSED
};

/// Class /Script/ConZ.FishingAttachmentReel
/// Size: 0x00B0 (0x000930 - 0x0009E0)
class AFishingAttachmentReel : public AFishingAttachment
{ 
public:
	USkeletalMeshComponent*                            SkeletalMesh;                                               // 0x0930   (0x0008)  
	FName                                              ReelHandIK;                                                 // 0x0938   (0x0008)  
	float                                              _reelHandleAcceleration;                                    // 0x0940   (0x0004)  
	float                                              _fastReelHandleAcceleration;                                // 0x0944   (0x0004)  
	float                                              _reelFriction;                                              // 0x0948   (0x0004)  
	float                                              _fastReelFriction;                                          // 0x094C   (0x0004)  
	float                                              _reelVelocityThreshold;                                     // 0x0950   (0x0004)  
	float                                              _reelVelocityLimit;                                         // 0x0954   (0x0004)  
	float                                              _reelAccelerationModifier;                                  // 0x0958   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x095C   (0x0004)  MISSED
	FTransform                                         _leftHandOffset;                                            // 0x0960   (0x0030)  
	UAnimMontage*                                      _lockAfterLongCastAnimMontage;                              // 0x0990   (0x0008)  
	UAnimMontage*                                      _lockAfterShortCastAnimMontage;                             // 0x0998   (0x0008)  
	UAnimMontage*                                      _reelCastAnimMontage;                                       // 0x09A0   (0x0008)  
	UAnimSequenceBase*                                 _reelingAnimSequence;                                       // 0x09A8   (0x0008)  
	UAkAudioEvent*                                     _reelingStartAudioEvent;                                    // 0x09B0   (0x0008)  
	UAkAudioEvent*                                     _reelingEndAudioEvent;                                      // 0x09B8   (0x0008)  
	unsigned char                                      UnknownData01_5[0xC];                                       // 0x09C0   (0x000C)  MISSED
	FVector                                            _leftHandIKLocationCache;                                   // 0x09CC   (0x000C)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x09D8   (0x0008)  MISSED
};

/// Class /Script/ConZ.FishingAttachmentSinker
/// Size: 0x0000 (0x000930 - 0x000930)
class AFishingAttachmentSinker : public AFishingAttachment
{ 
public:
};

/// Class /Script/ConZ.FishingAttachmentWire
/// Size: 0x0070 (0x000930 - 0x0009A0)
class AFishingAttachmentWire : public AFishingAttachment
{ 
public:
	FName                                              ReelSocketName;                                             // 0x0930   (0x0008)  
	UFishingWireComponent*                             _wireComponent;                                             // 0x0938   (0x0008)  
	UClass*                                            _wireComponentClass;                                        // 0x0940   (0x0008)  
	UParticleSystemComponent*                          _rippleParticleSystemComponent;                             // 0x0948   (0x0008)  
	float                                              _visibilityFactor;                                          // 0x0950   (0x0004)  
	float                                              _wireWeightThreshold;                                       // 0x0954   (0x0004)  
	float                                              _wireThickness;                                             // 0x0958   (0x0004)  
	float                                              _minWireLength;                                             // 0x095C   (0x0004)  
	float                                              _maxWireLength;                                             // 0x0960   (0x0004)  
	float                                              _reelInTensionThreshold;                                    // 0x0964   (0x0004)  
	float                                              _wireBreakThreshold;                                        // 0x0968   (0x0004)  
	float                                              _instantWireBreakThreshold;                                 // 0x096C   (0x0004)  
	float                                              _wireBreakTimerThreshold;                                   // 0x0970   (0x0004)  
	float                                              _wireStrength;                                              // 0x0974   (0x0004)  
	bool                                               _simulate;                                                  // 0x0978   (0x0001)  
	unsigned char                                      UnknownData00_6[0x27];                                      // 0x0979   (0x0027)  MISSED
};

/// Class /Script/ConZ.FishingBarWidget
/// Size: 0x01D0 (0x000260 - 0x000430)
class UFishingBarWidget : public UUserWidget
{ 
public:
	FLinearColor                                       TopSegmentGradientColorBottom;                              // 0x0260   (0x0010)  
	FLinearColor                                       TopSegmentGradientColorTop;                                 // 0x0270   (0x0010)  
	float                                              BarBoxesTotalHeight;                                        // 0x0280   (0x0004)  
	float                                              BarSegmentsTotalHeight;                                     // 0x0284   (0x0004)  
	int32_t                                            BarSegmentNum;                                              // 0x0288   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x028C   (0x0004)  MISSED
	FSlateBrush                                        ProgressBarBackgroundBoxBrush;                              // 0x0290   (0x0088)  
	FLinearColor                                       ProgressBarBackgroundBoxColorAndOpacity;                    // 0x0318   (0x0010)  
	float                                              ProgressBarBackgroundBoxPadding;                            // 0x0328   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x032C   (0x0004)  MISSED
	FSlateBrush                                        ProgressBarSegmentBrush;                                    // 0x0330   (0x0088)  
	FLinearColor                                       ProgressBarSegmentColorAndOpacity;                          // 0x03B8   (0x0010)  
	float                                              ProgressBarSegmentPadding;                                  // 0x03C8   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x03CC   (0x0004)  MISSED
	UVerticalBox*                                      _progressBarSegmentBackgroundBoxesContainer;                // 0x03D0   (0x0008)  
	UVerticalBox*                                      _progressBarSegmentsContainer;                              // 0x03D8   (0x0008)  
	USizeBox*                                          _simulatedProgressBar;                                      // 0x03E0   (0x0008)  
	unsigned char                                      UnknownData03_6[0x48];                                      // 0x03E8   (0x0048)  MISSED


	/// Functions
	// Function /Script/ConZ.FishingBarWidget.SetSegmentBarNum
	void SetSegmentBarNum(int32_t numOfSegments);                                                                            // [0x22d6670] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.FishingBarWidget.SetProgressPercentage
	void SetProgressPercentage(float Value);                                                                                 // [0x22d65f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.FishingBarWidget.GetProgressPercentage
	float GetProgressPercentage();                                                                                           // [0x22d5690] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.FishingContainerWidget
/// Size: 0x0018 (0x000260 - 0x000278)
class UFishingContainerWidget : public UUserWidget
{ 
public:
	UFishingBarWidget*                                 _castingBarWidget;                                          // 0x0260   (0x0008)  
	UFishingBarWidget*                                 _fishingBarWidget;                                          // 0x0268   (0x0008)  
	float                                              _tensionBarInterpSpeed;                                     // 0x0270   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0274   (0x0004)  MISSED
};

/// Class /Script/ConZ.FishingReelAnimInstance
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UFishingReelAnimInstance : public UAnimInstance
{ 
public:


	/// Functions
	// Function /Script/ConZ.FishingReelAnimInstance.GetReelingAnimSequence
	UAnimSequenceBase* GetReelingAnimSequence();                                                                             // [0x22d56c0] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.FishingRodState
/// Size: 0x0010 (0x000100 - 0x000110)
class UFishingRodState : public UItemState
{ 
public:
	TArray<FEntityId>                                  FishingAttachments;                                         // 0x0100   (0x0010)  
};

/// Class /Script/ConZ.FishingRod
/// Size: 0x0310 (0x000910 - 0x000C20)
class AFishingRod : public AItem
{ 
public:
	FMulticastInlineDelegate                           AttachmentAdded;                                            // 0x0910   (0x0010)  
	FMulticastInlineDelegate                           AttachmentRemoved;                                          // 0x0920   (0x0010)  
	USkeletalMeshComponent*                            SkeletalMesh;                                               // 0x0930   (0x0008)  
	float                                              FishingAreaRadius;                                          // 0x0938   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x093C   (0x0004)  MISSED
	APrisoner*                                         _fishingRodOwner;                                           // 0x0940   (0x0008)  
	unsigned char                                      UnknownData01_5[0x18];                                      // 0x0948   (0x0018)  MISSED
	TArray<AFishingAttachment*>                        _fishingAttachmentsReplicated;                              // 0x0960   (0x0010)  
	float                                              _reelingAmount;                                             // 0x0970   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4C];                                      // 0x0974   (0x004C)  MISSED
	UFishSpeciesData*                                  _fishSpeciesData;                                           // 0x09C0   (0x0008)  
	unsigned char                                      UnknownData03_5[0x78];                                      // 0x09C8   (0x0078)  MISSED
	AItem*                                             _minigameCaughtItem;                                        // 0x0A40   (0x0008)  
	AFishingTrophyActor*                               _minigameTrophyActor;                                       // 0x0A48   (0x0008)  
	unsigned char                                      UnknownData04_5[0x1];                                       // 0x0A50   (0x0001)  MISSED
	bool                                               _isInTrophyState;                                           // 0x0A51   (0x0001)  
	unsigned char                                      UnknownData05_5[0x6];                                       // 0x0A52   (0x0006)  MISSED
	float                                              _floaterSimulatedWeight;                                    // 0x0A58   (0x0004)  
	float                                              _floaterSimulatedWeightDuringFastReeling;                   // 0x0A5C   (0x0004)  
	float                                              _shortCastingPower;                                         // 0x0A60   (0x0004)  
	float                                              _minCastingPower;                                           // 0x0A64   (0x0004)  
	float                                              _maxCastingPower;                                           // 0x0A68   (0x0004)  
	float                                              _safeAreaRadius;                                            // 0x0A6C   (0x0004)  
	float                                              _fishNotBitingAreaRadius;                                   // 0x0A70   (0x0004)  
	float                                              _minigameSafeAreaRadius;                                    // 0x0A74   (0x0004)  
	float                                              _baseReelingSpeed;                                          // 0x0A78   (0x0004)  
	float                                              _fastReelingSpeed;                                          // 0x0A7C   (0x0004)  
	float                                              _defaultWaterVelocityMultiplier;                            // 0x0A80   (0x0004)  
	float                                              _shortCastingAngle;                                         // 0x0A84   (0x0004)  
	float                                              _longCastingAngle;                                          // 0x0A88   (0x0004)  
	float                                              _fishingLineTensionToHookThreshold;                         // 0x0A8C   (0x0004)  
	FTransform                                         _caughtFishOffsetTransform;                                 // 0x0A90   (0x0030)  
	UClass*                                            _trophyActorClass;                                          // 0x0AC0   (0x0008)  
	float                                              _sendStateInterval;                                         // 0x0AC8   (0x0004)  
	unsigned char                                      UnknownData06_5[0x74];                                      // 0x0ACC   (0x0074)  MISSED
	float                                              _fishIdleTimeAtStart;                                       // 0x0B40   (0x0004)  
	float                                              _fishStruggleOffsetAmplitude;                               // 0x0B44   (0x0004)  
	float                                              _fishStruggleOffsetPeriod;                                  // 0x0B48   (0x0004)  
	float                                              _minDistanceToApplyStruggleOffset;                          // 0x0B4C   (0x0004)  
	float                                              _fishToSurfaceRadius;                                       // 0x0B50   (0x0004)  
	float                                              _fishGenericSpeed;                                          // 0x0B54   (0x0004)  
	float                                              _minFishDirectionChangeTime;                                // 0x0B58   (0x0004)  
	float                                              _maxFishDirectionChangeTime;                                // 0x0B5C   (0x0004)  
	float                                              _fishDrainStaminaModifier;                                  // 0x0B60   (0x0004)  
	float                                              _fishRecoveryStaminaModifier;                               // 0x0B64   (0x0004)  
	float                                              _lineBreakConstant;                                         // 0x0B68   (0x0004)  
	float                                              _reelingTensionModifier;                                    // 0x0B6C   (0x0004)  
	float                                              _fishRecoveryRadiusBuffer;                                  // 0x0B70   (0x0004)  
	float                                              _fishUnderWaterSurfaceOffset;                               // 0x0B74   (0x0004)  
	float                                              _fishStrengthModifier;                                      // 0x0B78   (0x0004)  
	float                                              _fishingBoundsAngle;                                        // 0x0B7C   (0x0004)  
	float                                              _fishingBoundsRadius;                                       // 0x0B80   (0x0004)  
	float                                              _fishingLineInTensionDamageAmount;                          // 0x0B84   (0x0004)  
	float                                              _fishingLineOnBreakDamageAmount;                            // 0x0B88   (0x0004)  
	float                                              _fishStuckTimeThreshold;                                    // 0x0B8C   (0x0004)  
	float                                              _fishNewDirectionAngleStep;                                 // 0x0B90   (0x0004)  
	bool                                               _useRodAsRootLocation;                                      // 0x0B94   (0x0001)  
	unsigned char                                      UnknownData07_5[0x3];                                       // 0x0B95   (0x0003)  MISSED
	UAkAudioEvent*                                     _castingObjectDropToWaterAudioEvent;                        // 0x0B98   (0x0008)  
	UAkAudioEvent*                                     _fishHookedAudioEvent;                                      // 0x0BA0   (0x0008)  
	UAkAudioEvent*                                     _wireBreakAudioEvent;                                       // 0x0BA8   (0x0008)  
	UAkAudioEvent*                                     _wireTensionStartAudioEvent;                                // 0x0BB0   (0x0008)  
	UAkAudioEvent*                                     _wireTensionEndAudioEvent;                                  // 0x0BB8   (0x0008)  
	UAkAudioEvent*                                     _menuButtonClickAudioEvent;                                 // 0x0BC0   (0x0008)  
	float                                              _castPower;                                                 // 0x0BC8   (0x0004)  
	bool                                               _shouldShortCast;                                           // 0x0BCC   (0x0001)  
	unsigned char                                      UnknownData08_5[0xF];                                       // 0x0BCD   (0x000F)  MISSED
	float                                              _minFishRecoveryTime;                                       // 0x0BDC   (0x0004)  
	float                                              _maxFishRecoveryTime;                                       // 0x0BE0   (0x0004)  
	float                                              _minFishStaminaDrainTime;                                   // 0x0BE4   (0x0004)  
	float                                              _maxFishStaminaDrainTime;                                   // 0x0BE8   (0x0004)  
	bool                                               _randomFishDrainAndRecovery;                                // 0x0BEC   (0x0001)  
	unsigned char                                      UnknownData09_5[0x7];                                       // 0x0BED   (0x0007)  MISSED
	bool                                               _isFastReeling;                                             // 0x0BF4   (0x0001)  
	unsigned char                                      UnknownData10_6[0x2B];                                      // 0x0BF5   (0x002B)  MISSED


	/// Functions
	// Function /Script/ConZ.FishingRod.Server_SwapAttachments
	void Server_SwapAttachments(AFishingAttachment* oldAttachment, AFishingAttachment* newAttachment);                       // [0x22d6520] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.FishingRod.Server_SpawnCaughtFish
	void Server_SpawnCaughtFish(UClass* caughtFishClass, EFishSpecies FishSpecies, float caughtFishMass, float caughtFishSize); // [0x22d63d0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.FishingRod.Server_SetShouldShortCast
	void Server_SetShouldShortCast(bool Value);                                                                              // [0x22d6340] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.FishingRod.Server_SetFishingState
	void Server_SetFishingState(EFishingState fishingState);                                                                 // [0x22d62c0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.FishingRod.Server_SetCastPower
	void Server_SetCastPower(float Value);                                                                                   // [0x22d6230] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.FishingRod.Server_SendState
	void Server_SendState(float DeltaTime, FRigidBodyState State, float reelingAmount, bool isFastReeling);                  // [0x22d6080] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.FishingRod.Server_ResetAttachments
	void Server_ResetAttachments();                                                                                          // [0x22d6060] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.FishingRod.Server_RemoveAttachment
	void Server_RemoveAttachment(AFishingAttachment* Attachment);                                                            // [0x22d5fd0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.FishingRod.Server_ReleaseCastingObject
	void Server_ReleaseCastingObject(FVector Location, FVector Direction, float castingPower, EFishingState nextState);      // [0x22d5e40] Net|NetReliableNative|Event|Public|NetServer|HasDefaults 
	// Function /Script/ConZ.FishingRod.Server_OnWireBreak
	void Server_OnWireBreak();                                                                                               // [0x22d5e20] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.FishingRod.Server_OnLeaveActiveFishingState
	void Server_OnLeaveActiveFishingState();                                                                                 // [0x2264c00] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.FishingRod.Server_OnEnterActiveFishingState
	void Server_OnEnterActiveFishingState();                                                                                 // [0x22d5e00] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.FishingRod.Server_InitiateCast
	void Server_InitiateCast();                                                                                              // [0x22d5de0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.FishingRod.Server_HookFish
	void Server_HookFish();                                                                                                  // [0x22d5dc0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.FishingRod.Server_EnterTrophyState
	void Server_EnterTrophyState();                                                                                          // [0x22d5da0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.FishingRod.Server_CleanupTrophyState
	void Server_CleanupTrophyState(bool keptFish);                                                                           // [0x2270710] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.FishingRod.Server_CheckIfFishBitBait
	void Server_CheckIfFishBitBait(FVector Location);                                                                        // [0x22d5d20] Net|NetReliableNative|Event|Public|NetServer|HasDefaults 
	// Function /Script/ConZ.FishingRod.Server_AddAttachment
	void Server_AddAttachment(AFishingAttachment* Attachment);                                                               // [0x22d5c90] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.FishingRod.RemoveAttachmentLocal
	void RemoveAttachmentLocal(AFishingAttachment* Attachment);                                                              // [0x22d5c00] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.FishingRod.RemoveAttachment
	void RemoveAttachment(AFishingAttachment* Attachment);                                                                   // [0x22d5b70] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.FishingRod.OnRep_MinigameTrophy
	void OnRep_MinigameTrophy();                                                                                             // [0x22d5b50] Final|Native|Private 
	// Function /Script/ConZ.FishingRod.OnRep_MinigameItem
	void OnRep_MinigameItem();                                                                                               // [0x22d5b30] Final|Native|Private 
	// Function /Script/ConZ.FishingRod.OnRep_FishingAttachmentsReplicated
	void OnRep_FishingAttachmentsReplicated();                                                                               // [0x22d5b10] Final|Native|Private 
	// Function /Script/ConZ.FishingRod.OnReleaseFishClicked
	void OnReleaseFishClicked();                                                                                             // [0x22d5ad0] Final|Native|Private|BlueprintCallable 
	// Function /Script/ConZ.FishingRod.OnKeepFishClicked
	void OnKeepFishClicked();                                                                                                // [0x22d5a90] Final|Native|Private|BlueprintCallable 
	// Function /Script/ConZ.FishingRod.OnFishingActionAnimNotify
	void OnFishingActionAnimNotify(EFishingActionNotifyType notifyType);                                                     // [0x22d5a10] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.FishingRod.NetMulticast_SetHookBitten
	void NetMulticast_SetHookBitten(bool Value, UFishSpeciesData* speciesData);                                              // [0x22d5940] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.FishingRod.NetMulticast_ResetAttachments
	void NetMulticast_ResetAttachments();                                                                                    // [0x22d5920] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.FishingRod.NetMulticast_ReleaseCastingObject
	void NetMulticast_ReleaseCastingObject(FVector Location, FVector Direction, float castingPower, EFishingState nextState); // [0x22d5790] Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults 
	// Function /Script/ConZ.FishingRod.NetMulticast_OnWireBreak
	void NetMulticast_OnWireBreak();                                                                                         // [0x22d5770] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.FishingRod.NetMulticast_OnLeaveActiveFishingState
	void NetMulticast_OnLeaveActiveFishingState();                                                                           // [0x22d5750] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.FishingRod.NetMulticast_OnEnterActiveFishingState
	void NetMulticast_OnEnterActiveFishingState();                                                                           // [0x22d5730] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.FishingRod.NetMulticast_InitiateCast
	void NetMulticast_InitiateCast();                                                                                        // [0x22d5710] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.FishingRod.NetMulticast_HookFish
	void NetMulticast_HookFish();                                                                                            // [0x22d56f0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.FishingRod.GetFishingRodOwner
	APrisoner* GetFishingRodOwner();                                                                                         // [0x22d5660] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.FishingRod.CanAddAttachment
	bool CanAddAttachment(AFishingAttachment* Attachment);                                                                   // [0x22d55c0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/ConZ.FishingRod.AttachmentRemovedSignature__DelegateSignature
	void AttachmentRemovedSignature__DelegateSignature(AFishingRod* sender, AFishingAttachment* Attachment);                 // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.FishingRod.AttachmentAddedSignature__DelegateSignature
	void AttachmentAddedSignature__DelegateSignature(AFishingRod* sender, AFishingAttachment* Attachment);                   // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.FishingRod.AddAttachmentLocal
	void AddAttachmentLocal(AFishingAttachment* Attachment, bool attach);                                                    // [0x22d54f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.FishingRod.AddAttachment
	void AddAttachment(AFishingAttachment* Attachment, bool attach, bool removeExistingOnTheSameMountType);                  // [0x22d53e0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.FishingRodAnimInstance
/// Size: 0x0030 (0x0002C0 - 0x0002F0)
class UFishingRodAnimInstance : public UAnimInstance
{ 
public:
	bool                                               IsInMinigame;                                               // 0x02B8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x02B9   (0x0003)  MISSED
	FVector                                            RodTipLocation;                                             // 0x02BC   (0x000C)  
	FVector                                            BentRodTipLocation;                                         // 0x02C8   (0x000C)  
	FVector                                            BendDirection;                                              // 0x02D4   (0x000C)  
	float                                              BendAmount;                                                 // 0x02E0   (0x0004)  
	unsigned char                                      UnknownData01_6[0xC];                                       // 0x02E4   (0x000C)  MISSED
};

/// Class /Script/ConZ.FishingTrophyActor
/// Size: 0x0010 (0x000220 - 0x000230)
class AFishingTrophyActor : public AActor
{ 
public:
	USkeletalMeshComponent*                            _skeletalMeshComponent;                                     // 0x0220   (0x0008)  
	UStaticMeshComponent*                              _staticMeshComponent;                                       // 0x0228   (0x0008)  
};

/// Class /Script/ConZ.FishingTrophyWidget
/// Size: 0x0068 (0x000260 - 0x0002C8)
class UFishingTrophyWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0260   (0x0030)  MISSED
	UTextBlock*                                        _fishNameText;                                              // 0x0290   (0x0008)  
	UTextBlock*                                        _fishWeightText;                                            // 0x0298   (0x0008)  
	UTextBlock*                                        _fishSizeText;                                              // 0x02A0   (0x0008)  
	UTextBlock*                                        _keepFishHotkeyText;                                        // 0x02A8   (0x0008)  
	UTextBlock*                                        _releaseFishHotkeyText;                                     // 0x02B0   (0x0008)  
	UButton*                                           _keepButton;                                                // 0x02B8   (0x0008)  
	UButton*                                           _releaseButton;                                             // 0x02C0   (0x0008)  


	/// Functions
	// Function /Script/ConZ.FishingTrophyWidget.OnReleasedPressed
	void OnReleasedPressed();                                                                                                // [0x22d5af0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.FishingTrophyWidget.OnKeepPressed
	void OnKeepPressed();                                                                                                    // [0x22d5ab0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.FishingWireComponent
/// Size: 0x0050 (0x000710 - 0x000760)
class UFishingWireComponent : public UVDRopeComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0710   (0x0050)  MISSED
};

/// Class /Script/ConZ.FishingZoneIndicator
/// Size: 0x0020 (0x000220 - 0x000240)
class AFishingZoneIndicator : public AActor
{ 
public:
	USceneComponent*                                   _sceneComponent;                                            // 0x0220   (0x0008)  
	UParticleSystemComponent*                          _fishIconParticles;                                         // 0x0228   (0x0008)  
	UParticleSystemComponent*                          _rippleParticles;                                           // 0x0230   (0x0008)  
	float                                              _radius;                                                    // 0x0238   (0x0004)  
	float                                              _catchingChanceMultiplier;                                  // 0x023C   (0x0004)  


	/// Functions
	// Function /Script/ConZ.FishingZoneIndicator.OnRep_Radius
	void OnRep_Radius();                                                                                                     // [0xb92f40] Final|Native|Private 
};

/// Class /Script/ConZ.FishSchoolActor
/// Size: 0x0260 (0x000220 - 0x000480)
class AFishSchoolActor : public AActor
{ 
public:
	EFishBehavior                                      _currentState;                                              // 0x0220   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2F];                                      // 0x0221   (0x002F)  MISSED
	UCapsuleComponent*                                 _capsuleComponent;                                          // 0x0250   (0x0008)  
	UFishInstancedStaticMeshComponent*                 _schoolInstancedStaticMeshComponent;                        // 0x0258   (0x0008)  
	unsigned char                                      UnknownData01_5[0x2C];                                      // 0x0260   (0x002C)  MISSED
	float                                              _minDistanceToTarget;                                       // 0x028C   (0x0004)  
	float                                              _boundsInflation;                                           // 0x0290   (0x0004)  
	float                                              _findPathBypassMultiplier;                                  // 0x0294   (0x0004)  
	int32_t                                            _maxTimesSameDestinationAllowed;                            // 0x0298   (0x0004)  
	float                                              _maxTimePerDestinationMultiplier;                           // 0x029C   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x02A0   (0x0004)  MISSED
	float                                              _schoolMovementRecoveryTurningSpeed;                        // 0x02A4   (0x0004)  
	float                                              _schoolMovementRecoveryAcceleration;                        // 0x02A8   (0x0004)  
	float                                              _schoolMovementRecoveryDeceleration;                        // 0x02AC   (0x0004)  
	float                                              _schoolCloseToSurfaceTurningSpeed;                          // 0x02B0   (0x0004)  
	float                                              _schoolCloseToSurfaceAcceleration;                          // 0x02B4   (0x0004)  
	float                                              _schoolCloseToSurfaceDeceleration;                          // 0x02B8   (0x0004)  
	float                                              _surfaceOffset;                                             // 0x02BC   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x02C0   (0x0004)  MISSED
	float                                              _upperForbiddenZoneDepthPercentage;                         // 0x02C4   (0x0004)  
	float                                              _swimmingDepthPercentage;                                   // 0x02C8   (0x0004)  
	float                                              _lowerForbiddenZoneDepthPercentage;                         // 0x02CC   (0x0004)  
	UParticleSystem*                                   _waterParticles;                                            // 0x02D0   (0x0008)  
	float                                              _waterParticlesInterval;                                    // 0x02D8   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x02DC   (0x0004)  MISSED
	UParticleSystemComponent*                          _waterParticlesComponent;                                   // 0x02E0   (0x0008)  
	unsigned char                                      UnknownData05_5[0x4];                                       // 0x02E8   (0x0004)  MISSED
	int32_t                                            _forcedNumberOfGroups;                                      // 0x02EC   (0x0004)  
	float                                              _groupSpeed;                                                // 0x02F0   (0x0004)  
	float                                              _groupSeparationSpeed;                                      // 0x02F4   (0x0004)  
	float                                              _groupCatchUpSpeed;                                         // 0x02F8   (0x0004)  
	float                                              _groupSeparationDistance;                                   // 0x02FC   (0x0004)  
	unsigned char                                      UnknownData06_5[0x4];                                       // 0x0300   (0x0004)  MISSED
	float                                              _groupSeparationTime;                                       // 0x0304   (0x0004)  
	int32_t                                            _minNumberOfFish;                                           // 0x0308   (0x0004)  
	int32_t                                            _maxNumberOfFish;                                           // 0x030C   (0x0004)  
	unsigned char                                      UnknownData07_5[0x4];                                       // 0x0310   (0x0004)  MISSED
	float                                              _maxFishDistance;                                           // 0x0314   (0x0004)  
	unsigned char                                      UnknownData08_5[0x4];                                       // 0x0318   (0x0004)  MISSED
	float                                              _fishSeparationDistance;                                    // 0x031C   (0x0004)  
	float                                              _fishSeparationTime;                                        // 0x0320   (0x0004)  
	unsigned char                                      UnknownData09_5[0x4];                                       // 0x0324   (0x0004)  MISSED
	float                                              _fishTurnSpeedRangeModifier;                                // 0x0328   (0x0004)  
	float                                              _fishMinScale;                                              // 0x032C   (0x0004)  
	float                                              _fishMaxScale;                                              // 0x0330   (0x0004)  
	float                                              _fishNormalSpeed;                                           // 0x0334   (0x0004)  
	float                                              _fishSeparationSpeed;                                       // 0x0338   (0x0004)  
	float                                              _fishCatchUpSpeed;                                          // 0x033C   (0x0004)  
	float                                              _fishMaxSpeed;                                              // 0x0340   (0x0004)  
	float                                              _fishAcceleration;                                          // 0x0344   (0x0004)  
	float                                              _fishDeceleration;                                          // 0x0348   (0x0004)  
	unsigned char                                      UnknownData10_5[0x4C];                                      // 0x034C   (0x004C)  MISSED
	FVector                                            _moveToLocationRep;                                         // 0x0398   (0x000C)  
	unsigned char                                      UnknownData11_5[0xC];                                       // 0x03A4   (0x000C)  MISSED
	TMap<EFishBehavior, FFishStateParameters>          _behaviorMap;                                               // 0x03B0   (0x0050)  
	FVector                                            _randomMovementExtent;                                      // 0x0400   (0x000C)  
	float                                              _fleeingDistanceFromEnemy;                                  // 0x040C   (0x0004)  
	float                                              _fleeingPathLength;                                         // 0x0410   (0x0004)  
	float                                              _returnToNormalBehaviorDistance;                            // 0x0414   (0x0004)  
	float                                              _schoolInternalMovementRelevancyDistanceSquared;            // 0x0418   (0x0004)  
	unsigned char                                      UnknownData12_5[0x10];                                      // 0x041C   (0x0010)  MISSED
	float                                              _fadeInTime;                                                // 0x042C   (0x0004)  
	unsigned char                                      UnknownData13_5[0x4];                                       // 0x0430   (0x0004)  MISSED
	float                                              _fadeOutTime;                                               // 0x0434   (0x0004)  
	unsigned char                                      UnknownData14_6[0x48];                                      // 0x0438   (0x0048)  MISSED


	/// Functions
	// Function /Script/ConZ.FishSchoolActor.OnRep_MoveToLocationRep
	void OnRep_MoveToLocationRep();                                                                                          // [0x22d9750] Final|Native|Private 
	// Function /Script/ConZ.FishSchoolActor.OnRep_CurrentState
	void OnRep_CurrentState();                                                                                               // [0x22d9710] Final|Native|Private 
};

/// Class /Script/ConZ.FishSpawningPreset
/// Size: 0x0008 (0x000030 - 0x000038)
class UFishSpawningPreset : public UDataAsset
{ 
public:
	float                                              SpawningChance;                                             // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Class /Script/ConZ.FishSpeciesData
/// Size: 0x0058 (0x000030 - 0x000088)
class UFishSpeciesData : public UDataAsset
{ 
public:
	EFishSpecies                                       FishSpecies;                                                // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	UStaticMesh*                                       SingleFishStaticMesh;                                       // 0x0038   (0x0008)  
	USkeletalMesh*                                     SingleFishSkeletalMesh;                                     // 0x0040   (0x0008)  
	UMaterialInterface*                                MaterialOverride;                                           // 0x0048   (0x0008)  
	UAnimSequence*                                     CaughtFishAnimSequence;                                     // 0x0050   (0x0008)  
	UClass*                                            SchoolClass;                                                // 0x0058   (0x0008)  
	UClass*                                            caughtFishClass;                                            // 0x0060   (0x0008)  
	bool                                               Predator;                                                   // 0x0068   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0069   (0x0003)  MISSED
	float                                              MinDepth;                                                   // 0x006C   (0x0004)  
	float                                              MaxDepth;                                                   // 0x0070   (0x0004)  
	float                                              MinMass;                                                    // 0x0074   (0x0004)  
	float                                              MaxMass;                                                    // 0x0078   (0x0004)  
	float                                              MaxLength;                                                  // 0x007C   (0x0004)  
	UCurveFloat*                                       TimeOfDayPercentageCurve;                                   // 0x0080   (0x0008)  
};

/// Class /Script/ConZ.FishSpeciesPreset
/// Size: 0x0010 (0x000030 - 0x000040)
class UFishSpeciesPreset : public UDataAsset
{ 
public:
	TArray<FFishSpawnData>                             FishSpawnData;                                              // 0x0030   (0x0010)  
};

/// Class /Script/ConZ.FlagAreaVisualizer
/// Size: 0x0010 (0x000220 - 0x000230)
class AFlagAreaVisualizer : public AActor
{ 
public:
	UStaticMeshComponent*                              _staticMeshComponent;                                       // 0x0220   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0228   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.FlagAreaVisualizer.DestroyVisualizer
	void DestroyVisualizer();                                                                                                // [0x22d96d0] Final|Native|Private 
};

/// Class /Script/ConZ.FlagElementsExpansionItem
/// Size: 0x0010 (0x000910 - 0x000920)
class AFlagElementsExpansionItem : public AItem
{ 
public:
	int32_t                                            _numberOfElements;                                          // 0x0910   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x0914   (0x000C)  MISSED
};

/// Class /Script/ConZ.FlamethrowerComponent
/// Size: 0x0270 (0x0000B0 - 0x000320)
class UFlamethrowerComponent : public UActorComponent
{ 
public:
	UNiagaraSystem*                                    _flamethrowerParticleSystem;                                // 0x00B0   (0x0008)  
	UNiagaraComponent*                                 _flamethrowerNiagaraComponent;                              // 0x00B8   (0x0008)  
	UStaticMesh*                                       _lightSourceMesh;                                           // 0x00C0   (0x0008)  
	UMaterialInterface*                                _lightSourceMaterial;                                       // 0x00C8   (0x0008)  
	UStaticMeshComponent*                              _lightSourceMeshComponent;                                  // 0x00D0   (0x0008)  
	FVector                                            _lightSourceScale;                                          // 0x00D8   (0x000C)  
	float                                              _maxLightSourceIntensity;                                   // 0x00E4   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00E8   (0x0004)  MISSED
	float                                              _lightSourceIntensityChangeTime;                            // 0x00EC   (0x0004)  
	FLinearColor                                       _lightSourceColor;                                          // 0x00F0   (0x0010)  
	bool                                               _automaticallyAttachToParentsMesh;                          // 0x0100   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0101   (0x0003)  MISSED
	int32_t                                            _meshComponentId;                                           // 0x0104   (0x0004)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x0108   (0x0008)  MISSED
	FName                                              _socketName;                                                // 0x0110   (0x0008)  
	FVector                                            _effectScale;                                               // 0x0118   (0x000C)  
	unsigned char                                      UnknownData03_5[0x3C];                                      // 0x0124   (0x003C)  MISSED
	float                                              _coneHalfAngle;                                             // 0x0160   (0x0004)  
	unsigned char                                      UnknownData04_5[0x8];                                       // 0x0164   (0x0008)  MISSED
	float                                              _coneLength;                                                // 0x016C   (0x0004)  
	FFloatInterval                                     _temperature;                                               // 0x0170   (0x0008)  
	float                                              _offcenterTemperatureFalloffExp;                            // 0x0178   (0x0004)  
	float                                              _rotationalInertia;                                         // 0x017C   (0x0004)  
	unsigned char                                      UnknownData05_5[0x40];                                      // 0x0180   (0x0040)  MISSED
	bool                                               _ignoreSelf;                                                // 0x01C0   (0x0001)  
	unsigned char                                      UnknownData06_5[0x7];                                       // 0x01C1   (0x0007)  MISSED
	UAkAudioEvent*                                     _activeAudioEvent;                                          // 0x01C8   (0x0008)  
	UAkAudioEvent*                                     _stopAudioEvent;                                            // 0x01D0   (0x0008)  
	unsigned char                                      UnknownData07_6[0x148];                                     // 0x01D8   (0x0148)  MISSED


	/// Functions
	// Function /Script/ConZ.FlamethrowerComponent.DeactivateFlamethrower
	void DeactivateFlamethrower();                                                                                           // [0x22d96a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.FlamethrowerComponent.ActivateFlamethrower
	void ActivateFlamethrower();                                                                                             // [0x22d9670] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.IgnitableItemComponent
/// Size: 0x00D0 (0x0000C8 - 0x000198)
class UIgnitableItemComponent : public UItemComponent
{ 
public:
	bool                                               _canBurnUnderwater;                                         // 0x00C8   (0x0001)  
	bool                                               _canBeIgnitedUnderwater;                                    // 0x00C9   (0x0001)  
	bool                                               _canBeIgnitedWet;                                           // 0x00CA   (0x0001)  
	bool                                               _canBeIgnitedOnGround;                                      // 0x00CB   (0x0001)  
	bool                                               _canBePutOut;                                               // 0x00CC   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x00CD   (0x0003)  MISSED
	float                                              _autoDestroyTimeOnUse;                                      // 0x00D0   (0x0004)  
	FName                                              _effectsSocket;                                             // 0x00D4   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x00DC   (0x0004)  MISSED
	UAnimMontage*                                      _prisonerIgniteMontage;                                     // 0x00E0   (0x0008)  
	UAkAudioEvent*                                     _ignitionAudioEvent;                                        // 0x00E8   (0x0008)  
	UAkAudioEvent*                                     _extinguishAudioEvent;                                      // 0x00F0   (0x0008)  
	UParticleSystem*                                   _ignitionParticle;                                          // 0x00F8   (0x0008)  
	UParticleSystem*                                   _burningParticle;                                           // 0x0100   (0x0008)  
	UParticleSystem*                                   _extinguishParticle;                                        // 0x0108   (0x0008)  
	UNiagaraSystem*                                    _ignitionNiagaraParticle;                                   // 0x0110   (0x0008)  
	UNiagaraSystem*                                    _burningNiagaraParticle;                                    // 0x0118   (0x0008)  
	UNiagaraSystem*                                    _extinguishNiagaraParticle;                                 // 0x0120   (0x0008)  
	float                                              _ignitionParticleDuration;                                  // 0x0128   (0x0004)  
	float                                              _particlesLoopDuration;                                     // 0x012C   (0x0004)  
	float                                              _extinguishParticleDuration;                                // 0x0130   (0x0004)  
	unsigned char                                      UnknownData02_5[0x1];                                       // 0x0134   (0x0001)  MISSED
	EIgnitableItemState                                _repState;                                                  // 0x0135   (0x0001)  
	bool                                               _wasEverIgnited;                                            // 0x0136   (0x0001)  
	unsigned char                                      UnknownData03_5[0x9];                                       // 0x0137   (0x0009)  MISSED
	float                                              _particlesLoopStartBlend;                                   // 0x0140   (0x0004)  
	float                                              _noiseLoudnessWhileIgnited;                                 // 0x0144   (0x0004)  
	float                                              _noiseLoudnessUpdateFrequencyPerHour;                       // 0x0148   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x014C   (0x0004)  MISSED
	TArray<FIgnitableItemIgnitionRequirements>         _ignitionRequirements;                                      // 0x0150   (0x0010)  
	float                                              _ignitionDurationOnTheGround;                               // 0x0160   (0x0004)  
	bool                                               _shouldControlUsage;                                        // 0x0164   (0x0001)  
	unsigned char                                      UnknownData05_6[0x33];                                      // 0x0165   (0x0033)  MISSED


	/// Functions
	// Function /Script/ConZ.IgnitableItemComponent.OnRep_WasEverIgnited
	void OnRep_WasEverIgnited();                                                                                             // [0x22f3060] Native|Protected     
	// Function /Script/ConZ.IgnitableItemComponent.OnRep_State
	void OnRep_State();                                                                                                      // [0x22f3040] Final|Native|Private 
};

/// Class /Script/ConZ.FlareItemComponent
/// Size: 0x0020 (0x000198 - 0x0001B8)
class UFlareItemComponent : public UIgnitableItemComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0198   (0x0008)  MISSED
	FLinearColor                                       _pointLightColor;                                           // 0x01A0   (0x0010)  
	UMaterialInterface*                                _pointLightMaterial;                                        // 0x01B0   (0x0008)  
};

/// Class /Script/ConZ.FlareTrapItem
/// Size: 0x0050 (0x000A60 - 0x000AB0)
class AFlareTrapItem : public ATrapItem
{ 
public:
	UAkAudioEvent*                                     _triggerSound;                                              // 0x0A60   (0x0008)  
	float                                              _detonationDelay;                                           // 0x0A68   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0A6C   (0x0004)  MISSED
	UClass*                                            _projectileClass;                                           // 0x0A70   (0x0008)  
	FVector                                            _projectileLocation;                                        // 0x0A78   (0x000C)  
	FRotator                                           _projectileRotation;                                        // 0x0A84   (0x000C)  
	float                                              _projectileMuzzleVelocity;                                  // 0x0A90   (0x0004)  
	float                                              _projectileLifetime;                                        // 0x0A94   (0x0004)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x0A98   (0x0018)  MISSED


	/// Functions
	// Function /Script/ConZ.FlareTrapItem.Detonate
	void Detonate();                                                                                                         // [0x22d96f0] Final|Native|Private 
};

/// Class /Script/ConZ.GrenadeItem
/// Size: 0x00D0 (0x000910 - 0x0009E0)
class AGrenadeItem : public AItem
{ 
public:
	float                                              _explosionDamage;                                           // 0x0910   (0x0004)  
	float                                              _explosionOuterRadius;                                      // 0x0914   (0x0004)  
	float                                              _explosionInnerRadius;                                      // 0x0918   (0x0004)  
	float                                              _explosionFalloff;                                          // 0x091C   (0x0004)  
	float                                              _explosionDelay;                                            // 0x0920   (0x0004)  
	float                                              _explosionForce;                                            // 0x0924   (0x0004)  
	FTargetTypeDamageMultiplier                        _explosionTargetTypeMultiplier;                             // 0x0928   (0x0010)  
	float                                              _explosionImpulse_OBSOLETE;                                 // 0x0938   (0x0004)  
	unsigned char                                      UnknownData00_5[0xC];                                       // 0x093C   (0x000C)  MISSED
	UParticleSystem*                                   _explosionParticle;                                         // 0x0948   (0x0008)  
	UClass*                                            _explosionCameraShakeClass;                                 // 0x0950   (0x0008)  
	float                                              _hearingDamageRadius;                                       // 0x0958   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x095C   (0x0004)  MISSED
	UAkAudioEvent*                                     ExplosionAudioEvent;                                        // 0x0960   (0x0008)  
	UAkAudioEvent*                                     _explosionAudioEvent;                                       // 0x0968   (0x0008)  
	UAkAudioEvent*                                     _pullPinAudioEvent;                                         // 0x0970   (0x0008)  
	USkeletalMeshComponent*                            _skeletalMesh;                                              // 0x0978   (0x0008)  
	UAnimMontage*                                      _grenadeLongThrowMontage;                                   // 0x0980   (0x0008)  
	UAnimMontage*                                      _grenadeLongThrowLoopMontage;                               // 0x0988   (0x0008)  
	UAnimMontage*                                      _grenadeShortThrowMontage;                                  // 0x0990   (0x0008)  
	UAnimMontage*                                      _grenadeThrowbackMontage;                                   // 0x0998   (0x0008)  
	FName                                              _leverReleasedSocketName;                                   // 0x09A0   (0x0008)  
	UParticleSystem*                                   _leverReleasedPS;                                           // 0x09A8   (0x0008)  
	float                                              _netCullDistanceSquaredMeters;                              // 0x09B0   (0x0004)  
	bool                                               _pinPulled;                                                 // 0x09B4   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x09B5   (0x0003)  MISSED
	float                                              _pinPullingDurationOnTheGround;                             // 0x09B8   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x09BC   (0x0004)  MISSED
	UTakeInHandsAssetData*                             _takeInHandsWhenPinIsPulledAssetData;                       // 0x09C0   (0x0008)  
	unsigned char                                      UnknownData04_6[0x18];                                      // 0x09C8   (0x0018)  MISSED


	/// Functions
	// Function /Script/ConZ.GrenadeItem.Multicast_PlayPinPulledAudio
	void Multicast_PlayPinPulledAudio();                                                                                     // [0x227e160] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.GrenadeItem.Multicast_PlayEffects
	void Multicast_PlayEffects(FVector zeroBasedLocation, FRotator Rotation);                                                // [0x22eb160] Net|NetReliableNative|Event|NetMulticast|Protected|HasDefaults 
	// Function /Script/ConZ.GrenadeItem.GetArmingMontage
	UAnimMontage* GetArmingMontage(EThrowingType throwingType);                                                              // [0x22eb0d0] Native|Event|Public|BlueprintEvent|Const 
};

/// Class /Script/ConZ.FlashbangItem
/// Size: 0x0010 (0x0009E0 - 0x0009F0)
class AFlashbangItem : public AGrenadeItem
{ 
public:
	UClass*                                            _flashbangEffectsClass;                                     // 0x09D8   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x09E0   (0x0010)  MISSED
};

/// Class /Script/ConZ.FlashbangItemEffects
/// Size: 0x0050 (0x000220 - 0x000270)
class AFlashbangItemEffects : public AActor
{ 
public:
	UParticleSystem*                                   _explosionParticles;                                        // 0x0220   (0x0008)  
	UClass*                                            _explosionCameraShakeClass;                                 // 0x0228   (0x0008)  
	UAkAudioEvent*                                     _explosionAudioEvent;                                       // 0x0230   (0x0008)  
	UAkAudioEvent*                                     _startStunnedSoundEffectsAudioEvent;                        // 0x0238   (0x0008)  
	UAkAudioEvent*                                     _stopStunnedSoundEffectsAudioEvent;                         // 0x0240   (0x0008)  
	float                                              _minFlashbangDurationToStartStunnedSoundEffects;            // 0x0248   (0x0004)  
	float                                              _fullFlashDuration;                                         // 0x024C   (0x0004)  
	float                                              _flashFadeOutDuration;                                      // 0x0250   (0x0004)  
	float                                              _flashRadius;                                               // 0x0254   (0x0004)  
	float                                              _flashLineTraceDistance;                                    // 0x0258   (0x0004)  
	unsigned char                                      UnknownData00_6[0x14];                                      // 0x025C   (0x0014)  MISSED
};

/// Class /Script/ConZ.FloatingWidgetCanvas
/// Size: 0x0010 (0x000130 - 0x000140)
class UFloatingWidgetCanvas : public UCanvasPanel
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0130   (0x0010)  MISSED
};

/// Class /Script/ConZ.FocusableWidgetInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UFocusableWidgetInterface : public UInterface
{ 
public:
};

/// Class /Script/ConZ.FogSphere
/// Size: 0x0010 (0x000220 - 0x000230)
class AFogSphere : public AActor
{ 
public:
	bool                                               _shouldExistOnDedicatedServer;                              // 0x0220   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0221   (0x0007)  MISSED
	UCurveFloat*                                       _densityVersusTimeOfDay;                                    // 0x0228   (0x0008)  


	/// Functions
	// Function /Script/ConZ.FogSphere.SetFogDensity
	void SetFogDensity(float Density);                                                                                       // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.FogSphere.OnTimeOfDayChanged
	void OnTimeOfDayChanged(AWeatherController2* sender);                                                                    // [0x22d9770] Final|Native|Public  
};

/// Class /Script/ConZ.FoliageAssetData
/// Size: 0x0070 (0x000028 - 0x000098)
class UFoliageAssetData : public UAssetUserData
{ 
public:
	FFoliageGeneralData                                GeneralData;                                                // 0x0028   (0x0010)  
	FFoliageEffectsData                                EffectsData;                                                // 0x0038   (0x0018)  
	FFoliageAIPerceptionData                           AIPerceptionData;                                           // 0x0050   (0x0002)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0052   (0x0002)  MISSED
	FFoliageCanopyData                                 CanopyData;                                                 // 0x0054   (0x0040)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0094   (0x0004)  MISSED
};

/// Class /Script/ConZ.FoliageInstancedBush
/// Size: 0x0000 (0x0006B0 - 0x0006B0)
class UFoliageInstancedBush : public UFoliageInstancedStaticMeshComponent
{ 
public:
};

/// Class /Script/ConZ.FoliageInstancedGrass
/// Size: 0x0000 (0x0006B0 - 0x0006B0)
class UFoliageInstancedGrass : public UFoliageInstancedStaticMeshComponent
{ 
public:
};

/// Class /Script/ConZ.FoliageInstancedTree
/// Size: 0x0000 (0x0006B0 - 0x0006B0)
class UFoliageInstancedTree : public UFoliageInstancedStaticMeshComponent
{ 
public:
};

/// Class /Script/ConZ.FollowsMouseActor
/// Size: 0x0008 (0x000220 - 0x000228)
class AFollowsMouseActor : public AActor
{ 
public:
	float                                              DistanceFromCamera;                                         // 0x0220   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0224   (0x0004)  MISSED
};

/// Class /Script/ConZ.FoodItemState
/// Size: 0x0010 (0x000100 - 0x000110)
class UFoodItemState : public UItemState
{ 
public:
	float                                              Temperature;                                                // 0x0100   (0x0004)  
	float                                              CookedAmount;                                               // 0x0104   (0x0004)  
	float                                              CookedQuality;                                              // 0x0108   (0x0004)  
	bool                                               ItemOpened;                                                 // 0x010C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x010D   (0x0003)  MISSED
};

/// Class /Script/ConZ.ForceUnlockItemTag
/// Size: 0x0000 (0x000030 - 0x000030)
class UForceUnlockItemTag : public UBaseItemTag
{ 
public:
};

/// Class /Script/ConZ.Metabolism
/// Size: 0x10E0 (0x000028 - 0x001108)
class UMetabolism : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0xC80];                                     // 0x0028   (0x0C80)  MISSED
	FMetabolismConfiguration                           _configuration;                                             // 0x0CA8   (0x0460)  
};

/// Class /Script/ConZ.ForeignSubstance
/// Size: 0x0080 (0x000028 - 0x0000A8)
class UForeignSubstance : public UObject
{ 
public:
	FText                                              _name;                                                      // 0x0028   (0x0018)  
	EDisposition                                       _disposition;                                               // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0041   (0x0003)  MISSED
	float                                              _absorptionCapacity;                                        // 0x0044   (0x0004)  
	float                                              _absorptionRate;                                            // 0x0048   (0x0004)  
	float                                              _baseDiscardRate;                                           // 0x004C   (0x0004)  
	TMap<UClass*, FRuntimeFloatCurve>                  _discardRateMultiplierPerOtherSubstance;                    // 0x0050   (0x0050)  
	float                                              _amountToDiscardPerWaterTransferredToBladder;               // 0x00A0   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x00A4   (0x0004)  MISSED
};

/// Class /Script/ConZ.FortificationComponent
/// Size: 0x0040 (0x0004E0 - 0x000520)
class UFortificationComponent : public UStaticMeshComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x04E0   (0x0008)  MISSED
	UParticleSystem*                                   _destructionParticles;                                      // 0x04E8   (0x0008)  
	UAkAudioEvent*                                     _destructionAudio;                                          // 0x04F0   (0x0008)  
	ABuilding*                                         _parentBuilding;                                            // 0x04F8   (0x0008)  
	int32_t                                            _markerIndex;                                               // 0x0500   (0x0004)  
	float                                              _health;                                                    // 0x0504   (0x0004)  
	float                                              _collisionEnergyResistance;                                 // 0x0508   (0x0004)  
	float                                              _explosionResistance;                                       // 0x050C   (0x0004)  
	float                                              _hardness;                                                  // 0x0510   (0x0004)  
	unsigned char                                      UnknownData01_6[0xC];                                       // 0x0514   (0x000C)  MISSED
};

/// Class /Script/ConZ.FragGrenadeItem
/// Size: 0x0000 (0x0009E0 - 0x0009E0)
class AFragGrenadeItem : public AGrenadeItem
{ 
public:
};

/// Class /Script/ConZ.FuelItemTag
/// Size: 0x0008 (0x000030 - 0x000038)
class UFuelItemTag : public UBaseItemTag
{ 
public:
	FCombustibleItemParams                             CombustionParams;                                           // 0x0030   (0x0008)  
};

/// Class /Script/ConZ.FireFanningItemTag
/// Size: 0x0038 (0x000030 - 0x000068)
class UFireFanningItemTag : public UBaseItemTag
{ 
public:
	UAnimMontage*                                      BlowAirIntoFireMontage;                                     // 0x0030   (0x0008)  
	UAnimMontage*                                      BlowAirIntoLowFireMontage;                                  // 0x0038   (0x0008)  
	UAnimMontage*                                      ItemSwingAnimOpen;                                          // 0x0040   (0x0008)  
	FName                                              ItemSwingAnimOpenSection;                                   // 0x0048   (0x0008)  
	UAnimMontage*                                      ItemSwingAnimClose;                                         // 0x0050   (0x0008)  
	FName                                              ItemSwingAnimCloseSection;                                  // 0x0058   (0x0008)  
	float                                              AirAmountMultiplier;                                        // 0x0060   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0064   (0x0004)  MISSED
};

/// Class /Script/ConZ.FundsOverview
/// Size: 0x0028 (0x000260 - 0x000288)
class UFundsOverview : public UUserWidget
{ 
public:
	UTextBlock*                                        _famePointsText;                                            // 0x0260   (0x0008)  
	UTextBlock*                                        _rankText;                                                  // 0x0268   (0x0008)  
	UTextBlock*                                        _accountBalanceText;                                        // 0x0270   (0x0008)  
	UTextBlock*                                        _goldBalanceText;                                           // 0x0278   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0280   (0x0008)  MISSED
};

/// Class /Script/ConZ.FundsOverviewUIController
/// Size: 0x0008 (0x000028 - 0x000030)
class UFundsOverviewUIController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.FuseItemTag
/// Size: 0x0010 (0x000030 - 0x000040)
class UFuseItemTag : public UBaseItemTag
{ 
public:
	float                                              MaximumLoad;                                                // 0x0030   (0x0004)  
	float                                              BaseHealthLossRate;                                         // 0x0034   (0x0004)  
	float                                              AdditionalHealthLossRatePer100A;                            // 0x0038   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x003C   (0x0004)  MISSED
};

/// Class /Script/ConZ.GameEventBorder
/// Size: 0x0070 (0x000220 - 0x000290)
class AGameEventBorder : public AActor
{ 
public:
	UStaticMeshComponent*                              Mesh;                                                       // 0x0220   (0x0008)  
	UMaterialInstanceDynamic*                          Material;                                                   // 0x0228   (0x0008)  
	UChildActorComponent*                              SoundSpline;                                                // 0x0230   (0x0008)  
	UAkAudioEvent*                                     AudioEvent;                                                 // 0x0238   (0x0008)  
	EGameEventBorderState                              _state;                                                     // 0x0240   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0241   (0x0003)  MISSED
	float                                              _desiredRadius;                                             // 0x0244   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0248   (0x0004)  MISSED
	FVector                                            _desiredOffset;                                             // 0x024C   (0x000C)  
	unsigned char                                      UnknownData02_5[0xC];                                       // 0x0258   (0x000C)  MISSED
	float                                              _desiredHeat;                                               // 0x0264   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x0268   (0x0004)  MISSED
	float                                              _radiusChangeSpeed;                                         // 0x026C   (0x0004)  
	float                                              _offsetChangeSpeed;                                         // 0x0270   (0x0004)  
	float                                              _heatChangeSpeed;                                           // 0x0274   (0x0004)  
	bool                                               _collisionEnabled;                                          // 0x0278   (0x0001)  
	bool                                               _blockPawns;                                                // 0x0279   (0x0001)  
	unsigned char                                      UnknownData04_6[0x16];                                      // 0x027A   (0x0016)  MISSED


	/// Functions
	// Function /Script/ConZ.GameEventBorder.SetEnablePawnCollision
	void SetEnablePawnCollision(bool Value);                                                                                 // [0x22e4ac0] Final|Native|Public  
	// Function /Script/ConZ.GameEventBorder.OnRep_Collision
	void OnRep_Collision();                                                                                                  // [0x22e4790] Final|Native|Private 
	// Function /Script/ConZ.GameEventBorder.Multicast_SetRadius
	void Multicast_SetRadius(float Radius);                                                                                  // [0x22e4530] Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBorder.Multicast_SetOffset
	void Multicast_SetOffset(FVector Offset);                                                                                // [0x22e44a0] Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults|BlueprintCallable 
	// Function /Script/ConZ.GameEventBorder.IsActive
	bool IsActive();                                                                                                         // [0x22e4360] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBorder.HeatUpAndChangeArea
	void HeatUpAndChangeArea(float Radius, FVector focus, float Duration, float heatUpDuration);                             // [0x22e41e0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/ConZ.GameEventBorder.GetState
	EGameEventBorderState GetState();                                                                                        // [0x22e4180] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBorder.GetRadius
	float GetRadius();                                                                                                       // [0x22e40c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBorder.GetOffset
	FVector GetOffset();                                                                                                     // [0x22e4080] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBorder.GetBorderCenter
	FVector GetBorderCenter();                                                                                               // [0x22e3fb0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventBorder.ChangeState
	void ChangeState(EGameEventBorderState State, float Duration);                                                           // [0x22e39a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventBorder.ChangeArea
	void ChangeArea(float Radius, FVector focus, float Duration);                                                            // [0x22e3880] Final|Native|Public|HasDefaults|BlueprintCallable 
};

/// Class /Script/ConZ.GameEventCardWidget
/// Size: 0x0140 (0x000260 - 0x0003A0)
class UGameEventCardWidget : public UUserWidget
{ 
public:
	AGameEventBase*                                    _gameEvent;                                                 // 0x0260   (0x0008)  
	UButton*                                           JoinButton;                                                 // 0x0268   (0x0008)  
	UButton*                                           JoinBlueButton;                                             // 0x0270   (0x0008)  
	UButton*                                           JoinRedButton;                                              // 0x0278   (0x0008)  
	UButton*                                           SwitchTeamButton;                                           // 0x0280   (0x0008)  
	UGameEventInfoWidget*                              UI_GameEventInfoWidget;                                     // 0x0288   (0x0008)  
	UOverlay*                                          ScoreboardSlot;                                             // 0x0290   (0x0008)  
	UTextBlock*                                        TextBlock;                                                  // 0x0298   (0x0008)  
	UTextBlock*                                        TextBlock;                                                  // 0x02A0   (0x0008)  
	UTextBlock*                                        TextBlock;                                                  // 0x02A8   (0x0008)  
	UTextBlock*                                        TextBlock;                                                  // 0x02B0   (0x0008)  
	UTextBlock*                                        TextBlock;                                                  // 0x02B8   (0x0008)  
	UImage*                                            Screenshot;                                                 // 0x02C0   (0x0008)  
	UTextBlock*                                        LocationText;                                               // 0x02C8   (0x0008)  
	UTextBlock*                                        EntryFeeTag;                                                // 0x02D0   (0x0008)  
	UOverlay*                                          Buttons;                                                    // 0x02D8   (0x0008)  
	UHorizontalBox*                                    HorizontalBox;                                              // 0x02E0   (0x0008)  
	UButton*                                           LeaveButton;                                                // 0x02E8   (0x0008)  
	UTextBlock*                                        TeamSwitchFee;                                              // 0x02F0   (0x0008)  
	UTextBlock*                                        TextBlock;                                                  // 0x02F8   (0x0008)  
	UBorder*                                           JoinDisabledMsgBorder;                                      // 0x0300   (0x0008)  
	UBorder*                                           CooldownThrobber;                                           // 0x0308   (0x0008)  
	FSlateBrush                                        _defaultScreenshotBrush;                                    // 0x0310   (0x0088)  
	UAkAudioEvent*                                     _menuButtonClick;                                           // 0x0398   (0x0008)  


	/// Functions
	// Function /Script/ConZ.GameEventCardWidget.OnSwitchTeamButtonClicked
	void OnSwitchTeamButtonClicked();                                                                                        // [0x22e47f0] Final|Native|Private 
	// Function /Script/ConZ.GameEventCardWidget.OnLeaveButtonClicked
	void OnLeaveButtonClicked();                                                                                             // [0x22e4750] Final|Native|Private 
	// Function /Script/ConZ.GameEventCardWidget.OnJoinRedButtonClicked
	void OnJoinRedButtonClicked();                                                                                           // [0x22e4730] Final|Native|Private 
	// Function /Script/ConZ.GameEventCardWidget.OnJoinButtonClicked
	void OnJoinButtonClicked();                                                                                              // [0x22e4710] Final|Native|Private 
	// Function /Script/ConZ.GameEventCardWidget.OnJoinBlueButtonClicked
	void OnJoinBlueButtonClicked();                                                                                          // [0x22e46f0] Final|Native|Private 
	// Function /Script/ConZ.GameEventCardWidget.GetGameEvent
	AGameEventBase* GetGameEvent();                                                                                          // [0x22e3ff0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.GameEventInfoWidget
/// Size: 0x0000 (0x000260 - 0x000260)
class UGameEventInfoWidget : public UUserWidget
{ 
public:
};

/// Class /Script/ConZ.GameEventLeaderboardWidget
/// Size: 0x0030 (0x000260 - 0x000290)
class UGameEventLeaderboardWidget : public UUserWidget
{ 
public:
	TArray<FEventsRankingStatsItem>                    TopPlayersStats;                                            // 0x0260   (0x0010)  
	TArray<FEventsRankingStatsItem>                    PlayerRankingStats;                                         // 0x0270   (0x0010)  
	int32_t                                            playerRank;                                                 // 0x0280   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x0284   (0x000C)  MISSED


	/// Functions
	// Function /Script/ConZ.GameEventLeaderboardWidget.UpdateTopPlayers
	void UpdateTopPlayers();                                                                                                 // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.GameEventLeaderboardWidget.UpdatePlayerRanking
	void UpdatePlayerRanking();                                                                                              // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.GameEventLeaderboardWidget.RequestTopPlayers
	void RequestTopPlayers(int32_t Count, EEventsRankingStatsOrderByField orderByField, ESortOrder sortOrder);               // [0x22e4920] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventLeaderboardWidget.RequestPlayerRanking
	void RequestPlayerRanking(int32_t Pad, EEventsRankingStatsOrderByField orderByField, ESortOrder sortOrder);              // [0x22e4810] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventLeaderboardWidget.CancelReqeusts
	void CancelReqeusts();                                                                                                   // [0x22e3860] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.GameEventLeftPanel
/// Size: 0x0048 (0x000260 - 0x0002A8)
class UGameEventLeftPanel : public UTabMenuPanel
{ 
public:
	UComboBoxWrapper*                                  AllEventsComboBox;                                          // 0x0260   (0x0008)  
	UOverlay*                                          EventArea;                                                  // 0x0268   (0x0008)  
	UVerticalBox*                                      VerticalBox;                                                // 0x0270   (0x0008)  
	TArray<AGameEventBase*>                            _allEvents;                                                 // 0x0278   (0x0010)  
	TArray<AGameEventBase*>                            _currentEvents;                                             // 0x0288   (0x0010)  
	TArray<AGameEventBase*>                            _nextEvents;                                                // 0x0298   (0x0010)  


	/// Functions
	// Function /Script/ConZ.GameEventLeftPanel.OnEventComboBoxSelectionChanged
	void OnEventComboBoxSelectionChanged(FString SelectedItem, TEnumAsByte<ESelectInfo> SelectionType);                      // [0x22e45c0] Final|Native|Public  
};

/// Class /Script/ConZ.GameEventLoadoutMenuWidget
/// Size: 0x0038 (0x000260 - 0x000298)
class UGameEventLoadoutMenuWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0260   (0x0008)  MISSED
	TArray<UItemSelection*>                            _mandatoryGear;                                             // 0x0268   (0x0010)  
	UItemSelectionSlotWidget*                          _primarySelection;                                          // 0x0278   (0x0008)  
	UItemSelectionSlotWidget*                          _secondarySelection;                                        // 0x0280   (0x0008)  
	UItemSelectionSlotWidget*                          _tertiarySelection;                                         // 0x0288   (0x0008)  
	UItemSelectionSlotWidget*                          _outfitSelection;                                           // 0x0290   (0x0008)  


	/// Functions
	// Function /Script/ConZ.GameEventLoadoutMenuWidget.SetGameEvent
	void SetGameEvent(AGameEventBase* gameEvent);                                                                            // [0x22e4b50] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventLoadoutMenuWidget.GetGameEvent
	AGameEventBase* GetGameEvent();                                                                                          // [0x22e4020] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventLoadoutMenuWidget.CreateLoadout
	void CreateLoadout(UClass*& primary, UClass*& secondary, UClass*& tertiary, TArray<UClass*>& outfit, TArray<UClass*>& support, UPrisonerLoadout* loadout); // [0x22e3c20] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/ConZ.GameEventManager
/// Size: 0x0040 (0x000220 - 0x000260)
class AGameEventManager : public AActor
{ 
public:
	int32_t                                            EventHistoryLimit;                                          // 0x0220   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0224   (0x0004)  MISSED
	TArray<AGameEventBase*>                            _announcedGameEvents;                                       // 0x0228   (0x0010)  
	TArray<AGameEventBase*>                            _currentGameEvents;                                         // 0x0238   (0x0010)  
	TArray<AGameEventBase*>                            _endedGameEvents;                                           // 0x0248   (0x0010)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0258   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.GameEventManager.OnRep_EndedGameEvents
	void OnRep_EndedGameEvents();                                                                                            // [0x22e4770] Final|Native|Private 
	// Function /Script/ConZ.GameEventManager.OnRep_CurrentGameEvents
	void OnRep_CurrentGameEvents();                                                                                          // [0x22e4770] Final|Native|Private 
	// Function /Script/ConZ.GameEventManager.OnRep_AnnouncedGameEvents
	void OnRep_AnnouncedGameEvents();                                                                                        // [0x22e4770] Final|Native|Private 
};

/// Class /Script/ConZ.GameEventNotificationPanel
/// Size: 0x0060 (0x000260 - 0x0002C0)
class UGameEventNotificationPanel : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0260   (0x0008)  MISSED
	UBorder*                                           _nextEventBox;                                              // 0x0268   (0x0008)  
	UTextBlock*                                        _nextEventText;                                             // 0x0270   (0x0008)  
	UTextBlock*                                        _nextEventCountdown;                                        // 0x0278   (0x0008)  
	UBorder*                                           _eventCancelBox;                                            // 0x0280   (0x0008)  
	UTextBlock*                                        _eventCancelTime;                                           // 0x0288   (0x0008)  
	UBorder*                                           _eventTimeBox;                                              // 0x0290   (0x0008)  
	UTextBlock*                                        _eventTimeText;                                             // 0x0298   (0x0008)  
	FLinearColor                                       _nonAlertedColor;                                           // 0x02A0   (0x0010)  
	FLinearColor                                       _alertedColor;                                              // 0x02B0   (0x0010)  
};

/// Class /Script/ConZ.GameEventNotificationUIController
/// Size: 0x0008 (0x000028 - 0x000030)
class UGameEventNotificationUIController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.GameEventParticipantInfoCardWidget
/// Size: 0x0000 (0x000260 - 0x000260)
class UGameEventParticipantInfoCardWidget : public UUserWidget
{ 
public:
};

/// Class /Script/ConZ.GameEventParticipantStatsWidget
/// Size: 0x0020 (0x000260 - 0x000280)
class UGameEventParticipantStatsWidget : public UUserWidget
{ 
public:
	AGameEventBase*                                    _gameEvent;                                                 // 0x0260   (0x0008)  
	int32_t                                            _index;                                                     // 0x0268   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x026C   (0x0004)  MISSED
	UGameEventScoreboardWidget*                        _scoreboard;                                                // 0x0270   (0x0008)  
	int32_t                                            _teamIndex;                                                 // 0x0278   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x027C   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.GameEventParticipantStatsWidget.UpdateStats
	void UpdateStats();                                                                                                      // [0x2859740] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/ConZ.GameEventParticipantStatsWidget.UpdateColours
	void UpdateColours();                                                                                                    // [0x2859740] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/ConZ.GameEventParticipantStatsWidget.SetTeamIndex
	void SetTeamIndex(int32_t Index);                                                                                        // [0x22e4c70] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventParticipantStatsWidget.SetColours
	void SetColours(FGameEventTeamColours colours);                                                                          // [0x2859740] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/ConZ.GameEventParticipantStatsWidget.IsValid
	bool IsValid();                                                                                                          // [0x22e43c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventParticipantStatsWidget.GetTeamIndex
	int32_t GetTeamIndex();                                                                                                  // [0x22e41b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventParticipantStatsWidget.GetScoreboard
	UGameEventScoreboardWidget* GetScoreboard();                                                                             // [0x22e4120] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventParticipantStatsWidget.GetIndex
	int32_t GetIndex();                                                                                                      // [0x22e4050] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventParticipantStatsWidget.GetGameEvent
	AGameEventBase* GetGameEvent();                                                                                          // [0x22e3ff0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/ConZ.GameEventParticipantStatsWidget.FillLabels
	void FillLabels();                                                                                                       // [0x2859740] Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/ConZ.GameEventRightPanel
/// Size: 0x0010 (0x000260 - 0x000270)
class UGameEventRightPanel : public UTabMenuPanel
{ 
public:
	UOverlay*                                          LeaderboardSlot;                                            // 0x0260   (0x0008)  
	UClass*                                            _leaderboardWidgetClass;                                    // 0x0268   (0x0008)  
};

/// Class /Script/ConZ.GameEventRoundInfoWidget
/// Size: 0x0000 (0x000260 - 0x000260)
class UGameEventRoundInfoWidget : public UUserWidget
{ 
public:
};

/// Class /Script/ConZ.GameEventScoreboardWidget
/// Size: 0x0038 (0x000260 - 0x000298)
class UGameEventScoreboardWidget : public UUserWidget
{ 
public:
	UClass*                                            RoundInfoWidgetClass;                                       // 0x0260   (0x0008)  
	UClass*                                            TeamHeaderWidgetClass;                                      // 0x0268   (0x0008)  
	UClass*                                            StatWidgetClass;                                            // 0x0270   (0x0008)  
	TArray<UGameEventParticipantStatsWidget*>          StatWidgets;                                                // 0x0278   (0x0010)  
	AGameEventBase*                                    _gameEvent;                                                 // 0x0288   (0x0008)  
	int32_t                                            _selected;                                                  // 0x0290   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0294   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.GameEventScoreboardWidget.SetSelectedIndex
	void SetSelectedIndex(int32_t Index);                                                                                    // [0x22e4be0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventScoreboardWidget.OnUpdate
	void OnUpdate();                                                                                                         // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.GameEventScoreboardWidget.InitializeScoreboard
	void InitializeScoreboard();                                                                                             // [0x2859740] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/ConZ.GameEventScoreboardWidget.GetSelectedIndex
	int32_t GetSelectedIndex();                                                                                              // [0x22e4150] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventScoreboardWidget.CreateMini
	UGameEventScoreboardWidget* CreateMini(AGameEventBase* gameEvent, UClass* statClass, UClass* teamHeaderClass);           // [0x22e3e70] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventScoreboardWidget.Create
	UGameEventScoreboardWidget* Create(AGameEventBase* gameEvent, UClass* roundInfoClass, UClass* teamHeaderClass, UClass* statClass); // [0x22e3a70] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/ConZ.GameEventTeamHeaderWidget
/// Size: 0x0000 (0x000260 - 0x000260)
class UGameEventTeamHeaderWidget : public UUserWidget
{ 
public:
};

/// Class /Script/ConZ.GameEventTransport
/// Size: 0x0088 (0x000220 - 0x0002A8)
class AGameEventTransport : public AActor
{ 
public:
	USphereComponent*                                  Sphere;                                                     // 0x0220   (0x0008)  
	UStaticMeshComponent*                              PodMesh;                                                    // 0x0228   (0x0008)  
	UStaticMeshComponent*                              TargetMesh;                                                 // 0x0230   (0x0008)  
	float                                              TravelSpeed;                                                // 0x0238   (0x0004)  
	float                                              TravelHeight;                                               // 0x023C   (0x0004)  
	float                                              HoverHeight;                                                // 0x0240   (0x0004)  
	float                                              LargerRadius;                                               // 0x0244   (0x0004)  
	float                                              SmallerRadius;                                              // 0x0248   (0x0004)  
	EGameEventTransportState                           _state;                                                     // 0x024C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x024D   (0x0003)  MISSED
	FVector                                            _lastPosition;                                              // 0x0250   (0x000C)  
	FVector                                            _targetPosition;                                            // 0x025C   (0x000C)  
	float                                              _blend;                                                     // 0x0268   (0x0004)  
	unsigned char                                      UnknownData01_6[0x3C];                                      // 0x026C   (0x003C)  MISSED


	/// Functions
	// Function /Script/ConZ.GameEventTransport.TravelToDestination
	void TravelToDestination(FVector Destination);                                                                           // [0x22e4d20] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/ConZ.GameEventTransport.SkipToDestination
	void SkipToDestination();                                                                                                // [0x22e4d00] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventTransport.ReserveForPrisoner
	void ReserveForPrisoner(APrisoner* Prisoner);                                                                            // [0x22e4a30] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventTransport.OnRep_TargetPosition
	void OnRep_TargetPosition();                                                                                             // [0x22e47d0] Final|Native|Private 
	// Function /Script/ConZ.GameEventTransport.OnRep_LastPosition
	void OnRep_LastPosition();                                                                                               // [0x22e47b0] Final|Native|Private 
	// Function /Script/ConZ.GameEventTransport.OnOrderComplete
	void OnOrderComplete();                                                                                                  // [0x226ff90] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.GameEventTransport.LeaveIsland
	void LeaveIsland();                                                                                                      // [0x22e4480] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GameEventTransport.LandAtLocation
	void LandAtLocation(FVector Destination);                                                                                // [0x22e43f0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/ConZ.GameEventTransport.IsInteractable
	bool IsInteractable();                                                                                                   // [0x22e4390] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventTransport.GetReservedParticipant
	APrisoner* GetReservedParticipant();                                                                                     // [0x22e40f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.GameEventTransport.CancelOrder
	void CancelOrder();                                                                                                      // [0x22e3840] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.GameResourceConsumptionData
/// Size: 0x00C0 (0x000028 - 0x0000E8)
class UGameResourceConsumptionData : public UObject
{ 
public:
	EGameResourceConsumptionMethod                     ConsumptionMethod;                                          // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	FGameplayTag                                       ConsumptionDuration;                                        // 0x002C   (0x0008)  
	FGameplayTag                                       DigestionDuration;                                          // 0x0034   (0x0008)  
	float                                              Density;                                                    // 0x003C   (0x0004)  
	float                                              TotalCarbohydrate;                                          // 0x0040   (0x0004)  
	float                                              Fiber;                                                      // 0x0044   (0x0004)  
	float                                              Starch;                                                     // 0x0048   (0x0004)  
	float                                              Sugars;                                                     // 0x004C   (0x0004)  
	float                                              TotalFat;                                                   // 0x0050   (0x0004)  
	float                                              SaturatedFat;                                               // 0x0054   (0x0004)  
	float                                              Protein;                                                    // 0x0058   (0x0004)  
	float                                              VitaminA;                                                   // 0x005C   (0x0004)  
	float                                              VitaminC;                                                   // 0x0060   (0x0004)  
	float                                              VitaminD;                                                   // 0x0064   (0x0004)  
	float                                              VitaminE;                                                   // 0x0068   (0x0004)  
	float                                              VitaminK;                                                   // 0x006C   (0x0004)  
	float                                              VitaminB1;                                                  // 0x0070   (0x0004)  
	float                                              VitaminB2;                                                  // 0x0074   (0x0004)  
	float                                              VitaminB3;                                                  // 0x0078   (0x0004)  
	float                                              VitaminB6;                                                  // 0x007C   (0x0004)  
	float                                              VitaminB9;                                                  // 0x0080   (0x0004)  
	float                                              VitaminB12;                                                 // 0x0084   (0x0004)  
	float                                              VitaminB5;                                                  // 0x0088   (0x0004)  
	float                                              VitaminB4;                                                  // 0x008C   (0x0004)  
	float                                              Calcium;                                                    // 0x0090   (0x0004)  
	float                                              Iron;                                                       // 0x0094   (0x0004)  
	float                                              Magnesium;                                                  // 0x0098   (0x0004)  
	float                                              Phosphorus;                                                 // 0x009C   (0x0004)  
	float                                              Potassium;                                                  // 0x00A0   (0x0004)  
	float                                              Sodium;                                                     // 0x00A4   (0x0004)  
	float                                              Zinc;                                                       // 0x00A8   (0x0004)  
	float                                              Copper;                                                     // 0x00AC   (0x0004)  
	float                                              Manganese;                                                  // 0x00B0   (0x0004)  
	float                                              Selenium;                                                   // 0x00B4   (0x0004)  
	float                                              Alcohol;                                                    // 0x00B8   (0x0004)  
	float                                              Water;                                                      // 0x00BC   (0x0004)  
	TArray<FGameResourceConsumptionDataForeignSubstance> ForeignSubstances;                                        // 0x00C0   (0x0010)  
	float                                              DisgustAmountPerGramOfRawFood;                              // 0x00D0   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x00D4   (0x0004)  MISSED
	TArray<UConsumableDigestionHandler*>               DigestionHandlers;                                          // 0x00D8   (0x0010)  
};

/// Class /Script/ConZ.GameResourceContainer
/// Size: 0x0000 (0x000028 - 0x000028)
class UGameResourceContainer : public UInterface
{ 
public:
};

/// Class /Script/ConZ.GameResourceContainerProxyRegistry
/// Size: 0x00A0 (0x0000B0 - 0x000150)
class UGameResourceContainerProxyRegistry : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0xA0];                                      // 0x00B0   (0x00A0)  MISSED
};

/// Class /Script/ConZ.GameResourceContainerProxyForInfiniteResource
/// Size: 0x0060 (0x000028 - 0x000088)
class UGameResourceContainerProxyForInfiniteResource : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	UClass*                                            _resourceType;                                              // 0x0030   (0x0008)  
	unsigned char                                      UnknownData01_5[0x40];                                      // 0x0038   (0x0040)  MISSED
	TArray<UBaseItemTag*>                              _requiredItemTagsForFilling;                                // 0x0078   (0x0010)  
};

/// Class /Script/ConZ.GameResourceContainerProxyForReplenishableResource
/// Size: 0x0020 (0x000028 - 0x000048)
class UGameResourceContainerProxyForReplenishableResource : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0028   (0x0020)  MISSED
};

/// Class /Script/ConZ.GameResourceItemTag
/// Size: 0x0040 (0x000030 - 0x000070)
class UGameResourceItemTag : public UBaseItemTag
{ 
public:
	UClass*                                            ResourceType;                                               // 0x0030   (0x0008)  
	FGameplayTagContainer                              SocketTypes;                                                // 0x0038   (0x0020)  
	float                                              ResourceAmountPerUse;                                       // 0x0058   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x005C   (0x0004)  MISSED
	TArray<UBaseItemTag*>                              RequiredItemTagsForFueling;                                 // 0x0060   (0x0010)  
};

/// Class /Script/ConZ.GameResourceSlotEntityComponentSave
/// Size: 0x0010 (0x000028 - 0x000038)
class UGameResourceSlotEntityComponentSave : public UObject
{ 
public:
	FEntityComponentId                                 ResourceComponentId;                                        // 0x0028   (0x0010)  
};

/// Class /Script/ConZ.GameResourceSlotEntityComponentSetup
/// Size: 0x0040 (0x000048 - 0x000088)
class UGameResourceSlotEntityComponentSetup : public UEntityComponentSetup
{ 
public:
	UClass*                                            ResourceType;                                               // 0x0048   (0x0008)  
	FGameplayTagContainer                              ResourceSocketTypes;                                        // 0x0050   (0x0020)  
	float                                              RequiredResourceAmount;                                     // 0x0070   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0074   (0x0004)  MISSED
	UClass*                                            ResourceToSpawn;                                            // 0x0078   (0x0008)  
	FName                                              ComponentNameToAttach;                                      // 0x0080   (0x0008)  
};

/// Class /Script/ConZ.GameResourceType
/// Size: 0x0088 (0x000028 - 0x0000B0)
class UGameResourceType : public UObject
{ 
public:
	FText                                              ResourceName;                                               // 0x0028   (0x0018)  
	FString                                            ConfigSectionName;                                          // 0x0040   (0x0010)  
	bool                                               CanWashWith;                                                // 0x0050   (0x0001)  
	bool                                               CanPutOutFireWith;                                          // 0x0051   (0x0001)  
	bool                                               CanDisinfectWith;                                           // 0x0052   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x0053   (0x0001)  MISSED
	FGameplayTag                                       CookingIngredientTag;                                       // 0x0054   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x005C   (0x0004)  MISSED
	TWeakObjectPtr<UTexture2D*>                        ResourceImage;                                              // 0x0060   (0x0028)  
	FLinearColor                                       Color;                                                      // 0x0088   (0x0010)  
	UGameResourceConsumptionData*                      ConsumptionData;                                            // 0x0098   (0x0008)  
	TArray<UBaseItemTag*>                              ItemTags;                                                   // 0x00A0   (0x0010)  
};

/// Class /Script/ConZ.GameResourceType_Liquid
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UGameResourceType_Liquid : public UGameResourceType
{ 
public:
};

/// Class /Script/ConZ.GameResourceType_Alcohol
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UGameResourceType_Alcohol : public UGameResourceType_Liquid
{ 
public:
};

/// Class /Script/ConZ.GameResourceType_Money
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UGameResourceType_Money : public UGameResourceType
{ 
public:
};

/// Class /Script/ConZ.GameResourceType_Water
/// Size: 0x0008 (0x0000B0 - 0x0000B8)
class UGameResourceType_Water : public UGameResourceType_Liquid
{ 
public:
	float                                              Salinity;                                                   // 0x00B0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00B4   (0x0004)  MISSED
};

/// Class /Script/ConZ.GameResourceType_SoftDrink
/// Size: 0x0000 (0x0000B8 - 0x0000B8)
class UGameResourceType_SoftDrink : public UGameResourceType_Water
{ 
public:
};

/// Class /Script/ConZ.GameResourceType_Solid
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UGameResourceType_Solid : public UGameResourceType
{ 
public:
};

/// Class /Script/ConZ.Garden
/// Size: 0x0228 (0x000220 - 0x000448)
class AGarden : public AActor
{ 
public:
	uint16_t                                           _gardenId;                                                  // 0x0220   (0x0002)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0222   (0x0006)  MISSED
	FGardenSlotArray                                   _gardenSlots;                                               // 0x0228   (0x0120)  
	FIntPoint                                          _numSlots;                                                  // 0x0348   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0350   (0x0004)  MISSED
	float                                              _radius;                                                    // 0x0354   (0x0004)  
	unsigned char                                      UnknownData02_6[0xF0];                                      // 0x0358   (0x00F0)  MISSED


	/// Functions
	// Function /Script/ConZ.Garden.OnRep_NumSlots
	void OnRep_NumSlots();                                                                                                   // [0x22e85d0] Final|Native|Private 
};

/// Class /Script/ConZ.GardenManager
/// Size: 0x0430 (0x000220 - 0x000650)
class AGardenManager : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0220   (0x0010)  MISSED
	float                                              NetRelevancyRadius;                                         // 0x0230   (0x0004)  
	float                                              NearGardenDistance;                                         // 0x0234   (0x0004)  
	FPlantGrowthStageData                              _seedingStageData;                                          // 0x0238   (0x0060)  
	FPlantGrowthStageData                              _vegetatingStageData;                                       // 0x0298   (0x0060)  
	FPlantGrowthStageData                              _floweringStageData;                                        // 0x02F8   (0x0060)  
	FPlantGrowthStageData                              _ripeningStageData;                                         // 0x0358   (0x0060)  
	FInt32Interval                                     _gardenMinMaxSize;                                          // 0x03B8   (0x0008)  
	unsigned char                                      UnknownData01_5[0x60];                                      // 0x03C0   (0x0060)  MISSED
	TArray<AGarden*>                                   _gardens;                                                   // 0x0420   (0x0010)  
	unsigned char                                      UnknownData02_5[0x30];                                      // 0x0430   (0x0030)  MISSED
	float                                              _updateTimestepSeconds;                                     // 0x0460   (0x0004)  
	uint32_t                                           _minUpdateBatchCount;                                       // 0x0464   (0x0004)  
	float                                              _dataSampleFadeSeconds;                                     // 0x0468   (0x0004)  
	uint32_t                                           _heightDataSampleCount;                                     // 0x046C   (0x0004)  
	FFloatInterval                                     _pestsDiseasesCheckTimeHours;                               // 0x0470   (0x0008)  
	FFloatInterval                                     _weedCheckTimeHours;                                        // 0x0478   (0x0008)  
	float                                              _pestsDiseasesGrowthTimeHours;                              // 0x0480   (0x0004)  
	float                                              _weedGrowthTimeHours;                                       // 0x0484   (0x0004)  
	float                                              _pestsDiseasesSpreadTimeHours;                              // 0x0488   (0x0004)  
	float                                              _weedSpreadTimeHours;                                       // 0x048C   (0x0004)  
	FVector2D                                          _pestsDiseasesSpreadScaleThreshold;                         // 0x0490   (0x0008)  
	FVector2D                                          _weedSpreadScaleThreshold;                                  // 0x0498   (0x0008)  
	float                                              _maxWaterLitersPerSlot;                                     // 0x04A0   (0x0004)  
	float                                              _maxWaterLitersFromRainPerSlot;                             // 0x04A4   (0x0004)  
	UMaterialParameterCollection*                      _mainMPC;                                                   // 0x04A8   (0x0008)  
	UMaterialParameterCollection*                      _gardenMPC;                                                 // 0x04B0   (0x0008)  
	TArray<FStaticMeshMaterialPair>                    _gardenEdgeMesh;                                            // 0x04B8   (0x0010)  
	float                                              _gardenEdgeVerticalOffset;                                  // 0x04C8   (0x0004)  
	float                                              _gardenEdgeHorizontalOffset;                                // 0x04CC   (0x0004)  
	TArray<FStaticMeshMaterialPair>                    _gardenSoilMesh;                                            // 0x04D0   (0x0010)  
	float                                              _gardenSoilVerticalOffset;                                  // 0x04E0   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x04E4   (0x0004)  MISSED
	FStaticMeshMaterialPair                            _cubeCollisionMesh;                                         // 0x04E8   (0x0018)  
	TArray<FStaticMeshMaterialPair>                    _weedMesh;                                                  // 0x0500   (0x0010)  
	float                                              _weedsVerticalOffset;                                       // 0x0510   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x0514   (0x0004)  MISSED
	TArray<UPlantSpecies*>                             _plantSpecies;                                              // 0x0518   (0x0010)  
	UFarmingSkill*                                     _farmingSkillDataAsset;                                     // 0x0528   (0x0008)  
	TMap<FStaticMeshMaterialPair, UIndexedHierarchicalInstancedStaticMeshComponent*> _hismcMap;                    // 0x0530   (0x0050)  
	bool                                               _showPreplacement;                                          // 0x0580   (0x0001)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x0581   (0x0003)  MISSED
	float                                              _databaseUpdateInterval;                                    // 0x0584   (0x0004)  
	UChoppingRecipeDataAsset*                          _destroyChoppingRecipeAsset;                                // 0x0588   (0x0008)  
	float                                              _prisonerInteractionDistance;                               // 0x0590   (0x0004)  
	unsigned char                                      UnknownData06_6[0xBC];                                      // 0x0594   (0x00BC)  MISSED


	/// Functions
	// Function /Script/ConZ.GardenManager.DebugPlantAPlantAtLookedLocation
	void DebugPlantAPlantAtLookedLocation(UPlantSpecies* species);                                                           // [0x22e8540] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GardenManager.DebugGenerateGardensInSquare
	void DebugGenerateGardensInSquare(FVector Location, FIntPoint countXY, FVector2D distanceXY, FIntPoint MinSize, FIntPoint MaxSize); // [0x22e83a0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/ConZ.GardenManager.DebugGenerateGardensInRadius
	void DebugGenerateGardensInRadius(int32_t Count, FVector Location, float Spread, FIntPoint MinSize, FIntPoint MaxSize);  // [0x22e81e0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/ConZ.GardenManager.DebugAddWaterToPlantAtLookedLocation
	void DebugAddWaterToPlantAtLookedLocation(float Amount);                                                                 // [0x22e8160] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.GardenManager.ClearAllMeshInstances
	void ClearAllMeshInstances();                                                                                            // [0x22e8140] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/ConZ.GasMaskTag
/// Size: 0x0000 (0x000030 - 0x000030)
class UGasMaskTag : public UBaseItemTag
{ 
public:
};

/// Class /Script/ConZ.GasTankItem
/// Size: 0x0010 (0x000910 - 0x000920)
class AGasTankItem : public AItem
{ 
public:
	UBasicGameResourceContainerComponent*              _resourceContainerComponent;                                // 0x0910   (0x0008)  
	URangedResourceProviderComponent*                  _rangedResourceProviderComponent;                           // 0x0918   (0x0008)  
};

/// Class /Script/ConZ.GaugeAssetData
/// Size: 0x00B8 (0x000028 - 0x0000E0)
class UGaugeAssetData : public UAssetUserData
{ 
public:
	FGameplayTag                                       GaugeTag;                                                   // 0x0028   (0x0008)  
	float                                              MinimumValue;                                               // 0x0030   (0x0004)  
	float                                              MaximumValue;                                               // 0x0034   (0x0004)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0038   (0x0008)  MISSED
	FTransform                                         MinimumRelativeTransform;                                   // 0x0040   (0x0030)  
	FTransform                                         MaximumRelativeTransform;                                   // 0x0070   (0x0030)  
	float                                              TransitionDuration;                                         // 0x00A0   (0x0004)  
	unsigned char                                      UnknownData01_6[0x3C];                                      // 0x00A4   (0x003C)  MISSED
};

/// Class /Script/ConZ.GaugeLightAssetData
/// Size: 0x0020 (0x000028 - 0x000048)
class UGaugeLightAssetData : public UAssetUserData
{ 
public:
	FGameplayTag                                       GaugeTag;                                                   // 0x0028   (0x0008)  
	FVector                                            UnderTheLimitLightColor;                                    // 0x0030   (0x000C)  
	FVector                                            OverTheLimitLightColor;                                     // 0x003C   (0x000C)  
};

/// Class /Script/ConZ.GaugeClusterComponent
/// Size: 0x0140 (0x0000B0 - 0x0001F0)
class UGaugeClusterComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x140];                                     // 0x00B0   (0x0140)  MISSED
};

/// Class /Script/ConZ.ItemWithSkeletalMesh
/// Size: 0x0010 (0x000910 - 0x000920)
class AItemWithSkeletalMesh : public AItem
{ 
public:
	USkeletalMeshComponent*                            SkeletalMesh;                                               // 0x0910   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0918   (0x0008)  MISSED
};

/// Class /Script/ConZ.GeigerCounter
/// Size: 0x0030 (0x000920 - 0x000950)
class AGeigerCounter : public AItemWithSkeletalMesh
{ 
public:
	UBasicGameResourceSlotItemComponent*               _resourceSlotComponent;                                     // 0x0918   (0x0008)  
	bool                                               _hasVisualIndicator;                                        // 0x0920   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0921   (0x0003)  MISSED
	float                                              _maxAmountDetectable;                                       // 0x0924   (0x0004)  
	float                                              _maxDetectionRadius;                                        // 0x0928   (0x0004)  
	float                                              _lightIndicatorBaseEmisiveStrength;                         // 0x092C   (0x0004)  
	UAkAudioEvent*                                     _startEvent;                                                // 0x0930   (0x0008)  
	UAkAudioEvent*                                     _stopEvent;                                                 // 0x0938   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0940   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.GeigerCounter.OnResourceComponentDeactivated
	void OnResourceComponentDeactivated(UActorComponent* Component);                                                         // [0x22e86c0] Final|Native|Private 
	// Function /Script/ConZ.GeigerCounter.OnResourceComponentActivated
	void OnResourceComponentActivated(UActorComponent* Component, bool wasReset);                                            // [0x22e85f0] Final|Native|Private 
};

/// Class /Script/ConZ.GeigerCounterAnimInstance
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UGeigerCounterAnimInstance : public UAnimInstance
{ 
public:
	float                                              _radiationRatio;                                            // 0x02C0   (0x0004)  
	bool                                               _isTurnedOn;                                                // 0x02C4   (0x0001)  
	unsigned char                                      UnknownData00_6[0xB];                                       // 0x02C5   (0x000B)  MISSED
};

/// Class /Script/ConZ.GenericTooltip
/// Size: 0x0278 (0x000260 - 0x0004D8)
class UGenericTooltip : public UUserWidget
{ 
public:
	FTextBlockStyle                                    TextStyle;                                                  // 0x0260   (0x0270)  
	UExtendedRichTextBlock*                            DescriptionText;                                            // 0x04D0   (0x0008)  
};

/// Class /Script/ConZ.GhostTrailComponent
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UGhostTrailComponent : public UActorComponent
{ 
public:
};

/// Class /Script/ConZ.Gib
/// Size: 0x0010 (0x000220 - 0x000230)
class AGib : public AActor
{ 
public:
	UStaticMeshComponent*                              MeshComponent;                                              // 0x0220   (0x0008)  
	float                                              ShrinkFactor;                                               // 0x0228   (0x0004)  
	float                                              ImpulseMultiplier;                                          // 0x022C   (0x0004)  
};

/// Class /Script/ConZ.GlobalAquaticLifeManager
/// Size: 0x1520 (0x000220 - 0x001740)
class AGlobalAquaticLifeManager : public AActor
{ 
public:
	float                                              _updateRegisteredPrisonersTickTime;                         // 0x0220   (0x0004)  
	unsigned char                                      UnknownData00_5[0x13F4];                                    // 0x0224   (0x13F4)  MISSED
	TMap<int64_t, FAquaticLifeSpawningVolumeDescription> _fishSpawningVolumes;                                     // 0x1618   (0x0050)  
	unsigned char                                      UnknownData01_5[0x20];                                      // 0x1668   (0x0020)  MISSED
	float                                              _localFishSchoolManagerRelevancyRange;                      // 0x1688   (0x0004)  
	float                                              _distanceBetweenLocalFishSchoolManagers;                    // 0x168C   (0x0004)  
	float                                              _localFishSchoolManagerTickTime;                            // 0x1690   (0x0004)  
	float                                              _localFishSchoolManagerDestructionTime;                     // 0x1694   (0x0004)  
	float                                              _prisonerWaterImmersionRelevancyThreshold;                  // 0x1698   (0x0004)  
	float                                              _waterSplinePitchThresholdForSchools;                       // 0x169C   (0x0004)  
	int32_t                                            _maxSpawnedSchools;                                         // 0x16A0   (0x0004)  
	unsigned char                                      UnknownData02_5[0x1C];                                      // 0x16A4   (0x001C)  MISSED
	float                                              _localFishingZoneIndicatorManagerRelevancyRange;            // 0x16C0   (0x0004)  
	float                                              _localFishingZoneIndicatorManagerTickTime;                  // 0x16C4   (0x0004)  
	float                                              _localFishingZoneIndicatorManagerDestructionTime;           // 0x16C8   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x16CC   (0x0004)  MISSED
	UClass*                                            _indicatorClass;                                            // 0x16D0   (0x0008)  
	float                                              _fishingPrecision;                                          // 0x16D8   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x16DC   (0x0004)  MISSED
	UCurveFloat*                                       _weatherPercentageCurve;                                    // 0x16E0   (0x0008)  
	int32_t                                            _maxSpawnedIndicators;                                      // 0x16E8   (0x0004)  
	unsigned char                                      UnknownData05_5[0x24];                                      // 0x16EC   (0x0024)  MISSED
	int32_t                                            _maxLargeAquaticAnimals;                                    // 0x1710   (0x0004)  
	unsigned char                                      UnknownData06_5[0x4];                                       // 0x1714   (0x0004)  MISSED
	TArray<ULargeAquaticAnimalSpeciesData*>            _possibleLargeAquaticAnimals;                               // 0x1718   (0x0010)  
	float                                              _distanceBetweenLargeAquaticAnimals;                        // 0x1728   (0x0004)  
	float                                              _largeAquaticAnimalSpawningRangeMin;                        // 0x172C   (0x0004)  
	float                                              _largeAquaticAnimalSpawningRangeMax;                        // 0x1730   (0x0004)  
	float                                              _requiredTimeInWaterToSpawnLargeAquaticAnimal;              // 0x1734   (0x0004)  
	float                                              _requiredTimeInWaterWhileBleedingToSpawnLargeAquaticAnimal; // 0x1738   (0x0004)  
	float                                              _timeToReenableLargeAquaticAnimalSpawnZone;                 // 0x173C   (0x0004)  
};

/// Class /Script/ConZ.GlobalBirdSpawner2
/// Size: 0x00D8 (0x000220 - 0x0002F8)
class AGlobalBirdSpawner2 : public AActor
{ 
public:
	int32_t                                            MaxSpawnInstances;                                          // 0x0220   (0x0004)  
	int32_t                                            MaxCoastalBirdSpawnPerPlayer;                               // 0x0224   (0x0004)  
	int32_t                                            MaxContinentalBirdSpawnPerPlayer;                           // 0x0228   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x022C   (0x0004)  MISSED
	TArray<UClass*>                                    CoastalBirds;                                               // 0x0230   (0x0010)  
	TArray<UClass*>                                    ContinentalBirds;                                           // 0x0240   (0x0010)  
	float                                              FlyingBirdSpawnAwayDistanceMin;                             // 0x0250   (0x0004)  
	float                                              FlyingBirdSpawnAwayDistanceMax;                             // 0x0254   (0x0004)  
	float                                              GroundBirdSpawnAwayDistanceMin;                             // 0x0258   (0x0004)  
	float                                              GroundBirdSpawnAwayDistanceMax;                             // 0x025C   (0x0004)  
	float                                              MinSpawnInfrontDistance;                                    // 0x0260   (0x0004)  
	FGameplayTag                                       BirdSpawnerMask;                                            // 0x0264   (0x0008)  
	int32_t                                            BulkSpawn;                                                  // 0x026C   (0x0004)  
	TArray<TEnumAsByte>                                AllowedSurfaces;                                            // 0x0270   (0x0010)  
	UBillboardComponent*                               Sprite;                                                     // 0x0280   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0288   (0x0008)  MISSED
	TArray<ABird2*>                                    _birds;                                                     // 0x0290   (0x0010)  
	unsigned char                                      UnknownData02_6[0x58];                                      // 0x02A0   (0x0058)  MISSED
};

/// Class /Script/ConZ.GlobalGuardedZoneManager
/// Size: 0x0110 (0x000220 - 0x000330)
class AGlobalGuardedZoneManager : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0220   (0x0018)  MISSED
	TArray<FGuardedZoneManagerDescription>             _guardedZoneManagers;                                       // 0x0238   (0x0010)  
	unsigned char                                      UnknownData01_5[0x28];                                      // 0x0248   (0x0028)  MISSED
	float                                              _guardedZoneTickTime;                                       // 0x0270   (0x0004)  
	float                                              _guardedZoneManagerPlayerLogicTickTime;                     // 0x0274   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0278   (0x0004)  MISSED
	float                                              _abandonedBunkerZoneManagerPlayerLogicTickTime;             // 0x027C   (0x0004)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x0280   (0x0008)  MISSED
	UAbandonedBunkerZoneCommonData*                    _abandonedBunkerZoneCommonData;                             // 0x0288   (0x0008)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x0290   (0x0004)  MISSED
	float                                              _distanceToPlayerToKeepDebugCharacterAlive;                 // 0x0294   (0x0004)  
	float                                              _debugCharacterLifespanAfterDeath;                          // 0x0298   (0x0004)  
	unsigned char                                      UnknownData05_5[0x4];                                       // 0x029C   (0x0004)  MISSED
	TWeakObjectPtr<UClass*>                            _debugRazorClass;                                           // 0x02A0   (0x0028)  
	TWeakObjectPtr<UClass*>                            _debugBrennerClass;                                         // 0x02C8   (0x0028)  
	unsigned char                                      UnknownData06_6[0x40];                                      // 0x02F0   (0x0040)  MISSED
};

/// Class /Script/ConZ.GlobalUIData
/// Size: 0x00B0 (0x000028 - 0x0000D8)
class UGlobalUIData : public UObject
{ 
public:
	UClass*                                            DefaultModularTooltipClass;                                 // 0x0028   (0x0008)  
	TMap<UClass*, UClass*>                             ModularTooltipElementClassMapping;                          // 0x0030   (0x0050)  
	UClass*                                            MessageBox;                                                 // 0x0080   (0x0008)  
	UClass*                                            LogoutMessageBox;                                           // 0x0088   (0x0008)  
	UClass*                                            MessageBoxWithList;                                         // 0x0090   (0x0008)  
	UClass*                                            MessageBoxWithEditableText;                                 // 0x0098   (0x0008)  
	UClass*                                            MessageBoxWithCheckBox;                                     // 0x00A0   (0x0008)  
	UClass*                                            PartialPriceSellConfirmation;                               // 0x00A8   (0x0008)  
	UClass*                                            MessageBoxButton;                                           // 0x00B0   (0x0008)  
	UClass*                                            LabeledSliderWithNumber;                                    // 0x00B8   (0x0008)  
	UClass*                                            LabeledCarousel;                                            // 0x00C0   (0x0008)  
	UClass*                                            LabeledDropdown;                                            // 0x00C8   (0x0008)  
	UClass*                                            LabeledTextBlock;                                           // 0x00D0   (0x0008)  
};

/// Class /Script/ConZ.GloveStatsTag
/// Size: 0x0010 (0x000030 - 0x000040)
class UGloveStatsTag : public UBaseItemTag
{ 
public:
	float                                              ElectricalDamageModifier;                                   // 0x0030   (0x0004)  
	float                                              LockpkickingPressureModifier;                               // 0x0034   (0x0004)  
	bool                                               PreventsHandAbrasions;                                      // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0039   (0x0003)  MISSED
	float                                              DecayMultiplierWhileDoingAbrasiveActions;                   // 0x003C   (0x0004)  
};

/// Class /Script/ConZ.GradedArcedProgressBar
/// Size: 0x0058 (0x000260 - 0x0002B8)
class UGradedArcedProgressBar : public UUserWidget
{ 
public:
	UImage*                                            _fillImage;                                                 // 0x0260   (0x0008)  
	UMaterialInstanceConstant*                         _fillMaterial;                                              // 0x0268   (0x0008)  
	FLinearColor                                       _fillColorStart;                                            // 0x0270   (0x0010)  
	FLinearColor                                       _fillColorMiddle;                                           // 0x0280   (0x0010)  
	FLinearColor                                       _fillColorEnd;                                              // 0x0290   (0x0010)  
	float                                              _maxRateOfChangePerSecond;                                  // 0x02A0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x14];                                      // 0x02A4   (0x0014)  MISSED
};

/// Class /Script/ConZ.Graph2DWidget
/// Size: 0x00E8 (0x000108 - 0x0001F0)
class UGraph2DWidget : public UWidget
{ 
public:
	FSlateBrush                                        Brush;                                                      // 0x0108   (0x0088)  
	FDelegateProperty                                  BrushDelegate;                                              // 0x0190   (0x0010)  
	FLinearColor                                       ColorAndOpacity;                                            // 0x01A0   (0x0010)  
	FDelegateProperty                                  ColorAndOpacityDelegate;                                    // 0x01B0   (0x0010)  
	float                                              GraphLineThickness;                                         // 0x01C0   (0x0004)  
	float                                              GraphLineSpriteSpacing;                                     // 0x01C4   (0x0004)  
	FVector2D                                          GraphSize;                                                  // 0x01C8   (0x0008)  
	bool                                               InitializeGraphWithDefaultValue;                            // 0x01D0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x01D1   (0x0003)  MISSED
	int32_t                                            SampleMax;                                                  // 0x01D4   (0x0004)  
	float                                              DefaultSampleValue;                                         // 0x01D8   (0x0004)  
	bool                                               UseLineAntialiasing;                                        // 0x01DC   (0x0001)  
	unsigned char                                      UnknownData01_6[0x13];                                      // 0x01DD   (0x0013)  MISSED
};

/// Class /Script/ConZ.GraphicsSettingsManager
/// Size: 0x0000 (0x000028 - 0x000028)
class UGraphicsSettingsManager : public UObject
{ 
public:
};

/// Class /Script/ConZ.GrappleActionComponent
/// Size: 0x0058 (0x0000B0 - 0x000108)
class UGrappleActionComponent : public UActorComponent
{ 
public:
	AConZCharacter*                                    _grappler;                                                  // 0x00B0   (0x0008)  
	APrisoner*                                         _prisonerVictim;                                            // 0x00B8   (0x0008)  
	UGrappleActionParameters*                          _grappleActionParameters;                                   // 0x00C0   (0x0008)  
	bool                                               _isReleaseInProgress;                                       // 0x00C8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3F];                                      // 0x00C9   (0x003F)  MISSED


	/// Functions
	// Function /Script/ConZ.GrappleActionComponent.OnRep_IsReleaseInProgress
	void OnRep_IsReleaseInProgress();                                                                                        // [0x22eb5b0] Final|Native|Private 
	// Function /Script/ConZ.GrappleActionComponent.NetMulticast_PlayReleaseMontagePairAtIndex
	void NetMulticast_PlayReleaseMontagePairAtIndex(int32_t Index);                                                          // [0x22eb2b0] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.GrappleActionComponent.NetMulticast_PlayMontagePairAtIndex
	void NetMulticast_PlayMontagePairAtIndex(int32_t Index);                                                                 // [0x22eb220] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.GrappleActionComponent.Client_OnVictimDamaged
	void Client_OnVictimDamaged(APrisoner* Prisoner, float damageAmount, FDamageEvent DamageEvent, AController* eventInstigator, AActor* damageObject); // [0x22eaf20] Final|Net|Native|Event|Private|NetClient 
};

/// Class /Script/ConZ.GrappleActionParameters
/// Size: 0x0170 (0x000030 - 0x0001A0)
class UGrappleActionParameters : public UDataAsset
{ 
public:
	bool                                               IsGrappleAttackInWater;                                     // 0x0030   (0x0001)  
	bool                                               ShouldVictimGoToRagdoll;                                    // 0x0031   (0x0001)  
	EGrappleActionMeshDetachmentRule                   MeshDetachmentRule;                                         // 0x0032   (0x0001)  
	unsigned char                                      UnknownData00_5[0xD];                                       // 0x0033   (0x000D)  MISSED
	FTransform                                         MeshDetachmentOffsetTransform;                              // 0x0040   (0x0030)  
	FTransform                                         MeshReatttachmentRelativeTransform;                         // 0x0070   (0x0030)  
	EGrappleActionPerspectiveSwitchType                PerspectiveSwitchType;                                      // 0x00A0   (0x0001)  
	bool                                               ShouldIgnoreTurnInput;                                      // 0x00A1   (0x0001)  
	bool                                               ShouldTurnOffPanini;                                        // 0x00A2   (0x0001)  
	bool                                               ShouldUseGrappleAnimInstance;                               // 0x00A3   (0x0001)  
	bool                                               ShouldOverrideCameraFOV;                                    // 0x00A4   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x00A5   (0x0003)  MISSED
	float                                              CameraFOVOverride;                                          // 0x00A8   (0x0004)  
	bool                                               CanEverApplyWallProximityAnimationOffset;                   // 0x00AC   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x00AD   (0x0003)  MISSED
	float                                              WallProximityAnimationOffset;                               // 0x00B0   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x00B4   (0x0004)  MISSED
	UAnimSequence*                                     GrapplerIdleAnimation;                                      // 0x00B8   (0x0008)  
	UAnimSequence*                                     GrapplerIdleFPAnimation;                                    // 0x00C0   (0x0008)  
	UAnimMontage*                                      GrapplerInitialGrabMontage;                                 // 0x00C8   (0x0008)  
	float                                              GrappleAttackMaxExpectedDistance;                           // 0x00D0   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x00D4   (0x0004)  MISSED
	UAnimMontage*                                      VictimInitialGrabMontage;                                   // 0x00D8   (0x0008)  
	TArray<FGrappleActionMontagePair>                  GrappleActionMontagePairs;                                  // 0x00E0   (0x0010)  
	TArray<FGrappleActionMontagePair>                  GrappleActionReleaseMontagePairs;                           // 0x00F0   (0x0010)  
	UAnimMontage*                                      GrappleActionVictimGetUpMontageAfterGrapplerDeath;          // 0x0100   (0x0008)  
	UAkAudioEvent*                                     StartGrappleAudioEvent;                                     // 0x0108   (0x0008)  
	UAkAudioEvent*                                     StopGrappleAudioEvent;                                      // 0x0110   (0x0008)  
	FName                                              AttackerAttachSocketName;                                   // 0x0118   (0x0008)  
	bool                                               ShouldSetAttackerLocationToVictimLocation;                  // 0x0120   (0x0001)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x0121   (0x0003)  MISSED
	FVector                                            AttackerLocationToVictimLocationOffset;                     // 0x0124   (0x000C)  
	bool                                               ShouldOffsetAttacker;                                       // 0x0130   (0x0001)  
	unsigned char                                      UnknownData06_5[0x3];                                       // 0x0131   (0x0003)  MISSED
	float                                              AttackerReleaseOffset;                                      // 0x0134   (0x0004)  
	UAnimSequence*                                     DefenderIdleAnimation;                                      // 0x0138   (0x0008)  
	UAnimSequence*                                     DefenderIdleFPAnimation;                                    // 0x0140   (0x0008)  
	FName                                              DefenderAttachBoneName;                                     // 0x0148   (0x0008)  
	bool                                               ShouldOffsetDefender;                                       // 0x0150   (0x0001)  
	unsigned char                                      UnknownData07_5[0x3];                                       // 0x0151   (0x0003)  MISSED
	float                                              DefenderReleaseOffset;                                      // 0x0154   (0x0004)  
	float                                              DefenderReleaseOffsetOnServerAfterRelease;                  // 0x0158   (0x0004)  
	float                                              DefensePercentageIncreasePerInput;                          // 0x015C   (0x0004)  
	float                                              DefensePercentageDecreasePerSecond;                         // 0x0160   (0x0004)  
	float                                              DefensePercentageDecreasePerDamageTaken;                    // 0x0164   (0x0004)  
	unsigned char                                      UnknownData08_5[0x8];                                       // 0x0168   (0x0008)  MISSED
	FTransform                                         CameraSpringArmOffset;                                      // 0x0170   (0x0030)  
};

/// Class /Script/ConZ.GrapplingWidget
/// Size: 0x0018 (0x000260 - 0x000278)
class UGrapplingWidget : public UUserWidget
{ 
public:
	UImage*                                            _grapplingValue;                                            // 0x0260   (0x0008)  
	UTextBlock*                                        _instructionText;                                           // 0x0268   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0270   (0x0008)  MISSED
};

/// Class /Script/ConZ.GrenadeAnimInstance
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UGrenadeAnimInstance : public UAnimInstance
{ 
public:
	EPrisonerStance                                    _owningPrisonerStance;                                      // 0x02C0   (0x0001)  
	bool                                               _isOwningPrisonerInFirstPersonView;                         // 0x02C1   (0x0001)  
	bool                                               _isPinPulled;                                               // 0x02C2   (0x0001)  
	unsigned char                                      UnknownData00_6[0xD];                                       // 0x02C3   (0x000D)  MISSED
};

/// Class /Script/ConZ.GuardedZoneManager
/// Size: 0x0030 (0x000220 - 0x000250)
class AGuardedZoneManager : public AActor
{ 
public:
	UBillboardComponent*                               _sprite;                                                    // 0x0220   (0x0008)  
	TArray<ASentrySpawner2*>                           _sentrySpawners;                                            // 0x0228   (0x0010)  
	TArray<FSentrySpawnerDescription>                  _sentrySpawnerDescriptions;                                 // 0x0238   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0248   (0x0008)  MISSED
};

/// Class /Script/ConZ.HaircutAndMakeupService
/// Size: 0x0000 (0x000038 - 0x000038)
class UHaircutAndMakeupService : public UTraderService
{ 
public:
};

/// Class /Script/ConZ.HalloweenSacrificePit
/// Size: 0x02A0 (0x000220 - 0x0004C0)
class AHalloweenSacrificePit : public AActor
{ 
public:
	int64_t                                            _deactivationTime;                                          // 0x0220   (0x0008)  
	FVector                                            _sacrificePitCenter;                                        // 0x0228   (0x000C)  
	float                                              _sacrificePitRadius;                                        // 0x0234   (0x0004)  
	TArray<FHalloweenSacrificePitRequiredItemVariants> _requiredItemsInSacrificePit;                               // 0x0238   (0x0010)  
	float                                              _giftSpawningTimeWindowDuration;                            // 0x0248   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x024C   (0x0004)  MISSED
	TWeakObjectPtr<UClass*>                            _giftItem;                                                  // 0x0250   (0x0028)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0278   (0x0008)  MISSED
	FTransform                                         _giftItemSpawnTransform;                                    // 0x0280   (0x0030)  
	float                                              _giftItemAlreadySpawnedCheckRadius;                         // 0x02B0   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x02B4   (0x0004)  MISSED
	TWeakObjectPtr<UAkAudioEvent*>                     _giftSpawningPreludeAudioEvent;                             // 0x02B8   (0x0028)  
	TWeakObjectPtr<UParticleSystem*>                   _giftSpawningPreludeParticleSystem;                         // 0x02E0   (0x0028)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x0308   (0x0008)  MISSED
	FTransform                                         _giftSpawningPreludeParticlesTransform;                     // 0x0310   (0x0030)  
	TWeakObjectPtr<UAkAudioEvent*>                     _giftSpawningFinishedAudioEvent;                            // 0x0340   (0x0028)  
	TWeakObjectPtr<UParticleSystem*>                   _giftSpawningFinishedParticleSystem;                        // 0x0368   (0x0028)  
	FTransform                                         _giftSpawningFinishedParticlesTransform;                    // 0x0390   (0x0030)  
	ADecalActor*                                       _demonicSigilDecal;                                         // 0x03C0   (0x0008)  
	FName                                              _demonicSigilDecalEmissiveColorParameterName;               // 0x03C8   (0x0008)  
	FRuntimeFloatCurve                                 _demonicSigilDecalEmissiveColorMultiplierVsTime;            // 0x03D0   (0x0088)  
	int32_t                                            _numZombiesToSpawn;                                         // 0x0458   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x045C   (0x0004)  MISSED
	TArray<TWeakObjectPtr>                             _possibleZombies;                                           // 0x0460   (0x0010)  
	TArray<FTransform>                                 _zombieSpawnTransforms;                                     // 0x0470   (0x0010)  
	float                                              _zombieSpawnAreaSlack;                                      // 0x0480   (0x0004)  
	unsigned char                                      UnknownData05_6[0x3C];                                      // 0x0484   (0x003C)  MISSED


	/// Functions
	// Function /Script/ConZ.HalloweenSacrificePit.NetMulticast_StartLoadingAssets
	void NetMulticast_StartLoadingAssets(TArray<FSoftObjectPath> AssetPaths);                                                // [0x22eb4e0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.HalloweenSacrificePit.NetMulticast_SpawnGiftSpawningPreludeEffects
	void NetMulticast_SpawnGiftSpawningPreludeEffects(UAkAudioEvent* AudioEvent, UParticleSystem* Particles);                // [0x22eb410] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.HalloweenSacrificePit.NetMulticast_SpawnGiftSpawningFinishedEffects
	void NetMulticast_SpawnGiftSpawningFinishedEffects(UAkAudioEvent* AudioEvent, UParticleSystem* Particles);               // [0x22eb340] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/ConZ.HandgunSkill
/// Size: 0x0000 (0x000218 - 0x000218)
class UHandgunSkill : public URangedWeaponsSkill
{ 
public:
};

/// Class /Script/ConZ.HandheldLightItemState
/// Size: 0x0010 (0x000100 - 0x000110)
class UHandheldLightItemState : public UItemState
{ 
public:
	int32_t                                            CurrentLightAngleIndex;                                     // 0x0100   (0x0004)  
	float                                              CurrentLightIntensity;                                      // 0x0104   (0x0004)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0108   (0x0008)  MISSED
};

/// Class /Script/ConZ.HandheldLightItem
/// Size: 0x0060 (0x000910 - 0x000970)
class AHandheldLightItem : public AItem
{ 
public:
	int32_t                                            _currentLightAngleIndex;                                    // 0x0910   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0914   (0x0004)  MISSED
	TArray<float>                                      _possibleLightAngles;                                       // 0x0918   (0x0010)  
	float                                              _minIntensityValue;                                         // 0x0928   (0x0004)  
	float                                              _intensityChangeStep;                                       // 0x092C   (0x0004)  
	UBasicGameResourceSlotItemComponent*               _resourceSlotComponent;                                     // 0x0930   (0x0008)  
	UBasicGameResourceContainerComponent*              _resourceContainerComponent;                                // 0x0938   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0940   (0x0004)  MISSED
	char                                               _lightIntensityReplicated;                                  // 0x0944   (0x0001)  
	bool                                               _canChangeLightIntensity;                                   // 0x0945   (0x0001)  
	unsigned char                                      UnknownData02_5[0x2];                                       // 0x0946   (0x0002)  MISSED
	UClass*                                            _resourceLightAnimatorClass;                                // 0x0948   (0x0008)  
	UBaseResourceLightAnimator*                        _lightAnimator;                                             // 0x0950   (0x0008)  
	unsigned char                                      UnknownData03_6[0x18];                                      // 0x0958   (0x0018)  MISSED


	/// Functions
	// Function /Script/ConZ.HandheldLightItem.OnRep_LightIntensity
	void OnRep_LightIntensity();                                                                                             // [0x22efc50] Final|Native|Private 
	// Function /Script/ConZ.HandheldLightItem.OnRep_CurrentLightAngleIndex
	void OnRep_CurrentLightAngleIndex();                                                                                     // [0x22efc30] Final|Native|Private 
	// Function /Script/ConZ.HandheldLightItem.OnComponentDeactivated
	void OnComponentDeactivated(UActorComponent* Component);                                                                 // [0x22efad0] Final|Native|Private 
	// Function /Script/ConZ.HandheldLightItem.OnComponentActivated
	void OnComponentActivated(UActorComponent* Component, bool wasReset);                                                    // [0x22efa00] Final|Native|Private 
	// Function /Script/ConZ.HandheldLightItem.GetCurrentLightAngle
	float GetCurrentLightAngle();                                                                                            // [0x22ef360] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.HandheldLightItem.BP_TurnOn
	void BP_TurnOn();                                                                                                        // [0x2859740] Event|Protected|BlueprintEvent 
	// Function /Script/ConZ.HandheldLightItem.BP_TurnOff
	void BP_TurnOff();                                                                                                       // [0x2859740] Event|Protected|BlueprintEvent 
	// Function /Script/ConZ.HandheldLightItem.BP_OnCurrentLightIntensityChanged
	void BP_OnCurrentLightIntensityChanged(float NewValue);                                                                  // [0x2859740] Event|Protected|BlueprintEvent 
	// Function /Script/ConZ.HandheldLightItem.BP_OnCurrentLightAngleChanged
	void BP_OnCurrentLightAngleChanged(float NewValue);                                                                      // [0x2859740] Event|Protected|BlueprintEvent 
};

/// Class /Script/ConZ.HandheldLightItemAnimInstance
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UHandheldLightItemAnimInstance : public UAnimInstance
{ 
public:
};

/// Class /Script/ConZ.HandheldSkeletalMeshLightItem
/// Size: 0x0000 (0x000970 - 0x000970)
class AHandheldSkeletalMeshLightItem : public AHandheldLightItem
{ 
public:
};

/// Class /Script/ConZ.HandheldSkeletalMeshLightItemWithGameResourceSlot
/// Size: 0x0000 (0x000970 - 0x000970)
class AHandheldSkeletalMeshLightItemWithGameResourceSlot : public AHandheldSkeletalMeshLightItem
{ 
public:
};

/// Class /Script/ConZ.HandPanel3
/// Size: 0x0068 (0x000260 - 0x0002C8)
class UHandPanel3 : public UTabMenuPanel
{ 
public:
	UHandsHolstersWidget2*                             _handInventory;                                             // 0x0260   (0x0008)  
	UHandsHolstersWidget2*                             _holsterInventory0;                                         // 0x0268   (0x0008)  
	UHandsHolstersWidget2*                             _holsterInventory1;                                         // 0x0270   (0x0008)  
	UQuickAccessItemSwitcher3*                         _quickAccessItemSwitcher0;                                  // 0x0278   (0x0008)  
	UQuickAccessItemSwitcher3*                         _quickAccessItemSwitcher3;                                  // 0x0280   (0x0008)  
	UQuickAccessItemSwitcher3*                         _quickAccessItemSwitcher4;                                  // 0x0288   (0x0008)  
	UQuickAccessItemSwitcher3*                         _quickAccessItemSwitcher5;                                  // 0x0290   (0x0008)  
	UQuickAccessItemSwitcher3*                         _quickAccessItemSwitcher6;                                  // 0x0298   (0x0008)  
	UQuickAccessItemSwitcher3*                         _quickAccessItemSwitcher7;                                  // 0x02A0   (0x0008)  
	UQuickAccessItemSwitcher3*                         _quickAccessItemSwitcher8;                                  // 0x02A8   (0x0008)  
	UQuickAccessItemSwitcher3*                         _quickAccessItemSwitcher9;                                  // 0x02B0   (0x0008)  
	USizeBox*                                          _mainSizeBox;                                               // 0x02B8   (0x0008)  
	float                                              _mainPanelWidth;                                            // 0x02C0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x02C4   (0x0004)  MISSED
};

/// Class /Script/ConZ.InventoryContainerWidget2
/// Size: 0x0000 (0x000260 - 0x000260)
class UInventoryContainerWidget2 : public UUserWidget
{ 
public:
};

/// Class /Script/ConZ.HandsHolstersWidget2
/// Size: 0x00C0 (0x000260 - 0x000320)
class UHandsHolstersWidget2 : public UInventoryContainerWidget2
{ 
public:
	UTextBlock*                                        _slotTypeText;                                              // 0x0260   (0x0008)  
	UInventoryContainer2D*                             _container;                                                 // 0x0268   (0x0008)  
	UInventoryContainerHandsHolsters*                  _handsHolstersContainer;                                    // 0x0270   (0x0008)  
	UTextBlock*                                        _nameText;                                                  // 0x0278   (0x0008)  
	UInventorySlotUserWidget*                          _itemSlotWidget;                                            // 0x0280   (0x0008)  
	UItemWidget2*                                      _itemWidget;                                                // 0x0288   (0x0008)  
	UTextBlock*                                        _price;                                                     // 0x0290   (0x0008)  
	UOverlay*                                          _priceOverlay;                                              // 0x0298   (0x0008)  
	UExpandableContainer*                              _expandableContainer;                                       // 0x02A0   (0x0008)  
	UGridPanel*                                        _inventoryGrid;                                             // 0x02A8   (0x0008)  
	UInventorySlotUserWidget*                          _attachmentSlotWidget;                                      // 0x02B0   (0x0008)  
	TArray<UInventorySlotUserWidget*>                  _slotsWidgets;                                              // 0x02B8   (0x0010)  
	TArray<UItemWidget2*>                              _attachmentWidgets;                                         // 0x02C8   (0x0010)  
	EHandsHolstersType                                 _type;                                                      // 0x02D8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x02D9   (0x0007)  MISSED
	TScriptInterface<Class>                            _item;                                                      // 0x02E0   (0x0010)  
	FText                                              _slotName;                                                  // 0x02F0   (0x0018)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x0308   (0x0018)  MISSED


	/// Functions
	// Function /Script/ConZ.HandsHolstersWidget2.OnFishingAttachmentRemoved
	void OnFishingAttachmentRemoved(AFishingRod* FishingRod, AFishingAttachment* Attachment);                                // [0x22ef930] Final|Native|Private 
	// Function /Script/ConZ.HandsHolstersWidget2.OnFishingAttachmentDestroyed
	void OnFishingAttachmentDestroyed(AActor* Attachment);                                                                   // [0x22ef8a0] Final|Native|Private 
	// Function /Script/ConZ.HandsHolstersWidget2.OnFishingAttachmentAdded
	void OnFishingAttachmentAdded(AFishingRod* FishingRod, AFishingAttachment* Attachment);                                  // [0x22ef7d0] Final|Native|Private 
	// Function /Script/ConZ.HandsHolstersWidget2.OnAttachmentRemoved
	void OnAttachmentRemoved(AWeapon* Weapon, AWeaponAttachment* Attachment);                                                // [0x22ef930] Final|Native|Private 
	// Function /Script/ConZ.HandsHolstersWidget2.OnAttachmentDestroyed
	void OnAttachmentDestroyed(AActor* Attachment);                                                                          // [0x22ef8a0] Final|Native|Private 
	// Function /Script/ConZ.HandsHolstersWidget2.OnAttachmentAdded
	void OnAttachmentAdded(AWeapon* Weapon, AWeaponAttachment* Attachment);                                                  // [0x22ef7d0] Final|Native|Private 
};

/// Class /Script/ConZ.HasCustomRadialDamageHandler
/// Size: 0x0000 (0x000028 - 0x000028)
class UHasCustomRadialDamageHandler : public UInterface
{ 
public:
};

/// Class /Script/ConZ.HasLadderMarkersInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UHasLadderMarkersInterface : public UInterface
{ 
public:
};

/// Class /Script/ConZ.HasOwningUser
/// Size: 0x0000 (0x000028 - 0x000028)
class UHasOwningUser : public UInterface
{ 
public:
};

/// Class /Script/ConZ.HasProcessViewRotation
/// Size: 0x0000 (0x000028 - 0x000028)
class UHasProcessViewRotation : public UInterface
{ 
public:
};

/// Class /Script/ConZ.HasWindowMarkersInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UHasWindowMarkersInterface : public UInterface
{ 
public:
};

/// Class /Script/ConZ.HazmatSuitTag
/// Size: 0x0000 (0x000030 - 0x000030)
class UHazmatSuitTag : public UBaseItemTag
{ 
public:
};

/// Class /Script/ConZ.HealthWidget
/// Size: 0x0000 (0x0002F8 - 0x0002F8)
class UHealthWidget : public UWaypointWidgetBase
{ 
public:
};

/// Class /Script/ConZ.HeatSourceDebuggerEntitySetup
/// Size: 0x0000 (0x000080 - 0x000080)
class UHeatSourceDebuggerEntitySetup : public UEntitySetup
{ 
public:
};

/// Class /Script/ConZ.HeatSourceEntityComponentState
/// Size: 0x0010 (0x000028 - 0x000038)
class UHeatSourceEntityComponentState : public UObject
{ 
public:
	UClass*                                            ResourceType;                                               // 0x0028   (0x0008)  
	float                                              DesiredHeatIntensity;                                       // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Class /Script/ConZ.HeatSourceEntityComponentSetup
/// Size: 0x0130 (0x000048 - 0x000178)
class UHeatSourceEntityComponentSetup : public UEntityComponentSetup
{ 
public:
	UClass*                                            ResourceType;                                               // 0x0048   (0x0008)  
	float                                              MaxTemperature;                                             // 0x0050   (0x0004)  
	float                                              InnerRadius;                                                // 0x0054   (0x0004)  
	float                                              OuterRadius;                                                // 0x0058   (0x0004)  
	bool                                               AutoFindResourceSupplier;                                   // 0x005C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x005D   (0x0003)  MISSED
	FName                                              ResourceSupplierName;                                       // 0x0060   (0x0008)  
	FRuntimeFloatCurve                                 ResourceSupplierUsageRateVsHeatIntensity;                   // 0x0068   (0x0088)  
	FRuntimeFloatCurve                                 MaxHeatIntensityVsSupplierResourceAmountRatio;              // 0x00F0   (0x0088)  
};

/// Class /Script/ConZ.HeatSourceLinkUserData
/// Size: 0x0010 (0x000028 - 0x000038)
class UHeatSourceLinkUserData : public UAssetUserData
{ 
public:
	int32_t                                            _heatSourceIndex;                                           // 0x0028   (0x0004)  
	int32_t                                            _cookingSlotIndex;                                          // 0x002C   (0x0004)  
	bool                                               _sameHeatSourceCookingSlotIndex;                            // 0x0030   (0x0001)  
	bool                                               _linkAllCookingSlotsToHeatSource;                           // 0x0031   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0032   (0x0006)  MISSED
};

/// Class /Script/ConZ.HeatSourceItemComponent
/// Size: 0x0018 (0x0000C8 - 0x0000E0)
class UHeatSourceItemComponent : public UItemComponent
{ 
public:
	TArray<UFueledHeatSource*>                         HeatSources;                                                // 0x00C8   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x00D8   (0x0008)  MISSED
};

/// Class /Script/ConZ.HeatSourceItemTag
/// Size: 0x00B8 (0x000030 - 0x0000E8)
class UHeatSourceItemTag : public UBaseItemTag
{ 
public:
	FHeatSource                                        HeatSource;                                                 // 0x0030   (0x00A8)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x00D8   (0x0010)  MISSED
};

/// Class /Script/ConZ.HeatSourceManager
/// Size: 0x0088 (0x000220 - 0x0002A8)
class AHeatSourceManager : public AActor
{ 
public:
	float                                              MassOfAdditionalOxygenUsedPerGramOfFuelBurned;              // 0x0220   (0x0004)  
	unsigned char                                      UnknownData00_6[0x84];                                      // 0x0224   (0x0084)  MISSED
};

/// Class /Script/ConZ.HeatSourceMarker
/// Size: 0x0040 (0x000220 - 0x000260)
class AHeatSourceMarker : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0220   (0x0008)  MISSED
	USceneComponent*                                   _sceneComponent;                                            // 0x0228   (0x0008)  
	FHeatSourceParameters                              _heatSourceParameters;                                      // 0x0230   (0x0024)  
	unsigned char                                      UnknownData01_6[0xC];                                       // 0x0254   (0x000C)  MISSED
};

/// Class /Script/ConZ.HeatSourceMarkersComponent
/// Size: 0x0010 (0x000200 - 0x000210)
class UHeatSourceMarkersComponent : public USceneComponent
{ 
public:
	TArray<FHeatSource>                                _heatSources;                                               // 0x01F8   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0208   (0x0008)  MISSED
};

/// Class /Script/ConZ.HitReactComponent
/// Size: 0x0130 (0x0000B0 - 0x0001E0)
class UHitReactComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x00B0   (0x0018)  MISSED
	TArray<UHitReactMapping*>                          HitReactMappings;                                           // 0x00C8   (0x0010)  
	FPhysicalHitReactData                              PhysicalHitReactData;                                       // 0x00D8   (0x0018)  
	FName                                              RagdollConstraintProfileName;                               // 0x00F0   (0x0008)  
	float                                              RagdollRestThresholdSingleBodyMax;                          // 0x00F8   (0x0004)  
	float                                              RagdollRestThresholdAverageBodyMax;                         // 0x00FC   (0x0004)  
	unsigned char                                      UnknownData01_5[0x28];                                      // 0x0100   (0x0028)  MISSED
	FName                                              _pelvisBoneName;                                            // 0x0128   (0x0008)  
	FName                                              _rootBoneName;                                              // 0x0130   (0x0008)  
	UAnimMontage*                                      _getUpFromFaceMontage;                                      // 0x0138   (0x0008)  
	UAnimMontage*                                      _getUpFromBackMontage;                                      // 0x0140   (0x0008)  
	bool                                               _shouldSnapToServerLocation;                                // 0x0148   (0x0001)  
	unsigned char                                      UnknownData02_5[0x71];                                      // 0x0149   (0x0071)  MISSED
	ERagdollTransitionState                            _ragdollTransitionState;                                    // 0x01BA   (0x0001)  
	unsigned char                                      UnknownData03_5[0x1];                                       // 0x01BB   (0x0001)  MISSED
	FVector                                            _serverRagdollLocation;                                     // 0x01BC   (0x000C)  
	unsigned char                                      UnknownData04_6[0x18];                                      // 0x01C8   (0x0018)  MISSED


	/// Functions
	// Function /Script/ConZ.HitReactComponent.RecoverFromRagdollImmediately
	void RecoverFromRagdollImmediately();                                                                                    // [0x22efcd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.HitReactComponent.RecoverFromRagdoll
	void RecoverFromRagdoll();                                                                                               // [0x22efcb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.HitReactComponent.OnRep_ServerRagdollLocation
	void OnRep_ServerRagdollLocation();                                                                                      // [0x22efc90] Final|Native|Private 
	// Function /Script/ConZ.HitReactComponent.OnRep_RagdollTransitionState
	void OnRep_RagdollTransitionState();                                                                                     // [0x22efc70] Final|Native|Private 
	// Function /Script/ConZ.HitReactComponent.OnMontageBlendingOut
	void OnMontageBlendingOut(UAnimMontage* Montage, bool interrupted);                                                      // [0x22efb60] Final|Native|Private 
	// Function /Script/ConZ.HitReactComponent.MoveRagdollMesh
	void MoveRagdollMesh(UPrimitiveComponent* MeshComponent, FVector& currentLocation, FVector& TargetLocation);             // [0x22ef6a0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/ConZ.HitReactComponent.IsRagdollAtRest
	bool IsRagdollAtRest();                                                                                                  // [0x22ef670] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.HitReactComponent.IsPlayingGetUpMontage
	bool IsPlayingGetUpMontage();                                                                                            // [0x22ef640] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.HitReactComponent.IsInRagdoll
	bool IsInRagdoll();                                                                                                      // [0x22ef610] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.HitReactComponent.IsCapsuleOverlapped
	bool IsCapsuleOverlapped();                                                                                              // [0x22ef5e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.HitReactComponent.IsBlendingRagdoll
	bool IsBlendingRagdoll();                                                                                                // [0x22ef5b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.HitReactComponent.GoToRagdoll
	void GoToRagdoll();                                                                                                      // [0x22ef590] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.HitReactComponent.GetPelvisRotation
	FQuat GetPelvisRotation();                                                                                               // [0x22ef480] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.HitReactComponent.GetPelvisBoneName
	FName GetPelvisBoneName();                                                                                               // [0x22ef440] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.HitReactComponent.CanRecoverFromRagdoll
	bool CanRecoverFromRagdoll();                                                                                            // [0x22ef330] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.HitReactComponent.ApplyPhysicalAnimationData
	void ApplyPhysicalAnimationData(FPhysicalAnimationDesc& desc);                                                           // [0x22ef270] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/ConZ.HitReactLandingParams
/// Size: 0x0030 (0x000030 - 0x000060)
class UHitReactLandingParams : public UDataAsset
{ 
public:
	UAnimMontage*                                      MontageToPlay;                                              // 0x0030   (0x0008)  
	float                                              RegainControlDurationMultiplier;                            // 0x0038   (0x0004)  
	FFloatInterval                                     RagdollImpactSpeedRange;                                    // 0x003C   (0x0008)  
	FFloatInterval                                     RagdollDuration;                                            // 0x0044   (0x0008)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x004C   (0x0004)  MISSED
	UCurveFloat*                                       LandingDamageCurve;                                         // 0x0050   (0x0008)  
	UCurveFloat*                                       WaterImpactDamageCurve;                                     // 0x0058   (0x0008)  
};

/// Class /Script/ConZ.HitReactMapping
/// Size: 0x03B0 (0x000030 - 0x0003E0)
class UHitReactMapping : public UDataAsset
{ 
public:
	FGameplayTagContainer                              HitReactTypes;                                              // 0x0030   (0x0020)  
	float                                              RegainControlMultiplier;                                    // 0x0050   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0054   (0x0004)  MISSED
	FHitReactMagnitudeData                             HeadHit;                                                    // 0x0058   (0x0120)  
	FHitReactMagnitudeData                             BodyHit;                                                    // 0x0178   (0x0120)  
	FHitReactMagnitudeData                             LegsHit;                                                    // 0x0298   (0x0120)  
	FHitReactLandingData                               LandingHit;                                                 // 0x03B8   (0x0028)  
};

/// Class /Script/ConZ.HoverPanelWidget
/// Size: 0x0000 (0x000260 - 0x000260)
class UHoverPanelWidget : public UUserWidget
{ 
public:
};

/// Class /Script/ConZ.HUD_John
/// Size: 0x0050 (0x000310 - 0x000360)
class AHUD_John : public AHUD
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0310   (0x0008)  MISSED
	UFont*                                             NormalFont;                                                 // 0x0318   (0x0008)  
	unsigned char                                      UnknownData01_6[0x40];                                      // 0x0320   (0x0040)  MISSED
};

/// Class /Script/ConZ.HUDNotification
/// Size: 0x0000 (0x000030 - 0x000030)
class UHUDNotification : public UConZNotification
{ 
public:
};

/// Class /Script/ConZ.HUDNotificationDescription
/// Size: 0x0020 (0x000040 - 0x000060)
class UHUDNotificationDescription : public UNotificationDescription
{ 
public:
	FText                                              Message;                                                    // 0x0040   (0x0018)  
	UAkAudioEvent*                                     AudioEvent;                                                 // 0x0058   (0x0008)  
};

/// Class /Script/ConZ.HudWidget
/// Size: 0x01E0 (0x000260 - 0x000440)
class UHudWidget : public UUserWidget
{ 
public:
	UCanvasPanel*                                      _mainCanvasPanel;                                           // 0x0260   (0x0008)  
	UQuickAccessBarWidget*                             _quickAccessBar;                                            // 0x0268   (0x0008)  
	UThrowingQuickAccessItemWidget*                    _throwingAccess;                                            // 0x0270   (0x0008)  
	UQuickAccessItemWidget*                            _handQuickAccessItemWidget;                                 // 0x0278   (0x0008)  
	UChatWidget*                                       _chatWidget;                                                // 0x0280   (0x0008)  
	bool                                               _chatOpen;                                                  // 0x0288   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0289   (0x0007)  MISSED
	UMessageContainer*                                 _messages;                                                  // 0x0290   (0x0008)  
	UWarning*                                          _warningMessage;                                            // 0x0298   (0x0008)  
	UMicInputIndicator*                                _micInputIndicator;                                         // 0x02A0   (0x0008)  
	UVerticalBox*                                      _warningsVerticalBox;                                       // 0x02A8   (0x0008)  
	UVerticalBox*                                      _killNotificationVerticalBox;                               // 0x02B0   (0x0008)  
	UClass*                                            _warningSignWidgetClass;                                    // 0x02B8   (0x0008)  
	UClass*                                            _killNotificationWidgetClass;                               // 0x02C0   (0x0008)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x02C8   (0x0010)  MISSED
	UTabMenuReborn*                                    _tabMenuReborn;                                             // 0x02D8   (0x0008)  
	UObjectivesContainerWidget*                        _objectivesContainer;                                       // 0x02E0   (0x0008)  
	UMissionResult*                                    _missionResultWidget;                                       // 0x02E8   (0x0008)  
	UDialogueContainerWidget*                          _dialogueContainerWidget;                                   // 0x02F0   (0x0008)  
	UVicinityContainer3*                               _openContainerInventoryVicinityContainer;                   // 0x02F8   (0x0008)  
	UPrisonerLifeIndicatorsSprite*                     _prisonerLifeIndicatorsSprite;                              // 0x0300   (0x0008)  
	UCompassWidget*                                    _compassWidget;                                             // 0x0308   (0x0008)  
	UScreenSpaceHealthWidget*                          _screenSpaceHealthWidget;                                   // 0x0310   (0x0008)  
	UResourceIndicatorWidget*                          _nightVisionGogglesBatteryWidget;                           // 0x0318   (0x0008)  
	UShotsFiredTrackerWidget*                          _shotsFiredTrackerWidget;                                   // 0x0320   (0x0008)  
	UFishingContainerWidget*                           _fishingContainerWidget;                                    // 0x0328   (0x0008)  
	UGrapplingWidget*                                  _grapplingWidget;                                           // 0x0330   (0x0008)  
	UMusicPlayerDisplayWidget*                         _musicPlayerDisplayWidget;                                  // 0x0338   (0x0008)  
	UFishingTrophyWidget*                              _fishingTrophyWidget;                                       // 0x0340   (0x0008)  
	UVehicleHudWidget*                                 _vehicleHUD;                                                // 0x0348   (0x0008)  
	UPlasticSurgeryMenuWidget*                         _plasticSurgeryPanel;                                       // 0x0350   (0x0008)  
	UBarberShopMenuWidget*                             _barberShopPanel;                                           // 0x0358   (0x0008)  
	UCanvasPanel*                                      _chatCanvas;                                                // 0x0360   (0x0008)  
	UWidgetSwitcher*                                   _masterSwitcher;                                            // 0x0368   (0x0008)  
	UMasterMenu*                                       _masterMenu;                                                // 0x0370   (0x0008)  
	UFloatingWidgetCanvas*                             _floatingWidgetCanvas;                                      // 0x0378   (0x0008)  
	UGameEventNotificationPanel*                       _gameEventNotificationPanel;                                // 0x0380   (0x0008)  
	UPanelWidget*                                      _masterHUD;                                                 // 0x0388   (0x0008)  
	UFundsOverview*                                    _fundsOverview;                                             // 0x0390   (0x0008)  
	UNotificationPanelWidget*                          _notificationPanelWidget;                                   // 0x0398   (0x0008)  
	ULevelUpNotificationWidget*                        _levelUpNotification;                                       // 0x03A0   (0x0008)  
	UClass*                                            _notificationWidgetClass;                                   // 0x03A8   (0x0008)  
	UNotificationWidget*                               _updateableNotification;                                    // 0x03B0   (0x0008)  
	FMargin                                            _adjustmentPaddingForVicinityWhenTrading;                   // 0x03B8   (0x0010)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x03C8   (0x0004)  MISSED
	float                                              _notificationSoundCooldownInMinutes;                        // 0x03CC   (0x0004)  
	unsigned char                                      UnknownData03_5[0x50];                                      // 0x03D0   (0x0050)  MISSED
	UAkAudioEvent*                                     _playerKillIndicatorSound;                                  // 0x0420   (0x0008)  
	unsigned char                                      UnknownData04_5[0x8];                                       // 0x0428   (0x0008)  MISSED
	UTextBlock*                                        _debugInfo;                                                 // 0x0430   (0x0008)  
	unsigned char                                      UnknownData05_6[0x8];                                       // 0x0438   (0x0008)  MISSED
};

/// Class /Script/ConZ.HuntingClue
/// Size: 0x00A8 (0x000220 - 0x0002C8)
class AHuntingClue : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0220   (0x0008)  MISSED
	USceneComponent*                                   _rootComponent;                                             // 0x0228   (0x0008)  
	UParticleSystemComponent*                          _focusModeParticles;                                        // 0x0230   (0x0008)  
	UDecalComponent*                                   _clueDecalComponent;                                        // 0x0238   (0x0008)  
	UStaticMeshComponent*                              _clueStaticMeshComponent;                                   // 0x0240   (0x0008)  
	UArrowComponent*                                   _debugArrowComponent;                                       // 0x0248   (0x0008)  
	TArray<FHuntingClueVisuals>                        _firstClueVisuals;                                          // 0x0250   (0x0010)  
	TArray<FHuntingClueVisuals>                        _visuals;                                                   // 0x0260   (0x0010)  
	TArray<TWeakObjectPtr>                             _firstClueSoundVariations;                                  // 0x0270   (0x0010)  
	TArray<TWeakObjectPtr>                             _secondClueSoundVariations;                                 // 0x0280   (0x0010)  
	TArray<TWeakObjectPtr>                             _thirdPlusClueSoundVariations;                              // 0x0290   (0x0010)  
	float                                              _hearingDistance;                                           // 0x02A0   (0x0004)  
	float                                              _minApparentDistance;                                       // 0x02A4   (0x0004)  
	float                                              _fadeTime;                                                  // 0x02A8   (0x0004)  
	float                                              _lifetimeAfterFadeOut;                                      // 0x02AC   (0x0004)  
	float                                              _directionalConeHalfAngle;                                  // 0x02B0   (0x0004)  
	char                                               _packedClueIndexData;                                       // 0x02B4   (0x0001)  
	unsigned char                                      UnknownData01_6[0x13];                                      // 0x02B5   (0x0013)  MISSED
};

/// Class /Script/ConZ.HuntingManager
/// Size: 0x0190 (0x000220 - 0x0003B0)
class AHuntingManager : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0220   (0x0018)  MISSED
	float                                              _huntInitTickBudgetInMilliseconds;                          // 0x0238   (0x0004)  
	int32_t                                            _maxActiveHuntsNum;                                         // 0x023C   (0x0004)  
	float                                              _daytimeSpawnMultipliers;                                   // 0x0240   (0x0010)  
	TMap<TWeakObjectPtr, TWeakObjectPtr>               _huntingCluesPerAnimal;                                     // 0x0250   (0x0050)  
	TArray<TEnumAsByte>                                _allowedClueSpawnSurfaces;                                  // 0x02A0   (0x0010)  
	float                                              _huntStartPlayerCheckRadius;                                // 0x02B0   (0x0004)  
	float                                              _oldClueRemovalDistance;                                    // 0x02B4   (0x0004)  
	float                                              _huntFailureTime;                                           // 0x02B8   (0x0004)  
	float                                              _huntFailureAnimalDistance;                                 // 0x02BC   (0x0004)  
	float                                              _corpseLifetimeMinutes;                                     // 0x02C0   (0x0004)  
	int32_t                                            _maxSpawnPointGenerationFailures;                           // 0x02C4   (0x0004)  
	float                                              _timeToPlaySoundAfterClueInteractionMin;                    // 0x02C8   (0x0004)  
	float                                              _timeToPlaySoundAfterClueInteractionMax;                    // 0x02CC   (0x0004)  
	TArray<FHuntingBiomeDescription>                   _huntingBiomes;                                             // 0x02D0   (0x0010)  
	unsigned char                                      UnknownData01_6[0xD0];                                      // 0x02E0   (0x00D0)  MISSED


	/// Functions
	// Function /Script/ConZ.HuntingManager.OnAnimalKilled
	void OnAnimalKilled(AAnimal2* Animal);                                                                                   // [0x22f2fb0] Final|Native|Private 
	// Function /Script/ConZ.HuntingManager.OnAnimalActorDestroyed
	void OnAnimalActorDestroyed(AActor* animalActor);                                                                        // [0x22f2f20] Final|Native|Private 
	// Function /Script/ConZ.HuntingManager.NetMulticast_PlayClueSound
	void NetMulticast_PlayClueSound(TWeakObjectPtr<UAkAudioEvent*> clueAudioEvent, FVector clueLocation, float clueHearingDistance, float clueMinApparentDistance); // [0x22f2d90] Final|Net|Native|Event|NetMulticast|Private|HasDefaults 
};

/// Class /Script/ConZ.IgnitableExplosiveItemComponent
/// Size: 0x0068 (0x000198 - 0x000200)
class UIgnitableExplosiveItemComponent : public UIgnitableItemComponent
{ 
public:
	float                                              _explosionDamage;                                           // 0x0198   (0x0004)  
	float                                              _explosionOuterRadius;                                      // 0x019C   (0x0004)  
	float                                              _explosionInnerRadius;                                      // 0x01A0   (0x0004)  
	float                                              _explosionFalloff;                                          // 0x01A4   (0x0004)  
	float                                              _explosionForce;                                            // 0x01A8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x01AC   (0x0004)  MISSED
	FTargetTypeDamageMultiplier                        _targetTypeMultiplier;                                      // 0x01B0   (0x0010)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x01C0   (0x0008)  MISSED
	UParticleSystem*                                   _explosionParticle;                                         // 0x01C8   (0x0008)  
	UAkAudioEvent*                                     _explosionAudioEvent;                                       // 0x01D0   (0x0008)  
	UClass*                                            _explosionCameraShakeClass;                                 // 0x01D8   (0x0008)  
	float                                              _hearingDamageRadius;                                       // 0x01E0   (0x0004)  
	float                                              _activeNetCullDistanceSquaredMeters;                        // 0x01E4   (0x0004)  
	bool                                               _canExplodeUnderwater;                                      // 0x01E8   (0x0001)  
	unsigned char                                      UnknownData02_6[0x17];                                      // 0x01E9   (0x0017)  MISSED


	/// Functions
	// Function /Script/ConZ.IgnitableExplosiveItemComponent.Multicast_OnDetonate
	void Multicast_OnDetonate(FVector zeroBasedLocation);                                                                    // [0x22f2d10] Net|NetReliableNative|Event|NetMulticast|Protected|HasDefaults 
};

/// Class /Script/ConZ.ImageSlotWidget
/// Size: 0x0178 (0x000260 - 0x0003D8)
class UImageSlotWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x48];                                      // 0x0260   (0x0048)  MISSED
	UImage*                                            _availabilityGrid;                                          // 0x02A8   (0x0008)  
	UImage*                                            _backgroundImage;                                           // 0x02B0   (0x0008)  
	UImage*                                            _displayedImage;                                            // 0x02B8   (0x0008)  
	FSlateBrush                                        _defaultImageBrush;                                         // 0x02C0   (0x0088)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0348   (0x0008)  MISSED
	FLinearColor                                       _regularColor;                                              // 0x0350   (0x0010)  
	FLinearColor                                       _dropUnavailableColor;                                      // 0x0360   (0x0010)  
	FLinearColor                                       _dropAvailableColor;                                        // 0x0370   (0x0010)  
	float                                              _defaultBackgroundOpacity;                                  // 0x0380   (0x0004)  
	float                                              _slottedBackgroundOpacity;                                  // 0x0384   (0x0004)  
	FSlateColor                                        _defaultIconTint;                                           // 0x0388   (0x0028)  
	FSlateColor                                        _slottedIconTint;                                           // 0x03B0   (0x0028)  
};

/// Class /Script/ConZ.IndexedHierarchicalInstancedStaticMeshComponent
/// Size: 0x00B0 (0x000680 - 0x000730)
class UIndexedHierarchicalInstancedStaticMeshComponent : public UHierarchicalInstancedStaticMeshComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0xB0];                                      // 0x0680   (0x00B0)  MISSED
};

/// Class /Script/ConZ.InfiniteResourceAssetData
/// Size: 0x0080 (0x000030 - 0x0000B0)
class UInfiniteResourceAssetData : public UInteractionAssetData
{ 
public:
	UClass*                                            ResourceType;                                               // 0x0030   (0x0008)  
	FGameplayTagContainer                              InSocketTypes;                                              // 0x0038   (0x0020)  
	FGameplayTagContainer                              OutSocketTypes;                                             // 0x0058   (0x0020)  
	TArray<UBaseItemTag*>                              RequiredItemTagsForFilling;                                 // 0x0078   (0x0010)  
	float                                              FillBaseActionDuration;                                     // 0x0088   (0x0004)  
	float                                              FillActionDurationPerAmountFilled;                          // 0x008C   (0x0004)  
	float                                              FillResourceFillingExperiencePerAmount;                     // 0x0090   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0094   (0x0004)  MISSED
	UAnimMontage*                                      FillMontage;                                                // 0x0098   (0x0008)  
	UAkAudioEvent*                                     FillStartAudioEvent;                                        // 0x00A0   (0x0008)  
	UAkAudioEvent*                                     FillStopAudioEvent;                                         // 0x00A8   (0x0008)  
};

/// Class /Script/ConZ.InfluenceAreaVisualizer
/// Size: 0x0010 (0x000220 - 0x000230)
class AInfluenceAreaVisualizer : public AActor
{ 
public:
	UStaticMeshComponent*                              _staticMeshComponent;                                       // 0x0220   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0228   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.InfluenceAreaVisualizer.DestroyVisualizer
	void DestroyVisualizer();                                                                                                // [0x22d96d0] Final|Native|Private 
};

/// Class /Script/ConZ.IngredientEmptyCraftingCondition
/// Size: 0x0018 (0x000028 - 0x000040)
class UIngredientEmptyCraftingCondition : public UCraftingCondition
{ 
public:
	int32_t                                            SlotIndex;                                                  // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x002C   (0x0004)  MISSED
	FString                                            SlotName;                                                   // 0x0030   (0x0010)  
};

/// Class /Script/ConZ.IngredientsForRecipeWidget
/// Size: 0x0020 (0x000260 - 0x000280)
class UIngredientsForRecipeWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0260   (0x0008)  MISSED
	UWrapBox*                                          _ingredientsWrapBox;                                        // 0x0268   (0x0008)  
	UClass*                                            _interactiveIngredientWidgetClass;                          // 0x0270   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0278   (0x0008)  MISSED
};

/// Class /Script/ConZ.InjectableSubstance
/// Size: 0x0000 (0x000028 - 0x000028)
class UInjectableSubstance : public UInterface
{ 
public:
};

/// Class /Script/ConZ.InputDataAsset
/// Size: 0x0020 (0x000030 - 0x000050)
class UInputDataAsset : public UDataAsset
{ 
public:
	TArray<FInputActionKeyMapping>                     ActionMappings;                                             // 0x0030   (0x0010)  
	TArray<FInputAxisKeyMapping>                       AxisMappings;                                               // 0x0040   (0x0010)  
};

/// Class /Script/ConZ.InputWidget
/// Size: 0x0050 (0x000260 - 0x0002B0)
class UInputWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UWidgetSwitcher*                                   ControlsWidgetSwitcher;                                     // 0x0278   (0x0008)  
	UCarousel*                                         _sectionSwitcher;                                           // 0x0280   (0x0008)  
	unsigned char                                      UnknownData01_6[0x28];                                      // 0x0288   (0x0028)  MISSED
};

/// Class /Script/ConZ.InsertCartridge
/// Size: 0x0010 (0x000090 - 0x0000A0)
class UInsertCartridge : public UWeaponActionReloadSequence
{ 
public:
	FName                                              MontageEndSectionName;                                      // 0x0090   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0098   (0x0008)  MISSED
};

/// Class /Script/ConZ.InsertCartridgeIntoMagazine
/// Size: 0x0010 (0x000090 - 0x0000A0)
class UInsertCartridgeIntoMagazine : public UWeaponActionReloadSequence
{ 
public:
	FName                                              MontageEndSectionName;                                      // 0x0090   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0098   (0x0008)  MISSED
};

/// Class /Script/ConZ.InsertMagazine
/// Size: 0x0000 (0x000090 - 0x000090)
class UInsertMagazine : public UWeaponActionReloadSequence
{ 
public:
};

/// Class /Script/ConZ.InsertMagazineInsertCartridge
/// Size: 0x0010 (0x000090 - 0x0000A0)
class UInsertMagazineInsertCartridge : public UWeaponActionReloadSequence
{ 
public:
	FName                                              MontageEndSectionName;                                      // 0x0090   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0098   (0x0008)  MISSED
};

/// Class /Script/ConZ.InspectedItemWidget
/// Size: 0x0018 (0x000260 - 0x000278)
class UInspectedItemWidget : public UUserWidget
{ 
public:
	UItemClassWidget*                                  ItemWidget;                                                 // 0x0260   (0x0008)  
	UTextBlock*                                        SkillText;                                                  // 0x0268   (0x0008)  
	UTextBlock*                                        SkillLevelText;                                             // 0x0270   (0x0008)  


	/// Functions
	// Function /Script/ConZ.InspectedItemWidget.SetIsToolForSomething
	void SetIsToolForSomething(bool IsTool);                                                                                 // [0x2859740] Event|Public|BlueprintEvent 
};

/// Class /Script/ConZ.InstrumentItem
/// Size: 0x0200 (0x000910 - 0x000B10)
class AInstrumentItem : public AItem
{ 
public:
	unsigned char                                      UnknownData00_2[0xC];                                       // 0x0910   (0x000C)  MISSED
	int32_t                                            _numberOfOctaves;                                           // 0x091C   (0x0004)  
	UAnimMontage*                                      _playInstrumentStartMontageFP;                              // 0x0920   (0x0008)  
	UAnimMontage*                                      _playInstrumentStartMontageTP;                              // 0x0928   (0x0008)  
	UAnimMontage*                                      _playInstrumentStopMontageFP;                               // 0x0930   (0x0008)  
	UAnimMontage*                                      _playInstrumentStopMontageTP;                               // 0x0938   (0x0008)  
	UAnimSequenceBase*                                 _playInstrumentIdleAnimationFP;                             // 0x0940   (0x0008)  
	UAnimSequenceBase*                                 _playInstrumentPlayingAnimationFP;                          // 0x0948   (0x0008)  
	UAnimSequenceBase*                                 _playInstrumentIdleAnimationTP;                             // 0x0950   (0x0008)  
	UAnimSequenceBase*                                 _playInstrumentPlayingAnimationTP;                          // 0x0958   (0x0008)  
	float                                              _playingPoseHoldTime;                                       // 0x0960   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0964   (0x0004)  MISSED
	TArray<UAkAudioEvent*>                             _noteCStart;                                                // 0x0968   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteCStop;                                                 // 0x0978   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteDStart;                                                // 0x0988   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteDStop;                                                 // 0x0998   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteDbStart;                                               // 0x09A8   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteDbStop;                                                // 0x09B8   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteEStart;                                                // 0x09C8   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteEStop;                                                 // 0x09D8   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteEbStart;                                               // 0x09E8   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteEbStop;                                                // 0x09F8   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteFStart;                                                // 0x0A08   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteFStop;                                                 // 0x0A18   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteGStart;                                                // 0x0A28   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteGStop;                                                 // 0x0A38   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteGbStart;                                               // 0x0A48   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteGbStop;                                                // 0x0A58   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteAStart;                                                // 0x0A68   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteAStop;                                                 // 0x0A78   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteAbStart;                                               // 0x0A88   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteAbStop;                                                // 0x0A98   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteBStart;                                                // 0x0AA8   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteBStop;                                                 // 0x0AB8   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteBbStart;                                               // 0x0AC8   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteBbStop;                                                // 0x0AD8   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteC2Start;                                               // 0x0AE8   (0x0010)  
	TArray<UAkAudioEvent*>                             _noteC2Stop;                                                // 0x0AF8   (0x0010)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0B08   (0x0008)  MISSED
};

/// Class /Script/ConZ.InteractableInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UInteractableInterface : public UInterface
{ 
public:
};

/// Class /Script/ConZ.SpawnExaminedObjectsInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class USpawnExaminedObjectsInterface : public UInterface
{ 
public:
};

/// Class /Script/ConZ.InteractionComponent
/// Size: 0x01C8 (0x0000B0 - 0x000278)
class UInteractionComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00B0   (0x0008)  MISSED
	float                                              ExamineActionDuration;                                      // 0x00B8   (0x0004)  
	float                                              ExamineReplicationDelay;                                    // 0x00BC   (0x0004)  
	float                                              PickupItemActionDuration;                                   // 0x00C0   (0x0004)  
	float                                              PickupItemReplicationDelay;                                 // 0x00C4   (0x0004)  
	float                                              StoreItemActionDuration;                                    // 0x00C8   (0x0004)  
	float                                              TickFrequency;                                              // 0x00CC   (0x0004)  
	float                                              MinLandscapeInteractionDistanceSquared;                     // 0x00D0   (0x0004)  
	int32_t                                            SavedGroundSearchLocationsCount;                            // 0x00D4   (0x0004)  
	UClass*                                            GhostActorToSpawnAfterExamine;                              // 0x00D8   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x00E0   (0x0008)  MISSED
	int32_t                                            InitialMinNumEmptyContainersToSearchToSpawnGhostActor;      // 0x00E8   (0x0004)  
	int32_t                                            InitialMaxNumEmptyContainersToSearchToSpawnGhostActor;      // 0x00EC   (0x0004)  
	int32_t                                            MinNumEmptyContainersToSearchToSpawnGhostActor;             // 0x00F0   (0x0004)  
	int32_t                                            MaxNumEmptyContainersToSearchToSpawnGhostActor;             // 0x00F4   (0x0004)  
	bool                                               ShouldSpawnGhostActorRelativeToExaminer;                    // 0x00F8   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x00F9   (0x0003)  MISSED
	float                                              GhostActorSpawnDistanceToExaminer;                          // 0x00FC   (0x0004)  
	int64_t                                            ExamineGhostSpawnEndTime;                                   // 0x0100   (0x0008)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x0108   (0x0008)  MISSED
	TArray<UInteractionAction*>                        _actions;                                                   // 0x0110   (0x0010)  
	unsigned char                                      UnknownData04_5[0xF0];                                      // 0x0120   (0x00F0)  MISSED
	FSpawnedItems                                      _replicatedExamineSpawnedItems;                             // 0x0210   (0x0018)  
	FSpawnedItems                                      _replicatedPickupSpawnedItem;                               // 0x0228   (0x0018)  
	unsigned char                                      UnknownData05_5[0x2C];                                      // 0x0240   (0x002C)  MISSED
	float                                              _drinkAllowedThreshold;                                     // 0x026C   (0x0004)  
	float                                              _reexamineFrequency;                                        // 0x0270   (0x0004)  
	unsigned char                                      UnknownData06_6[0x4];                                       // 0x0274   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.InteractionComponent.UseItemOnServer
	void UseItemOnServer(AItem* Item, int32_t Usage, float usageWeight, bool Eat);                                           // [0x22f9a10] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.InteractionComponent.UpdateExistenceOnClient
	void UpdateExistenceOnClient(bool Exists);                                                                               // [0x22f9980] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.InteractionComponent.UnspawnExaminedItemsOnServer
	void UnspawnExaminedItemsOnServer(bool destroyItems);                                                                    // [0x22f98f0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.InteractionComponent.UnexamineItemOnServer
	void UnexamineItemOnServer(AItem* Item);                                                                                 // [0x22f9860] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.InteractionComponent.UnexamineItemOnClient
	void UnexamineItemOnClient(AItem* Item);                                                                                 // [0x22f97d0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.InteractionComponent.UncraftItemOnServer
	void UncraftItemOnServer(AItem* Item);                                                                                   // [0x22f9740] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.InteractionComponent.StopExamining
	void StopExamining();                                                                                                    // [0x22f9720] Final|Native|Public  
	// Function /Script/ConZ.InteractionComponent.Server_UpdateLockHPOnServer
	void Server_UpdateLockHPOnServer(UObject* Lockpickable, float lockHP);                                                   // [0x22f9650] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.InteractionComponent.Server_RemoveLockOnServer
	void Server_RemoveLockOnServer(UObject* Lockpickable);                                                                   // [0x22f95c0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.InteractionComponent.Server_InteractWithBaseElement
	void Server_InteractWithBaseElement(EInteractionType interactionType, FConZBaseInteractionData baseData, FConZBaseElementInteractionData elementData); // [0x22f9450] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.InteractionComponent.Server_FindOrCreateGardenSlotMeshComponentForInteraction
	void Server_FindOrCreateGardenSlotMeshComponentForInteraction(UStaticMesh* PlantMesh);                                   // [0x22f93c0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.InteractionComponent.PickupItemOnServer
	void PickupItemOnServer(UMeshComponent* MeshComponent, FMeshInstanceId InstanceId, UStaticMesh* StaticMesh, FVector pickupLocation, EPickupItemOperation Operation); // [0x22f9170] Net|NetReliableNative|Event|Public|NetServer|HasDefaults 
	// Function /Script/ConZ.InteractionComponent.PickupItemOnClients
	void PickupItemOnClients(UMeshComponent* MeshComponent, FMeshInstanceId InstanceId, UStaticMesh* StaticMesh, FVector pickupLocation); // [0x22f9000] Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults 
	// Function /Script/ConZ.InteractionComponent.OpenItemOnServer
	void OpenItemOnServer(AFoodItem* FoodItem, AItem* openingItem);                                                          // [0x22f8f30] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.InteractionComponent.OnRep_PickupSpawnedItem
	void OnRep_PickupSpawnedItem();                                                                                          // [0x22f8f10] Final|Native|Private 
	// Function /Script/ConZ.InteractionComponent.OnRep_ExamineSpawnedItems
	void OnRep_ExamineSpawnedItems();                                                                                        // [0x22f8ef0] Final|Native|Private 
	// Function /Script/ConZ.InteractionComponent.NetMulticast_UpdateLockHPOnClients
	void NetMulticast_UpdateLockHPOnClients(UObject* Lockpickable, float lockHP);                                            // [0x22f8d70] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.InteractionComponent.FinishPickupItemOnServer
	void FinishPickupItemOnServer();                                                                                         // [0x22f7ff0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.InteractionComponent.FinishExaminePrisonerOnServer
	void FinishExaminePrisonerOnServer(APrisoner* Prisoner);                                                                 // [0x22f7f60] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.InteractionComponent.FinishExamineObjectOnServer
	void FinishExamineObjectOnServer();                                                                                      // [0x22f7f40] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.InteractionComponent.FillWaterOnServer
	void FillWaterOnServer(AItem* Item, float Ratio, float Salinity, UClass* ResourceType);                                  // [0x22f7df0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.InteractionComponent.ExecuteInteractionOnServer
	void ExecuteInteractionOnServer(AItem* interactionItem, EInteractionType Interaction, FServerCraftableItem CraftableItem); // [0x22f7a10] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.InteractionComponent.ExaminePrisonerOnServer
	void ExaminePrisonerOnServer(APrisoner* Prisoner);                                                                       // [0x2260610] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.InteractionComponent.ExamineObjectOnServer
	void ExamineObjectOnServer(UMeshComponent* MeshComponent, FMeshInstanceId InstanceId, FVector instanceLocation, UObject* Spawner); // [0x22f78a0] Net|NetReliableNative|Event|Public|NetServer|HasDefaults 
	// Function /Script/ConZ.InteractionComponent.CutObjectOnServer
	void CutObjectOnServer(AActor* Actor, UMeshComponent* MeshComponent, FMeshInstanceId InstanceId, FVector Location, bool collectOnly); // [0x22f76d0] Net|NetReliableNative|Event|Public|NetServer|HasDefaults 
	// Function /Script/ConZ.InteractionComponent.CutObjectOnClients
	void CutObjectOnClients(UMeshComponent* MeshComponent, FMeshInstanceId InstanceId);                                      // [0x22f75f0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.InteractionComponent.CraftItemOnServer
	void CraftItemOnServer(FServerCraftableItem CraftableItem);                                                              // [0x22f72a0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.InteractionComponent.Client_SendGroundSearchLocation
	void Client_SendGroundSearchLocation(FVector Location);                                                                  // [0x22f7210] Net|NetReliableNative|Event|Public|HasDefaults|NetClient 
	// Function /Script/ConZ.InteractionComponent.ChopOnServer
	void ChopOnServer(UObject* choppedObject);                                                                               // [0x22f7180] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.InteractionComponent.CheckExistenceOnServer
	void CheckExistenceOnServer(UMeshComponent* MeshComponent, FMeshInstanceId InstanceId);                                  // [0x22f70a0] Net|NetReliableNative|Event|Public|NetServer 
};

/// Class /Script/ConZ.InteractionContainerUserWidget
/// Size: 0x0058 (0x000260 - 0x0002B8)
class UInteractionContainerUserWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UVerticalBox*                                      _actionContainer;                                           // 0x0278   (0x0008)  
	unsigned char                                      UnknownData01_5[0xC];                                       // 0x0280   (0x000C)  MISSED
	TWeakObjectPtr<AActor*>                            _underlyingInteractableActor;                               // 0x028C   (0x0008)  
	unsigned char                                      UnknownData02_5[0x1C];                                      // 0x0294   (0x001C)  MISSED
	UPrisonerTreatmentUIController*                    _uiController;                                              // 0x02B0   (0x0008)  


	/// Functions
	// Function /Script/ConZ.InteractionContainerUserWidget.RemoveActiveInteractionWidget
	void RemoveActiveInteractionWidget(APlayerController* PlayerController);                                                 // [0x22f9340] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/ConZ.InteractionContainerUserWidget.InteractableDestroyed
	void InteractableDestroyed(AActor* interactable);                                                                        // [0x22f8c10] Final|Native|Public  
};

/// Class /Script/ConZ.InteractionGroupUserWidget
/// Size: 0x0020 (0x000260 - 0x000280)
class UInteractionGroupUserWidget : public UUserWidget
{ 
public:
	UTextBlock*                                        _groupText;                                                 // 0x0260   (0x0008)  
	UBorder*                                           _groupBorder;                                               // 0x0268   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0270   (0x0010)  MISSED
};

/// Class /Script/ConZ.InteractionObject
/// Size: 0x0000 (0x000028 - 0x000028)
class UInteractionObject : public UInterface
{ 
public:
};

/// Class /Script/ConZ.InteractionUserWidget
/// Size: 0x0090 (0x000260 - 0x0002F0)
class UInteractionUserWidget : public UUserWidget
{ 
public:
	UTextBlock*                                        _actionText;                                                // 0x0260   (0x0008)  
	UButton*                                           _actionButton;                                              // 0x0268   (0x0008)  
	unsigned char                                      UnknownData00_6[0x80];                                      // 0x0270   (0x0080)  MISSED


	/// Functions
	// Function /Script/ConZ.InteractionUserWidget.Interact
	void Interact();                                                                                                         // [0x22fecc0] Final|Native|Public  
};

/// Class /Script/ConZ.InteractiveIngredientWidget
/// Size: 0x00D8 (0x000260 - 0x000338)
class UInteractiveIngredientWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x38];                                      // 0x0260   (0x0038)  MISSED
	UWidgetSwitcher*                                   _mainSwitcher;                                              // 0x0298   (0x0008)  
	UImage*                                            _ingredientIcon;                                            // 0x02A0   (0x0008)  
	UImage*                                            _overlayHighlight;                                          // 0x02A8   (0x0008)  
	UWidgetSwitcher*                                   _quantitySwitcher;                                          // 0x02B0   (0x0008)  
	UTextBlock*                                        _useAmountText;                                             // 0x02B8   (0x0008)  
	UTextBlock*                                        _currentVolumeTextBlock;                                    // 0x02C0   (0x0008)  
	UTextBlock*                                        _requiredVolumeTextBlock;                                   // 0x02C8   (0x0008)  
	UImage*                                            _mainIngredientIndication;                                  // 0x02D0   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x02D8   (0x0004)  MISSED
	FLinearColor                                       _unacceptableItemDraggedColor;                              // 0x02DC   (0x0010)  
	FLinearColor                                       _acceptableItemDraggedColor;                                // 0x02EC   (0x0010)  
	FLinearColor                                       _defaultBorderColor;                                        // 0x02FC   (0x0010)  
	float                                              _uncoloredVignetteExponent;                                 // 0x030C   (0x0004)  
	float                                              _coloredVignetteExponent;                                   // 0x0310   (0x0004)  
	FLinearColor                                       _mainIngredientTriangleColor;                               // 0x0314   (0x0010)  
	FLinearColor                                       _optionalIngredientTriangleColor;                           // 0x0324   (0x0010)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0334   (0x0004)  MISSED
};

/// Class /Script/ConZ.InteriorCharacterSpawnerComponent
/// Size: 0x0000 (0x000230 - 0x000230)
class UInteriorCharacterSpawnerComponent : public UCharacterSpawnerComponent
{ 
public:
};

/// Class /Script/ConZ.InteriorStaticMeshComponent
/// Size: 0x0000 (0x0004E0 - 0x0004E0)
class UInteriorStaticMeshComponent : public UStaticMeshComponent
{ 
public:
};

/// Class /Script/ConZ.Inv2021_InventoryContainer
/// Size: 0x0000 (0x000028 - 0x000028)
class UInv2021_InventoryContainer : public UInterface
{ 
public:
};

/// Class /Script/ConZ.Inv2021_InventoryContainerClothes
/// Size: 0x00A0 (0x000028 - 0x0000C8)
class UInv2021_InventoryContainerClothes : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x38];                                      // 0x0028   (0x0038)  MISSED
	TArray<FInventoryContainerClothesElement>          _replicatedData;                                            // 0x0060   (0x0010)  
	unsigned char                                      UnknownData01_6[0x58];                                      // 0x0070   (0x0058)  MISSED


	/// Functions
	// Function /Script/ConZ.Inv2021_InventoryContainerClothes.OnRep_ReplicatedData
	void OnRep_ReplicatedData();                                                                                             // [0x22ff1f0] Final|Native|Private 
};

/// Class /Script/ConZ.Inv2021_InventoryElement
/// Size: 0x0000 (0x000028 - 0x000028)
class UInv2021_InventoryElement : public UInterface
{ 
public:
};

/// Class /Script/ConZ.Inv2021_ActorInventoryElement
/// Size: 0x0030 (0x000028 - 0x000058)
class UInv2021_ActorInventoryElement : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x0028   (0x0030)  MISSED
};

/// Class /Script/ConZ.Inv2021_VirtualizedInventoryElement
/// Size: 0x0030 (0x000028 - 0x000058)
class UInv2021_VirtualizedInventoryElement : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x0028   (0x0030)  MISSED
};

/// Class /Script/ConZ.Inv2021_InventoryPositionObject
/// Size: 0x0000 (0x000028 - 0x000028)
class UInv2021_InventoryPositionObject : public UObject
{ 
public:
};

/// Class /Script/ConZ.Inv2021_InventoryPosition2DObject
/// Size: 0x0018 (0x000028 - 0x000040)
class UInv2021_InventoryPosition2DObject : public UInv2021_InventoryPositionObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0028   (0x0018)  MISSED
};

/// Class /Script/ConZ.Inv2021_InventoryPositionClothesObject
/// Size: 0x0010 (0x000028 - 0x000038)
class UInv2021_InventoryPositionClothesObject : public UInv2021_InventoryPositionObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0028   (0x0010)  MISSED
};

/// Class /Script/ConZ.Inv2021_InventoryStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UInv2021_InventoryStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.InventoryCentralPanel
/// Size: 0x0010 (0x000260 - 0x000270)
class UInventoryCentralPanel : public UTabMenuPanel
{ 
public:
	UVicinityPanel3*                                   _vicinityPanel;                                             // 0x0260   (0x0008)  
	UVicinityContainer3*                               _vicinityContainer;                                         // 0x0268   (0x0008)  
};

/// Class /Script/ConZ.InventoryPositionData
/// Size: 0x0000 (0x000028 - 0x000028)
class UInventoryPositionData : public UObject
{ 
public:
};

/// Class /Script/ConZ.InventoryContainer
/// Size: 0x0000 (0x000028 - 0x000028)
class UInventoryContainer : public UInterface
{ 
public:
};

/// Class /Script/ConZ.InventorySizeData
/// Size: 0x0000 (0x000028 - 0x000028)
class UInventorySizeData : public UObject
{ 
public:
};

/// Class /Script/ConZ.InventorySizeData2D
/// Size: 0x0018 (0x000028 - 0x000040)
class UInventorySizeData2D : public UInventorySizeData
{ 
public:
	int32_t                                            SizeX;                                                      // 0x0028   (0x0004)  
	int32_t                                            SizeY;                                                      // 0x002C   (0x0004)  
	TArray<bool>                                       Bitmask;                                                    // 0x0030   (0x0010)  
};

/// Class /Script/ConZ.InventoryPositionData2D
/// Size: 0x0010 (0x000028 - 0x000038)
class UInventoryPositionData2D : public UInventoryPositionData
{ 
public:
	int32_t                                            PositionX;                                                  // 0x0028   (0x0004)  
	int32_t                                            PositionY;                                                  // 0x002C   (0x0004)  
	char                                               Rotation;                                                   // 0x0030   (0x0001)  
	bool                                               IsLoading;                                                  // 0x0031   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0032   (0x0006)  MISSED
};

/// Class /Script/ConZ.InventoryContainer2D
/// Size: 0x0090 (0x0000B0 - 0x000140)
class UInventoryContainer2D : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00B0   (0x0008)  MISSED
	FInventoryContainer2DRepData                       _data;                                                      // 0x00B8   (0x0020)  
	FInventoryContainer2DRepData                       _oldData;                                                   // 0x00D8   (0x0020)  
	TScriptInterface<Class>                            _parent;                                                    // 0x00F8   (0x0010)  
	TArray<UInventoryContainerWidget2*>                _widgets;                                                   // 0x0108   (0x0010)  
	TArray<bool>                                       _grid;                                                      // 0x0118   (0x0010)  
	TArray<bool>                                       _gridDamaged;                                               // 0x0128   (0x0010)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0138   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.InventoryContainer2D.OnRep_Parent
	void OnRep_Parent();                                                                                                     // [0x22ff1b0] Final|Native|Private 
	// Function /Script/ConZ.InventoryContainer2D.OnRep_Items
	void OnRep_Items(TArray<UObject*> _oldItems);                                                                            // [0x22fefd0] Final|Native|Private 
	// Function /Script/ConZ.InventoryContainer2D.OnRep_Data
	void OnRep_Data();                                                                                                       // [0x22fee00] Final|Native|Private 
	// Function /Script/ConZ.InventoryContainer2D.OnActorItemDestroyed
	void OnActorItemDestroyed(AActor* Actor);                                                                                // [0x22fece0] Final|Native|Private 
};

/// Class /Script/ConZ.InventoryContainer2DLight
/// Size: 0x0000 (0x000140 - 0x000140)
class UInventoryContainer2DLight : public UInventoryContainer2D
{ 
public:
};

/// Class /Script/ConZ.InventoryPositionDataClothes
/// Size: 0x0008 (0x000028 - 0x000030)
class UInventoryPositionDataClothes : public UInventoryPositionData
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.InventoryContainerClothes
/// Size: 0x0068 (0x000028 - 0x000090)
class UInventoryContainerClothes : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	UInventoryContainerWidget2*                        _widget;                                                    // 0x0030   (0x0008)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x0038   (0x0010)  MISSED
	FInventoryContainerClothesData                     _data;                                                      // 0x0048   (0x0020)  
	FInventoryContainerClothesData                     _oldData;                                                   // 0x0068   (0x0020)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0088   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.InventoryContainerClothes.OnRep_Data
	void OnRep_Data();                                                                                                       // [0x22fee20] Final|Native|Private 
};

/// Class /Script/ConZ.InventoryPositionDataHandsHolsters
/// Size: 0x0008 (0x000028 - 0x000030)
class UInventoryPositionDataHandsHolsters : public UInventoryPositionData
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.InventoryContainerHandsHolsters
/// Size: 0x0090 (0x000028 - 0x0000B8)
class UInventoryContainerHandsHolsters : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	UInventoryContainerWidget2*                        _handWidget;                                                // 0x0030   (0x0008)  
	UInventoryContainerWidget2*                        _shoulderLeftWidget;                                        // 0x0038   (0x0008)  
	UInventoryContainerWidget2*                        _shoulderRightWidget;                                       // 0x0040   (0x0008)  
	UInventoryContainerWidget2*                        _tradingHandWidget;                                         // 0x0048   (0x0008)  
	UInventoryContainerWidget2*                        _tradingShoulderLeftWidget;                                 // 0x0050   (0x0008)  
	UInventoryContainerWidget2*                        _tradingShoulderRightWidget;                                // 0x0058   (0x0008)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x0060   (0x0010)  MISSED
	FInventoryContainerHandsHolstersData               _data;                                                      // 0x0070   (0x0020)  
	FInventoryContainerHandsHolstersData               _oldData;                                                   // 0x0090   (0x0020)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x00B0   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.InventoryContainerHandsHolsters.OnRep_Data
	void OnRep_Data();                                                                                                       // [0x22fee40] Final|Native|Private 
};

/// Class /Script/ConZ.InventoryPositionDataSelection
/// Size: 0x0008 (0x000028 - 0x000030)
class UInventoryPositionDataSelection : public UInventoryPositionData
{ 
public:
	int32_t                                            position;                                                   // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Class /Script/ConZ.InventoryContainerSelection
/// Size: 0x0090 (0x000028 - 0x0000B8)
class UInventoryContainerSelection : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	int32_t                                            _maxNumOfItems;                                             // 0x0030   (0x0004)  
	unsigned char                                      UnknownData01_5[0x14];                                      // 0x0034   (0x0014)  MISSED
	TArray<UObject*>                                   _itemsRep;                                                  // 0x0048   (0x0010)  
	unsigned char                                      UnknownData02_5[0x10];                                      // 0x0058   (0x0010)  MISSED
	UObject*                                           _parentRep;                                                 // 0x0068   (0x0008)  
	FInventoryContainerSelectionRepData                _data;                                                      // 0x0070   (0x0028)  
	TArray<UInventoryContainerWidget2*>                _widgets;                                                   // 0x0098   (0x0010)  
	UInventoryContainerWidget2*                        _widget;                                                    // 0x00A8   (0x0008)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x00B0   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.InventoryContainerSelection.OnRep_Parent
	void OnRep_Parent();                                                                                                     // [0x22ff1d0] Final|Native|Private 
	// Function /Script/ConZ.InventoryContainerSelection.OnRep_Items
	void OnRep_Items(TArray<UObject*> _oldItems);                                                                            // [0x22ff0c0] Final|Native|Private 
	// Function /Script/ConZ.InventoryContainerSelection.OnRep_Data
	void OnRep_Data(FInventoryContainerSelectionRepData OldData);                                                            // [0x22fee60] Final|Native|Private 
	// Function /Script/ConZ.InventoryContainerSelection.OnItemDestroyed
	void OnItemDestroyed(AActor* Actor);                                                                                     // [0x22fed70] Final|Native|Private 
};

/// Class /Script/ConZ.InventoryItemWidget2Test
/// Size: 0x0010 (0x000260 - 0x000270)
class UInventoryItemWidget2Test : public UUserWidget
{ 
public:
	UImage*                                            _itemIcon;                                                  // 0x0260   (0x0008)  
	UTextBlock*                                        _itemCaption;                                               // 0x0268   (0x0008)  
};

/// Class /Script/ConZ.InventoryContainerWidget2Test
/// Size: 0x0078 (0x000260 - 0x0002D8)
class UInventoryContainerWidget2Test : public UInventoryContainerWidget2
{ 
public:
	UImage*                                            _itemIcon;                                                  // 0x0260   (0x0008)  
	UTextBlock*                                        _itemCaption;                                               // 0x0268   (0x0008)  
	UVerticalBox*                                      _itemContainer;                                             // 0x0270   (0x0008)  
	unsigned char                                      UnknownData00_6[0x60];                                      // 0x0278   (0x0060)  MISSED
};

/// Class /Script/ConZ.InventoryPanelWidget2Test
/// Size: 0x0058 (0x000260 - 0x0002B8)
class UInventoryPanelWidget2Test : public UInventoryContainerWidget2
{ 
public:
	UScrollBox*                                        _itemContainer;                                             // 0x0260   (0x0008)  
	unsigned char                                      UnknownData00_6[0x50];                                      // 0x0268   (0x0050)  MISSED
};

/// Class /Script/ConZ.InventoryGridWidget
/// Size: 0x0008 (0x000260 - 0x000268)
class UInventoryGridWidget : public UUserWidget
{ 
public:
	UImage*                                            _image;                                                     // 0x0260   (0x0008)  
};

/// Class /Script/ConZ.InventoryItemData
/// Size: 0x0000 (0x000030 - 0x000030)
class UInventoryItemData : public UDataAsset
{ 
public:
};

/// Class /Script/ConZ.InventoryItemDataDescription
/// Size: 0x0030 (0x000030 - 0x000060)
class UInventoryItemDataDescription : public UInventoryItemData
{ 
public:
	FText                                              Name;                                                       // 0x0030   (0x0018)  
	FText                                              Description;                                                // 0x0048   (0x0018)  
};

/// Class /Script/ConZ.InventoryItemDataIcon
/// Size: 0x0008 (0x000030 - 0x000038)
class UInventoryItemDataIcon : public UInventoryItemData
{ 
public:
	UTexture2D*                                        Icon;                                                       // 0x0030   (0x0008)  
};

/// Class /Script/ConZ.InventoryItemData2D
/// Size: 0x0008 (0x000030 - 0x000038)
class UInventoryItemData2D : public UInventoryItemData
{ 
public:
	int32_t                                            SizeX;                                                      // 0x0030   (0x0004)  
	int32_t                                            SizeY;                                                      // 0x0034   (0x0004)  
};

/// Class /Script/ConZ.InventoryItem
/// Size: 0x0000 (0x000028 - 0x000028)
class UInventoryItem : public UInterface
{ 
public:
};

/// Class /Script/ConZ.InventoryItemComponentState
/// Size: 0x0028 (0x000040 - 0x000068)
class UInventoryItemComponentState : public UItemComponentStateBase
{ 
public:
	TArray<FDbIntegerId>                               ContainedElementsIds;                                       // 0x0040   (0x0010)  
	TArray<FInv2021_InventoryPosition2D>               ContainedElementsPositions;                                 // 0x0050   (0x0010)  
	float                                              ContainedItemsWeight;                                       // 0x0060   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0064   (0x0004)  MISSED
};

/// Class /Script/ConZ.InventoryItemComponent
/// Size: 0x00B8 (0x0000C8 - 0x000180)
class UInventoryItemComponent : public UItemComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00C8   (0x0008)  MISSED
	int32_t                                            _sizeX;                                                     // 0x00D0   (0x0004)  
	int32_t                                            _sizeY;                                                     // 0x00D4   (0x0004)  
	int32_t                                            _maxRowsPerPage;                                            // 0x00D8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x14];                                      // 0x00DC   (0x0014)  MISSED
	TArray<UInventoryItemComponentReplicatedPage*>     _replicatedPages;                                           // 0x00F0   (0x0010)  
	unsigned char                                      UnknownData02_6[0x80];                                      // 0x0100   (0x0080)  MISSED


	/// Functions
	// Function /Script/ConZ.InventoryItemComponent.OnRep_ReplicatedPages
	void OnRep_ReplicatedPages();                                                                                            // [0x22ff210] Final|Native|Private 
};

/// Class /Script/ConZ.InventoryItemComponentReplicatedPage
/// Size: 0x0020 (0x000028 - 0x000048)
class UInventoryItemComponentReplicatedPage : public UObject
{ 
public:
	FInventoryItemComponentReplicatedPageData          Data;                                                       // 0x0028   (0x0018)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0040   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.InventoryItemComponentReplicatedPage.OnRep_Data
	void OnRep_Data();                                                                                                       // [0x22fefb0] Final|Native|Private 
};

/// Class /Script/ConZ.InventoryNode
/// Size: 0x0000 (0x000028 - 0x000028)
class UInventoryNode : public UInterface
{ 
public:
};

/// Class /Script/ConZ.InventoryPanelSideLayerWidget
/// Size: 0x0008 (0x000260 - 0x000268)
class UInventoryPanelSideLayerWidget : public UUserWidget
{ 
public:
	UItemWidget2*                                      _itemWidget;                                                // 0x0260   (0x0008)  
};

/// Class /Script/ConZ.InventoryPanelThirdIteration
/// Size: 0x0180 (0x000260 - 0x0003E0)
class UInventoryPanelThirdIteration : public UTabMenuPanel
{ 
public:
	UHandsHolstersWidget2*                             Hands;                                                      // 0x0260   (0x0008)  
	UHandsHolstersWidget2*                             LeftHolster;                                                // 0x0268   (0x0008)  
	UHandsHolstersWidget2*                             RightHolster;                                               // 0x0270   (0x0008)  
	TWeakObjectPtr<ACharacter*>                        _displayedCharacter;                                        // 0x0278   (0x0008)  
	UTabContainer*                                     _tabRow;                                                    // 0x0280   (0x0008)  
	UScrollBox*                                        _inventoriesScrollBox;                                      // 0x0288   (0x0008)  
	UVerticalBox*                                      _nonContainerBox;                                           // 0x0290   (0x0008)  
	UVerticalBox*                                      _nonTradingBits;                                            // 0x0298   (0x0008)  
	UVerticalBox*                                      _tradingBits;                                               // 0x02A0   (0x0008)  
	UWidgetSwitcher*                                   _inventoryAndHolstersSwitcher;                              // 0x02A8   (0x0008)  
	UWidgetSwitcher*                                   _inventoryTradingSwitcher;                                  // 0x02B0   (0x0008)  
	UTextBlock*                                        _playerName;                                                // 0x02B8   (0x0008)  
	UImage*                                            _availabilityOverlayImage;                                  // 0x02C0   (0x0008)  
	TMap<TWeakObjectPtr, UItemInventoryWidget2*>       _inventories;                                               // 0x02C8   (0x0050)  
	TMap<TWeakObjectPtr, UInventoryPanelSideLayerWidget*> _sideLayers;                                             // 0x0318   (0x0050)  
	TMap<TWeakObjectPtr, UItemWidget2*>                _nonContainerItems;                                         // 0x0368   (0x0050)  
	FMargin                                            _nonContainerItemsPadding;                                  // 0x03B8   (0x0010)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x03C8   (0x0018)  MISSED
};

/// Class /Script/ConZ.InventoryPanelWidget2
/// Size: 0x0000 (0x000260 - 0x000260)
class UInventoryPanelWidget2 : public UUserWidget
{ 
public:
};

/// Class /Script/ConZ.InventorySlotUserWidget
/// Size: 0x0020 (0x000260 - 0x000280)
class UInventorySlotUserWidget : public UUserWidget
{ 
public:
	bool                                               HasItem;                                                    // 0x0260   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0261   (0x0007)  MISSED
	UImage*                                            ImageWidget;                                                // 0x0268   (0x0008)  
	USizeBox*                                          SizeBoxWrapper;                                             // 0x0270   (0x0008)  
	UBaseItemContainerWidget*                          ParentContainerWidget;                                      // 0x0278   (0x0008)  


	/// Functions
	// Function /Script/ConZ.InventorySlotUserWidget.OnDraggedItemPreRotated
	void OnDraggedItemPreRotated(UItemWidget2* Widget);                                                                      // [0x23045b0] Final|Native|Protected 
	// Function /Script/ConZ.InventorySlotUserWidget.OnDraggedItemPostRotated
	void OnDraggedItemPostRotated(UItemWidget2* Widget);                                                                     // [0x2304520] Final|Native|Protected 
};

/// Class /Script/ConZ.IsUnmountedOrMountedOnGroundCondition
/// Size: 0x0008 (0x000028 - 0x000030)
class UIsUnmountedOrMountedOnGroundCondition : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.ItemActionDescription
/// Size: 0x0000 (0x000028 - 0x000028)
class UItemActionDescription : public UObject
{ 
public:
};

/// Class /Script/ConZ.ItemAction
/// Size: 0x0028 (0x000028 - 0x000050)
class UItemAction : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0028   (0x0018)  MISSED
	UItemActionDescription*                            _description;                                               // 0x0040   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0048   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.ItemAction.IsStandAloneOrOwningClient
	bool IsStandAloneOrOwningClient();                                                                                       // [0x23095a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ItemAction.GetItem
	AItem* GetItem();                                                                                                        // [0x2309470] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ItemAction.End
	void End(bool Regular);                                                                                                  // [0x2309370] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.ItemAction.CanBeSelected
	bool CanBeSelected(UItemActionDescription* Description);                                                                 // [0x2309140] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.ItemAction.CanBegin
	bool CanBegin();                                                                                                         // [0x11312d0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.ItemAction.Begin
	float Begin();                                                                                                           // [0x23090d0] Native|Event|Public|BlueprintEvent 
};

/// Class /Script/ConZ.ItemActionSequenceDescription
/// Size: 0x0008 (0x000028 - 0x000030)
class UItemActionSequenceDescription : public UItemActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.ItemActionSequence
/// Size: 0x0038 (0x000050 - 0x000088)
class UItemActionSequence : public UItemAction
{ 
public:
	bool                                               _canBeCanceled;                                             // 0x0050   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0051   (0x0007)  MISSED
	FCharacterAndItemAnimation                         _animations;                                                // 0x0058   (0x0010)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x0068   (0x0020)  MISSED


	/// Functions
	// Function /Script/ConZ.ItemActionSequence.StopAnimation
	void StopAnimation();                                                                                                    // [0x230a320] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ItemActionSequence.SetNextAnimationSectionFromPrevious
	void SetNextAnimationSectionFromPrevious(FName& previousSection, FName& NextSection);                                    // [0x230a240] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.ItemActionSequence.SetNextAnimationSection
	void SetNextAnimationSection(FName& Section, bool allowLoop);                                                            // [0x230a160] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.ItemActionSequence.PlayAnimation
	float PlayAnimation(ACharacter* Character, float PlayRate, FName& startSection, bool assignCallbacks);                   // [0x2309fe0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.ItemActionSequence.OnMontageEnded
	void OnMontageEnded(UAnimMontage* Montage, bool interrupted);                                                            // [0x2309a20] Native|Protected     
	// Function /Script/ConZ.ItemActionSequence.OnMontageBlendingOutStarted
	void OnMontageBlendingOutStarted(UAnimMontage* Montage, bool interrupted);                                               // [0x2309950] Native|Protected     
	// Function /Script/ConZ.ItemActionSequence.OnAnimNotify
	void OnAnimNotify(ECharacterActionNotifyType notifyType);                                                                // [0x23097b0] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.ItemActionSequence.JumpToAnimationSection
	void JumpToAnimationSection(FName& Section);                                                                             // [0x23095d0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.ItemActionSequence.IsPlayingAnimation
	bool IsPlayingAnimation();                                                                                               // [0x2309570] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ItemActionSequence.GetPlayingAnimations
	FCharacterActionAnimationDescription GetPlayingAnimations();                                                             // [0x2309530] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ItemActionSequence.GetNumberOfPendingNotifiesInCurrentSection
	int32_t GetNumberOfPendingNotifiesInCurrentSection(ECharacterActionNotifyType notifyType);                               // [0x23094a0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ItemActionSequence.GetAnimations
	FCharacterAndItemAnimation GetAnimations();                                                                              // [0x2309400] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ItemActionSequence.CanEverBeCanceled
	bool CanEverBeCanceled();                                                                                                // [0x23091e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.ItemActionSequence.Cancel
	void Cancel(bool Regular);                                                                                               // [0x2309210] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ItemActionSequence.CanBeCanceled
	bool CanBeCanceled();                                                                                                    // [0x2309110] Native|Event|Public|BlueprintEvent|Const 
};

/// Class /Script/ConZ.ItemActionDescriptionLoadMagazine
/// Size: 0x0018 (0x000030 - 0x000048)
class UItemActionDescriptionLoadMagazine : public UItemActionSequenceDescription
{ 
public:
	int32_t                                            RequestedAmmoCount;                                         // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	AAmmunitionItem*                                   ammoItem;                                                   // 0x0038   (0x0008)  
	float                                              PlayRate;                                                   // 0x0040   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Class /Script/ConZ.ItemActionSequenceLoadMagazine
/// Size: 0x0008 (0x000088 - 0x000090)
class UItemActionSequenceLoadMagazine : public UItemActionSequence
{ 
public:
	int32_t                                            _loadedAmmoCount;                                           // 0x0088   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x008C   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.ItemActionSequenceLoadMagazine.GetEndSectionName
	FName GetEndSectionName();                                                                                               // [0x2309430] Native|Event|Public|BlueprintEvent|Const 
};

/// Class /Script/ConZ.ItemActionSequenceLoadMagazine_M1Clip
/// Size: 0x0000 (0x000090 - 0x000090)
class UItemActionSequenceLoadMagazine_M1Clip : public UItemActionSequenceLoadMagazine
{ 
public:
};

/// Class /Script/ConZ.ItemActionSequenceLoadMagazine_RPKDrum
/// Size: 0x0008 (0x000090 - 0x000098)
class UItemActionSequenceLoadMagazine_RPKDrum : public UItemActionSequenceLoadMagazine
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0090   (0x0008)  MISSED
};

/// Class /Script/ConZ.ItemClassWidget
/// Size: 0x0020 (0x000260 - 0x000280)
class UItemClassWidget : public UUserWidget
{ 
public:
	UImage*                                            BackgroundImage;                                            // 0x0260   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0268   (0x0008)  MISSED
	UImage*                                            MainImage;                                                  // 0x0270   (0x0008)  
	bool                                               BackgroundVisible;                                          // 0x0278   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0279   (0x0007)  MISSED
};

/// Class /Script/ConZ.ItemContainer
/// Size: 0x0130 (0x000220 - 0x000350)
class AItemContainer : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0220   (0x0030)  MISSED
	USceneComponent*                                   _rootComponent;                                             // 0x0250   (0x0008)  
	bool                                               _canBeForceUnlocked;                                        // 0x0258   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0259   (0x0003)  MISSED
	float                                              _forceUnlockTime;                                           // 0x025C   (0x0004)  
	float                                              _forceUnlockMovementAcceptanceRadius;                       // 0x0260   (0x0004)  
	unsigned char                                      UnknownData02_5[0xC];                                       // 0x0264   (0x000C)  MISSED
	FUnlockLocation                                    _unlockPositionMarker;                                      // 0x0270   (0x0030)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x02A0   (0x0008)  MISSED
	TArray<UClass*>                                    _upgradeItemsClasses;                                       // 0x02A8   (0x0010)  
	TArray<ULockData*>                                 _lockData;                                                  // 0x02B8   (0x0010)  
	unsigned char                                      UnknownData04_5[0x10];                                      // 0x02C8   (0x0010)  MISSED
	TArray<UClass*>                                    _originalUpgradeItemClasses;                                // 0x02D8   (0x0010)  
	TArray<ULockData*>                                 _originalLockData;                                          // 0x02E8   (0x0010)  
	bool                                               _ignoreServerSettings;                                      // 0x02F8   (0x0001)  
	unsigned char                                      UnknownData05_5[0x28];                                      // 0x02F9   (0x0028)  MISSED
	bool                                               _disableSerialization;                                      // 0x0321   (0x0001)  
	bool                                               _shouldBeResetOnNewSession;                                 // 0x0322   (0x0001)  
	unsigned char                                      UnknownData06_5[0x1];                                       // 0x0323   (0x0001)  MISSED
	FGameplayTag                                       _famePointAwardTag;                                         // 0x0324   (0x0008)  
	unsigned char                                      UnknownData07_6[0x24];                                      // 0x032C   (0x0024)  MISSED
};

/// Class /Script/ConZ.ItemContainerManager
/// Size: 0x0160 (0x000220 - 0x000380)
class AItemContainerManager : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x48];                                      // 0x0220   (0x0048)  MISSED
	TMap<AItemContainer*, FBox2D>                      _itemContainers;                                            // 0x0268   (0x0050)  
	TMap<FDbIntegerId, FItemContainersArray>           _itemContainersOwned;                                       // 0x02B8   (0x0050)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0308   (0x0008)  MISSED
	FItemContainersReplicationHelper                   _itemContainersDataRepHelper;                               // 0x0310   (0x0070)  


	/// Functions
	// Function /Script/ConZ.ItemContainerManager.NetMulticast_UpdateItemContainerData
	void NetMulticast_UpdateItemContainerData(int32_t dataVersion, FString runtimeId, FItemContainerRepData ItemContainerData); // [0x2309660] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/ConZ.ItemDropPlaceholder
/// Size: 0x0068 (0x000220 - 0x000288)
class AItemDropPlaceholder : public AActor
{ 
public:
	USceneComponent*                                   _rootComponent;                                             // 0x0220   (0x0008)  
	UBoxComponent*                                     _boxCollisionComponent;                                     // 0x0228   (0x0008)  
	UStaticMeshComponent*                              _staticMeshComponent;                                       // 0x0230   (0x0008)  
	USkeletalMeshComponent*                            _skeletalMeshComponent;                                     // 0x0238   (0x0008)  
	unsigned char                                      UnknownData00_6[0x48];                                      // 0x0240   (0x0048)  MISSED
};

/// Class /Script/ConZ.ItemGroup
/// Size: 0x0010 (0x000030 - 0x000040)
class UItemGroup : public UDataAsset
{ 
public:
	TArray<UClass*>                                    Items;                                                      // 0x0030   (0x0010)  
};

/// Class /Script/ConZ.ItemInventoryDepotWidget2
/// Size: 0x0080 (0x000260 - 0x0002E0)
class UItemInventoryDepotWidget2 : public UInventoryContainerWidget2
{ 
public:
	UInventoryContainer2D*                             _container;                                                 // 0x0260   (0x0008)  
	UCanvasPanel*                                      _inventoryCanvas;                                           // 0x0268   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0270   (0x0008)  MISSED
	TScriptInterface<Class>                            _item;                                                      // 0x0278   (0x0010)  
	UGridPanel*                                        _inventoryGrid;                                             // 0x0288   (0x0008)  
	UWidget*                                           _loadingWidget;                                             // 0x0290   (0x0008)  
	UInventoryGridWidget*                              _inventoryGridWidget;                                       // 0x0298   (0x0008)  
	UHorizontalBox*                                    _contentBox;                                                // 0x02A0   (0x0008)  
	TArray<UInventorySlotUserWidget*>                  _slotsWidgets;                                              // 0x02A8   (0x0010)  
	UWidgetAnimation*                                  BlinkAnim;                                                  // 0x02B8   (0x0008)  
	URetainerBox*                                      RetainerBoxDeadCells;                                       // 0x02C0   (0x0008)  
	bool                                               _canMinimize;                                               // 0x02C8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x17];                                      // 0x02C9   (0x0017)  MISSED


	/// Functions
	// Function /Script/ConZ.ItemInventoryDepotWidget2.OnExpandToggleClicked
	void OnExpandToggleClicked(bool checked);                                                                                // [0x2309830] Final|Native|Private 
};

/// Class /Script/ConZ.ItemInventoryWidget2
/// Size: 0x0098 (0x000260 - 0x0002F8)
class UItemInventoryWidget2 : public UInventoryContainerWidget2
{ 
public:
	UInventoryContainer2D*                             _container;                                                 // 0x0260   (0x0008)  
	UCanvasPanel*                                      _inventoryCanvas;                                           // 0x0268   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0270   (0x0008)  MISSED
	TScriptInterface<Class>                            _item;                                                      // 0x0278   (0x0010)  
	UTextBlock*                                        _nameText;                                                  // 0x0288   (0x0008)  
	UItemWidget2*                                      _itemWidget;                                                // 0x0290   (0x0008)  
	UGridPanel*                                        _inventoryGrid;                                             // 0x0298   (0x0008)  
	UWidget*                                           _loadingWidget;                                             // 0x02A0   (0x0008)  
	UInventoryGridWidget*                              _inventoryGridWidget;                                       // 0x02A8   (0x0008)  
	UHorizontalBox*                                    _contentBox;                                                // 0x02B0   (0x0008)  
	UCheckBox*                                         _expandToggle;                                              // 0x02B8   (0x0008)  
	TArray<UInventorySlotUserWidget*>                  _slotsWidgets;                                              // 0x02C0   (0x0010)  
	UWidgetAnimation*                                  BlinkAnim;                                                  // 0x02D0   (0x0008)  
	URetainerBox*                                      RetainerBoxDeadCells;                                       // 0x02D8   (0x0008)  
	bool                                               _canMinimize;                                               // 0x02E0   (0x0001)  
	unsigned char                                      UnknownData01_6[0x17];                                      // 0x02E1   (0x0017)  MISSED


	/// Functions
	// Function /Script/ConZ.ItemInventoryWidget2.OnExpandToggleClicked
	void OnExpandToggleClicked(bool checked);                                                                                // [0x23098c0] Final|Native|Private 
};

/// Class /Script/ConZ.ItemLightDisplay
/// Size: 0x0080 (0x000260 - 0x0002E0)
class UItemLightDisplay : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UImage*                                            _itemImage;                                                 // 0x0278   (0x0008)  
	UImage*                                            _emptySlotBackground;                                       // 0x0280   (0x0008)  
	USizeBox*                                          _sizeBox;                                                   // 0x0288   (0x0008)  
	UTextBlock*                                        _durability;                                                // 0x0290   (0x0008)  
	UTextBlock*                                        _uses;                                                      // 0x0298   (0x0008)  
	UBorder*                                           _selectionBorder;                                           // 0x02A0   (0x0008)  
	UOverlay*                                          _itemDataOverlay;                                           // 0x02A8   (0x0008)  
	UProgressBar*                                      _durabilityProgressBar;                                     // 0x02B0   (0x0008)  
	UProgressBar*                                      _usesProgressBar;                                           // 0x02B8   (0x0008)  
	float                                              _width;                                                     // 0x02C0   (0x0004)  
	float                                              _height;                                                    // 0x02C4   (0x0004)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x02C8   (0x0018)  MISSED
};

/// Class /Script/ConZ.ItemObstructionTestCapsuleComponent
/// Size: 0x0000 (0x000470 - 0x000470)
class UItemObstructionTestCapsuleComponent : public UCapsuleComponent
{ 
public:
};

/// Class /Script/ConZ.ItemObstructionStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UItemObstructionStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.ItemPostSpawnAction
/// Size: 0x0000 (0x000028 - 0x000028)
class UItemPostSpawnAction : public UObject
{ 
public:
};

/// Class /Script/ConZ.ItemPostSpawnAction_SetAmmoAmount
/// Size: 0x0018 (0x000028 - 0x000040)
class UItemPostSpawnAction_SetAmmoAmount : public UItemPostSpawnAction
{ 
public:
	bool                                               _useAbsoluteAmount;                                         // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	FInt32Interval                                     _absoluteAmount;                                            // 0x002C   (0x0008)  
	bool                                               _useAmountRatio;                                            // 0x0034   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0035   (0x0003)  MISSED
	FFloatInterval                                     _amountRatio;                                               // 0x0038   (0x0008)  
};

/// Class /Script/ConZ.ItemPostSpawnAction_SetCashAmount
/// Size: 0x0018 (0x000028 - 0x000040)
class UItemPostSpawnAction_SetCashAmount : public UItemPostSpawnAction
{ 
public:
	bool                                               _useAbsoluteAmount;                                         // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	FInt32Interval                                     _absoluteAmount;                                            // 0x002C   (0x0008)  
	bool                                               _useAmountRatio;                                            // 0x0034   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0035   (0x0003)  MISSED
	FFloatInterval                                     _amountRatio;                                               // 0x0038   (0x0008)  
};

/// Class /Script/ConZ.ItemPostSpawnAction_SetClothesDirtiness
/// Size: 0x0008 (0x000028 - 0x000030)
class UItemPostSpawnAction_SetClothesDirtiness : public UItemPostSpawnAction
{ 
public:
	FFloatInterval                                     _dirtiness;                                                 // 0x0028   (0x0008)  
};

/// Class /Script/ConZ.ItemPostSpawnAction_SetResourceAmount
/// Size: 0x0018 (0x000028 - 0x000040)
class UItemPostSpawnAction_SetResourceAmount : public UItemPostSpawnAction
{ 
public:
	bool                                               _useAbsoluteAmount;                                         // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	FFloatInterval                                     _absoluteAmount;                                            // 0x002C   (0x0008)  
	bool                                               _useAmountRatio;                                            // 0x0034   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0035   (0x0003)  MISSED
	FFloatInterval                                     _amountRatio;                                               // 0x0038   (0x0008)  
};

/// Class /Script/ConZ.ItemPostSpawnAction_SetUsage
/// Size: 0x0018 (0x000028 - 0x000040)
class UItemPostSpawnAction_SetUsage : public UItemPostSpawnAction
{ 
public:
	bool                                               _useAbsoluteUsage;                                          // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	FInt32Interval                                     _absoluteUsage;                                             // 0x002C   (0x0008)  
	bool                                               _useUsageRatio;                                             // 0x0034   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0035   (0x0003)  MISSED
	FFloatInterval                                     _usageRatio;                                                // 0x0038   (0x0008)  
};

/// Class /Script/ConZ.ItemPostSpawnAction_AbandonedBunkerKeycard
/// Size: 0x0008 (0x000028 - 0x000030)
class UItemPostSpawnAction_AbandonedBunkerKeycard : public UItemPostSpawnAction
{ 
public:
	bool                                               _overrideFloorNumber;                                       // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	int32_t                                            _floorNumberOverride;                                       // 0x002C   (0x0004)  
};

/// Class /Script/ConZ.ItemRackSlotComponent
/// Size: 0x0030 (0x000200 - 0x000230)
class UItemRackSlotComponent : public USceneComponent
{ 
public:
	AItem*                                             _placedItem;                                                // 0x0200   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0208   (0x0008)  MISSED
	TArray<UClass*>                                    _acceptableTags;                                            // 0x0210   (0x0010)  
	UAkAudioEvent*                                     _placeItemAudioEvent;                                       // 0x0220   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0228   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.ItemRackSlotComponent.OnRep_PlacedItem
	void OnRep_PlacedItem();                                                                                                 // [0x230d050] Final|Native|Private 
};

/// Class /Script/ConZ.ItemRegistry
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UItemRegistry : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x00B0   (0x0050)  MISSED
};

/// Class /Script/ConZ.ItemSelection
/// Size: 0x0068 (0x000030 - 0x000098)
class UItemSelection : public UDataAsset
{ 
public:
	UClass*                                            MainItem;                                                   // 0x0030   (0x0008)  
	TArray<UClass*>                                    SupportItems;                                               // 0x0038   (0x0010)  
	TArray<UClass*>                                    Attachments;                                                // 0x0048   (0x0010)  
	UTexture2D*                                        UnselectedIcon;                                             // 0x0058   (0x0008)  
	UTexture2D*                                        SelectedIcon;                                               // 0x0060   (0x0008)  
	UTexture2D*                                        DisabledIcon;                                               // 0x0068   (0x0008)  
	FText                                              SelectionName;                                              // 0x0070   (0x0018)  
	float                                              SizeX;                                                      // 0x0088   (0x0004)  
	float                                              SizeY;                                                      // 0x008C   (0x0004)  
	int32_t                                            TeamIndex;                                                  // 0x0090   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0094   (0x0004)  MISSED
};

/// Class /Script/ConZ.ItemSelectionSlotWidget
/// Size: 0x0040 (0x000260 - 0x0002A0)
class UItemSelectionSlotWidget : public UUserWidget
{ 
public:
	UScrollBox*                                        _selectionScrollBox;                                        // 0x0260   (0x0008)  
	UTextBlock*                                        TextBlock;                                                  // 0x0268   (0x0008)  
	UVerticalBox*                                      VerticalBox;                                                // 0x0270   (0x0008)  
	FText                                              Name;                                                       // 0x0278   (0x0018)  
	UClass*                                            _selectionWidgetClass;                                      // 0x0290   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0298   (0x0008)  MISSED
};

/// Class /Script/ConZ.ItemSelectionWidget
/// Size: 0x0088 (0x000260 - 0x0002E8)
class UItemSelectionWidget : public UUserWidget
{ 
public:
	UImage*                                            _selection;                                                 // 0x0260   (0x0008)  
	UTextBlock*                                        _itemName;                                                  // 0x0268   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0270   (0x0008)  MISSED
	UItemSelection*                                    _itemData;                                                  // 0x0278   (0x0008)  
	UTexture2D*                                        _cancelTexture;                                             // 0x0280   (0x0008)  
	UAkAudioEvent*                                     _selectionAudioEvent;                                       // 0x0288   (0x0008)  
	FSlateColor                                        _selectedColor;                                             // 0x0290   (0x0028)  
	FSlateColor                                        _notSelectedColor;                                          // 0x02B8   (0x0028)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x02E0   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.ItemSelectionWidget.On_Selection_MouseButtonDown
	FEventReply On_Selection_MouseButtonDown(FGeometry& Geometry, FPointerEvent& MouseEvent);                                // [0x230d070] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.ItemSelectionWidget.Get_ItemName_ColorAndOpacity
	FSlateColor Get_ItemName_ColorAndOpacity();                                                                              // [0x230cfb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.ItemSpawnerComponent
/// Size: 0x0020 (0x000200 - 0x000220)
class UItemSpawnerComponent : public USceneComponent
{ 
public:
	int32_t                                            ItemSpawnLimit;                                             // 0x01F8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x01FC   (0x0004)  MISSED
	TArray<FItemSpawnerMarker>                         SpawnerMarkers;                                             // 0x0200   (0x0010)  
	FString                                            SpawnerGroupName;                                           // 0x0210   (0x0010)  
};

/// Class /Script/ConZ.ItemSpawnerEvaluationResultEntityComponentSetup
/// Size: 0x0000 (0x000048 - 0x000048)
class UItemSpawnerEvaluationResultEntityComponentSetup : public UEntityComponentSetup
{ 
public:
};

/// Class /Script/ConZ.ItemSpawnerGroup
/// Size: 0x0008 (0x000220 - 0x000228)
class AItemSpawnerGroup : public AActor
{ 
public:
	UItemSpawnerComponent*                             SpawnerComponent;                                           // 0x0220   (0x0008)  
};

/// Class /Script/ConZ.ItemSpawnerVolume
/// Size: 0x0020 (0x000258 - 0x000278)
class AItemSpawnerVolume : public AVolume
{ 
public:
	FItemLocation                                      zone;                                                       // 0x0258   (0x000F)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x0267   (0x0001)  MISSED
	float                                              ItemHealthMultiplier;                                       // 0x0268   (0x0004)  
	float                                              ProbabilityMultiplier;                                      // 0x026C   (0x0004)  
	float                                              ExamineProbabilityMultiplier;                               // 0x0270   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0274   (0x0004)  MISSED
};

/// Class /Script/ConZ.ItemSpawningDataRegistry
/// Size: 0x0100 (0x000030 - 0x000130)
class UItemSpawningDataRegistry : public UGameInstanceSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x100];                                     // 0x0030   (0x0100)  MISSED
};

/// Class /Script/ConZ.ItemSpawningManager
/// Size: 0x15C0 (0x000220 - 0x0017E0)
class AItemSpawningManager : public AActor
{ 
public:
	unsigned char                                      UnknownData00_1[0x15C0];                                    // 0x0220   (0x15C0)  MISSED
};

/// Class /Script/ConZ.ItemSpawnerPreset
/// Size: 0x0070 (0x000028 - 0x000098)
class UItemSpawnerPreset : public UObject
{ 
public:
	FItemSpawnerData                                   SpawnerData;                                                // 0x0028   (0x0070)  
};

/// Class /Script/ConZ.ItemSpawnerPreset2
/// Size: 0x0088 (0x000028 - 0x0000B0)
class UItemSpawnerPreset2 : public UObject
{ 
public:
	TArray<FItemSpawnerPreset_Node>                    Nodes;                                                      // 0x0028   (0x0010)  
	TArray<FItemSpawnerPreset_Item>                    Items;                                                      // 0x0038   (0x0010)  
	TArray<FItemSpawnerPreset_Subpreset>               Subpresets;                                                 // 0x0048   (0x0010)  
	TArray<TWeakObjectPtr>                             FixedItems;                                                 // 0x0058   (0x0010)  
	bool                                               AlwaysSpawn;                                                // 0x0068   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0069   (0x0003)  MISSED
	float                                              Probability;                                                // 0x006C   (0x0004)  
	FInt32Interval                                     Quantity;                                                   // 0x0070   (0x0008)  
	bool                                               AllowDuplicates;                                            // 0x0078   (0x0001)  
	bool                                               ShouldFilterItemsByZone;                                    // 0x0079   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x007A   (0x0002)  MISSED
	float                                              InitialDamage;                                              // 0x007C   (0x0004)  
	float                                              RandomDamage;                                               // 0x0080   (0x0004)  
	float                                              InitialUsage;                                               // 0x0084   (0x0004)  
	float                                              RandomUsage;                                                // 0x0088   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x008C   (0x0004)  MISSED
	TArray<TWeakObjectPtr>                             PostSpawnActions;                                           // 0x0090   (0x0010)  
	TArray<TWeakObjectPtr>                             SpawnFilters;                                               // 0x00A0   (0x0010)  
};

/// Class /Script/ConZ.ItemSplitWidget
/// Size: 0x0040 (0x000260 - 0x0002A0)
class UItemSplitWidget : public UUserWidget
{ 
public:
	UEditableTextBox*                                  _currentItemStackAmount;                                    // 0x0260   (0x0008)  
	UTextBlock*                                        _newItemStackAmount;                                        // 0x0268   (0x0008)  
	USlider*                                           _valueSlider;                                               // 0x0270   (0x0008)  
	UButton*                                           _splitButton;                                               // 0x0278   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0280   (0x0020)  MISSED


	/// Functions
	// Function /Script/ConZ.ItemSplitWidget.OnStackAmountBoxTextChanged
	void OnStackAmountBoxTextChanged(FText& newText);                                                                        // [0x2311ab0] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.ItemSplitWidget.OnSplitButtonClicked
	void OnSplitButtonClicked();                                                                                             // [0x2311a90] Final|Native|Private 
	// Function /Script/ConZ.ItemSplitWidget.OnSliderValueUpdated
	void OnSliderValueUpdated(float Value);                                                                                  // [0x2311a10] Final|Native|Private 
	// Function /Script/ConZ.ItemSplitWidget.OnExitRequested
	void OnExitRequested();                                                                                                  // [0x23118e0] Final|Native|Private 
};

/// Class /Script/ConZ.ItemsSpawnFilters
/// Size: 0x0018 (0x000028 - 0x000040)
class UItemsSpawnFilters : public UObject
{ 
public:
	bool                                               _appliesOnlyToSomeItems;                                    // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0029   (0x0007)  MISSED
	TArray<FPrimaryAssetId>                            _appliesToItemAssetIds;                                     // 0x0030   (0x0010)  
};

/// Class /Script/ConZ.ItemsSpawnFilters_BunkerKeycard
/// Size: 0x0000 (0x000040 - 0x000040)
class UItemsSpawnFilters_BunkerKeycard : public UItemsSpawnFilters
{ 
public:
};

/// Class /Script/ConZ.ItemStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UItemStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.ItemStatusWidget
/// Size: 0x0000 (0x0002F8 - 0x0002F8)
class UItemStatusWidget : public UWaypointWidgetBase
{ 
public:
};

/// Class /Script/ConZ.ItemTooltipTab
/// Size: 0x0010 (0x000138 - 0x000148)
class UItemTooltipTab : public UWidgetSwitcher
{ 
public:
	TArray<UPanelWidget*>                              _panels;                                                    // 0x0138   (0x0010)  
};

/// Class /Script/ConZ.ItemTooltip
/// Size: 0x0050 (0x000260 - 0x0002B0)
class UItemTooltip : public UUserWidget
{ 
public:
	UItemTooltipPanel*                                 _mainPanel;                                                 // 0x0260   (0x0008)  
	UItemTooltipTab*                                   _overviewPanels;                                            // 0x0268   (0x0008)  
	UItemTooltipTab*                                   _additionalPanels;                                          // 0x0270   (0x0008)  
	UImage*                                            _pageIndicatorBar;                                          // 0x0278   (0x0008)  
	UTextBlock*                                        _expandHintText;                                            // 0x0280   (0x0008)  
	UUserWidget*                                       UI_Border;                                                  // 0x0288   (0x0008)  
	UGridPanel*                                        _pageIndicatorGrid;                                         // 0x0290   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0298   (0x0018)  MISSED


	/// Functions
	// Function /Script/ConZ.ItemTooltip.UpdateVisuals
	void UpdateVisuals(TArray<FInventoryNodeWidgetData>& widgetData);                                                        // [0x2311ef0] Native|Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/ConZ.ItemTooltip.Init
	void Init(TScriptInterface<Class>& Item, TScriptInterface<Class>& container);                                            // [0x2311520] Native|Event|Public|HasOutParms|BlueprintEvent 
};

/// Class /Script/ConZ.ExtendedRichTextBlock
/// Size: 0x0000 (0x000678 - 0x000678)
class UExtendedRichTextBlock : public URichTextBlock
{ 
public:
};

/// Class /Script/ConZ.ItemTooltipPanelElement
/// Size: 0x0008 (0x000260 - 0x000268)
class UItemTooltipPanelElement : public UUserWidget
{ 
public:
	FName                                              _elementName;                                               // 0x0260   (0x0008)  


	/// Functions
	// Function /Script/ConZ.ItemTooltipPanelElement.OnTextDataChanged
	void OnTextDataChanged(FText& Value);                                                                                    // [0x2859740] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/ConZ.ItemTooltipPanelElement.OnNumberDataChanged
	void OnNumberDataChanged(float Value);                                                                                   // [0x2859740] Event|Public|BlueprintEvent 
};

/// Class /Script/ConZ.ItemTooltipPanel
/// Size: 0x0050 (0x000260 - 0x0002B0)
class UItemTooltipPanel : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0260   (0x0050)  MISSED
};

/// Class /Script/ConZ.ItemUserWidget
/// Size: 0x0020 (0x000280 - 0x0002A0)
class UItemUserWidget : public UBaseItemWidget
{ 
public:
	FMulticastInlineDelegate                           OnClicked;                                                  // 0x0280   (0x0010)  
	UUserWidget*                                       _uiBorder;                                                  // 0x0290   (0x0008)  
	bool                                               _isSelected;                                                // 0x0298   (0x0001)  
	bool                                               _isHovered;                                                 // 0x0299   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x029A   (0x0006)  MISSED


	/// Functions
	// Function /Script/ConZ.ItemUserWidget.UpdateHighlightStatus
	void UpdateHighlightStatus();                                                                                            // [0x2859740] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/ConZ.ItemUserWidget.SetItem
	void SetItem(AItem* Item);                                                                                               // [0x2311db0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ItemUserWidget.SetImage
	void SetImage(UTexture2D* Image);                                                                                        // [0x2311d20] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ItemUserWidget.OnItemSelectionChanged
	void OnItemSelectionChanged(bool selected);                                                                              // [0x2311900] Final|Native|Protected 
	// Function /Script/ConZ.ItemUserWidget.OnClicked__DelegateSignature
	void OnClicked__DelegateSignature(UItemUserWidget* clickedWidget);                                                       // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.ItemUserWidget.MarkAsWeaponWidget
	void MarkAsWeaponWidget();                                                                                               // [0x2859740] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/ConZ.ItemUserWidget.ItemPickedUpStateChanged
	void ItemPickedUpStateChanged(AItem* Item, bool pickedUp);                                                               // [0x23116d0] Final|Native|Public  
	// Function /Script/ConZ.ItemUserWidget.InteractableDestroyed
	void InteractableDestroyed(AActor* interactable);                                                                        // [0x2311640] Final|Native|Public  
	// Function /Script/ConZ.ItemUserWidget.GetItem
	AItem* GetItem();                                                                                                        // [0x23114f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.ItemUserWidget.CreateFromItem
	UItemUserWidget* CreateFromItem(AItem* Item);                                                                            // [0x2311310] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/ConZ.ItemUserWidget.BlinkItemContainer
	void BlinkItemContainer();                                                                                               // [0x2859740] Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/ConZ.ItemVirtualizationManager
/// Size: 0x01C0 (0x000220 - 0x0003E0)
class AItemVirtualizationManager : public AActor
{ 
public:
	unsigned char                                      UnknownData00_1[0x1C0];                                     // 0x0220   (0x01C0)  MISSED
};

/// Class /Script/ConZ.ItemWidget2
/// Size: 0x02F0 (0x000260 - 0x000550)
class UItemWidget2 : public UUserWidget
{ 
public:
	FMulticastInlineDelegate                           OnRightClicked;                                             // 0x0260   (0x0010)  
	unsigned char                                      UnknownData00_5[0x20];                                      // 0x0270   (0x0020)  MISSED
	UVicinityContainer3*                               ParentVicinity;                                             // 0x0290   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0298   (0x0008)  MISSED
	UTextBlock*                                        LowerLeftTextFirst;                                         // 0x02A0   (0x0008)  
	UTextBlock*                                        LowerLeftTextSecond;                                        // 0x02A8   (0x0008)  
	TMap<FName, float>                                 _numberData;                                                // 0x02B0   (0x0050)  
	UProgressBar*                                      ProgressBarDurability;                                      // 0x0300   (0x0008)  
	UProgressBar*                                      ProgressBarUses;                                            // 0x0308   (0x0008)  
	UImage*                                            BackgroundHighlight;                                        // 0x0310   (0x0008)  
	bool                                               _isVicinityContainer;                                       // 0x0318   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0319   (0x0007)  MISSED
	TScriptInterface<Class>                            _item;                                                      // 0x0320   (0x0010)  
	TScriptInterface<Class>                            _container;                                                 // 0x0330   (0x0010)  
	unsigned char                                      UnknownData03_5[0x20];                                      // 0x0340   (0x0020)  MISSED
	UClass*                                            _itemClass;                                                 // 0x0360   (0x0008)  
	UImage*                                            _icon;                                                      // 0x0368   (0x0008)  
	USizeBox*                                          _iconSizeBox;                                               // 0x0370   (0x0008)  
	UImage*                                            _background;                                                // 0x0378   (0x0008)  
	UInvalidationBox*                                  _mainInvalidationBox;                                       // 0x0380   (0x0008)  
	UOverlay*                                          _priceOverlay;                                              // 0x0388   (0x0008)  
	UTextBlock*                                        _priceText;                                                 // 0x0390   (0x0008)  
	UUniformGridPanel*                                 _backgroundGrid;                                            // 0x0398   (0x0008)  
	UUniformGridPanel*                                 _foregroundGrid;                                            // 0x03A0   (0x0008)  
	UOverlay*                                          _selectionOverlay;                                          // 0x03A8   (0x0008)  
	EInventoryNodeWidgetType                           _widgetType;                                                // 0x03B0   (0x0001)  
	unsigned char                                      UnknownData04_5[0x7];                                       // 0x03B1   (0x0007)  MISSED
	UVerticalBox*                                      _healthPercentageProgressBarVBox;                           // 0x03B8   (0x0008)  
	UImage*                                            _irreparableIcon;                                           // 0x03C0   (0x0008)  
	UImage*                                            _radiationIcon;                                             // 0x03C8   (0x0008)  
	FLinearColor                                       _defaultBackgroundColour;                                   // 0x03D0   (0x0010)  
	FLinearColor                                       _hoveredBackgroundColour;                                   // 0x03E0   (0x0010)  
	FLinearColor                                       _selectedBackgroundColour;                                  // 0x03F0   (0x0010)  
	FLinearColor                                       _selectedHoveredBackgroundColour;                           // 0x0400   (0x0010)  
	unsigned char                                      UnknownData05_5[0x20];                                      // 0x0410   (0x0020)  MISSED
	UHorizontalBox*                                    _lowerLeftBox;                                              // 0x0430   (0x0008)  
	UImage*                                            _additionalIcon;                                            // 0x0438   (0x0008)  
	USizeBox*                                          _additionalIconSizeBox;                                     // 0x0440   (0x0008)  
	unsigned char                                      UnknownData06_5[0x48];                                      // 0x0448   (0x0048)  MISSED
	TArray<UTexture2D*>                                _temperatureLevelImages;                                    // 0x0490   (0x0010)  
	TArray<UTexture2D*>                                _wetnessLevelImages;                                        // 0x04A0   (0x0010)  
	USizeBox*                                          MainSizeBox;                                                // 0x04B0   (0x0008)  
	UImage*                                            Temperature;                                                // 0x04B8   (0x0008)  
	UImage*                                            Wetness;                                                    // 0x04C0   (0x0008)  
	UTextBlock*                                        UsageSeparator;                                             // 0x04C8   (0x0008)  
	UImage*                                            UsesBackground;                                             // 0x04D0   (0x0008)  
	UImage*                                            HealthBackground;                                           // 0x04D8   (0x0008)  
	UTextBlock*                                        LowerRightText;                                             // 0x04E0   (0x0008)  
	UImage*                                            UpperRightBackground;                                       // 0x04E8   (0x0008)  
	UTextBlock*                                        UpperRightText;                                             // 0x04F0   (0x0008)  
	UImage*                                            UpperLeftBackground;                                        // 0x04F8   (0x0008)  
	UTextBlock*                                        UpperLeftText;                                              // 0x0500   (0x0008)  
	UImage*                                            MiddleBackground;                                           // 0x0508   (0x0008)  
	UTextBlock*                                        MiddleText;                                                 // 0x0510   (0x0008)  
	UImage*                                            UpperBackground;                                            // 0x0518   (0x0008)  
	UImage*                                            LowerBackground;                                            // 0x0520   (0x0008)  
	UWidgetAnimation*                                  LowerLeftBoxFadeIn;                                         // 0x0528   (0x0008)  
	UWidgetAnimation*                                  LowerLeftBoxFadeOut;                                        // 0x0530   (0x0008)  
	UWidgetAnimation*                                  AdditionalIconFadeIn;                                       // 0x0538   (0x0008)  
	UWidgetAnimation*                                  AdditionalIconFadeOut;                                      // 0x0540   (0x0008)  
	UWidgetAnimation*                                  LowerLeftBoxShow;                                           // 0x0548   (0x0008)  


	/// Functions
	// Function /Script/ConZ.ItemWidget2.OnRotated__DelegateSignature
	void OnRotated__DelegateSignature(UItemWidget2* Widget);                                                                 // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.ItemWidget2.OnRightClicked__DelegateSignature
	void OnRightClicked__DelegateSignature();                                                                                // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.ItemWidget2.OnDropOperation
	void OnDropOperation(UDragDropOperation* Operation);                                                                     // [0x2311850] Final|Native|Public  
	// Function /Script/ConZ.ItemWidget2.OnDragOperationCancelled
	void OnDragOperationCancelled(UDragDropOperation* Operation);                                                            // [0x23117c0] Final|Native|Public  
};

/// Class /Script/ConZ.ItemWidgetDragDropOperation
/// Size: 0x0008 (0x000088 - 0x000090)
class UItemWidgetDragDropOperation : public UDragDropOperation
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0088   (0x0008)  MISSED
};

/// Class /Script/ConZ.ItemWithTextState
/// Size: 0x0020 (0x000100 - 0x000120)
class UItemWithTextState : public UItemState
{ 
public:
	FDbIntegerId                                       OwningUserProfileId;                                        // 0x0100   (0x0008)  
	FString                                            Text;                                                       // 0x0108   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0118   (0x0008)  MISSED
};

/// Class /Script/ConZ.ItemWithText
/// Size: 0x0050 (0x000910 - 0x000960)
class AItemWithText : public AItem
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0910   (0x0008)  MISSED
	int32_t                                            MaxTextCharactersPerRow;                                    // 0x0918   (0x0004)  
	int32_t                                            MaxTextRows;                                                // 0x091C   (0x0004)  
	UWidgetComponent*                                  _textWidgetComponent;                                       // 0x0920   (0x0008)  
	FString                                            _text;                                                      // 0x0928   (0x0010)  
	FDbIntegerId                                       _owningUserProfileId;                                       // 0x0938   (0x0008)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x0940   (0x0020)  MISSED


	/// Functions
	// Function /Script/ConZ.ItemWithText.OnTextAccepted
	void OnTextAccepted(APrisoner* User, FText& Text);                                                                       // [0x2311b80] Final|Native|Public|HasOutParms 
	// Function /Script/ConZ.ItemWithText.OnRep_Text
	void OnRep_Text();                                                                                                       // [0x23119b0] Final|Native|Private 
	// Function /Script/ConZ.ItemWithText.OnLocalPrisonerTabModeClosed_ItemWithText
	void OnLocalPrisonerTabModeClosed_ItemWithText();                                                                        // [0x2311990] Final|Native|Public  
};

/// Class /Script/ConZ.JournalMissionContainer
/// Size: 0x00C8 (0x000260 - 0x000328)
class UJournalMissionContainer : public UUserWidget
{ 
public:
	UVerticalBox*                                      _missionItemWidgetsContainer;                               // 0x0260   (0x0008)  
	UVerticalBox*                                      _completedMissionItemWidgetsContainer;                      // 0x0268   (0x0008)  
	UOverlay*                                          _completedMissionsOverlay;                                  // 0x0270   (0x0008)  
	UTextBlock*                                        _noContentText;                                             // 0x0278   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0280   (0x0008)  MISSED
	TMap<UClass*, TWeakObjectPtr>                      _missionItemWidgets;                                        // 0x0288   (0x0050)  
	TMap<UClass*, TWeakObjectPtr>                      _completedMissionItemWidgets;                               // 0x02D8   (0x0050)  
};

/// Class /Script/ConZ.JournalMissionPanel
/// Size: 0x0098 (0x000260 - 0x0002F8)
class UJournalMissionPanel : public UTabMenuPanel
{ 
public:
	UWidgetSwitcher*                                   _journalWidgetSwitcher;                                     // 0x0260   (0x0008)  
	UJournalMissionContainer*                          _mainStoryContainerWidget;                                  // 0x0268   (0x0008)  
	UJournalMissionContainer*                          _sideStoryContainerWidget;                                  // 0x0270   (0x0008)  
	UJournalMissionContainer*                          _tutorialContainerWidget;                                   // 0x0278   (0x0008)  
	UMissionTabWidget*                                 _mainStoryTab;                                              // 0x0280   (0x0008)  
	UMissionTabWidget*                                 _sideStoryTab;                                              // 0x0288   (0x0008)  
	UMissionTabWidget*                                 _tutorialTab;                                               // 0x0290   (0x0008)  
	UImage*                                            _firstTabDivider;                                           // 0x0298   (0x0008)  
	UImage*                                            _secondTabDivider;                                          // 0x02A0   (0x0008)  
	UAkAudioEvent*                                     _menuButtonClickAudioEvent;                                 // 0x02A8   (0x0008)  
	UJournalObjectiveContainer*                        _objectivesContainerWidget;                                 // 0x02B0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x40];                                      // 0x02B8   (0x0040)  MISSED


	/// Functions
	// Function /Script/ConZ.JournalMissionPanel.OnUntrackMissionButton
	void OnUntrackMissionButton();                                                                                           // [0x2311c90] Final|Native|Public  
	// Function /Script/ConZ.JournalMissionPanel.OnRestartMissionButton
	void OnRestartMissionButton();                                                                                           // [0x23119f0] Final|Native|Public  
	// Function /Script/ConZ.JournalMissionPanel.OnResetMissionButton
	void OnResetMissionButton();                                                                                             // [0x23119d0] Final|Native|Public  
	// Function /Script/ConZ.JournalMissionPanel.OnActivateMissionButton
	void OnActivateMissionButton();                                                                                          // [0x23117a0] Final|Native|Public  
};

/// Class /Script/ConZ.JournalObjectiveContainer
/// Size: 0x00E0 (0x000260 - 0x000340)
class UJournalObjectiveContainer : public UTabMenuPanel
{ 
public:
	UVerticalBox*                                      _objectiveContainer;                                        // 0x0260   (0x0008)  
	UHorizontalBox*                                    _rewardContainer;                                           // 0x0268   (0x0008)  
	UTextBlock*                                        _headerNameText;                                            // 0x0270   (0x0008)  
	UTextBlock*                                        _missionDescriptionText;                                    // 0x0278   (0x0008)  
	UImage*                                            _missionBanner;                                             // 0x0280   (0x0008)  
	UTextBlock*                                        _noDescriptionText;                                         // 0x0288   (0x0008)  
	UTextBlock*                                        _noRewardsText;                                             // 0x0290   (0x0008)  
	UButton*                                           _activateMissionButton;                                     // 0x0298   (0x0008)  
	UButton*                                           _untrackMissionButton;                                      // 0x02A0   (0x0008)  
	UButton*                                           _resetMissionButton;                                        // 0x02A8   (0x0008)  
	UButton*                                           _restartMissionButton;                                      // 0x02B0   (0x0008)  
	UOverlay*                                          _activateButtonOverlay;                                     // 0x02B8   (0x0008)  
	UOverlay*                                          _untrackButtonOverlay;                                      // 0x02C0   (0x0008)  
	UOverlay*                                          _resetButtonOverlay;                                        // 0x02C8   (0x0008)  
	UOverlay*                                          _restartButtonOverlay;                                      // 0x02D0   (0x0008)  
	float                                              _objectiveItemBottomPadding;                                // 0x02D8   (0x0004)  
	float                                              _objectiveItemFontSize;                                     // 0x02DC   (0x0004)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x02E0   (0x0010)  MISSED
	TMap<FString, TWeakObjectPtr>                      _objectiveItemWidgets;                                      // 0x02F0   (0x0050)  
};

/// Class /Script/ConZ.KeyBinding
/// Size: 0x0098 (0x000260 - 0x0002F8)
class UKeyBinding : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0260   (0x0030)  MISSED
	UTextBlock*                                        ActionNameText;                                             // 0x0290   (0x0008)  
	UTextBlock*                                        ActionKeyText;                                              // 0x0298   (0x0008)  
	FText                                              UserFriendlyName;                                           // 0x02A0   (0x0018)  
	FName                                              Name;                                                       // 0x02B8   (0x0008)  
	bool                                               IsAxis;                                                     // 0x02C0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x02C1   (0x0003)  MISSED
	float                                              AxisScale;                                                  // 0x02C4   (0x0004)  
	FName                                              GroupName;                                                  // 0x02C8   (0x0008)  
	bool                                               CheckOnlySameKeyWithinGroup;                                // 0x02D0   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x02D1   (0x0003)  MISSED
	FName                                              SameKeyBlockerGroupName;                                    // 0x02D4   (0x0008)  
	unsigned char                                      UnknownData03_6[0x1C];                                      // 0x02DC   (0x001C)  MISSED
};

/// Class /Script/ConZ.KeyboardIllumination
/// Size: 0x0000 (0x000028 - 0x000028)
class UKeyboardIllumination : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.KillBoxC4SpawnPoint
/// Size: 0x0010 (0x000220 - 0x000230)
class AKillBoxC4SpawnPoint : public AActor
{ 
public:
	TArray<UClass*>                                    _possibleSpawnClasses;                                      // 0x0220   (0x0010)  
};

/// Class /Script/ConZ.KillboxComponent
/// Size: 0x02B0 (0x0000B0 - 0x000360)
class UKillboxComponent : public UActorComponent
{ 
public:
	bool                                               _isActivated;                                               // 0x00B0   (0x0001)  
	bool                                               _isFinale;                                                  // 0x00B1   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x00B2   (0x0002)  MISSED
	float                                              _killBoxDuration;                                           // 0x00B4   (0x0004)  
	float                                              _lockdownDuration;                                          // 0x00B8   (0x0004)  
	float                                              _reductionTimeCap;                                          // 0x00BC   (0x0004)  
	float                                              _reductionTimePenalty;                                      // 0x00C0   (0x0004)  
	float                                              _saveStateInterval;                                         // 0x00C4   (0x0004)  
	float                                              _gasEntranceTime;                                           // 0x00C8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x00CC   (0x0004)  MISSED
	UClass*                                            _gasPoisoningCondition;                                     // 0x00D0   (0x0008)  
	float                                              _panicModeTimeCut;                                          // 0x00D8   (0x0004)  
	float                                              _laserEntranceTime;                                         // 0x00DC   (0x0004)  
	float                                              _finaleEntranceCloseTime;                                   // 0x00E0   (0x0004)  
	float                                              _difficultyCalibrationTime;                                 // 0x00E4   (0x0004)  
	int32_t                                            _calibrationPrisonerThreshold;                              // 0x00E8   (0x0004)  
	float                                              _zapperDamageModifierPerPrisoner;                           // 0x00EC   (0x0004)  
	float                                              _maxZapperDamageModifier;                                   // 0x00F0   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x00F4   (0x0004)  MISSED
	TArray<FRoomDifficultyConfiguration>               _availableDifficultyConfigurations;                         // 0x00F8   (0x0010)  
	int32_t                                            _maxSpawnedZombies;                                         // 0x0108   (0x0004)  
	int32_t                                            _maxSpawnedZombiesPerMistake;                               // 0x010C   (0x0004)  
	int32_t                                            _prisonerNumPerGoldDoorZapper;                              // 0x0110   (0x0004)  
	int32_t                                            _maxGoldDoorZappers;                                        // 0x0114   (0x0004)  
	float                                              _specialPauseCountdownDuration;                             // 0x0118   (0x0004)  
	int32_t                                            _pauseMaxPrisonerCount;                                     // 0x011C   (0x0004)  
	int32_t                                            _spawnMinPrisonerCount;                                     // 0x0120   (0x0004)  
	float                                              _specialEventInterval;                                      // 0x0124   (0x0004)  
	float                                              _laserQuoteTimeRemainingTrigger;                            // 0x0128   (0x0004)  
	float                                              _gasQuoteTimeRemainingTrigger;                              // 0x012C   (0x0004)  
	float                                              _randomQuoteInterval;                                       // 0x0130   (0x0004)  
	float                                              _timedHostBlockTime;                                        // 0x0134   (0x0004)  
	TArray<UAkAudioEvent*>                             _killBoxOpeningQuotes;                                      // 0x0138   (0x0010)  
	TArray<UAkAudioEvent*>                             _killBoxLaserAnnouncementQuotes;                            // 0x0148   (0x0010)  
	TArray<UAkAudioEvent*>                             _killBoxDescriptionQuotes;                                  // 0x0158   (0x0010)  
	TArray<UAkAudioEvent*>                             _killBoxRandomnQuotes;                                      // 0x0168   (0x0010)  
	TArray<UAkAudioEvent*>                             _killBoxFailureQuotes;                                      // 0x0178   (0x0010)  
	TArray<UAkAudioEvent*>                             _killBoxGasAnnouncementQuotes;                              // 0x0188   (0x0010)  
	TArray<UAkAudioEvent*>                             _killBoxZombieSpawnQuotes;                                  // 0x0198   (0x0010)  
	TArray<UAkAudioEvent*>                             _killBoxTimePauseQuotes;                                    // 0x01A8   (0x0010)  
	TArray<UAkAudioEvent*>                             _difficultyCalibrationQuote;                                // 0x01B8   (0x0010)  
	UAkAudioEvent*                                     KillBoxMusicStart;                                          // 0x01C8   (0x0008)  
	UAkAudioEvent*                                     _killBoxMusicStop;                                          // 0x01D0   (0x0008)  
	UAkAudioEvent*                                     _killBoxGasSound;                                           // 0x01D8   (0x0008)  
	UAkAudioEvent*                                     KillBox30SecondsMark;                                       // 0x01E0   (0x0008)  
	UAkAudioEvent*                                     KillBox10SecondsMark;                                       // 0x01E8   (0x0008)  
	UAkAudioEvent*                                     KillBox5SecondsMark;                                        // 0x01F0   (0x0008)  
	UAkAudioEvent*                                     KillBox4SecondsMark;                                        // 0x01F8   (0x0008)  
	UAkAudioEvent*                                     KillBox3SecondsMark;                                        // 0x0200   (0x0008)  
	UAkAudioEvent*                                     KillBox2SecondsMark;                                        // 0x0208   (0x0008)  
	UAkAudioEvent*                                     KillBox1SecondsMark;                                        // 0x0210   (0x0008)  
	UAkAudioEvent*                                     KillBoxBuzzerSound;                                         // 0x0218   (0x0008)  
	ADoor*                                             _killBoxEntrance;                                           // 0x0220   (0x0008)  
	AKillBoxDetectionField*                            _detectionField;                                            // 0x0228   (0x0008)  
	UMovableCollisionFieldComponent*                   _laserComponent;                                            // 0x0230   (0x0008)  
	TArray<AKillBoxSpawnPoint*>                        _spawnPoints;                                               // 0x0238   (0x0010)  
	TArray<AKillBoxSpawnPoint*>                        _hardSpawnPoints;                                           // 0x0248   (0x0010)  
	TArray<AZombie2*>                                  _spawnedZombies;                                            // 0x0258   (0x0010)  
	UAkComponent*                                      _currentAudioComponent;                                     // 0x0268   (0x0008)  
	UAkComponent*                                      _musicComponent;                                            // 0x0270   (0x0008)  
	float                                              _remainingTime;                                             // 0x0278   (0x0004)  
	float                                              _unlockFailureAssistanceBonus;                              // 0x027C   (0x0004)  
	unsigned char                                      UnknownData03_5[0x60];                                      // 0x0280   (0x0060)  MISSED
	TArray<UAkAudioEvent*>                             _queuedQuotes;                                              // 0x02E0   (0x0010)  
	TArray<ADoor*>                                     _electricalDoors;                                           // 0x02F0   (0x0010)  
	TArray<FRoomDefinition>                            _roomDefinitions;                                           // 0x0300   (0x0010)  
	TArray<UKillBoxTimerWidget*>                       _timerWidgets;                                              // 0x0310   (0x0010)  
	TArray<UParticleSystemComponent*>                  _gasEmitters;                                               // 0x0320   (0x0010)  
	UParticleSystemComponent*                          _gasMist;                                                   // 0x0330   (0x0008)  
	ASwitch*                                           _panicButton;                                               // 0x0338   (0x0008)  
	unsigned char                                      UnknownData04_6[0x20];                                      // 0x0340   (0x0020)  MISSED


	/// Functions
	// Function /Script/ConZ.KillboxComponent.SetPanicbutton
	void SetPanicbutton(ASwitch* panicButton);                                                                               // [0x2315810] Final|Native|Private|BlueprintCallable 
	// Function /Script/ConZ.KillboxComponent.SetMusicComponent
	void SetMusicComponent(UAkComponent* musicComponent);                                                                    // [0x2315780] Final|Native|Private|BlueprintCallable 
	// Function /Script/ConZ.KillboxComponent.SetLaserComponent
	void SetLaserComponent(UMovableCollisionFieldComponent* laserComponent);                                                 // [0x22cae40] Final|Native|Private|BlueprintCallable 
	// Function /Script/ConZ.KillboxComponent.SetKillBoxEntrance
	void SetKillBoxEntrance(ADoor* entrance);                                                                                // [0x23156f0] Final|Native|Private|BlueprintCallable 
	// Function /Script/ConZ.KillboxComponent.SetDetectionField
	void SetDetectionField(AKillBoxDetectionField* detectionField);                                                          // [0x2315660] Final|Native|Private|BlueprintCallable 
	// Function /Script/ConZ.KillboxComponent.OnRep_KillBoxActivation
	void OnRep_KillBoxActivation();                                                                                          // [0x2315640] Final|Native|Private 
	// Function /Script/ConZ.KillboxComponent.OnKillBoxSetup
	void OnKillBoxSetup();                                                                                                   // [0x2315520] Final|Native|Private|BlueprintCallable 
	// Function /Script/ConZ.KillboxComponent.OnInnerDoorUnlockedDelegate
	void OnInnerDoorUnlockedDelegate(ADoor* Door);                                                                           // [0x2315490] Final|Native|Private 
	// Function /Script/ConZ.KillboxComponent.OnEntranceUnlockedDelegate
	void OnEntranceUnlockedDelegate(ADoor* Door);                                                                            // [0x2315400] Final|Native|Private 
	// Function /Script/ConZ.KillboxComponent.OnEntranceOpenedDelegate
	void OnEntranceOpenedDelegate();                                                                                         // [0x23153e0] Final|Native|Private 
	// Function /Script/ConZ.KillboxComponent.OnEntranceCloseFinishedDelegate
	void OnEntranceCloseFinishedDelegate();                                                                                  // [0x23153c0] Final|Native|Private 
	// Function /Script/ConZ.KillboxComponent.OnElectricDoorsDefusedDelegate
	void OnElectricDoorsDefusedDelegate(ADoor* Door);                                                                        // [0x2315330] Final|Native|Private 
	// Function /Script/ConZ.KillboxComponent.NetMulticast_StopMusic
	void NetMulticast_StopMusic();                                                                                           // [0x2315190] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.KillboxComponent.NetMulticast_StopAllQuotes
	void NetMulticast_StopAllQuotes();                                                                                       // [0x2315170] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.KillboxComponent.NetMulticast_ReportKillBoxDeactivation
	void NetMulticast_ReportKillBoxDeactivation();                                                                           // [0x22706f0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.KillboxComponent.NetMulticast_ReportKillActivation
	void NetMulticast_ReportKillActivation();                                                                                // [0x2315150] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.KillboxComponent.NetMulticast_QueueHostQuote
	void NetMulticast_QueueHostQuote(UAkAudioEvent* Sound, bool playOnlyIfInstant, bool stopPreviousQuote);                  // [0x2314eb0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.KillboxComponent.NetMulticast_PlaySound
	void NetMulticast_PlaySound(UAkAudioEvent* Sound);                                                                       // [0x2314e20] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.KillboxComponent.NetMulticast_ActivateGasSound
	void NetMulticast_ActivateGasSound();                                                                                    // [0x2314e00] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.KillboxComponent.NetMulticast_ActivateGasParticles
	void NetMulticast_ActivateGasParticles(bool Activate);                                                                   // [0x2314d70] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.KillboxComponent.InitiatePanicMode
	void InitiatePanicMode();                                                                                                // [0x2314d50] Final|Native|Private 
	// Function /Script/ConZ.KillboxComponent.InitiateKillBoxFailure
	void InitiateKillBoxFailure();                                                                                           // [0x2314d30] Final|Native|Private 
	// Function /Script/ConZ.KillboxComponent.AddTimerWidget
	void AddTimerWidget(UKillBoxTimerWidget* timerWidget);                                                                   // [0x2314ca0] Final|Native|Private|BlueprintCallable 
	// Function /Script/ConZ.KillboxComponent.AddSpawnPoint
	void AddSpawnPoint(ADoor* holeDoor, AKillBoxSpawnPoint* Spawner);                                                        // [0x2314bd0] Final|Native|Private|BlueprintCallable 
	// Function /Script/ConZ.KillboxComponent.AddRoomDefinition
	void AddRoomDefinition(ADoor* RoomDoor, UStaticMeshComponent* Locker, AKillBoxC4SpawnPoint* C4);                         // [0x2314ac0] Final|Native|Private|BlueprintCallable 
	// Function /Script/ConZ.KillboxComponent.AddHardSpawnPoint
	void AddHardSpawnPoint(ADoor* holeDoor, AKillBoxSpawnPoint* Spawner);                                                    // [0x23149f0] Final|Native|Private|BlueprintCallable 
	// Function /Script/ConZ.KillboxComponent.AddGasMist
	void AddGasMist(UParticleSystemComponent* gasMist);                                                                      // [0x2314960] Final|Native|Private|BlueprintCallable 
	// Function /Script/ConZ.KillboxComponent.AddGasEmitter
	void AddGasEmitter(UParticleSystemComponent* gasEmitter);                                                                // [0x23148d0] Final|Native|Private|BlueprintCallable 
	// Function /Script/ConZ.KillboxComponent.AddElectricalDoor
	void AddElectricalDoor(ADoor* electricalDoor);                                                                           // [0x2314840] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/ConZ.PlaceableActorBlocker
/// Size: 0x0000 (0x000220 - 0x000220)
class APlaceableActorBlocker : public AActor
{ 
public:
};

/// Class /Script/ConZ.KillBoxDetectionField
/// Size: 0x0010 (0x000220 - 0x000230)
class AKillBoxDetectionField : public APlaceableActorBlocker
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0220   (0x0010)  MISSED
};

/// Class /Script/ConZ.KillBoxSpawnPoint
/// Size: 0x0040 (0x000220 - 0x000260)
class AKillBoxSpawnPoint : public AActor
{ 
public:
	float                                              _openDelay;                                                 // 0x0220   (0x0004)  
	float                                              _closeDelay;                                                // 0x0224   (0x0004)  
	TArray<UClass*>                                    _zombieList;                                                // 0x0228   (0x0010)  
	ADoor*                                             _door;                                                      // 0x0238   (0x0008)  
	unsigned char                                      UnknownData00_5[0x18];                                      // 0x0240   (0x0018)  MISSED
	float                                              _stableZombieProbability;                                   // 0x0258   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x025C   (0x0004)  MISSED
};

/// Class /Script/ConZ.KillBoxTimerWidget
/// Size: 0x0020 (0x000260 - 0x000280)
class UKillBoxTimerWidget : public UUserWidget
{ 
public:
	UTextBlock*                                        _remainingTimeMinutes1;                                     // 0x0260   (0x0008)  
	UTextBlock*                                        _remainingTimeMinutes2;                                     // 0x0268   (0x0008)  
	UTextBlock*                                        _remainingTimeSeconds1;                                     // 0x0270   (0x0008)  
	UTextBlock*                                        _remainingTimeSeconds2;                                     // 0x0278   (0x0008)  


	/// Functions
	// Function /Script/ConZ.KillBoxTimerWidget.SetTime
	void SetTime(int32_t Minutes, int32_t Seconds);                                                                          // [0x23158a0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.KillFeedNotification
/// Size: 0x0000 (0x000030 - 0x000030)
class UKillFeedNotification : public UConZNotification
{ 
public:
};

/// Class /Script/ConZ.KillFeedNotificationDescription
/// Size: 0x0038 (0x000040 - 0x000078)
class UKillFeedNotificationDescription : public UNotificationDescription
{ 
public:
	FString                                            prefix;                                                     // 0x0040   (0x0010)  
	FString                                            characterName;                                              // 0x0050   (0x0010)  
	FString                                            suffix;                                                     // 0x0060   (0x0010)  
	bool                                               ping;                                                       // 0x0070   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0071   (0x0007)  MISSED
};

/// Class /Script/ConZ.KillNotificationWidget
/// Size: 0x0018 (0x000260 - 0x000278)
class UKillNotificationWidget : public UUserWidget
{ 
public:
	UTextBlock*                                        _prefix;                                                    // 0x0260   (0x0008)  
	UTextBlock*                                        _name;                                                      // 0x0268   (0x0008)  
	UTextBlock*                                        _suffix;                                                    // 0x0270   (0x0008)  
};

/// Class /Script/ConZ.LadderMarkersComponent
/// Size: 0x0020 (0x000200 - 0x000220)
class ULadderMarkersComponent : public USceneComponent
{ 
public:
	TArray<FLadderMarker>                              _ladderMarkers;                                             // 0x01F8   (0x0010)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0208   (0x0018)  MISSED
};

/// Class /Script/ConZ.LadderMarkersRegistry
/// Size: 0x0010 (0x000220 - 0x000230)
class ALadderMarkersRegistry : public AActor
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0220   (0x0010)  MISSED
};

/// Class /Script/ConZ.LadderMarkersReplicator
/// Size: 0x0098 (0x000220 - 0x0002B8)
class ALadderMarkersReplicator : public AActor
{ 
public:
	unsigned char                                      UnknownData00_1[0x98];                                      // 0x0220   (0x0098)  MISSED
};

/// Class /Script/ConZ.LandingDamageCustomization
/// Size: 0x0008 (0x000028 - 0x000030)
class ULandingDamageCustomization : public UDamageCustomization
{ 
public:
	float                                              PrisonerAnkleSprainEnergyThreshold;                         // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Class /Script/ConZ.LandingEffects
/// Size: 0x07C8 (0x000030 - 0x0007F8)
class ULandingEffects : public UDataAsset
{ 
public:
	float                                              MinImpactSpeedForLightEffects;                              // 0x0030   (0x0004)  
	float                                              MinImpactSpeedForMediumEffects;                             // 0x0034   (0x0004)  
	float                                              MinImpactSpeedForHeavyEffects;                              // 0x0038   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x003C   (0x0004)  MISSED
	UAkAudioEvent*                                     ImpactAudioEvent;                                           // 0x0040   (0x0008)  
	FLandingEffectDataPerPhysicalSurface               Default;                                                    // 0x0048   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               grass;                                                      // 0x0078   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               ForrestGroundCoastal;                                       // 0x00A8   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               ForrestGroundContinental;                                   // 0x00D8   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Rock;                                                       // 0x0108   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Stone;                                                      // 0x0138   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Gravel;                                                     // 0x0168   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               GravelBeach;                                                // 0x0198   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Pebbles;                                                    // 0x01C8   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Snow;                                                       // 0x01F8   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Ice;                                                        // 0x0228   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Sand;                                                       // 0x0258   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Asphalt;                                                    // 0x0288   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Dirt;                                                       // 0x02B8   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Water;                                                      // 0x02E8   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               WaterOcean;                                                 // 0x0318   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Cloth;                                                      // 0x0348   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Metal;                                                      // 0x0378   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Aluminium;                                                  // 0x03A8   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Concrete;                                                   // 0x03D8   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Brick;                                                      // 0x0408   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Wood;                                                       // 0x0438   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Plastic;                                                    // 0x0468   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Rubber;                                                     // 0x0498   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Glass;                                                      // 0x04C8   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Folliage;                                                   // 0x04F8   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Bark;                                                       // 0x0528   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Flesh;                                                      // 0x0558   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               RoofTile;                                                   // 0x0588   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               CeramicsTiles;                                              // 0x05B8   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Scrap;                                                      // 0x05E8   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Trunk;                                                      // 0x0618   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Leaves;                                                     // 0x0648   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Plaster;                                                    // 0x0678   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Kevlar;                                                     // 0x06A8   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               ForceField;                                                 // 0x06D8   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               NoEffect;                                                   // 0x0708   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               WhiteGravel;                                                // 0x0738   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               Mud;                                                        // 0x0768   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               RiverSand;                                                  // 0x0798   (0x0030)  
	FLandingEffectDataPerPhysicalSurface               GrassContinental;                                           // 0x07C8   (0x0030)  
};

/// Class /Script/ConZ.LargeAquaticAnimal
/// Size: 0x0060 (0x0007B0 - 0x000810)
class ALargeAquaticAnimal : public AConZCharacter
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x07B0   (0x0018)  MISSED
	float                                              _maxHealth;                                                 // 0x07C8   (0x0004)  
	float                                              _health;                                                    // 0x07CC   (0x0004)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x07D0   (0x0010)  MISSED
	float                                              _maxTimeWithoutRelevantPrisoners;                           // 0x07E0   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x07E4   (0x0004)  MISSED
	EFishBehavior                                      _behavior;                                                  // 0x07E8   (0x0001)  
	unsigned char                                      UnknownData03_5[0x7];                                       // 0x07E9   (0x0007)  MISSED
	UAnimMontage*                                      _deathAnimation;                                            // 0x07F0   (0x0008)  
	float                                              _deathSinkingSpeed;                                         // 0x07F8   (0x0004)  
	float                                              _capsuleRadiusAndHalfHeightOnDeath;                         // 0x07FC   (0x0004)  
	unsigned char                                      UnknownData04_6[0x10];                                      // 0x0800   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.LargeAquaticAnimal.OnRep_Health
	void OnRep_Health(float oldValue);                                                                                       // [0x23155c0] Final|Native|Private 
	// Function /Script/ConZ.LargeAquaticAnimal.OnRep_Behavior
	void OnRep_Behavior(EFishBehavior oldValue);                                                                             // [0x2315540] Final|Native|Private 
};

/// Class /Script/ConZ.LargeAquaticAnimalSpeciesData
/// Size: 0x0010 (0x000030 - 0x000040)
class ULargeAquaticAnimalSpeciesData : public UDataAsset
{ 
public:
	UClass*                                            AnimalClass;                                                // 0x0030   (0x0008)  
	float                                              RequiredDepthForSpawning;                                   // 0x0038   (0x0004)  
	EConZWaterSplineType                               SpawningWaterType;                                          // 0x003C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x003D   (0x0003)  MISSED
};

/// Class /Script/ConZ.LaserTriggerComponent
/// Size: 0x0070 (0x0004D0 - 0x000540)
class ULaserTriggerComponent : public UTriggerComponent
{ 
public:
	UBoxComponent*                                     BoxCollisionComponent;                                      // 0x04D0   (0x0008)  
	UStaticMeshComponent*                              VisualizationMeshComponent;                                 // 0x04D8   (0x0008)  
	FVector                                            _laserDirection;                                            // 0x04E0   (0x000C)  
	float                                              _maxLaserLength;                                            // 0x04EC   (0x0004)  
	float                                              _laserThickness;                                            // 0x04F0   (0x0004)  
	float                                              _laserHeight;                                               // 0x04F4   (0x0004)  
	UStaticMesh*                                       _visualizationMesh;                                         // 0x04F8   (0x0008)  
	FTransform                                         _laserMeshTransform;                                        // 0x0500   (0x0030)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0530   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.LaserTriggerComponent.BoxComponent_OnComponentEndOverlap
	void BoxComponent_OnComponentEndOverlap(UPrimitiveComponent* activatedComp, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // [0x23191b0] Final|Native|Private 
	// Function /Script/ConZ.LaserTriggerComponent.BoxComponent_OnComponentBeginOverlap
	void BoxComponent_OnComponentBeginOverlap(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x2318f90] Final|Native|Private|HasOutParms 
};

/// Class /Script/ConZ.LevelMarkers
/// Size: 0x0030 (0x000220 - 0x000250)
class ALevelMarkers : public AActor
{ 
public:
	TArray<FLadderMarker>                              LadderMarkers;                                              // 0x0220   (0x0010)  
	TArray<FWindowMarker>                              WindowMarkers;                                              // 0x0230   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0240   (0x0010)  MISSED
};

/// Class /Script/ConZ.LevelRadiationSource
/// Size: 0x0070 (0x000220 - 0x000290)
class ALevelRadiationSource : public AActor
{ 
public:
	USceneComponent*                                   _root;                                                      // 0x0220   (0x0008)  
	UStaticMeshComponent*                              _epicenter;                                                 // 0x0228   (0x0008)  
	UStaticMeshComponent*                              _extents;                                                   // 0x0230   (0x0008)  
	UStaticMeshComponent*                              _falloff;                                                   // 0x0238   (0x0008)  
	FVector                                            _epicenterLocation;                                         // 0x0240   (0x000C)  
	float                                              _epicenterRadius;                                           // 0x024C   (0x0004)  
	float                                              _maxRadiationAmountIncreaseRate;                            // 0x0250   (0x0004)  
	float                                              _radiationAmountIncreaseRateFalloffExponent;                // 0x0254   (0x0004)  
	float                                              _radiationNoiseAmountScale;                                 // 0x0258   (0x0004)  
	float                                              _radiationNoiseLocationScale;                               // 0x025C   (0x0004)  
	bool                                               _shouldDrawEpicenter;                                       // 0x0260   (0x0001)  
	bool                                               _shouldDrawExtents;                                         // 0x0261   (0x0001)  
	bool                                               _shouldDrawRadiationFalloffVisualization;                   // 0x0262   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x0263   (0x0001)  MISSED
	float                                              _radiationFalloffVisualizationZBias;                        // 0x0264   (0x0004)  
	UMaterialInterface*                                _radiationFalloffVisualizationMaterial;                     // 0x0268   (0x0008)  
	bool                                               _shouldDrawExtentBounds;                                    // 0x0270   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0271   (0x0007)  MISSED
	UTextureRenderTarget2D*                            _radiationLookupRenderTarget;                               // 0x0278   (0x0008)  
	UMaterialInterface*                                _radiationLookupRenderMaterial;                             // 0x0280   (0x0008)  
	UMaterialParameterCollection*                      _radiationMaterialParamCollection;                          // 0x0288   (0x0008)  


	/// Functions
	// Function /Script/ConZ.LevelRadiationSource.RenderRadiationIntensityToLookupTexture
	void RenderRadiationIntensityToLookupTexture();                                                                          // [0x2319650] Final|Native|Public  
};

/// Class /Script/ConZ.LevelUpNotification
/// Size: 0x0000 (0x000030 - 0x000030)
class ULevelUpNotification : public UConZNotification
{ 
public:
};

/// Class /Script/ConZ.LevelUpNotificationDescription
/// Size: 0x0010 (0x000040 - 0x000050)
class ULevelUpNotificationDescription : public UNotificationDescription
{ 
public:
	UClass*                                            Skill;                                                      // 0x0040   (0x0008)  
	ESkillLevel                                        skillLevel;                                                 // 0x0048   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0049   (0x0007)  MISSED
};

/// Class /Script/ConZ.LevelUpNotificationWidget
/// Size: 0x0068 (0x000260 - 0x0002C8)
class ULevelUpNotificationWidget : public UUserWidget
{ 
public:
	UOverlay*                                          _overlay;                                                   // 0x0260   (0x0008)  
	UImage*                                            _backgroundImage;                                           // 0x0268   (0x0008)  
	UImage*                                            _arrowImage;                                                // 0x0270   (0x0008)  
	UTextBlock*                                        _skillLevelText;                                            // 0x0278   (0x0008)  
	UTextBlock*                                        _skillNameText;                                             // 0x0280   (0x0008)  
	UAkAudioEvent*                                     _levelUpNotificationAudioEvent;                             // 0x0288   (0x0008)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0290   (0x0004)  MISSED
	float                                              _displayTime;                                               // 0x0294   (0x0004)  
	float                                              _slideInTime;                                               // 0x0298   (0x0004)  
	float                                              _slideOutTime;                                              // 0x029C   (0x0004)  
	unsigned char                                      UnknownData01_6[0x28];                                      // 0x02A0   (0x0028)  MISSED


	/// Functions
	// Function /Script/ConZ.LevelUpNotificationWidget.GetLevelUpAnimation
	UWidgetAnimation* GetLevelUpAnimation();                                                                                 // [0x2859740] Event|Protected|BlueprintEvent 
};

/// Class /Script/ConZ.LiftComponent
/// Size: 0x0020 (0x000200 - 0x000220)
class ULiftComponent : public USceneComponent
{ 
public:
	TArray<FAerodynamicSurface>                        AerodynamicSurfaces;                                        // 0x01F8   (0x0010)  
	FVector                                            PropellerLocation;                                          // 0x0208   (0x000C)  
	float                                              AirDensity;                                                 // 0x0214   (0x0004)  
	float                                              MaxForceMagnitude;                                          // 0x0218   (0x0004)  
	float                                              WindInfluenceMultiplier;                                    // 0x021C   (0x0004)  
};

/// Class /Script/ConZ.ListDuplicateTexturesCommandlet
/// Size: 0x0000 (0x000080 - 0x000080)
class UListDuplicateTexturesCommandlet : public UCommandlet
{ 
public:
};

/// Class /Script/ConZ.ListUnreferencedAssetsCommandlet
/// Size: 0x0000 (0x000080 - 0x000080)
class UListUnreferencedAssetsCommandlet : public UCommandlet
{ 
public:
};

/// Class /Script/ConZ.LoadingIconWidget
/// Size: 0x0000 (0x000260 - 0x000260)
class ULoadingIconWidget : public UUserWidget
{ 
public:
};

/// Class /Script/ConZ.LoadingScreen
/// Size: 0x0008 (0x000260 - 0x000268)
class ULoadingScreen : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0260   (0x0008)  MISSED
};

/// Class /Script/ConZ.LocationMarker
/// Size: 0x0000 (0x000220 - 0x000220)
class ALocationMarker : public AActor
{ 
public:
};

/// Class /Script/ConZ.LocationObjective
/// Size: 0x0050 (0x000320 - 0x000370)
class ALocationObjective : public AObjective
{ 
public:
	TWeakObjectPtr<ALocationTrigger*>                  _locationTrigger;                                           // 0x0320   (0x0028)  
	UClass*                                            _locationMarkerClass;                                       // 0x0348   (0x0008)  
	bool                                               _shouldRemoveObjectiveItem;                                 // 0x0350   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0351   (0x0007)  MISSED
	UClass*                                            _objectiveItemToRemove;                                     // 0x0358   (0x0008)  
	AActor*                                            _locationMarker;                                            // 0x0360   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0368   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.LocationObjective.OnRep_LocationMarker
	void OnRep_LocationMarker();                                                                                             // [0x12358c0] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.LocationObjective.OnLocationEnter
	void OnLocationEnter(AActor* OverlapedActor, AActor* OtherActor);                                                        // [0x2319440] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.LocationTrigger
/// Size: 0x0038 (0x000228 - 0x000260)
class ALocationTrigger : public ATriggerBox
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0228   (0x0008)  MISSED
	FTransform                                         _markerTransform;                                           // 0x0230   (0x0030)  
};

/// Class /Script/ConZ.LockableItemComponent
/// Size: 0x0030 (0x0000C8 - 0x0000F8)
class ULockableItemComponent : public UItemComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00C8   (0x0008)  MISSED
	TArray<ULockData*>                                 _staticLocks;                                               // 0x00D0   (0x0010)  
	TArray<ULockItemTag*>                              _lockItems;                                                 // 0x00E0   (0x0010)  
	EAccessLevel                                       _activeAccessLevel;                                         // 0x00F0   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x00F1   (0x0007)  MISSED
};

/// Class /Script/ConZ.LockBombDefusalMinigame
/// Size: 0x0020 (0x0004E8 - 0x000508)
class ALockBombDefusalMinigame : public ABombDefusalMinigameBase
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x04E8   (0x0010)  MISSED
	UClass*                                            _bombClass;                                                 // 0x04F8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0500   (0x0008)  MISSED
};

/// Class /Script/ConZ.Lockpickable
/// Size: 0x0000 (0x000028 - 0x000028)
class ULockpickable : public UInterface
{ 
public:
};

/// Class /Script/ConZ.LockpickableLocksVisualComponent
/// Size: 0x0040 (0x000200 - 0x000240)
class ULockpickableLocksVisualComponent : public USceneComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0200   (0x0008)  MISSED
	TArray<FString>                                    _lockStaticMeshComponentNames;                              // 0x0208   (0x0010)  
	UStaticMesh*                                       _lockMeshPerLockDifficulty;                                 // 0x0218   (0x0020)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0238   (0x0008)  MISSED
};

/// Class /Script/ConZ.LockpickingMinigame
/// Size: 0x01B8 (0x0002F8 - 0x0004B0)
class ALockpickingMinigame : public AMinigame
{ 
public:
	UStaticMeshComponent*                              _outerRing;                                                 // 0x02F8   (0x0008)  
	UStaticMeshComponent*                              _movableRing;                                               // 0x0300   (0x0008)  
	USceneComponent*                                   _lockpickingSetAnchor;                                      // 0x0308   (0x0008)  
	USceneComponent*                                   _lockpickManipulator;                                       // 0x0310   (0x0008)  
	USceneComponent*                                   _lockpickAnchor;                                            // 0x0318   (0x0008)  
	UStaticMeshComponent*                              _lockpick;                                                  // 0x0320   (0x0008)  
	USceneComponent*                                   _tensionToolManipulator;                                    // 0x0328   (0x0008)  
	USceneComponent*                                   _tensionToolAnchor;                                         // 0x0330   (0x0008)  
	UStaticMeshComponent*                              _tensionTool;                                               // 0x0338   (0x0008)  
	FVector                                            _zoomStartLocation;                                         // 0x0340   (0x000C)  
	FVector                                            _zoomEndLocation;                                           // 0x034C   (0x000C)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0358   (0x0008)  MISSED
	FTransform                                         _protectionParticlesTransform;                              // 0x0360   (0x0030)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0390   (0x0008)  MISSED
	UCurveFloat*                                       _zoomCurve;                                                 // 0x0398   (0x0008)  
	UCurveFloat*                                       _fadeCurve;                                                 // 0x03A0   (0x0008)  
	float                                              _pickBreakingMultiplierForMediumDifficulty;                 // 0x03A8   (0x0004)  
	float                                              _pickBreakingMultiplierForHardDifficulty;                   // 0x03AC   (0x0004)  
	unsigned char                                      UnknownData02_5[0x30];                                      // 0x03B0   (0x0030)  MISSED
	UAkAudioEvent*                                     _lockpickingLockpickMovementStartAudioEvent;                // 0x03E0   (0x0008)  
	UAkAudioEvent*                                     _lockpickingLockpickMovementStopAudioEvent;                 // 0x03E8   (0x0008)  
	UAkAudioEvent*                                     _lockpickingLockTensionStartAudioEvent;                     // 0x03F0   (0x0008)  
	UAkAudioEvent*                                     _lockpickingLockTensionStopAudioEvent;                      // 0x03F8   (0x0008)  
	UAkAudioEvent*                                     _lockpickingLockTurningStartAudioEvent;                     // 0x0400   (0x0008)  
	UAkAudioEvent*                                     _lockpickingLockTurningStopAudioEvent;                      // 0x0408   (0x0008)  
	UAkAudioEvent*                                     _lockpickingSuccessAudioEvent;                              // 0x0410   (0x0008)  
	UAkAudioEvent*                                     _lockpickingFailedAudioEvent;                               // 0x0418   (0x0008)  
	UAkAudioEvent*                                     _lockpickingResetAudioEvent;                                // 0x0420   (0x0008)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x0428   (0x0004)  MISSED
	float                                              _rotatingStartAngle;                                        // 0x042C   (0x0004)  
	float                                              _duration;                                                  // 0x0430   (0x0004)  
	float                                              _angleTolerance;                                            // 0x0434   (0x0004)  
	unsigned char                                      UnknownData04_6[0x78];                                      // 0x0438   (0x0078)  MISSED


	/// Functions
	// Function /Script/ConZ.LockpickingMinigame.OnTensionToolDestroyed
	void OnTensionToolDestroyed(AActor* tensionTool);                                                                        // [0x23195c0] Final|Native|Private 
	// Function /Script/ConZ.LockpickingMinigame.OnLockpickDestroyed
	void OnLockpickDestroyed(AActor* lockpick);                                                                              // [0x2319530] Final|Native|Private 
};

/// Class /Script/ConZ.StandardLockMinigameConfiguration
/// Size: 0x0010 (0x000068 - 0x000078)
class UStandardLockMinigameConfiguration : public ULockpickingMinigameConfiguration
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0068   (0x0010)  MISSED
};

/// Class /Script/ConZ.LockData
/// Size: 0x0090 (0x000028 - 0x0000B8)
class ULockData : public UObject
{ 
public:
	UClass*                                            LockMinigameClass;                                          // 0x0028   (0x0008)  
	UClass*                                            LockMinigameConfigurationClass;                             // 0x0030   (0x0008)  
	UClass*                                            FailurePenaltyClass;                                        // 0x0038   (0x0008)  
	bool                                               AreFamePointsRequired;                                      // 0x0040   (0x0001)  
	bool                                               IgnoreLockProtection;                                       // 0x0041   (0x0001)  
	bool                                               CanBeForceUnlocked;                                         // 0x0042   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x0043   (0x0001)  MISSED
	float                                              ForceUnlockTime;                                            // 0x0044   (0x0004)  
	float                                              TotalCrowbarDamage;                                         // 0x0048   (0x0004)  
	ELockDifficulty                                    LockDifficulty;                                             // 0x004C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x004D   (0x0003)  MISSED
	FText                                              LockedMessage;                                              // 0x0050   (0x0018)  
	FText                                              LockpickMessage;                                            // 0x0068   (0x0018)  
	int32_t                                            NumberOfNeutralizationAttempts;                             // 0x0080   (0x0004)  
	int32_t                                            NumRemainingNeutralizationAttempts;                         // 0x0084   (0x0004)  
	float                                              lockHP;                                                     // 0x0088   (0x0004)  
	FThieverySkillExperienceAwards                     NoSkillExperienceAwards;                                    // 0x008C   (0x0008)  
	FThieverySkillExperienceAwards                     BasicSkillExperienceAwards;                                 // 0x0094   (0x0008)  
	FThieverySkillExperienceAwards                     MediumSkillExperienceAwards;                                // 0x009C   (0x0008)  
	FThieverySkillExperienceAwards                     AdvancedSkillExperienceAwards;                              // 0x00A4   (0x0008)  
	FThieverySkillExperienceAwards                     AboveAdvancedSkillExperienceAwards;                         // 0x00AC   (0x0008)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x00B4   (0x0004)  MISSED
};

/// Class /Script/ConZ.StandardLockData
/// Size: 0x0028 (0x0000B8 - 0x0000E0)
class UStandardLockData : public ULockData
{ 
public:
	UStaticMesh*                                       LockMeshOuter;                                              // 0x00B8   (0x0008)  
	UStaticMesh*                                       LockMeshInner;                                              // 0x00C0   (0x0008)  
	float                                              RotatingTresholdAngle;                                      // 0x00C8   (0x0004)  
	float                                              Duration;                                                   // 0x00CC   (0x0004)  
	float                                              AngleTolerance;                                             // 0x00D0   (0x0004)  
	float                                              PickBreakingMultiplier;                                     // 0x00D4   (0x0004)  
	int32_t                                            PickBreakingAtNumberOfFailedPushAttempts;                   // 0x00D8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00DC   (0x0004)  MISSED
};

/// Class /Script/ConZ.LockBombData
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class ULockBombData : public ULockData
{ 
public:
	float                                              Duration;                                                   // 0x00B8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00BC   (0x0004)  MISSED
};

/// Class /Script/ConZ.CombinationLockData
/// Size: 0x0018 (0x0000B8 - 0x0000D0)
class UCombinationLockData : public ULockData
{ 
public:
	int32_t                                            Combination;                                                // 0x00B8   (0x0004)  
	int32_t                                            LockIndex;                                                  // 0x00BC   (0x0004)  
	UClass*                                            SetCombinationMinigameClass;                                // 0x00C0   (0x0008)  
	UClass*                                            SetCombinationMinigameConfigurationClass;                   // 0x00C8   (0x0008)  
};

/// Class /Script/ConZ.DialLockData
/// Size: 0x0038 (0x0000D0 - 0x000108)
class UDialLockData : public UCombinationLockData
{ 
public:
	int32_t                                            NumberOfWheels;                                             // 0x00D0   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00D4   (0x0004)  MISSED
	UStaticMesh*                                       LockBodyMesh;                                               // 0x00D8   (0x0008)  
	UStaticMesh*                                       LockClampMesh;                                              // 0x00E0   (0x0008)  
	TArray<UStaticMesh*>                               LockDialMeshes;                                             // 0x00E8   (0x0010)  
	FVector                                            WheelUpVector;                                              // 0x00F8   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0104   (0x0004)  MISSED
};

/// Class /Script/ConZ.UpgradeItemTag
/// Size: 0x0008 (0x000030 - 0x000038)
class UUpgradeItemTag : public UBaseItemTag
{ 
public:
	int32_t                                            Price;                                                      // 0x0030   (0x0004)  
	bool                                               AttachAsItem;                                               // 0x0034   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0035   (0x0003)  MISSED
};

/// Class /Script/ConZ.LockItemTag
/// Size: 0x0008 (0x000038 - 0x000040)
class ULockItemTag : public UUpgradeItemTag
{ 
public:
	ULockData*                                         LockData;                                                   // 0x0038   (0x0008)  
};

/// Class /Script/ConZ.LockProtectionTag
/// Size: 0x0038 (0x000038 - 0x000070)
class ULockProtectionTag : public UUpgradeItemTag
{ 
public:
	UParticleSystem*                                   FailureParticles;                                           // 0x0038   (0x0008)  
	UAkAudioEvent*                                     FailureAudio;                                               // 0x0040   (0x0008)  
	UParticleSystem*                                   FailureParticlesInWorld;                                    // 0x0048   (0x0008)  
	UAkAudioEvent*                                     FailureAudioInWorld;                                        // 0x0050   (0x0008)  
	FVector                                            FailureParticlesScaleInWorld;                               // 0x0058   (0x000C)  
	float                                              _baseDamage;                                                // 0x0064   (0x0004)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0068   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.LockProtectionTag.SetModifiedDamage
	void SetModifiedDamage(float Damage);                                                                                    // [0x2319690] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/ConZ.LockProtectionTag.ResetDamage
	void ResetDamage();                                                                                                      // [0x2319670] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/ConZ.LockProtectionTag.GetTotalDamage
	float GetTotalDamage();                                                                                                  // [0x23193e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.LockProtectionTag.GetBaseDamage
	float GetBaseDamage();                                                                                                   // [0x23193b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.LockpickingStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class ULockpickingStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.LockpickingTensionToolItemTag
/// Size: 0x0040 (0x000030 - 0x000070)
class ULockpickingTensionToolItemTag : public UBaseItemTag
{ 
public:
	UStaticMesh*                                       Mesh;                                                       // 0x0030   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0038   (0x0008)  MISSED
	FTransform                                         TensionToolTransform;                                       // 0x0040   (0x0030)  
};

/// Class /Script/ConZ.LockpickingWidget
/// Size: 0x0008 (0x000278 - 0x000280)
class ULockpickingWidget : public UMinigameWidget
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0278   (0x0008)  MISSED
};

/// Class /Script/ConZ.LockpickItemTag
/// Size: 0x0010 (0x000030 - 0x000040)
class ULockpickItemTag : public UBaseItemTag
{ 
public:
	UStaticMesh*                                       Mesh;                                                       // 0x0030   (0x0008)  
	float                                              LockpickingDurability;                                      // 0x0038   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x003C   (0x0004)  MISSED
};

/// Class /Script/ConZ.LockProtectionItem
/// Size: 0x0000 (0x000930 - 0x000930)
class ALockProtectionItem : public AEquipmentItem
{ 
public:
};

/// Class /Script/ConZ.MessageBox
/// Size: 0x0038 (0x000260 - 0x000298)
class UMessageBox : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UTextBlock*                                        _message;                                                   // 0x0278   (0x0008)  
	UHorizontalBox*                                    _buttonRow;                                                 // 0x0280   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0288   (0x0010)  MISSED
};

/// Class /Script/ConZ.LogoutMessageBox
/// Size: 0x0010 (0x000298 - 0x0002A8)
class ULogoutMessageBox : public UMessageBox
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0298   (0x0010)  MISSED
};

/// Class /Script/ConZ.MainMenu
/// Size: 0x0080 (0x000260 - 0x0002E0)
class UMainMenu : public UBaseMenu
{ 
public:
	UConZStandardButton*                               _continueButton;                                            // 0x0260   (0x0008)  
	UConZStandardButton*                               _multiplayerButton;                                         // 0x0268   (0x0008)  
	UConZStandardButton*                               _singleplayerButton;                                        // 0x0270   (0x0008)  
	UConZStandardButton*                               _optionsButton;                                             // 0x0278   (0x0008)  
	UConZStandardButton*                               _quitButton;                                                // 0x0280   (0x0008)  
	UTextBlock*                                        _selectedCharacter;                                         // 0x0288   (0x0008)  
	UVerticalBox*                                      _messageBoxPanel;                                           // 0x0290   (0x0008)  
	UTextBlock*                                        _gameVersionText;                                           // 0x0298   (0x0008)  
	FText                                              _createOrSelectCharacterText;                               // 0x02A0   (0x0018)  
	FText                                              _quitMessageBoxText;                                        // 0x02B8   (0x0018)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x02D0   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.MainMenu.OnSingleplayerClicked
	void OnSingleplayerClicked();                                                                                            // [0x231f270] Final|Native|Private 
	// Function /Script/ConZ.MainMenu.OnQuitClicked
	void OnQuitClicked();                                                                                                    // [0x231f250] Final|Native|Private 
	// Function /Script/ConZ.MainMenu.OnOptionsClicked
	void OnOptionsClicked();                                                                                                 // [0x231f230] Final|Native|Private 
	// Function /Script/ConZ.MainMenu.OnMultiplayerClicked
	void OnMultiplayerClicked();                                                                                             // [0x231f210] Final|Native|Private 
	// Function /Script/ConZ.MainMenu.OnContinueClicked
	void OnContinueClicked();                                                                                                // [0x231f1f0] Final|Native|Private 
};

/// Class /Script/ConZ.MenuGameMode
/// Size: 0x0050 (0x000308 - 0x000358)
class AMenuGameMode : public AGameMode
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0308   (0x0050)  MISSED
};

/// Class /Script/ConZ.MainMenuGameMode
/// Size: 0x0050 (0x000358 - 0x0003A8)
class AMainMenuGameMode : public AMenuGameMode
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0358   (0x0050)  MISSED
};

/// Class /Script/ConZ.MainMenuHUD
/// Size: 0x0028 (0x000310 - 0x000338)
class AMainMenuHUD : public AHUD
{ 
public:
	EConZMenu                                          BaseGameModeMenu;                                           // 0x0310   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0311   (0x0007)  MISSED
	UMasterMenu*                                       _masterMenu;                                                // 0x0318   (0x0008)  
	UClass*                                            _masterMenuClass;                                           // 0x0320   (0x0008)  
	UPrisonerCreationUIController*                     _prisonerCreationUIController;                              // 0x0328   (0x0008)  
	UClass*                                            _prisonerCreationUIControllerClass;                         // 0x0330   (0x0008)  
};

/// Class /Script/ConZ.MalfunctionsContainerWidget
/// Size: 0x00A8 (0x000260 - 0x000308)
class UMalfunctionsContainerWidget : public UUserWidget
{ 
public:
	FSlateColor                                        HotkeyTextColorUnhovered;                                   // 0x0260   (0x0028)  
	FSlateColor                                        HotkeyTextColorHovered;                                     // 0x0288   (0x0028)  
	UCircularMenuWidget*                               _malfunctionsCircularMenu;                                  // 0x02B0   (0x0008)  
	UWidgetSwitcher*                                   _hotkeyDisplaySwitcher;                                     // 0x02B8   (0x0008)  
	UTextBlock*                                        _twoOp;                                                     // 0x02C0   (0x0008)  
	UTextBlock*                                        _twoOp;                                                     // 0x02C8   (0x0008)  
	UTextBlock*                                        _threeOp;                                                   // 0x02D0   (0x0008)  
	UTextBlock*                                        _threeOp;                                                   // 0x02D8   (0x0008)  
	UTextBlock*                                        _threeOp;                                                   // 0x02E0   (0x0008)  
	UTextBlock*                                        _fourOp;                                                    // 0x02E8   (0x0008)  
	UTextBlock*                                        _fourOp;                                                    // 0x02F0   (0x0008)  
	UTextBlock*                                        _fourOp;                                                    // 0x02F8   (0x0008)  
	UTextBlock*                                        _fourOp;                                                    // 0x0300   (0x0008)  
};

/// Class /Script/ConZ.MalfunctionWidget
/// Size: 0x0010 (0x000260 - 0x000270)
class UMalfunctionWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0260   (0x0008)  MISSED
	UTextBlock*                                        _descriptionWidget;                                         // 0x0268   (0x0008)  


	/// Functions
	// Function /Script/ConZ.MalfunctionWidget.ExecuteAction
	void ExecuteAction();                                                                                                    // [0x231e830] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.VehicleMarkersData
/// Size: 0x0010 (0x000028 - 0x000038)
class UVehicleMarkersData : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0028   (0x0010)  MISSED
};

/// Class /Script/ConZ.VehicleMarkersRequest
/// Size: 0x0000 (0x000028 - 0x000028)
class UVehicleMarkersRequest : public UPlayerRpcChannelServerRequest
{ 
public:
};

/// Class /Script/ConZ.VehicleMarkersResponse
/// Size: 0x0008 (0x000028 - 0x000030)
class UVehicleMarkersResponse : public UPlayerRpcChannelServerResponse
{ 
public:
	UVehicleMarkersData*                               _payload;                                                   // 0x0028   (0x0008)  
};

/// Class /Script/ConZ.MasterMenu
/// Size: 0x00F0 (0x000260 - 0x000350)
class UMasterMenu : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0260   (0x0030)  MISSED
	UWidgetSwitcher*                                   _menuSwitcher;                                              // 0x0290   (0x0008)  
	TMap<EConZMenu, UClass*>                           _menuClasses;                                               // 0x0298   (0x0050)  
	EConZMenu                                          _menuToPreview;                                             // 0x02E8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x67];                                      // 0x02E9   (0x0067)  MISSED
};

/// Class /Script/ConZ.MathStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UMathStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.Mechanic
/// Size: 0x0090 (0x000930 - 0x0009C0)
class AMechanic : public ATrader
{ 
public:
	UMechanicCommonData*                               _commonData;                                                // 0x0930   (0x0008)  
	float                                              _clientUpdatePeriod;                                        // 0x0938   (0x0004)  
	int32_t                                            _clientUpdateMaxSize;                                       // 0x093C   (0x0004)  
	unsigned char                                      UnknownData00_6[0x80];                                      // 0x0940   (0x0080)  MISSED
};

/// Class /Script/ConZ.MechanicCommonData
/// Size: 0x00A0 (0x000030 - 0x0000D0)
class UMechanicCommonData : public UDataAsset
{ 
public:
	TMap<TWeakObjectPtr, FVehicleAttachmentAssociatedTradeables> VehicleAttachmentAssociatedTradeablesMap;         // 0x0030   (0x0050)  
	TMap<TWeakObjectPtr, TWeakObjectPtr>               VehicleAttachmentToTradeableInStockClassRedirectors;        // 0x0080   (0x0050)  
};

/// Class /Script/ConZ.MechanicInstallationService
/// Size: 0x0000 (0x000038 - 0x000038)
class UMechanicInstallationService : public UTraderService
{ 
public:
};

/// Class /Script/ConZ.MechanicRepairService
/// Size: 0x0000 (0x000038 - 0x000038)
class UMechanicRepairService : public UTraderService
{ 
public:
};

/// Class /Script/ConZ.MechanoidsManager
/// Size: 0x0070 (0x000220 - 0x000290)
class AMechanoidsManager : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0220   (0x0020)  MISSED
	UClass*                                            _droneSpawnClass;                                           // 0x0240   (0x0008)  
	float                                              _droneSpawnDistance;                                        // 0x0248   (0x0004)  
	float                                              _droneSpawnHeight;                                          // 0x024C   (0x0004)  
	float                                              _droneCheckForNearbyPlayerDistance;                         // 0x0250   (0x0004)  
	FDroneVisitTimeData                                _droneInitialVisitTime;                                     // 0x0254   (0x0008)  
	float                                              _droneVisitClusterRadius;                                   // 0x025C   (0x0004)  
	float                                              _weightPerSightingMode;                                     // 0x0260   (0x000C)  
	FDroneVisitTimeData                                _droneVisitTimeDataPerSightingMode;                         // 0x026C   (0x0018)  
	unsigned char                                      UnknownData01_6[0xC];                                       // 0x0284   (0x000C)  MISSED


	/// Functions
	// Function /Script/ConZ.MechanoidsManager.Drone_OnDestroyed
	void Drone_OnDestroyed(AActor* sender);                                                                                  // [0x22cad10] Final|Native|Private 
};

/// Class /Script/ConZ.MedicalItemTag
/// Size: 0x0000 (0x000030 - 0x000030)
class UMedicalItemTag : public UBaseItemTag
{ 
public:
};

/// Class /Script/ConZ.MedicalService
/// Size: 0x0000 (0x000038 - 0x000038)
class UMedicalService : public UTraderService
{ 
public:
};

/// Class /Script/ConZ.MedicalSkill
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMedicalSkill : public UIntelligenceSkill
{ 
public:
	FMedicalSkillParametersPerSkillLevel               _noSkillParameters;                                         // 0x00B0   (0x0008)  
	FMedicalSkillParametersPerSkillLevel               _basicParameters;                                           // 0x00B8   (0x0008)  
	FMedicalSkillParametersPerSkillLevel               _mediumParameters;                                          // 0x00C0   (0x0008)  
	FMedicalSkillParametersPerSkillLevel               _advancedParameters;                                        // 0x00C8   (0x0008)  
	FMedicalSkillParametersPerSkillLevel               _aboveAdvancedParameters;                                   // 0x00D0   (0x0008)  
};

/// Class /Script/ConZ.MedicationItem
/// Size: 0x0020 (0x000910 - 0x000930)
class AMedicationItem : public AItem
{ 
public:
	EMedicationUsage                                   Usage;                                                      // 0x0910   (0x0001)  
	EMedicationType                                    Type;                                                       // 0x0911   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0912   (0x0002)  MISSED
	float                                              DailyDoses;                                                 // 0x0914   (0x0004)  
	float                                              TimeToAbsorbSeconds;                                        // 0x0918   (0x0004)  
	float                                              EffectTimeMultiplier;                                       // 0x091C   (0x0004)  
	float                                              ReuseEffectTimeIncrease;                                    // 0x0920   (0x0004)  
	float                                              MaxEffectTime;                                              // 0x0924   (0x0004)  
	EMedicationRepeatedAbuseReaction                   RepeatedAbuseReaction;                                      // 0x0928   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0929   (0x0007)  MISSED
};

/// Class /Script/ConZ.MeleeAttackCollisionCapsule
/// Size: 0x0020 (0x000470 - 0x000490)
class UMeleeAttackCollisionCapsule : public UCapsuleComponent
{ 
public:
	FGameplayTag                                       _attachment;                                                // 0x0470   (0x0008)  
	FDataTableRowHandle                                _weaponDescRef;                                             // 0x0478   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0488   (0x0008)  MISSED
};

/// Class /Script/ConZ.MeleeCombatComponent
/// Size: 0x0108 (0x0000B0 - 0x0001B8)
class UMeleeCombatComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x108];                                     // 0x00B0   (0x0108)  MISSED
};

/// Class /Script/ConZ.MeleeDetectHitCollisionCapsule
/// Size: 0x0010 (0x000470 - 0x000480)
class UMeleeDetectHitCollisionCapsule : public UCapsuleComponent
{ 
public:
	EDetectHitCollisionType                            DetectHitCollisionType;                                     // 0x0470   (0x0001)  
	unsigned char                                      UnknownData00_6[0xF];                                       // 0x0471   (0x000F)  MISSED
};

/// Class /Script/ConZ.MeleeInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UMeleeInterface : public UInterface
{ 
public:
};

/// Class /Script/ConZ.MeleeSkillAnimationsPreset
/// Size: 0x0498 (0x000030 - 0x0004C8)
class UMeleeSkillAnimationsPreset : public UDataAsset
{ 
public:
	FMeleeSkillAnimations                              NoSkillAnimations;                                          // 0x0030   (0x0098)  
	FMeleeSkillAnimations                              BasicSkillAnimations;                                       // 0x00C8   (0x0098)  
	FMeleeSkillAnimations                              MediumSkillAnimations;                                      // 0x0160   (0x0098)  
	FMeleeSkillAnimations                              AdvancedSkillAnimations;                                    // 0x01F8   (0x0098)  
	FMeleeSkillParametersPerSkillLevel                 NoSkillParameters;                                          // 0x0290   (0x0088)  
	FMeleeSkillParametersPerSkillLevel                 BasicSkillParameters;                                       // 0x0318   (0x0088)  
	FMeleeSkillParametersPerSkillLevel                 MediumSkillParameters;                                      // 0x03A0   (0x0088)  
	FMeleeSkillParametersPerSkillLevel                 AdvancedSkillParameters;                                    // 0x0428   (0x0088)  
	float                                              NoSkillDamageMultiplier;                                    // 0x04B0   (0x0004)  
	float                                              BasicSkillDamageMultiplier;                                 // 0x04B4   (0x0004)  
	float                                              MediumSkillDamageMultiplier;                                // 0x04B8   (0x0004)  
	float                                              AdvancedSkillDamageMultiplier;                              // 0x04BC   (0x0004)  
	float                                              AboveAdvancedSkillDamageMultiplier;                         // 0x04C0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x04C4   (0x0004)  MISSED
};

/// Class /Script/ConZ.MeleeWeaponItemTag
/// Size: 0x0008 (0x000030 - 0x000038)
class UMeleeWeaponItemTag : public UBaseItemTag
{ 
public:
	float                                              CombatAnimationPlayRateModifier;                            // 0x0030   (0x0004)  
	float                                              StrengthBelowWhichCombatPerformanceBeginsToDrop;            // 0x0034   (0x0004)  
};

/// Class /Script/ConZ.MeleeWeaponsSkill
/// Size: 0x0000 (0x000108 - 0x000108)
class UMeleeWeaponsSkill : public UMeleeSkill
{ 
public:
};

/// Class /Script/ConZ.MenuButton
/// Size: 0x01B8 (0x000260 - 0x000418)
class UMenuButton : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x0260   (0x0050)  MISSED
	bool                                               PreviewSelectedState;                                       // 0x02B0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x02B1   (0x0007)  MISSED
	UImage*                                            _backgroundFocusImage;                                      // 0x02B8   (0x0008)  
	UTextBlock*                                        _text;                                                      // 0x02C0   (0x0008)  
	USizeBox*                                          _sizeBox;                                                   // 0x02C8   (0x0008)  
	FText                                              _initialTitle;                                              // 0x02D0   (0x0018)  
	FTabTextStyle                                      _selectedTextStyle;                                         // 0x02E8   (0x0098)  
	FTabTextStyle                                      _deselectedTextStyle;                                       // 0x0380   (0x0098)  
};

/// Class /Script/ConZ.MenuCameraController
/// Size: 0x0148 (0x000220 - 0x000368)
class AMenuCameraController : public AActor
{ 
public:
	ACineCameraActor*                                  _camera;                                                    // 0x0220   (0x0008)  
	USplineComponent*                                  _positionSpline;                                            // 0x0228   (0x0008)  
	USplineComponent*                                  _viewTargetSpline;                                          // 0x0230   (0x0008)  
	FVector2D                                          _mouseBasedRotationIntensity;                               // 0x0238   (0x0008)  
	FRuntimeFloatCurve                                 _positionWeightCurve;                                       // 0x0240   (0x0088)  
	FRuntimeFloatCurve                                 _viewTargetWeightCurve;                                     // 0x02C8   (0x0088)  
	float                                              _interpolationSpeed;                                        // 0x0350   (0x0004)  
	float                                              _mouseTrackingSpeed;                                        // 0x0354   (0x0004)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0358   (0x0010)  MISSED
};

/// Class /Script/ConZ.MenuHelpers
/// Size: 0x0038 (0x000030 - 0x000068)
class UMenuHelpers : public UDataAsset
{ 
public:
	UClass*                                            MainMenuClass;                                              // 0x0030   (0x0008)  
	UClass*                                            ServerBrowserClass;                                         // 0x0038   (0x0008)  
	UClass*                                            OptionsClass;                                               // 0x0040   (0x0008)  
	UClass*                                            AdvancedOptionsClass;                                       // 0x0048   (0x0008)  
	UClass*                                            CharacterCreationClass;                                     // 0x0050   (0x0008)  
	UClass*                                            CharacterSelectionClass;                                    // 0x0058   (0x0008)  
	UClass*                                            CharacterCreationSecondIterationClass;                      // 0x0060   (0x0008)  
};

/// Class /Script/ConZ.MenuPlayerController
/// Size: 0x0000 (0x000570 - 0x000570)
class AMenuPlayerController : public APlayerController
{ 
public:
};

/// Class /Script/ConZ.MeshHitZones
/// Size: 0x0020 (0x0000B0 - 0x0000D0)
class UMeshHitZones : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x00B0   (0x0010)  MISSED
	UMaterialInterface*                                _deactivationMaterial;                                      // 0x00C0   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x00C8   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.MeshHitZones.IsHitZoneActive
	bool IsHitZoneActive(int32_t zoneIndex);                                                                                 // [0x2327970] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.Message
/// Size: 0x0018 (0x000260 - 0x000278)
class UMessage : public UUserWidget
{ 
public:
	UTextBlock*                                        _text;                                                      // 0x0260   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0268   (0x0010)  MISSED
};

/// Class /Script/ConZ.MessageBoxWithCheckBox
/// Size: 0x0028 (0x000298 - 0x0002C0)
class UMessageBoxWithCheckBox : public UMessageBox
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0298   (0x0018)  MISSED
	UCheckBox*                                         _checkBox;                                                  // 0x02B0   (0x0008)  
	UTextBlock*                                        _checkBoxMessage;                                           // 0x02B8   (0x0008)  


	/// Functions
	// Function /Script/ConZ.MessageBoxWithCheckBox.OnCheckBoxStateChanged
	void OnCheckBoxStateChanged(bool checked);                                                                               // [0x2327a10] Final|Native|Private 
};

/// Class /Script/ConZ.MessageBoxWithEditableText
/// Size: 0x0028 (0x000298 - 0x0002C0)
class UMessageBoxWithEditableText : public UMessageBox
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0298   (0x0010)  MISSED
	UTextBlock*                                        _noteMessage;                                               // 0x02A8   (0x0008)  
	UEditableText*                                     _editableText;                                              // 0x02B0   (0x0008)  
	UTextBlock*                                        _warningMessage;                                            // 0x02B8   (0x0008)  
};

/// Class /Script/ConZ.MessageBoxWithList
/// Size: 0x0008 (0x000298 - 0x0002A0)
class UMessageBoxWithList : public UMessageBox
{ 
public:
	UScrollBox*                                        _listScrollBox;                                             // 0x0298   (0x0008)  
};

/// Class /Script/ConZ.MessageContainer
/// Size: 0x0010 (0x000260 - 0x000270)
class UMessageContainer : public UUserWidget
{ 
public:
	UVerticalBox*                                      _messages;                                                  // 0x0260   (0x0008)  
	UClass*                                            _messageClass;                                              // 0x0268   (0x0008)  
};

/// Class /Script/ConZ.Metabolism_ICU_GraphWidget
/// Size: 0x0028 (0x0001F0 - 0x000218)
class UMetabolism_ICU_GraphWidget : public UGraph2DWidget
{ 
public:
	UCurveFloat*                                       BaseCurve;                                                  // 0x01F0   (0x0008)  
	float                                              CurvePeriodBaseDuration;                                    // 0x01F8   (0x0004)  
	int32_t                                            MinSamplesForSingleCurvePeriod;                             // 0x01FC   (0x0004)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0200   (0x0018)  MISSED
};

/// Class /Script/ConZ.Metabolism_ICU_GraphWidget_EKG
/// Size: 0x0030 (0x000218 - 0x000248)
class UMetabolism_ICU_GraphWidget_EKG : public UMetabolism_ICU_GraphWidget
{ 
public:
	UCurveFloat*                                       TimeStretchCurveCurve;                                      // 0x0218   (0x0008)  
	UCurveFloat*                                       HeartbeatIrregularitiesCurve;                               // 0x0220   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0228   (0x0020)  MISSED
};

/// Class /Script/ConZ.Metabolism_ICU_GraphWidget_RR
/// Size: 0x0008 (0x000218 - 0x000220)
class UMetabolism_ICU_GraphWidget_RR : public UMetabolism_ICU_GraphWidget
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0218   (0x0008)  MISSED
};

/// Class /Script/ConZ.Metabolism_ICU_GraphWidget_SPO2
/// Size: 0x0018 (0x000218 - 0x000230)
class UMetabolism_ICU_GraphWidget_SPO2 : public UMetabolism_ICU_GraphWidget
{ 
public:
	UCurveFloat*                                       TimeStretchCurveCurve;                                      // 0x0218   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0220   (0x0010)  MISSED
};

/// Class /Script/ConZ.Metabolism_ICU_GraphWidget_ST
/// Size: 0x0020 (0x000218 - 0x000238)
class UMetabolism_ICU_GraphWidget_ST : public UMetabolism_ICU_GraphWidget
{ 
public:
	UCurveFloat*                                       TimeStretchCurveCurve;                                      // 0x0218   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0220   (0x0018)  MISSED
};

/// Class /Script/ConZ.Metabolism_ICU_GraphWidget_TEMP
/// Size: 0x0008 (0x000218 - 0x000220)
class UMetabolism_ICU_GraphWidget_TEMP : public UMetabolism_ICU_GraphWidget
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0218   (0x0008)  MISSED
};

/// Class /Script/ConZ.Metabolism_BCU_ICU_StatsPanel
/// Size: 0x0028 (0x000260 - 0x000288)
class UMetabolism_BCU_ICU_StatsPanel : public UUserWidget
{ 
public:
	UMetabolism_ICU_EKG_Stats*                         Stats_EKG;                                                  // 0x0260   (0x0008)  
	UMetabolism_ICU_ST_Stats*                          Stats_ST;                                                   // 0x0268   (0x0008)  
	UMetabolism_ICU_SPO2_Stats*                        Stats_SPO2;                                                 // 0x0270   (0x0008)  
	UMetabolism_ICU_RR_Stats*                          Stats_RR;                                                   // 0x0278   (0x0008)  
	UMetabolism_ICU_TEMP_Stats*                        Stats_TEMP;                                                 // 0x0280   (0x0008)  
};

/// Class /Script/ConZ.Metabolism_BCU_ICU_Monitor
/// Size: 0x0040 (0x000260 - 0x0002A0)
class UMetabolism_BCU_ICU_Monitor : public UUserWidget
{ 
public:
	UCurveFloat*                                       TimeStretchCurveCurve;                                      // 0x0260   (0x0008)  
	UCheckBox*                                         _chbSwitchICUState;                                         // 0x0268   (0x0008)  
	UWidgetSwitcher*                                   _icu_Switcher;                                              // 0x0270   (0x0008)  
	UMetabolism_BCU_ICU_StatsPanel*                    _icu_Collapsed;                                             // 0x0278   (0x0008)  
	UMetabolism_BCU_ICU_StatsPanel*                    _icu_Expanded;                                              // 0x0280   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0288   (0x0018)  MISSED


	/// Functions
	// Function /Script/ConZ.Metabolism_BCU_ICU_Monitor.OnICUStateChanged
	void OnICUStateChanged(bool isCollapsed);                                                                                // [0x2327ac0] Final|Native|Private 
};

/// Class /Script/ConZ.Metabolism_ICU_Expandable_Stats
/// Size: 0x0018 (0x000260 - 0x000278)
class UMetabolism_ICU_Expandable_Stats : public UUserWidget
{ 
public:
	bool                                               DisplayGraph;                                               // 0x0260   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0261   (0x0007)  MISSED
	UMetabolism_ICU_GraphWidget*                       _graph2D;                                                   // 0x0268   (0x0008)  
	UImage*                                            _graph2D_Background;                                        // 0x0270   (0x0008)  
};

/// Class /Script/ConZ.Metabolism_ICU_EKG_Stats
/// Size: 0x0008 (0x000278 - 0x000280)
class UMetabolism_ICU_EKG_Stats : public UMetabolism_ICU_Expandable_Stats
{ 
public:
	UTextBlock*                                        _heartPulseBPM;                                             // 0x0278   (0x0008)  
};

/// Class /Script/ConZ.Metabolism_ICU_ST_Stats
/// Size: 0x0010 (0x000278 - 0x000288)
class UMetabolism_ICU_ST_Stats : public UMetabolism_ICU_Expandable_Stats
{ 
public:
	UTextBlock*                                        _bloodPressure_mmHg;                                        // 0x0278   (0x0008)  
	UTextBlock*                                        _bloodPressure_kPa;                                         // 0x0280   (0x0008)  
};

/// Class /Script/ConZ.Metabolism_ICU_SPO2_Stats
/// Size: 0x0018 (0x000278 - 0x000290)
class UMetabolism_ICU_SPO2_Stats : public UMetabolism_ICU_Expandable_Stats
{ 
public:
	UTextBlock*                                        _spo2MinMax;                                                // 0x0278   (0x0008)  
	UTextBlock*                                        _spo2TextValue;                                             // 0x0280   (0x0008)  
	UProgressBar*                                      _spo2ProgBar;                                               // 0x0288   (0x0008)  
};

/// Class /Script/ConZ.Metabolism_ICU_RR_Stats
/// Size: 0x0018 (0x000278 - 0x000290)
class UMetabolism_ICU_RR_Stats : public UMetabolism_ICU_Expandable_Stats
{ 
public:
	UTextBlock*                                        _rrMinMax;                                                  // 0x0278   (0x0008)  
	UTextBlock*                                        _rrTextValue;                                               // 0x0280   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0288   (0x0008)  MISSED
};

/// Class /Script/ConZ.Metabolism_ICU_TEMP_Stats
/// Size: 0x0010 (0x000278 - 0x000288)
class UMetabolism_ICU_TEMP_Stats : public UMetabolism_ICU_Expandable_Stats
{ 
public:
	UTextBlock*                                        _tempMinMax;                                                // 0x0278   (0x0008)  
	UTextBlock*                                        _tempDeviation;                                             // 0x0280   (0x0008)  
};

/// Class /Script/ConZ.MetabolismAdvancedProgressBar
/// Size: 0x0238 (0x000260 - 0x000498)
class UMetabolismAdvancedProgressBar : public UUserWidget
{ 
public:
	FText                                              Title;                                                      // 0x0260   (0x0018)  
	URetainerBox*                                      _progressBarEffect;                                         // 0x0278   (0x0008)  
	UTextBlock*                                        _titleText;                                                 // 0x0280   (0x0008)  
	UTextBlock*                                        _valueText;                                                 // 0x0288   (0x0008)  
	USizeBox*                                          _apbSize;                                                   // 0x0290   (0x0008)  
	UImage*                                            _progressBarBackground;                                     // 0x0298   (0x0008)  
	FText                                              _defaultValue;                                              // 0x02A0   (0x0018)  
	FMetabolismAPBFontStyle                            _fontStyle;                                                 // 0x02B8   (0x0030)  
	FMargin                                            _progressBarPadding;                                        // 0x02E8   (0x0010)  
	FVector2D                                          _size;                                                      // 0x02F8   (0x0008)  
	FSlateBrush                                        _backgroundImageBrush;                                      // 0x0300   (0x0088)  
	FDataTableRowHandle                                _normalBackgroundColor;                                     // 0x0388   (0x0010)  
	FDataTableRowHandle                                _normalForegroundColor;                                     // 0x0398   (0x0010)  
	FDataTableRowHandle                                _normalTextColorEmpty;                                      // 0x03A8   (0x0010)  
	FDataTableRowHandle                                _normalTextColorFilled;                                     // 0x03B8   (0x0010)  
	FDataTableRowHandle                                _alertedBackgroundColor;                                    // 0x03C8   (0x0010)  
	FDataTableRowHandle                                _alertedForegroundColor;                                    // 0x03D8   (0x0010)  
	FDataTableRowHandle                                _alertedTextColorEmpty;                                     // 0x03E8   (0x0010)  
	FDataTableRowHandle                                _alertedTextColorFilled;                                    // 0x03F8   (0x0010)  
	FDataTableRowHandle                                _badBackgroundColor;                                        // 0x0408   (0x0010)  
	FDataTableRowHandle                                _badForegroundColor;                                        // 0x0418   (0x0010)  
	FDataTableRowHandle                                _badTextColorEmpty;                                         // 0x0428   (0x0010)  
	FDataTableRowHandle                                _badTextColorFilled;                                        // 0x0438   (0x0010)  
	FDataTableRowHandle                                _goodBackgroundColor;                                       // 0x0448   (0x0010)  
	FDataTableRowHandle                                _goodForegroundColor;                                       // 0x0458   (0x0010)  
	FDataTableRowHandle                                _goodTextColorEmpty;                                        // 0x0468   (0x0010)  
	FDataTableRowHandle                                _goodTextColorFilled;                                       // 0x0478   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0488   (0x0010)  MISSED
};

/// Class /Script/ConZ.MetabolismBasicInfoPanel
/// Size: 0x0048 (0x000260 - 0x0002A8)
class UMetabolismBasicInfoPanel : public UUserWidget
{ 
public:
	UMetabolismCurrentStatLight*                       _stat_Age;                                                  // 0x0260   (0x0008)  
	UMetabolismCurrentStatLight*                       _stat_Teeth;                                                // 0x0268   (0x0008)  
	UMetabolismCurrentStatLight*                       _stat_Lifetime;                                             // 0x0270   (0x0008)  
	UMetabolismCurrentStatLight*                       _stat_BloodType;                                            // 0x0278   (0x0008)  
	UMetabolismCurrentStatLight*                       _stat_Weight;                                               // 0x0280   (0x0008)  
	UMetabolismCurrentStatLight*                       _stat_BloodVolume;                                          // 0x0288   (0x0008)  
	UMetabolismCurrentStatLight*                       _stat_Health;                                               // 0x0290   (0x0008)  
	UMetabolismCurrentStatLight*                       _stat_Temperature;                                          // 0x0298   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x02A0   (0x0008)  MISSED
};

/// Class /Script/ConZ.MetabolismBodyEffectProgressBar
/// Size: 0x00D0 (0x000260 - 0x000330)
class UMetabolismBodyEffectProgressBar : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x28];                                      // 0x0260   (0x0028)  MISSED
	UMetabolismAdvancedProgressBar*                    _apb;                                                       // 0x0288   (0x0008)  
	UWidget*                                           _lifeThreateningSymbol;                                     // 0x0290   (0x0008)  
	UImage*                                            _infectedSymbol;                                            // 0x0298   (0x0008)  
	UImage*                                            _circularProgressBar;                                       // 0x02A0   (0x0008)  
	UCheckBox*                                         _interactionButton;                                         // 0x02A8   (0x0008)  
	FDataTableRowHandle                                _circularProgressBarColorFront;                             // 0x02B0   (0x0010)  
	FDataTableRowHandle                                _circularProgressBarColorBack;                              // 0x02C0   (0x0010)  
	float                                              _hoveredOpacity;                                            // 0x02D0   (0x0004)  
	float                                              _unhoveredOpacity;                                          // 0x02D4   (0x0004)  
	float                                              _otherIsSelectedUnhoveredOpacity;                           // 0x02D8   (0x0004)  
	float                                              _otherIsSelectedHoveredOpacity;                             // 0x02DC   (0x0004)  
	float                                              _infectedOpacity;                                           // 0x02E0   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4C];                                      // 0x02E4   (0x004C)  MISSED


	/// Functions
	// Function /Script/ConZ.MetabolismBodyEffectProgressBar.OnInteractionButtonClicked
	void OnInteractionButtonClicked(bool IsChecked);                                                                         // [0x2327b50] Final|Native|Private 
	// Function /Script/ConZ.MetabolismBodyEffectProgressBar.GetToolTipWidget
	UWidget* GetToolTipWidget();                                                                                             // [0x2327940] Final|Native|Private 
};

/// Class /Script/ConZ.MetabolismBodyOverviewPanel
/// Size: 0x0310 (0x000260 - 0x000570)
class UMetabolismBodyOverviewPanel : public UUserWidget
{ 
public:
	UScrollBox*                                        _symptomsScrollBox;                                         // 0x0260   (0x0008)  
	UMetabolismHumanBodyPanel*                         _humanBodyPanel;                                            // 0x0268   (0x0008)  
	URichTextBlock*                                    _symptomsBreadcrumb;                                        // 0x0270   (0x0008)  
	UMetabolismTissueGroupCheckbox*                    _checkboxMuscles;                                           // 0x0278   (0x0008)  
	UMetabolismTissueGroupCheckbox*                    _checkboxBones;                                             // 0x0280   (0x0008)  
	UMetabolismTissueGroupCheckbox*                    _checkboxOrgans;                                            // 0x0288   (0x0008)  
	UMetabolismRadialProgressBar*                      _rpb_Hitpoints;                                             // 0x0290   (0x0008)  
	UMetabolismRadialProgressBar*                      _rpb_Blood;                                                 // 0x0298   (0x0008)  
	UOverlay*                                          _treatmentMainOverlay;                                      // 0x02A0   (0x0008)  
	UButton*                                           _clearSelectionButton;                                      // 0x02A8   (0x0008)  
	UOverlay*                                          _selectedItemsOverlay;                                      // 0x02B0   (0x0008)  
	UOverlay*                                          _itemSelectionReminderOverlay;                              // 0x02B8   (0x0008)  
	UMetabolismLightItemDisplayPanel*                  _selectedItemsPanel;                                        // 0x02C0   (0x0008)  
	UMetabolismBodyEffectProgressBar*                  _activeConditionProgressBar;                                // 0x02C8   (0x0008)  
	UButton*                                           _treatButton;                                               // 0x02D0   (0x0008)  
	UClass*                                            _symptomWidgetClass;                                        // 0x02D8   (0x0008)  
	FMetabolismRadialProgressBarColorScheme            _lowHPColorScheme;                                          // 0x02E0   (0x0080)  
	FMetabolismRadialProgressBarColorScheme            _midHPColorScheme;                                          // 0x0360   (0x0080)  
	FMetabolismRadialProgressBarColorScheme            _highHPColorScheme;                                         // 0x03E0   (0x0080)  
	FMetabolismRadialProgressBarColorScheme            _lowBloodOxygenationColorScheme;                            // 0x0460   (0x0080)  
	FMetabolismRadialProgressBarColorScheme            _highBloodOxygenationColorScheme;                           // 0x04E0   (0x0080)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0560   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.MetabolismBodyOverviewPanel.OnTreat
	void OnTreat();                                                                                                          // [0x2327be0] Final|Native|Private 
	// Function /Script/ConZ.MetabolismBodyOverviewPanel.OnClearSelection
	void OnClearSelection();                                                                                                 // [0x2327aa0] Final|Native|Private 
};

/// Class /Script/ConZ.MetabolismBodyReservesPanel
/// Size: 0x0018 (0x000260 - 0x000278)
class UMetabolismBodyReservesPanel : public UUserWidget
{ 
public:
	UMetabolismRadialProgressBar*                      _rpb_Muscle;                                                // 0x0260   (0x0008)  
	UMetabolismRadialProgressBar*                      _rpb_Fat;                                                   // 0x0268   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0270   (0x0008)  MISSED
};

/// Class /Script/ConZ.MetabolismBodyStatsPanel
/// Size: 0x0078 (0x000260 - 0x0002D8)
class UMetabolismBodyStatsPanel : public UUserWidget
{ 
public:
	UMetabolismTitleAndAPB*                            _tapb_NutrientAbsorption_Protein;                           // 0x0260   (0x0008)  
	UMetabolismTitleAndAPB*                            _tapb_NutrientAbsorption_Carbs;                             // 0x0268   (0x0008)  
	UMetabolismTitleAndAPB*                            _tapb_NutrientAbsorption_Fat;                               // 0x0270   (0x0008)  
	UMetabolismTitleAndAPB*                            _tapb_NutrientAbsorption_Minerals;                          // 0x0278   (0x0008)  
	UMetabolismTitleAndAPB*                            _tapb_NutrientAbsorption_Vitamins;                          // 0x0280   (0x0008)  
	UMetabolismTitleAndAPB*                            _tapb_NutrientAbsorption_Water;                             // 0x0288   (0x0008)  
	UMetabolismTitleAndAPB*                            _tapb_NutrientAbsorption_Alcohol;                           // 0x0290   (0x0008)  
	UMetabolismTitleAndAPB*                            _tapb_BodyMassDistribution_Bones;                           // 0x0298   (0x0008)  
	UMetabolismTitleAndAPB*                            _tapb_BodyMassDistribution_Blood;                           // 0x02A0   (0x0008)  
	UMetabolismTitleAndAPB*                            _tapb_BodyMassDistribution_Intestines;                      // 0x02A8   (0x0008)  
	UMetabolismTitleAndAPB*                            _tapb_BodyMassDistribution_Skin;                            // 0x02B0   (0x0008)  
	UMetabolismTitleAndAPB*                            _tapb_BodyMassDistribution_Organs;                          // 0x02B8   (0x0008)  
	UMetabolismTitleAndAPB*                            _tapb_BodyMassDistribution_Fat;                             // 0x02C0   (0x0008)  
	UMetabolismTitleAndAPB*                            _tapb_BodyMassDistribution_Muscle;                          // 0x02C8   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x02D0   (0x0008)  MISSED
};

/// Class /Script/ConZ.MetabolismContainerSetDisplayPanel
/// Size: 0x0050 (0x000260 - 0x0002B0)
class UMetabolismContainerSetDisplayPanel : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0260   (0x0030)  MISSED
	UTabGroup*                                         _containerButtons;                                          // 0x0290   (0x0008)  
	UMetabolismLightItemDisplayPanel*                  _containerContents;                                         // 0x0298   (0x0008)  
	UClass*                                            _containerButtonClass;                                      // 0x02A0   (0x0008)  
	float                                              _interChildDistrance;                                       // 0x02A8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x02AC   (0x0004)  MISSED
};

/// Class /Script/ConZ.MetabolismCurrentStatDark
/// Size: 0x0080 (0x000260 - 0x0002E0)
class UMetabolismCurrentStatDark : public UUserWidget
{ 
public:
	FText                                              Title;                                                      // 0x0260   (0x0018)  
	UImage*                                            _titleBackground;                                           // 0x0278   (0x0008)  
	UTextBlock*                                        _title;                                                     // 0x0280   (0x0008)  
	UImage*                                            _valueBackground;                                           // 0x0288   (0x0008)  
	UTextBlock*                                        _value;                                                     // 0x0290   (0x0008)  
	FDataTableRowHandle                                _titleBackgroundColor;                                      // 0x0298   (0x0010)  
	FDataTableRowHandle                                _titleForegroundColor;                                      // 0x02A8   (0x0010)  
	FDataTableRowHandle                                _valueBackgroundColor;                                      // 0x02B8   (0x0010)  
	FDataTableRowHandle                                _valueForegroundColor;                                      // 0x02C8   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x02D8   (0x0008)  MISSED
};

/// Class /Script/ConZ.MetabolismCurrentStatLight
/// Size: 0x0058 (0x000260 - 0x0002B8)
class UMetabolismCurrentStatLight : public UUserWidget
{ 
public:
	FText                                              Title;                                                      // 0x0260   (0x0018)  
	UImage*                                            _valueBackground;                                           // 0x0278   (0x0008)  
	UTextBlock*                                        _title;                                                     // 0x0280   (0x0008)  
	URichTextBlock*                                    _value;                                                     // 0x0288   (0x0008)  
	FDataTableRowHandle                                _normalBackgroundColor;                                     // 0x0290   (0x0010)  
	FDataTableRowHandle                                _alertedBackgroundColor;                                    // 0x02A0   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x02B0   (0x0008)  MISSED
};

/// Class /Script/ConZ.MetabolismDigestionPanel
/// Size: 0x0038 (0x000260 - 0x000298)
class UMetabolismDigestionPanel : public UUserWidget
{ 
public:
	UClass*                                            FoodWidgetClass;                                            // 0x0260   (0x0008)  
	UMetabolismRadialProgressBar*                      _rpb_Stomach;                                               // 0x0268   (0x0008)  
	UMetabolismRadialProgressBar*                      _rpb_Intestine;                                             // 0x0270   (0x0008)  
	UMetabolismRadialProgressBar*                      _rpb_Colon;                                                 // 0x0278   (0x0008)  
	UMetabolismRadialProgressBar*                      _rpb_Bladder;                                               // 0x0280   (0x0008)  
	UWrapBox*                                          _foods;                                                     // 0x0288   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0290   (0x0008)  MISSED
};

/// Class /Script/ConZ.MetabolismHealthPanel
/// Size: 0x0050 (0x000260 - 0x0002B0)
class UMetabolismHealthPanel : public UUserWidget
{ 
public:
	UMetabolism_BCU_ICU_Monitor*                       _icuMonitor;                                                // 0x0260   (0x0008)  
	UMetabolismBodyOverviewPanel*                      _bodyOverviewPanel;                                         // 0x0268   (0x0008)  
	UMetabolismTreatmentPanel*                         _treatmentPanel;                                            // 0x0270   (0x0008)  
	UButton*                                           _resetHealthPanelToSelf;                                    // 0x0278   (0x0008)  
	UPanelWidget*                                      _healthPanelNormal;                                         // 0x0280   (0x0008)  
	UPanelWidget*                                      _healthPanelOutOfRange;                                     // 0x0288   (0x0008)  
	UWidgetSwitcher*                                   _healthPanelSwitcher;                                       // 0x0290   (0x0008)  
	UTextBlock*                                        _patientName;                                               // 0x0298   (0x0008)  
	UClass*                                            _tooltipClass;                                              // 0x02A0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x02A8   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.MetabolismHealthPanel.OnResetHealthPanelToSelf
	void OnResetHealthPanelToSelf();                                                                                         // [0x232a360] Final|Native|Private 
};

/// Class /Script/ConZ.MetabolismHumanBodyPanel
/// Size: 0x0498 (0x000260 - 0x0006F8)
class UMetabolismHumanBodyPanel : public UUserWidget
{ 
public:
	FLinearColor                                       ColdBodyColor;                                              // 0x0260   (0x0010)  
	FLinearColor                                       HotBodyColor;                                               // 0x0270   (0x0010)  
	float                                              BodyTemperaturePreview;                                     // 0x0280   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0284   (0x0004)  MISSED
	UImage*                                            _img_BodyGlow_Male;                                         // 0x0288   (0x0008)  
	UImage*                                            _img_BodyScan_Male;                                         // 0x0290   (0x0008)  
	UImage*                                            _img_BodyGlow_Female;                                       // 0x0298   (0x0008)  
	UImage*                                            _img_BodyScan_Female;                                       // 0x02A0   (0x0008)  
	UImage*                                            _img_Head_Male;                                             // 0x02A8   (0x0008)  
	UImage*                                            _img_Ear_Left_Male;                                         // 0x02B0   (0x0008)  
	UImage*                                            _img_Ear_Right_Male;                                        // 0x02B8   (0x0008)  
	UImage*                                            _img_Neck_Male;                                             // 0x02C0   (0x0008)  
	UImage*                                            _img_Trapezius_Male;                                        // 0x02C8   (0x0008)  
	UImage*                                            _img_Shoulder_Left_Male;                                    // 0x02D0   (0x0008)  
	UImage*                                            _img_Shoulder_Right_Male;                                   // 0x02D8   (0x0008)  
	UImage*                                            _img_Chest_Male;                                            // 0x02E0   (0x0008)  
	UImage*                                            _img_Arm_Left_Male;                                         // 0x02E8   (0x0008)  
	UImage*                                            _img_Arm_Right_Male;                                        // 0x02F0   (0x0008)  
	UImage*                                            _img_Forearm_Left_Male;                                     // 0x02F8   (0x0008)  
	UImage*                                            _img_Forearm_Right_Male;                                    // 0x0300   (0x0008)  
	UImage*                                            _img_Hand_Left_Male;                                        // 0x0308   (0x0008)  
	UImage*                                            _img_Hand_Right_Male;                                       // 0x0310   (0x0008)  
	UImage*                                            _img_Umbilicus_Male;                                        // 0x0318   (0x0008)  
	UImage*                                            _img_Abdomen_Male;                                          // 0x0320   (0x0008)  
	UImage*                                            _img_Thigh_Left_Male;                                       // 0x0328   (0x0008)  
	UImage*                                            _img_Thigh_Right_Male;                                      // 0x0330   (0x0008)  
	UImage*                                            _img_Kneecap_Left_Male;                                     // 0x0338   (0x0008)  
	UImage*                                            _img_Kneecap_Right_Male;                                    // 0x0340   (0x0008)  
	UImage*                                            _img_Leg_Left_Male;                                         // 0x0348   (0x0008)  
	UImage*                                            _img_Leg_Right_Male;                                        // 0x0350   (0x0008)  
	UImage*                                            _img_Foot_Left_Male;                                        // 0x0358   (0x0008)  
	UImage*                                            _img_Foot_Right_Male;                                       // 0x0360   (0x0008)  
	UImage*                                            _img_Footbones_Left_Male;                                   // 0x0368   (0x0008)  
	UImage*                                            _img_Footbones_Right_Male;                                  // 0x0370   (0x0008)  
	UImage*                                            _img_Legbones_Left_Male;                                    // 0x0378   (0x0008)  
	UImage*                                            _img_Legbones_Right_Male;                                   // 0x0380   (0x0008)  
	UImage*                                            _img_Thighbone_Left_Male;                                   // 0x0388   (0x0008)  
	UImage*                                            _img_Thighbone_Right_Male;                                  // 0x0390   (0x0008)  
	UImage*                                            _img_Pelvis_Male;                                           // 0x0398   (0x0008)  
	UImage*                                            _img_Spine_Male;                                            // 0x03A0   (0x0008)  
	UImage*                                            _img_Handbones_Left_Male;                                   // 0x03A8   (0x0008)  
	UImage*                                            _img_Handbones_Right_Male;                                  // 0x03B0   (0x0008)  
	UImage*                                            _img_Forearmbones_Left_Male;                                // 0x03B8   (0x0008)  
	UImage*                                            _img_Forearmbones_Right_Male;                               // 0x03C0   (0x0008)  
	UImage*                                            _img_Armbone_Left_Male;                                     // 0x03C8   (0x0008)  
	UImage*                                            _img_Armbone_Right_Male;                                    // 0x03D0   (0x0008)  
	UImage*                                            _img_Scapula_Left_Male;                                     // 0x03D8   (0x0008)  
	UImage*                                            _img_Scapula_Right_Male;                                    // 0x03E0   (0x0008)  
	UImage*                                            _img_Ribcage_Male;                                          // 0x03E8   (0x0008)  
	UImage*                                            _img_Skull_Male;                                            // 0x03F0   (0x0008)  
	UImage*                                            _img_Head_Female;                                           // 0x03F8   (0x0008)  
	UImage*                                            _img_Ear_Left_Female;                                       // 0x0400   (0x0008)  
	UImage*                                            _img_Ear_Right_Female;                                      // 0x0408   (0x0008)  
	UImage*                                            _img_Neck_Female;                                           // 0x0410   (0x0008)  
	UImage*                                            _img_Trapezius_Female;                                      // 0x0418   (0x0008)  
	UImage*                                            _img_Shoulder_Left_Female;                                  // 0x0420   (0x0008)  
	UImage*                                            _img_Shoulder_Right_Female;                                 // 0x0428   (0x0008)  
	UImage*                                            _img_Chest_Female;                                          // 0x0430   (0x0008)  
	UImage*                                            _img_Arm_Left_Female;                                       // 0x0438   (0x0008)  
	UImage*                                            _img_Arm_Right_Female;                                      // 0x0440   (0x0008)  
	UImage*                                            _img_Forearm_Left_Female;                                   // 0x0448   (0x0008)  
	UImage*                                            _img_Forearm_Right_Female;                                  // 0x0450   (0x0008)  
	UImage*                                            _img_Hand_Left_Female;                                      // 0x0458   (0x0008)  
	UImage*                                            _img_Hand_Right_Female;                                     // 0x0460   (0x0008)  
	UImage*                                            _img_Umbilicus_Female;                                      // 0x0468   (0x0008)  
	UImage*                                            _img_Abdomen_Female;                                        // 0x0470   (0x0008)  
	UImage*                                            _img_Thigh_Left_Female;                                     // 0x0478   (0x0008)  
	UImage*                                            _img_Thigh_Right_Female;                                    // 0x0480   (0x0008)  
	UImage*                                            _img_Kneecap_Left_Female;                                   // 0x0488   (0x0008)  
	UImage*                                            _img_Kneecap_Right_Female;                                  // 0x0490   (0x0008)  
	UImage*                                            _img_Leg_Left_Female;                                       // 0x0498   (0x0008)  
	UImage*                                            _img_Leg_Right_Female;                                      // 0x04A0   (0x0008)  
	UImage*                                            _img_Foot_Left_Female;                                      // 0x04A8   (0x0008)  
	UImage*                                            _img_Foot_Right_Female;                                     // 0x04B0   (0x0008)  
	UImage*                                            _img_Footbones_Left_Female;                                 // 0x04B8   (0x0008)  
	UImage*                                            _img_Footbones_Right_Female;                                // 0x04C0   (0x0008)  
	UImage*                                            _img_Legbones_Left_Female;                                  // 0x04C8   (0x0008)  
	UImage*                                            _img_Legbones_Right_Female;                                 // 0x04D0   (0x0008)  
	UImage*                                            _img_Thighbone_Left_Female;                                 // 0x04D8   (0x0008)  
	UImage*                                            _img_Thighbone_Right_Female;                                // 0x04E0   (0x0008)  
	UImage*                                            _img_Pelvis_Female;                                         // 0x04E8   (0x0008)  
	UImage*                                            _img_Spine_Female;                                          // 0x04F0   (0x0008)  
	UImage*                                            _img_Handbones_Left_Female;                                 // 0x04F8   (0x0008)  
	UImage*                                            _img_Handbones_Right_Female;                                // 0x0500   (0x0008)  
	UImage*                                            _img_Forearmbones_Left_Female;                              // 0x0508   (0x0008)  
	UImage*                                            _img_Forearmbones_Right_Female;                             // 0x0510   (0x0008)  
	UImage*                                            _img_Armbone_Left_Female;                                   // 0x0518   (0x0008)  
	UImage*                                            _img_Armbone_Right_Female;                                  // 0x0520   (0x0008)  
	UImage*                                            _img_Scapula_Left_Female;                                   // 0x0528   (0x0008)  
	UImage*                                            _img_Scapula_Right_Female;                                  // 0x0530   (0x0008)  
	UImage*                                            _img_Ribcage_Female;                                        // 0x0538   (0x0008)  
	UImage*                                            _img_Skull_Female;                                          // 0x0540   (0x0008)  
	UImage*                                            _img_SpinalCord;                                            // 0x0548   (0x0008)  
	UImage*                                            _img_Lungs;                                                 // 0x0550   (0x0008)  
	UImage*                                            _img_RespiratorySystem;                                     // 0x0558   (0x0008)  
	UImage*                                            _img_CirculatorySystem;                                     // 0x0560   (0x0008)  
	UImage*                                            _img_Colon;                                                 // 0x0568   (0x0008)  
	UImage*                                            _img_Intestine;                                             // 0x0570   (0x0008)  
	UImage*                                            _img_Bladder;                                               // 0x0578   (0x0008)  
	UImage*                                            _img_Liver;                                                 // 0x0580   (0x0008)  
	UImage*                                            _img_Kidneys;                                               // 0x0588   (0x0008)  
	UImage*                                            _img_AdrenalGlands;                                         // 0x0590   (0x0008)  
	UImage*                                            _img_Gallbladder;                                           // 0x0598   (0x0008)  
	UImage*                                            _img_Pancreas;                                              // 0x05A0   (0x0008)  
	UImage*                                            _img_Stomach;                                               // 0x05A8   (0x0008)  
	UImage*                                            _img_Heart;                                                 // 0x05B0   (0x0008)  
	UImage*                                            _img_Spleen;                                                // 0x05B8   (0x0008)  
	UImage*                                            _img_Brain;                                                 // 0x05C0   (0x0008)  
	UImage*                                            _img_Reproductive_Male;                                     // 0x05C8   (0x0008)  
	UImage*                                            _img_Reproductive_Female;                                   // 0x05D0   (0x0008)  
	UButton*                                           _btn_EntireBody;                                            // 0x05D8   (0x0008)  
	UButton*                                           _btn_HeadRegion;                                            // 0x05E0   (0x0008)  
	UButton*                                           _btn_RightLegRegion;                                        // 0x05E8   (0x0008)  
	UButton*                                           _btn_LeftLegRegion;                                         // 0x05F0   (0x0008)  
	UButton*                                           _btn_TorsoRegion;                                           // 0x05F8   (0x0008)  
	UButton*                                           _btn_RightArmRegion;                                        // 0x0600   (0x0008)  
	UButton*                                           _btn_LeftArmRegion;                                         // 0x0608   (0x0008)  
	UOverlay*                                          _mainOverlay;                                               // 0x0610   (0x0008)  
	UOverlay*                                          _maleOverlay;                                               // 0x0618   (0x0008)  
	UOverlay*                                          _femaleOverlay;                                             // 0x0620   (0x0008)  
	UOverlay*                                          _bothOverlay;                                               // 0x0628   (0x0008)  
	UWidgetAnimation*                                  _focusBodyRegion_Head;                                      // 0x0630   (0x0008)  
	UWidgetAnimation*                                  _focusBodyRegion_Torso;                                     // 0x0638   (0x0008)  
	UWidgetAnimation*                                  _focusBodyRegion_LeftArm;                                   // 0x0640   (0x0008)  
	UWidgetAnimation*                                  _focusBodyRegion_RightArm;                                  // 0x0648   (0x0008)  
	UWidgetAnimation*                                  _focusBodyRegion_LeftLeg;                                   // 0x0650   (0x0008)  
	UWidgetAnimation*                                  _focusBodyRegion_RightLeg;                                  // 0x0658   (0x0008)  
	UImage*                                            _vignette;                                                  // 0x0660   (0x0008)  
	unsigned char                                      UnknownData01_6[0x90];                                      // 0x0668   (0x0090)  MISSED


	/// Functions
	// Function /Script/ConZ.MetabolismHumanBodyPanel.OnClickRegion_Torso
	void OnClickRegion_Torso();                                                                                              // [0x232a340] Final|Native|Private 
	// Function /Script/ConZ.MetabolismHumanBodyPanel.OnClickRegion_RightLeg
	void OnClickRegion_RightLeg();                                                                                           // [0x232a320] Final|Native|Private 
	// Function /Script/ConZ.MetabolismHumanBodyPanel.OnClickRegion_RightArm
	void OnClickRegion_RightArm();                                                                                           // [0x232a300] Final|Native|Private 
	// Function /Script/ConZ.MetabolismHumanBodyPanel.OnClickRegion_LeftLeg
	void OnClickRegion_LeftLeg();                                                                                            // [0x232a2e0] Final|Native|Private 
	// Function /Script/ConZ.MetabolismHumanBodyPanel.OnClickRegion_LeftArm
	void OnClickRegion_LeftArm();                                                                                            // [0x232a2c0] Final|Native|Private 
	// Function /Script/ConZ.MetabolismHumanBodyPanel.OnClickRegion_Head
	void OnClickRegion_Head();                                                                                               // [0x232a2a0] Final|Native|Private 
	// Function /Script/ConZ.MetabolismHumanBodyPanel.OnClickRegion_EntireBody
	void OnClickRegion_EntireBody();                                                                                         // [0x232a280] Final|Native|Private 
	// Function /Script/ConZ.MetabolismHumanBodyPanel.OnAnimationFinished_EntireBody
	void OnAnimationFinished_EntireBody();                                                                                   // [0x232a260] Final|Native|Private 
	// Function /Script/ConZ.MetabolismHumanBodyPanel.OnAnimationFinished_BodyRegion
	void OnAnimationFinished_BodyRegion();                                                                                   // [0x232a240] Final|Native|Private 
};

/// Class /Script/ConZ.MetabolismLeftPanel
/// Size: 0x0078 (0x000260 - 0x0002D8)
class UMetabolismLeftPanel : public UTabMenuPanel
{ 
public:
	UTabGroup*                                         _tabRow;                                                    // 0x0260   (0x0008)  
	UWidgetSwitcher*                                   _mainTabSwitcher;                                           // 0x0268   (0x0008)  
	UMetabolismStatsPanel*                             _statsPanel;                                                // 0x0270   (0x0008)  
	FText                                              _statsName;                                                 // 0x0278   (0x0018)  
	UMetabolismHealthPanel*                            _healthPanel;                                               // 0x0290   (0x0008)  
	FText                                              _healthName;                                                // 0x0298   (0x0018)  
	UClass*                                            _buttonWidgetClass;                                         // 0x02B0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x02B8   (0x0020)  MISSED
};

/// Class /Script/ConZ.MetabolismLightItemDisplayPanel
/// Size: 0x0040 (0x000260 - 0x0002A0)
class UMetabolismLightItemDisplayPanel : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UPanelWidget*                                      _itemDisplayContainer;                                      // 0x0278   (0x0008)  
	UClass*                                            _itemDisplayClass;                                          // 0x0280   (0x0008)  
	float                                              _interChildDistrance;                                       // 0x0288   (0x0004)  
	unsigned char                                      UnknownData01_6[0x14];                                      // 0x028C   (0x0014)  MISSED
};

/// Class /Script/ConZ.MetabolismMacronutrientReserve
/// Size: 0x0038 (0x000260 - 0x000298)
class UMetabolismMacronutrientReserve : public UUserWidget
{ 
public:
	FText                                              Title;                                                      // 0x0260   (0x0018)  
	UTextBlock*                                        _title;                                                     // 0x0278   (0x0008)  
	UTextBlock*                                        _value;                                                     // 0x0280   (0x0008)  
	UMetabolismSegmentedProgressBar*                   _spb_ReservesBar;                                           // 0x0288   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0290   (0x0008)  MISSED
};

/// Class /Script/ConZ.MetabolismMacronutrientReservesPanel
/// Size: 0x0040 (0x000260 - 0x0002A0)
class UMetabolismMacronutrientReservesPanel : public UUserWidget
{ 
public:
	UMetabolismMacronutrientReserve*                   _reserve_Protein;                                           // 0x0260   (0x0008)  
	UMetabolismMacronutrientReserve*                   _reserve_Carbs;                                             // 0x0268   (0x0008)  
	UMetabolismMacronutrientReserve*                   _reserve_Fat;                                               // 0x0270   (0x0008)  
	UMetabolismMacronutrientReserve*                   _reserve_Fiber;                                             // 0x0278   (0x0008)  
	UMetabolismMacronutrientReserve*                   _reserve_Sugar;                                             // 0x0280   (0x0008)  
	UMetabolismMacronutrientReserve*                   _reserve_SaturatedFat;                                      // 0x0288   (0x0008)  
	UMetabolismMacronutrientReserve*                   _reserve_Alcohol;                                           // 0x0290   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0298   (0x0008)  MISSED
};

/// Class /Script/ConZ.MetabolismMineralsPanel
/// Size: 0x0058 (0x000260 - 0x0002B8)
class UMetabolismMineralsPanel : public UUserWidget
{ 
public:
	UMetabolismVitaminAndMineralReserve*               _mineral_Ca;                                                // 0x0260   (0x0008)  
	UMetabolismVitaminAndMineralReserve*               _mineral_Fe;                                                // 0x0268   (0x0008)  
	UMetabolismVitaminAndMineralReserve*               _mineral_Mg;                                                // 0x0270   (0x0008)  
	UMetabolismVitaminAndMineralReserve*               _mineral_P;                                                 // 0x0278   (0x0008)  
	UMetabolismVitaminAndMineralReserve*               _mineral_K;                                                 // 0x0280   (0x0008)  
	UMetabolismVitaminAndMineralReserve*               _mineral_Zn;                                                // 0x0288   (0x0008)  
	UMetabolismVitaminAndMineralReserve*               _mineral_Cu;                                                // 0x0290   (0x0008)  
	UMetabolismVitaminAndMineralReserve*               _mineral_Mn;                                                // 0x0298   (0x0008)  
	UMetabolismVitaminAndMineralReserve*               _mineral_Se;                                                // 0x02A0   (0x0008)  
	UMetabolismVitaminAndMineralReserve*               _mineral_Na;                                                // 0x02A8   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x02B0   (0x0008)  MISSED
};

/// Class /Script/ConZ.MetabolismNutritionPanel
/// Size: 0x0018 (0x000260 - 0x000278)
class UMetabolismNutritionPanel : public UUserWidget
{ 
public:
	UMetabolismRadialProgressBar*                      _rpb_Calories;                                              // 0x0260   (0x0008)  
	UMetabolismRadialProgressBar*                      _rpb_Water;                                                 // 0x0268   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0270   (0x0008)  MISSED
};

/// Class /Script/ConZ.MetabolismPerformanceDataPanel
/// Size: 0x00A0 (0x000260 - 0x000300)
class UMetabolismPerformanceDataPanel : public UUserWidget
{ 
public:
	UMetabolismAdvancedProgressBar*                    _apb_Stamina;                                               // 0x0260   (0x0008)  
	UMetabolismAdvancedProgressBar*                    _apb_WeightLoad;                                            // 0x0268   (0x0008)  
	UMetabolismAdvancedProgressBar*                    _apb_WalkSpeed;                                             // 0x0270   (0x0008)  
	UMetabolismAdvancedProgressBar*                    _apb_JogSpeed;                                              // 0x0278   (0x0008)  
	UMetabolismAdvancedProgressBar*                    _apb_RunSpeed;                                              // 0x0280   (0x0008)  
	UMetabolismAdvancedProgressBar*                    _apb_HealingSpeed;                                          // 0x0288   (0x0008)  
	UMetabolismAdvancedProgressBar*                    _apb_BloodRecoveryRate;                                     // 0x0290   (0x0008)  
	UMetabolismAdvancedProgressBar*                    _apb_ImmuneSystem;                                          // 0x0298   (0x0008)  
	UMetabolismAdvancedProgressBar*                    _apb_PerformanceScore;                                      // 0x02A0   (0x0008)  
	UMetabolismAdvancedProgressBar*                    _apb_StealthFactor;                                         // 0x02A8   (0x0008)  
	UMetabolismAdvancedProgressBar*                    _apb_MeleeDamage;                                           // 0x02B0   (0x0008)  
	UMetabolismCurrentStatDark*                        _csd_ConsumptionRecoveryResting;                            // 0x02B8   (0x0008)  
	UMetabolismCurrentStatDark*                        _csd_ConsumptionRecoveryIdle;                               // 0x02C0   (0x0008)  
	UMetabolismCurrentStatDark*                        _csd_ConsumptionRecoveryEasy;                               // 0x02C8   (0x0008)  
	UMetabolismCurrentStatDark*                        _csd_ConsumptionRecoveryDemanding;                          // 0x02D0   (0x0008)  
	UMetabolismCurrentStatDark*                        _csd_ConsumptionRecoveryVeryDemanding;                      // 0x02D8   (0x0008)  
	UMetabolismCurrentStatDark*                        _csd_ConsumptionRecoveryExtremelyDemanding;                 // 0x02E0   (0x0008)  
	UMetabolismCurrentStatDark*                        _csd_OverloadPenaltyEnergy;                                 // 0x02E8   (0x0008)  
	UMetabolismCurrentStatDark*                        _csd_OverloadPenaltyWater;                                  // 0x02F0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x02F8   (0x0008)  MISSED
};

/// Class /Script/ConZ.MetabolismRadialAttributeProgressBar
/// Size: 0x0160 (0x000260 - 0x0003C0)
class UMetabolismRadialAttributeProgressBar : public UUserWidget
{ 
public:
	FMetabolismRadialAttributeProgressBarColor         BackgroundColor;                                            // 0x0260   (0x0030)  
	FMetabolismRadialAttributeProgressBarColor         BarColor;                                                   // 0x0290   (0x0030)  
	FMetabolismRadialAttributeProgressBarColor         BarGlowColor;                                               // 0x02C0   (0x0030)  
	FMetabolismRadialAttributeProgressBarColor         InnerGlowColor;                                             // 0x02F0   (0x0030)  
	FMetabolismRadialAttributeProgressBarColor         OuterGlowColor;                                             // 0x0320   (0x0030)  
	FMetabolismRadialAttributeProgressBarColor         FontColor;                                                  // 0x0350   (0x0030)  
	EDisposition                                       PreviewState;                                               // 0x0380   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0381   (0x0007)  MISSED
	UImage*                                            _coloredBackground;                                         // 0x0388   (0x0008)  
	UImage*                                            _radialProgressBar;                                         // 0x0390   (0x0008)  
	URetainerBox*                                      _fontEffectPass1;                                           // 0x0398   (0x0008)  
	URetainerBox*                                      _fontEffectPass2;                                           // 0x03A0   (0x0008)  
	UTextBlock*                                        _attributeValueTextBlock;                                   // 0x03A8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x03B0   (0x0010)  MISSED
};

/// Class /Script/ConZ.MetabolismRadialProgressBar
/// Size: 0x0210 (0x000260 - 0x000470)
class UMetabolismRadialProgressBar : public UUserWidget
{ 
public:
	bool                                               PreviewedAlertedState;                                      // 0x0260   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0261   (0x0003)  MISSED
	float                                              PrimaryPercentageMinDisplayedValue;                         // 0x0264   (0x0004)  
	float                                              PrimaryPercentageMaxDisplayedValue;                         // 0x0268   (0x0004)  
	unsigned char                                      UnknownData01_5[0x14];                                      // 0x026C   (0x0014)  MISSED
	UScaleBox*                                         _scaleBox;                                                  // 0x0280   (0x0008)  
	UImage*                                            _coloredBackground;                                         // 0x0288   (0x0008)  
	UImage*                                            _radialProgressBar;                                         // 0x0290   (0x0008)  
	URetainerBox*                                      _fontEffectPass1;                                           // 0x0298   (0x0008)  
	URetainerBox*                                      _fontEffectPass2;                                           // 0x02A0   (0x0008)  
	URichTextBlock*                                    _percentage;                                                // 0x02A8   (0x0008)  
	UTextBlock*                                        _value;                                                     // 0x02B0   (0x0008)  
	UTextBlock*                                        _title;                                                     // 0x02B8   (0x0008)  
	FMetabolismRadialProgressBarColorScheme            _defaultColorScheme;                                        // 0x02C0   (0x0080)  
	FMetabolismRadialProgressBarColorScheme            _alertedColorScheme;                                        // 0x0340   (0x0080)  
	FMetabolismRadialProgressBarFontSettings           _percentageFontSettings;                                    // 0x03C0   (0x0014)  
	float                                              _widgetScale;                                               // 0x03D4   (0x0004)  
	bool                                               _isTitleVisible;                                            // 0x03D8   (0x0001)  
	unsigned char                                      UnknownData02_6[0x97];                                      // 0x03D9   (0x0097)  MISSED


	/// Functions
	// Function /Script/ConZ.MetabolismRadialProgressBar.GetToolTipWidget
	UWidget* GetToolTipWidget();                                                                                             // [0x232a210] Final|Native|Private 
};

/// Class /Script/ConZ.MetabolismRightPanel
/// Size: 0x0038 (0x000260 - 0x000298)
class UMetabolismRightPanel : public UTabMenuPanel
{ 
public:
	UMetabolismNutritionPanel*                         _nutritionPanel;                                            // 0x0260   (0x0008)  
	UMetabolismMacronutrientReservesPanel*             _macronutrientReservesPanel;                                // 0x0268   (0x0008)  
	UMetabolismBodyReservesPanel*                      _bodyReservesPanel;                                         // 0x0270   (0x0008)  
	UMetabolismVitaminsPanel*                          _vitaminsPanel;                                             // 0x0278   (0x0008)  
	UMetabolismMineralsPanel*                          _mineralsPanel;                                             // 0x0280   (0x0008)  
	UMetabolismDigestionPanel*                         _digestionPanel;                                            // 0x0288   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0290   (0x0008)  MISSED
};

/// Class /Script/ConZ.MetabolismSave
/// Size: 0x02A0 (0x000028 - 0x0002C8)
class UMetabolismSave : public UObject
{ 
public:
	float                                              LeanBodyMass;                                               // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x002C   (0x0004)  MISSED
	TArray<FDigestionItemSave>                         DigestionItems;                                             // 0x0030   (0x0010)  
	TArray<FForeignSubstanceSave>                      ForeignSubstances;                                          // 0x0040   (0x0010)  
	FSubstancesData                                    AbsorbedSubstances;                                         // 0x0050   (0x00D0)  
	FSubstancesData                                    FecesVolumeInIntestine;                                     // 0x0120   (0x00D0)  
	FSubstancesData                                    FecesVolumeInColon;                                         // 0x01F0   (0x00D0)  
	float                                              UrineVolumeInBladder;                                       // 0x02C0   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x02C4   (0x0004)  MISSED
};

/// Class /Script/ConZ.MetabolismSegmentedProgressBar
/// Size: 0x00B8 (0x000260 - 0x000318)
class UMetabolismSegmentedProgressBar : public UUserWidget
{ 
public:
	TArray<FMetabolismSPBColorScheme>                  ColorSchemes;                                               // 0x0260   (0x0010)  
	FSlateBrush                                        BrushOverride;                                              // 0x0270   (0x0088)  
	UImage*                                            _progressBarImage;                                          // 0x02F8   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0300   (0x0018)  MISSED
};

/// Class /Script/ConZ.MetabolismSkillProgressBar
/// Size: 0x0050 (0x000260 - 0x0002B0)
class UMetabolismSkillProgressBar : public UUserWidget
{ 
public:
	TArray<FSlateBrush>                                SkillRankIcons;                                             // 0x0260   (0x0010)  
	FText                                              SkillTitle;                                                 // 0x0270   (0x0018)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x0288   (0x0010)  MISSED
	UImage*                                            _skillRankIcon;                                             // 0x0298   (0x0008)  
	UMetabolismAdvancedProgressBar*                    _apb_SkillProgress;                                         // 0x02A0   (0x0008)  
	UClass*                                            _skillClass;                                                // 0x02A8   (0x0008)  


	/// Functions
	// Function /Script/ConZ.MetabolismSkillProgressBar.GetToolTipWidget
	UWidget* GetToolTipWidget();                                                                                             // [0x232f1a0] Final|Native|Private 
};

/// Class /Script/ConZ.MetabolismSkillProgressionPanel
/// Size: 0x0048 (0x000260 - 0x0002A8)
class UMetabolismSkillProgressionPanel : public UUserWidget
{ 
public:
	UClass*                                            SkillProgressBarWidgetClass;                                // 0x0260   (0x0008)  
	UTabGroup*                                         _tabRow;                                                    // 0x0268   (0x0008)  
	UClass*                                            _tabButtonClass;                                            // 0x0270   (0x0008)  
	UWidgetSwitcher*                                   _attributeSwitcher;                                         // 0x0278   (0x0008)  
	UMetabolismSkillProgressionTab*                    _STR_tab;                                                   // 0x0280   (0x0008)  
	UMetabolismSkillProgressionTab*                    _CON_tab;                                                   // 0x0288   (0x0008)  
	UMetabolismSkillProgressionTab*                    _DEX_tab;                                                   // 0x0290   (0x0008)  
	UMetabolismSkillProgressionTab*                    _INT_tab;                                                   // 0x0298   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x02A0   (0x0008)  MISSED
};

/// Class /Script/ConZ.MetabolismSkillProgressionTab
/// Size: 0x0038 (0x000260 - 0x000298)
class UMetabolismSkillProgressionTab : public UUserWidget
{ 
public:
	UClass*                                            SkillProgressBarWidgetClass;                                // 0x0260   (0x0008)  
	UWrapBox*                                          _skillsWrapBox;                                             // 0x0268   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0270   (0x0008)  MISSED
	ESkillAttribute                                    _skillType;                                                 // 0x0278   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0279   (0x0007)  MISSED
	FText                                              _skillAttributeName;                                        // 0x0280   (0x0018)  
};

/// Class /Script/ConZ.MetabolismStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UMetabolismStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.MetabolismStatsPanel
/// Size: 0x0070 (0x000260 - 0x0002D0)
class UMetabolismStatsPanel : public UUserWidget
{ 
public:
	UMetabolismRadialAttributeProgressBar*             _str_progressWidget;                                        // 0x0260   (0x0008)  
	UMetabolismRadialAttributeProgressBar*             _con_progressWidget;                                        // 0x0268   (0x0008)  
	UMetabolismRadialAttributeProgressBar*             _dex_progressWidget;                                        // 0x0270   (0x0008)  
	UMetabolismRadialAttributeProgressBar*             _int_progressWidget;                                        // 0x0278   (0x0008)  
	UMetabolismSkillProgressionPanel*                  _skillProgressionPanel;                                     // 0x0280   (0x0008)  
	UMetabolismBasicInfoPanel*                         _basicInfoPanel;                                            // 0x0288   (0x0008)  
	UMetabolismPerformanceDataPanel*                   _performanceDataPanel;                                      // 0x0290   (0x0008)  
	UMetabolismBodyStatsPanel*                         _bodyStatsPanel;                                            // 0x0298   (0x0008)  
	unsigned char                                      UnknownData00_6[0x30];                                      // 0x02A0   (0x0030)  MISSED
};

/// Class /Script/ConZ.MetabolismSymptomTitle
/// Size: 0x0018 (0x000260 - 0x000278)
class UMetabolismSymptomTitle : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0260   (0x0010)  MISSED
	UTextBlock*                                        _title;                                                     // 0x0270   (0x0008)  


	/// Functions
	// Function /Script/ConZ.MetabolismSymptomTitle.GetToolTipWidget
	UWidget* GetToolTipWidget();                                                                                             // [0x232f1d0] Final|Native|Private 
};

/// Class /Script/ConZ.MetabolismTissueGroupCheckbox
/// Size: 0x0030 (0x000260 - 0x000290)
class UMetabolismTissueGroupCheckbox : public UUserWidget
{ 
public:
	FText                                              Title;                                                      // 0x0260   (0x0018)  
	bool                                               IsCheckdByDefault;                                          // 0x0278   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0279   (0x0007)  MISSED
	UTextBlock*                                        _title;                                                     // 0x0280   (0x0008)  
	UCheckBox*                                         _checkBox;                                                  // 0x0288   (0x0008)  
};

/// Class /Script/ConZ.MetabolismTitleAndAPB
/// Size: 0x0050 (0x000260 - 0x0002B0)
class UMetabolismTitleAndAPB : public UUserWidget
{ 
public:
	FText                                              Title;                                                      // 0x0260   (0x0018)  
	UTextBlock*                                        _titleText;                                                 // 0x0278   (0x0008)  
	UImage*                                            _background;                                                // 0x0280   (0x0008)  
	UMetabolismAdvancedProgressBar*                    _apb_ValueAndProgress;                                      // 0x0288   (0x0008)  
	FDataTableRowHandle                                _backgroundColor;                                           // 0x0290   (0x0010)  
	FDataTableRowHandle                                _titleTextColor;                                            // 0x02A0   (0x0010)  
};

/// Class /Script/ConZ.MetabolismTreatmentItemsPanel
/// Size: 0x00B0 (0x000260 - 0x000310)
class UMetabolismTreatmentItemsPanel : public UTabMenuPanel
{ 
public:
	UMetabolismLightItemDisplayPanel*                  _inventoryItems;                                            // 0x0260   (0x0008)  
	UMetabolismLightItemDisplayPanel*                  _vicinityItems;                                             // 0x0268   (0x0008)  
	UMetabolismContainerSetDisplayPanel*               _vicinityContainers;                                        // 0x0270   (0x0008)  
	UClass*                                            _buttonWidgetClass;                                         // 0x0278   (0x0008)  
	FString                                            _inventoryName;                                             // 0x0280   (0x0010)  
	FString                                            _vicinityName;                                              // 0x0290   (0x0010)  
	unsigned char                                      UnknownData00_6[0x70];                                      // 0x02A0   (0x0070)  MISSED
};

/// Class /Script/ConZ.MetabolismTreatmentPanel
/// Size: 0x0058 (0x000260 - 0x0002B8)
class UMetabolismTreatmentPanel : public UUserWidget
{ 
public:
	UVerticalBox*                                      _untreatedColumn;                                           // 0x0260   (0x0008)  
	UVerticalBox*                                      _stabilizationColumn;                                       // 0x0268   (0x0008)  
	UVerticalBox*                                      _recoveryColumn;                                            // 0x0270   (0x0008)  
	UImage*                                            _untreatedBackground;                                       // 0x0278   (0x0008)  
	UImage*                                            _stabilizationBackground;                                   // 0x0280   (0x0008)  
	UImage*                                            _recoveryBackground;                                        // 0x0288   (0x0008)  
	UClass*                                            _progressBarClass;                                          // 0x0290   (0x0008)  
	UClass*                                            _tooltipClass;                                              // 0x0298   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x02A0   (0x0018)  MISSED
};

/// Class /Script/ConZ.MetabolismVitaminAndMineralReserve
/// Size: 0x0038 (0x000260 - 0x000298)
class UMetabolismVitaminAndMineralReserve : public UUserWidget
{ 
public:
	FText                                              Title;                                                      // 0x0260   (0x0018)  
	UTextBlock*                                        _title;                                                     // 0x0278   (0x0008)  
	UTextBlock*                                        _value;                                                     // 0x0280   (0x0008)  
	UMetabolismSegmentedProgressBar*                   _spb_ReservesBar;                                           // 0x0288   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0290   (0x0008)  MISSED
};

/// Class /Script/ConZ.MetabolismVitaminsPanel
/// Size: 0x0070 (0x000260 - 0x0002D0)
class UMetabolismVitaminsPanel : public UUserWidget
{ 
public:
	UMetabolismVitaminAndMineralReserve*               _vitamin_A;                                                 // 0x0260   (0x0008)  
	UMetabolismVitaminAndMineralReserve*               _vitamin_B1;                                                // 0x0268   (0x0008)  
	UMetabolismVitaminAndMineralReserve*               _vitamin_B2;                                                // 0x0270   (0x0008)  
	UMetabolismVitaminAndMineralReserve*               _vitamin_B3;                                                // 0x0278   (0x0008)  
	UMetabolismVitaminAndMineralReserve*               _vitamin_B4;                                                // 0x0280   (0x0008)  
	UMetabolismVitaminAndMineralReserve*               _vitamin_B5;                                                // 0x0288   (0x0008)  
	UMetabolismVitaminAndMineralReserve*               _vitamin_B6;                                                // 0x0290   (0x0008)  
	UMetabolismVitaminAndMineralReserve*               _vitamin_B9;                                                // 0x0298   (0x0008)  
	UMetabolismVitaminAndMineralReserve*               _vitamin_B12;                                               // 0x02A0   (0x0008)  
	UMetabolismVitaminAndMineralReserve*               _vitamin_C;                                                 // 0x02A8   (0x0008)  
	UMetabolismVitaminAndMineralReserve*               _vitamin_D;                                                 // 0x02B0   (0x0008)  
	UMetabolismVitaminAndMineralReserve*               _vitamin_E;                                                 // 0x02B8   (0x0008)  
	UMetabolismVitaminAndMineralReserve*               _vitamin_K;                                                 // 0x02C0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x02C8   (0x0008)  MISSED
};

/// Class /Script/ConZ.MetalDetector
/// Size: 0x0050 (0x000910 - 0x000960)
class AMetalDetector : public AItem
{ 
public:
	UBasicGameResourceSlotItemComponent*               _resourceSlotComponent;                                     // 0x0910   (0x0008)  
	float                                              _minDetectionRadius;                                        // 0x0918   (0x0004)  
	float                                              _maxDetectionRadius;                                        // 0x091C   (0x0004)  
	float                                              _updatePeriod;                                              // 0x0920   (0x0004)  
	float                                              _detectionFactor;                                           // 0x0924   (0x0004)  
	UAkAudioEvent*                                     _startEvent;                                                // 0x0928   (0x0008)  
	UAkAudioEvent*                                     _stopEvent;                                                 // 0x0930   (0x0008)  
	FName                                              _RTPCName;                                                  // 0x0938   (0x0008)  
	int32_t                                            _soundInterpolationTimeMs;                                  // 0x0940   (0x0004)  
	unsigned char                                      UnknownData00_5[0xC];                                       // 0x0944   (0x000C)  MISSED
	FName                                              _detectionSourceSocketName;                                 // 0x0950   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0958   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.MetalDetector.SetDetectionFactor_OnRep
	void SetDetectionFactor_OnRep();                                                                                         // [0x232fb10] Final|Native|Private 
	// Function /Script/ConZ.MetalDetector.Server_ToggleTurnedOn
	void Server_ToggleTurnedOn();                                                                                            // [0x227e160] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.MetalDetector.Server_SetDetectionFactor
	void Server_SetDetectionFactor(float newDetectionFactor);                                                                // [0x232fa80] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.MetalDetector.OnResourceComponentDeactivated
	void OnResourceComponentDeactivated(UActorComponent* Component);                                                         // [0x232f420] Final|Native|Private 
	// Function /Script/ConZ.MetalDetector.OnResourceComponentActivated
	void OnResourceComponentActivated(UActorComponent* Component, bool wasReset);                                            // [0x232f350] Final|Native|Private 
};

/// Class /Script/ConZ.MicInputIndicator
/// Size: 0x0000 (0x000260 - 0x000260)
class UMicInputIndicator : public UUserWidget
{ 
public:
};

/// Class /Script/ConZ.Zombie2
/// Size: 0x02D0 (0x0007B0 - 0x000A80)
class AZombie2 : public AConZCharacter
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x07B0   (0x0030)  MISSED
	bool                                               _enableBaseInteraction;                                     // 0x07E0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x07E1   (0x0007)  MISSED
	UNavigationInvokerComponent*                       _navigationInvokerComponent;                                // 0x07E8   (0x0008)  
	UHitReactComponent*                                _hitReactComponent;                                         // 0x07F0   (0x0008)  
	UBaseInteractionComponent*                         _baseInteractionComponent;                                  // 0x07F8   (0x0008)  
	TArray<FZombieMeshVariation2>                      _meshVariations;                                            // 0x0800   (0x0010)  
	TArray<FZombieRelaxedStanceVariation2>             _relaxedStanceVariations;                                   // 0x0810   (0x0010)  
	TArray<FZombieCombatStanceVariation2>              _combatStanceVariations;                                    // 0x0820   (0x0010)  
	FZombieTurnMontageDescription                      _turnMontageDescriptions;                                   // 0x0830   (0x00A0)  
	UAnimMontage*                                      _gettingUpMontage;                                          // 0x08D0   (0x0008)  
	TArray<UAnimMontage*>                              _intimidateMontages;                                        // 0x08D8   (0x0010)  
	TArray<FZombieAttackDescription>                   _attacks;                                                   // 0x08E8   (0x0010)  
	FGameplayTag                                       _hitReactType;                                              // 0x08F8   (0x0008)  
	float                                              _explosionDamageMultiplier;                                 // 0x0900   (0x0004)  
	float                                              _ragdollHitImpulseStrengthPerUnitDamage;                    // 0x0904   (0x0004)  
	float                                              _minDynamicMovementBaseSpeedForRagdoll;                     // 0x0908   (0x0004)  
	float                                              _eyeViewPointOffset;                                        // 0x090C   (0x0004)  
	FName                                              _centralBone;                                               // 0x0910   (0x0008)  
	float                                              _collisionDamageMultiplierPerBodyPart;                      // 0x0918   (0x0030)  
	float                                              _receivedDamageComboCooldown;                               // 0x0948   (0x0004)  
	float                                              _receivedMeleeHitComboCooldown;                             // 0x094C   (0x0004)  
	float                                              _inflictedMeleeHitComboCooldown;                            // 0x0950   (0x0004)  
	float                                              _minRagdollRecoveryTimeAfterKnockout;                       // 0x0954   (0x0004)  
	float                                              _maxRagdollRecoveryTimeAfterKnockout;                       // 0x0958   (0x0004)  
	float                                              _minLandingImpactSpeedForDamage;                            // 0x095C   (0x0004)  
	float                                              _landingDamagePerImpactSpeed;                               // 0x0960   (0x0004)  
	float                                              _landingImpactSpeedForRagdoll;                              // 0x0964   (0x0004)  
	float                                              _minRagdollRecoveryTimeAfterLanding;                        // 0x0968   (0x0004)  
	float                                              _maxRagdollRecoveryTimeAfterLanding;                        // 0x096C   (0x0004)  
	ULandingEffects*                                   _landingEffects;                                            // 0x0970   (0x0008)  
	bool                                               _canEverBeSearched;                                         // 0x0978   (0x0001)  
	bool                                               _shouldGoToRagdollOnDeath;                                  // 0x0979   (0x0001)  
	unsigned char                                      UnknownData02_5[0x6];                                       // 0x097A   (0x0006)  MISSED
	UParticleSystem*                                   _deathParticles;                                            // 0x0980   (0x0008)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x0988   (0x0008)  MISSED
	FTransform                                         _deathParticlesRelativeTransform;                           // 0x0990   (0x0030)  
	float                                              _corpseSearchDuration;                                      // 0x09C0   (0x0004)  
	float                                              _corpseMaxLifeTimeInMinutes;                                // 0x09C4   (0x0004)  
	float                                              _destroyCorpseTimerInterval;                                // 0x09C8   (0x0004)  
	float                                              _minDistanceToPlayerPawnOrSpectatorToDestroyCorpse;         // 0x09CC   (0x0004)  
	uint32_t                                           _packedZombieVariationIndices;                              // 0x09D0   (0x0004)  
	float                                              _hitPoints;                                                 // 0x09D4   (0x0004)  
	float                                              _inflictedMeleeDamageMultiplier;                            // 0x09D8   (0x0004)  
	float                                              _health;                                                    // 0x09DC   (0x0004)  
	bool                                               _isSearched;                                                // 0x09E0   (0x0001)  
	unsigned char                                      UnknownData04_5[0x1];                                       // 0x09E1   (0x0001)  MISSED
	EZombieStance                                      _stance;                                                    // 0x09E2   (0x0001)  
	unsigned char                                      UnknownData05_5[0x1];                                       // 0x09E3   (0x0001)  MISSED
	TWeakObjectPtr<APawn*>                             _foe;                                                       // 0x09E4   (0x0008)  
	unsigned char                                      UnknownData06_5[0x7C];                                      // 0x09EC   (0x007C)  MISSED
	float                                              _inflictedDamageMultiplierConfig;                           // 0x0A68   (0x0004)  
	EBodyPart                                          _fatalBodyPartHit;                                          // 0x0A6C   (0x0001)  
	unsigned char                                      UnknownData07_5[0x3];                                       // 0x0A6D   (0x0003)  MISSED
	float                                              _drownDamageCycleLength;                                    // 0x0A70   (0x0004)  
	float                                              _drownDamagePerCycle;                                       // 0x0A74   (0x0004)  
	unsigned char                                      UnknownData08_6[0x8];                                       // 0x0A78   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.Zombie2.StartAttack
	float StartAttack(APawn* foe);                                                                                           // [0x2426390] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Zombie2.SetStance
	void SetStance(EZombieStance Value);                                                                                     // [0x2426290] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Zombie2.SetFoe
	void SetFoe(APawn* Value);                                                                                               // [0x2426140] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Zombie2.Server_StartAttack
	void Server_StartAttack(int32_t attackDescriptionIndex);                                                                 // [0x22c6600] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Zombie2.Server_SetStance
	void Server_SetStance(EZombieStance Value);                                                                              // [0x2425ff0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Zombie2.Server_PlayTurnMontage
	void Server_PlayTurnMontage(EZombieTurnMontage turnMontage, float turnAngle);                                            // [0x2425f20] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Zombie2.Server_PlayMontage
	void Server_PlayMontage(UAnimMontage* Montage);                                                                          // [0x2425e90] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.Zombie2.RecoverFromRagdoll
	void RecoverFromRagdoll();                                                                                               // [0x2425e70] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Zombie2.OnRep_Stance
	void OnRep_Stance(EZombieStance oldValue);                                                                               // [0x2425df0] Native|Protected     
	// Function /Script/ConZ.Zombie2.OnRep_IsSearched
	void OnRep_IsSearched(bool oldValue);                                                                                    // [0x235ef80] Native|Protected     
	// Function /Script/ConZ.Zombie2.OnRep_Health
	void OnRep_Health(float oldValue);                                                                                       // [0x2288520] Native|Protected     
	// Function /Script/ConZ.Zombie2.NetMulticast_StartAttack
	void NetMulticast_StartAttack(int32_t attackDescriptionIndex);                                                           // [0x2425d60] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.Zombie2.NetMulticast_PlayTurnMontage
	void NetMulticast_PlayTurnMontage(EZombieTurnMontage turnMontage, float turnAngle);                                      // [0x2425c90] Net|Native|Event|NetMulticast|Public 
	// Function /Script/ConZ.Zombie2.NetMulticast_PlaySound
	void NetMulticast_PlaySound(UAkAudioEvent* Sound);                                                                       // [0x2361b10] Net|Native|Event|NetMulticast|Public 
	// Function /Script/ConZ.Zombie2.NetMulticast_PlayMontage
	void NetMulticast_PlayMontage(UAnimMontage* Montage);                                                                    // [0x2425c00] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.Zombie2.NetMulticast_HandleLanded
	void NetMulticast_HandleLanded(FVector ImpactVelocity, FHitResult HitResult);                                            // [0x2425af0] Net|Native|Event|NetMulticast|Protected|HasDefaults 
	// Function /Script/ConZ.Zombie2.IsRagdollAtRest
	bool IsRagdollAtRest();                                                                                                  // [0x2425a30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Zombie2.IsInRagdoll
	bool IsInRagdoll();                                                                                                      // [0x2425680] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Zombie2.IsAttacking
	bool IsAttacking();                                                                                                      // [0x2425470] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Zombie2.GoToRagdoll
	void GoToRagdoll(FZombieRagdollAutoRecovery& autoRecovery);                                                              // [0x24253d0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.Zombie2.GetZombieSoundComponent
	UZombieSoundComponent2* GetZombieSoundComponent();                                                                       // [0x24253a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Zombie2.GetZombieMovement
	UZombieMovementComponent2* GetZombieMovement();                                                                          // [0x235ff90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Zombie2.GetStance
	EZombieStance GetStance();                                                                                               // [0x2425340] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Zombie2.GetMaxHealth
	float GetMaxHealth();                                                                                                    // [0x2425200] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Zombie2.GetHitReactComponent
	UHitReactComponent* GetHitReactComponent();                                                                              // [0x24251d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Zombie2.GetHealthRatio
	float GetHealthRatio();                                                                                                  // [0x24251a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Zombie2.GetHealth
	float GetHealth();                                                                                                       // [0x2425170] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Zombie2.GetFoe
	APawn* GetFoe();                                                                                                         // [0x2425140] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Zombie2.GetAimOffset
	FRotator GetAimOffset();                                                                                                 // [0x2424d70] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Zombie2.CanStartAttack
	bool CanStartAttack();                                                                                                   // [0x2424b10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Zombie2.BaseInteractionComponent_OnBaseInteractionEvent
	void BaseInteractionComponent_OnBaseInteractionEvent(UBaseInteractionComponent* Component, FBaseInteractionEvent& BaseInteractionEvent); // [0x2424a20] Final|Native|Private|HasOutParms 
};

/// Class /Script/ConZ.MiniatureZombie
/// Size: 0x0000 (0x000A80 - 0x000A80)
class AMiniatureZombie : public AZombie2
{ 
public:
};

/// Class /Script/ConZ.MinigameValidationParams
/// Size: 0x0000 (0x000028 - 0x000028)
class UMinigameValidationParams : public UObject
{ 
public:
};

/// Class /Script/ConZ.LockpickingMinigameValidationParams
/// Size: 0x0008 (0x000028 - 0x000030)
class ULockpickingMinigameValidationParams : public UMinigameValidationParams
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.DefusalMinigameValidationParams
/// Size: 0x0008 (0x000028 - 0x000030)
class UDefusalMinigameValidationParams : public UMinigameValidationParams
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.MiscStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UMiscStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.Mission
/// Size: 0x0240 (0x000220 - 0x000460)
class AMission : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x90];                                      // 0x0220   (0x0090)  MISSED
	AObjective*                                        _activeObjective;                                           // 0x02B0   (0x0008)  
	TArray<UClass*>                                    _missionObjectiveClasses;                                   // 0x02B8   (0x0010)  
	TMap<FString, AObjective*>                         _missionObjectiveAssets;                                    // 0x02C8   (0x0050)  
	TArray<AObjective*>                                _missionObjectives;                                         // 0x0318   (0x0010)  
	FText                                              _missionName;                                               // 0x0328   (0x0018)  
	FText                                              _missionCategory;                                           // 0x0340   (0x0018)  
	FText                                              _missionDescription;                                        // 0x0358   (0x0018)  
	EMissionType                                       _missionType;                                               // 0x0370   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0371   (0x0003)  MISSED
	int32_t                                            _missionOrdinalNumber;                                      // 0x0374   (0x0004)  
	EMissionState                                      _missionState;                                              // 0x0378   (0x0001)  
	EFaction                                           _missionFaction;                                            // 0x0379   (0x0001)  
	unsigned char                                      UnknownData02_5[0x6];                                       // 0x037A   (0x0006)  MISSED
	TWeakObjectPtr<UWorld*>                            _missionLevel;                                              // 0x0380   (0x0028)  
	FMissionReward                                     _missionRewards;                                            // 0x03A8   (0x0018)  
	UTexture2D*                                        _missionBannerImage;                                        // 0x03C0   (0x0008)  
	TArray<TWeakObjectPtr>                             _missionStartingLocations;                                  // 0x03C8   (0x0010)  
	int32_t                                            _intendedNumberOfPlayers;                                   // 0x03D8   (0x0004)  
	float                                              _missionCooldownTime;                                       // 0x03DC   (0x0004)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x03E0   (0x0008)  MISSED
	UClass*                                            _missionItemSpawnerClass;                                   // 0x03E8   (0x0008)  
	TArray<FDialogueInfo>                              _missionIntroDialogues;                                     // 0x03F0   (0x0010)  
	TArray<FDialogueInfo>                              _missionOutroSuccessDialogues;                              // 0x0400   (0x0010)  
	TArray<FDialogueInfo>                              _missionOutroFailDialogues;                                 // 0x0410   (0x0010)  
	TArray<FDialogueInfo>                              _missionOutroBelatedDialogues;                              // 0x0420   (0x0010)  
	bool                                               _canInterruptDialogue;                                      // 0x0430   (0x0001)  
	unsigned char                                      UnknownData04_6[0x2F];                                      // 0x0431   (0x002F)  MISSED


	/// Functions
	// Function /Script/ConZ.Mission.Server_NotifyObjectiveWidgetInitialized
	void Server_NotifyObjectiveWidgetInitialized();                                                                          // [0x22df990] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.Mission.Server_NotifyObjectivesFinished
	void Server_NotifyObjectivesFinished();                                                                                  // [0x2333f00] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.Mission.Server_NotifyObjectiveDone
	void Server_NotifyObjectiveDone(AObjective* Objective, EObjectiveState ObjectiveState);                                  // [0x2333e30] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.Mission.OnRep_MissionStateChanged
	void OnRep_MissionStateChanged();                                                                                        // [0x12358e0] Native|Public        
	// Function /Script/ConZ.Mission.OnRep_MissionObjectives
	void OnRep_MissionObjectives();                                                                                          // [0x22a1e50] Native|Public        
	// Function /Script/ConZ.Mission.OnRep_ActiveObjectiveChanged
	void OnRep_ActiveObjectiveChanged();                                                                                     // [0x12375f0] Native|Public        
	// Function /Script/ConZ.Mission.OnMissionUnavailable
	void OnMissionUnavailable();                                                                                             // [0x12357a0] Native|Event|Protected|BlueprintEvent 
	// Function /Script/ConZ.Mission.OnMissionStarted
	void OnMissionStarted();                                                                                                 // [0x22a0fa0] Native|Event|Protected|BlueprintEvent 
	// Function /Script/ConZ.Mission.OnMissionLevelLoaded
	void OnMissionLevelLoaded();                                                                                             // [0x2333c30] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.Mission.OnMissionFailed
	void OnMissionFailed();                                                                                                  // [0x22700a0] Native|Event|Protected|BlueprintEvent 
	// Function /Script/ConZ.Mission.OnMissionCompleted
	void OnMissionCompleted();                                                                                               // [0x22a0fc0] Native|Event|Protected|BlueprintEvent 
	// Function /Script/ConZ.Mission.OnMissionBelated
	void OnMissionBelated();                                                                                                 // [0x226ff90] Native|Event|Protected|BlueprintEvent 
	// Function /Script/ConZ.Mission.OnMissionAvailable
	void OnMissionAvailable();                                                                                               // [0x2333c10] Native|Event|Protected|BlueprintEvent 
};

/// Class /Script/ConZ.MissionContainerWidget
/// Size: 0x0028 (0x000260 - 0x000288)
class UMissionContainerWidget : public UUserWidget
{ 
public:
	USizeBox*                                          _missionObjectivesSizeBox;                                  // 0x0260   (0x0008)  
	UTextBlock*                                        _missionName;                                               // 0x0268   (0x0008)  
	UVerticalBox*                                      _objectivesWidgets;                                         // 0x0270   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0278   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.MissionContainerWidget.StartObjectiveAnimation
	void StartObjectiveAnimation(EObjectiveAnimationState AnimationState);                                                   // [0x2333ff0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.MissionContainerWidget.GetStartObjectiveAnimation
	UWidgetAnimation* GetStartObjectiveAnimation();                                                                          // [0x2859740] Event|Protected|BlueprintEvent|Const 
	// Function /Script/ConZ.MissionContainerWidget.GetCompleteObjectiveAnimation
	UWidgetAnimation* GetCompleteObjectiveAnimation();                                                                       // [0x2859740] Event|Protected|BlueprintEvent|Const 
};

/// Class /Script/ConZ.MissionDataGroup
/// Size: 0x0130 (0x000030 - 0x000160)
class UMissionDataGroup : public UDataAsset
{ 
public:
	FString                                            MissionRootPath;                                            // 0x0030   (0x0010)  
	UAkAudioEvent*                                     MissionStartedSound;                                        // 0x0040   (0x0008)  
	UAkAudioEvent*                                     MissionCompletedSound;                                      // 0x0048   (0x0008)  
	UAkAudioEvent*                                     MissionFailedSound;                                         // 0x0050   (0x0008)  
	UAkAudioEvent*                                     ObjectiveStartedSound;                                      // 0x0058   (0x0008)  
	UAkAudioEvent*                                     ObjectiveCompletedSound;                                    // 0x0060   (0x0008)  
	UAkAudioEvent*                                     ObjectiveFailedSound;                                       // 0x0068   (0x0008)  
	TMap<UClass*, FMissionData>                        MainStoryMissions;                                          // 0x0070   (0x0050)  
	TMap<UClass*, FMissionData>                        SideStoryMissions;                                          // 0x00C0   (0x0050)  
	TMap<UClass*, FMissionData>                        TutorialMissions;                                           // 0x0110   (0x0050)  
};

/// Class /Script/ConZ.MissionDialogueManager
/// Size: 0x0040 (0x000220 - 0x000260)
class AMissionDialogueManager : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x1C];                                      // 0x0220   (0x001C)  MISSED
	float                                              _lineDurationModifier;                                      // 0x023C   (0x0004)  
	float                                              _delayBetweenDialogues;                                     // 0x0240   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0244   (0x0004)  MISSED
	UAkAudioEvent*                                     _missionStop;                                               // 0x0248   (0x0008)  
	unsigned char                                      UnknownData02_6[0x10];                                      // 0x0250   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.MissionDialogueManager.StopAllDialogue
	void StopAllDialogue();                                                                                                  // [0x2334070] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.MissionDialogueManager.PlayNextDialogue
	void PlayNextDialogue();                                                                                                 // [0x2333cb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.MissionDialogueManager.OnJournalTabModeOpened
	void OnJournalTabModeOpened(ETabMode tabMode);                                                                           // [0x2333ac0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.MissionDialogueManager.OnJournalTabModeClosed
	void OnJournalTabModeClosed();                                                                                           // [0x2333aa0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.MissionDialogueManager.AddToQueue
	void AddToQueue(TArray<FDialogueInfo>& missionDialogue, bool interrupt);                                                 // [0x23334d0] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/ConZ.MissionItemSpawner
/// Size: 0x0060 (0x000220 - 0x000280)
class AMissionItemSpawner : public AActor
{ 
public:
	TArray<FMissionItemInfo>                           _missionItemsInfo;                                          // 0x0220   (0x0010)  
	unsigned char                                      UnknownData00_6[0x50];                                      // 0x0230   (0x0050)  MISSED
};

/// Class /Script/ConZ.MissionItemWidget
/// Size: 0x01F0 (0x000260 - 0x000450)
class UMissionItemWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0260   (0x0030)  MISSED
	UTextBlock*                                        _missionItemName;                                           // 0x0290   (0x0008)  
	UTextBlock*                                        _missionItemCategory;                                       // 0x0298   (0x0008)  
	UOverlay*                                          _selectionBorder;                                           // 0x02A0   (0x0008)  
	UImage*                                            _stateImageIcon;                                            // 0x02A8   (0x0008)  
	UButton*                                           _expandButton;                                              // 0x02B0   (0x0008)  
	UOverlay*                                          _objectiveContentOverlay;                                   // 0x02B8   (0x0008)  
	UVerticalBox*                                      _objectiveContainer;                                        // 0x02C0   (0x0008)  
	UTexture2D*                                        _availableMissionIcon;                                      // 0x02C8   (0x0008)  
	UTexture2D*                                        _startedMissionIcon;                                        // 0x02D0   (0x0008)  
	UTexture2D*                                        _completedMissionIcon;                                      // 0x02D8   (0x0008)  
	UTexture2D*                                        _failedMissionIcon;                                         // 0x02E0   (0x0008)  
	FLinearColor                                       _widgetNormalColor;                                         // 0x02E8   (0x0010)  
	FLinearColor                                       _widgetCompletedColor;                                      // 0x02F8   (0x0010)  
	float                                              _activeTextFontSize;                                        // 0x0308   (0x0004)  
	float                                              _inactiveTextFontSize;                                      // 0x030C   (0x0004)  
	UAkAudioEvent*                                     _expandButtonOpenSound;                                     // 0x0310   (0x0008)  
	UAkAudioEvent*                                     _expandButtonClosedSound;                                   // 0x0318   (0x0008)  
	UAkAudioEvent*                                     _menuButtonClickAudioEvent;                                 // 0x0320   (0x0008)  
	unsigned char                                      UnknownData01_5[0xC8];                                      // 0x0328   (0x00C8)  MISSED
	TMap<FString, TWeakObjectPtr>                      _objectiveItemWidgets;                                      // 0x03F0   (0x0050)  
	unsigned char                                      UnknownData02_6[0x10];                                      // 0x0440   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.MissionItemWidget.OnExpandButtonClicked
	void OnExpandButtonClicked();                                                                                            // [0x2333a80] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.MissionLevelManager
/// Size: 0x0058 (0x000220 - 0x000278)
class AMissionLevelManager : public AActor
{ 
public:
	unsigned char                                      UnknownData00_1[0x58];                                      // 0x0220   (0x0058)  MISSED
};

/// Class /Script/ConZ.MissionManager
/// Size: 0x0178 (0x000220 - 0x000398)
class AMissionManager : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0220   (0x0020)  MISSED
	TMap<UClass*, FMissionData>                        _mainStoryMissions;                                         // 0x0240   (0x0050)  
	TMap<UClass*, FMissionData>                        _sideStoryMissions;                                         // 0x0290   (0x0050)  
	TMap<UClass*, FMissionData>                        _tutorialMissions;                                          // 0x02E0   (0x0050)  
	unsigned char                                      UnknownData01_5[0x13];                                      // 0x0330   (0x0013)  MISSED
	bool                                               _tutorialEnabled;                                           // 0x0343   (0x0001)  
	float                                              _tutorialDelay;                                             // 0x0344   (0x0004)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x0348   (0x0008)  MISSED
	AMission*                                          _activeMainStoryMission;                                    // 0x0350   (0x0008)  
	AMission*                                          _activeSideStoryMission;                                    // 0x0358   (0x0008)  
	AMission*                                          _activeTutorialMission;                                     // 0x0360   (0x0008)  
	AMission*                                          _availableMission;                                          // 0x0368   (0x0008)  
	EMissionManagerState                               _missionManagerState;                                       // 0x0370   (0x0001)  
	unsigned char                                      UnknownData03_6[0x27];                                      // 0x0371   (0x0027)  MISSED


	/// Functions
	// Function /Script/ConZ.MissionManager.UntrackMission
	void UntrackMission(EMissionType MissionType);                                                                           // [0x2334120] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.MissionManager.SwitchActiveMission
	void SwitchActiveMission(UClass* missionClass);                                                                          // [0x2334090] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.MissionManager.Server_SendMissionInvitation
	void Server_SendMissionInvitation(AMissionManager* manager, AMission* Mission);                                          // [0x2333f20] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.MissionManager.Server_RewardsAccepted
	void Server_RewardsAccepted();                                                                                           // [0x2333c10] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.MissionManager.Server_DestroyCompletedMission
	void Server_DestroyCompletedMission(AMission* Mission);                                                                  // [0x2333da0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.MissionManager.Server_AcceptMissionInvitation
	void Server_AcceptMissionInvitation(AMission* Mission, bool accepted);                                                   // [0x2333cd0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.MissionManager.OnRep_MissionManagerStateChanged
	void OnRep_MissionManagerStateChanged();                                                                                 // [0x2333c70] Native|Public        
	// Function /Script/ConZ.MissionManager.OnRep_AvailableMissionChanged
	void OnRep_AvailableMissionChanged();                                                                                    // [0x12358e0] Native|Public        
	// Function /Script/ConZ.MissionManager.OnRep_ActiveTutorialMissionChanged
	void OnRep_ActiveTutorialMissionChanged();                                                                               // [0x22a1e50] Native|Public        
	// Function /Script/ConZ.MissionManager.OnRep_ActiveSideStoryMissionChanged
	void OnRep_ActiveSideStoryMissionChanged();                                                                              // [0x12375f0] Native|Public        
	// Function /Script/ConZ.MissionManager.OnRep_ActiveMainStoryMissionChanged
	void OnRep_ActiveMainStoryMissionChanged();                                                                              // [0x22df990] Native|Public        
	// Function /Script/ConZ.MissionManager.IsMissionInvitationReceived
	bool IsMissionInvitationReceived();                                                                                      // [0x2333a50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.MissionManager.Client_UpdateMissionsData
	void Client_UpdateMissionsData(UClass* missionClass, FMissionData MissionData);                                          // [0x23337c0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.MissionManager.Client_StartTutorial
	void Client_StartTutorial();                                                                                             // [0x226ff90] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.MissionManager.Client_ShowMissionResultWidget
	void Client_ShowMissionResultWidget(AMission* Mission, bool Completed);                                                  // [0x23336f0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.MissionManager.Client_SendMissionInvitation
	void Client_SendMissionInvitation(AMissionManager* manager, AMission* Mission);                                          // [0x2333620] Net|NetReliableNative|Event|Public|NetClient 
};

/// Class /Script/ConZ.MissionPrompt
/// Size: 0x0018 (0x000260 - 0x000278)
class UMissionPrompt : public UUserWidget
{ 
public:
	UTextBlock*                                        _description;                                               // 0x0260   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0268   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.MissionPrompt.OnYesClicked
	void OnYesClicked();                                                                                                     // [0x2333c90] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.MissionPrompt.OnNoClicked
	void OnNoClicked();                                                                                                      // [0x2333c50] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.MissionResult
/// Size: 0x0020 (0x000260 - 0x000280)
class UMissionResult : public UUserWidget
{ 
public:
	UOverlay*                                          _resultTitleOverlay;                                        // 0x0260   (0x0008)  
	UTextBlock*                                        _resultTitleDescription;                                    // 0x0268   (0x0008)  
	UOverlay*                                          _resultRewardContainerOverlay;                              // 0x0270   (0x0008)  
	UVerticalBox*                                      _resultRewardContainer;                                     // 0x0278   (0x0008)  


	/// Functions
	// Function /Script/ConZ.MissionResult.PlayShowMissionResultAnimation
	void PlayShowMissionResultAnimation();                                                                                   // [0x22c6350] Native|Event|Public|BlueprintEvent 
};

/// Class /Script/ConZ.MissionRewardWidget
/// Size: 0x0010 (0x000260 - 0x000270)
class UMissionRewardWidget : public UUserWidget
{ 
public:
	UImage*                                            _rewardImage;                                               // 0x0260   (0x0008)  
	UTextBlock*                                        _rewardAmount;                                              // 0x0268   (0x0008)  
};

/// Class /Script/ConZ.MissionScheduler
/// Size: 0x01C0 (0x000220 - 0x0003E0)
class AMissionScheduler : public AActor
{ 
public:
	bool                                               _missionSchedulerEnabled;                                   // 0x0220   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0221   (0x0007)  MISSED
	TMap<UClass*, FMissionData>                        _availableMainStoryMissions;                                // 0x0228   (0x0050)  
	TMap<UClass*, FMissionData>                        _availableSideStoryMissions;                                // 0x0278   (0x0050)  
	TMap<UClass*, FMissionData>                        _availableTutorialMissions;                                 // 0x02C8   (0x0050)  
	float                                              _missionQueuingInterval;                                    // 0x0318   (0x0004)  
	unsigned char                                      UnknownData01_6[0xC4];                                      // 0x031C   (0x00C4)  MISSED


	/// Functions
	// Function /Script/ConZ.MissionScheduler.OnLocationEnter
	void OnLocationEnter(AActor* OverlapedActor, AActor* OtherActor);                                                        // [0x2333b40] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.MissionTabWidget
/// Size: 0x0098 (0x000260 - 0x0002F8)
class UMissionTabWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UTextBlock*                                        _tabNameText;                                               // 0x0278   (0x0008)  
	UImage*                                            _backgroundImage;                                           // 0x0280   (0x0008)  
	USizeBox*                                          _sizeBox;                                                   // 0x0288   (0x0008)  
	FText                                              _tabName;                                                   // 0x0290   (0x0018)  
	float                                              _activeTabHeight;                                           // 0x02A8   (0x0004)  
	float                                              _inactiveTabHeight;                                         // 0x02AC   (0x0004)  
	float                                              _activeFontSize;                                            // 0x02B0   (0x0004)  
	float                                              _inactiveFontSize;                                          // 0x02B4   (0x0004)  
	UTexture2D*                                        _activeBackgroundTexture;                                   // 0x02B8   (0x0008)  
	UTexture2D*                                        _inactiveBackgroundTexture;                                 // 0x02C0   (0x0008)  
	FLinearColor                                       _activeFontColor;                                           // 0x02C8   (0x0010)  
	FLinearColor                                       _inactiveFontColor;                                         // 0x02D8   (0x0010)  
	UAkAudioEvent*                                     _menuButtonClickAudioEvent;                                 // 0x02E8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x02F0   (0x0008)  MISSED
};

/// Class /Script/ConZ.ModularTooltip
/// Size: 0x0020 (0x000260 - 0x000280)
class UModularTooltip : public UUserWidget
{ 
public:
	UClass*                                            _sectionClass;                                              // 0x0260   (0x0008)  
	UTextBlock*                                        _descriptionTextBlock;                                      // 0x0268   (0x0008)  
	UVerticalBox*                                      _sectionsVerticalBox;                                       // 0x0270   (0x0008)  
	UTextBlock*                                        _advancedDisplayHintTextBlock;                              // 0x0278   (0x0008)  


	/// Functions
	// Function /Script/ConZ.ModularTooltip.PrisonerHUD_OnShouldShowExtendedWidgetTooltipChanged
	void PrisonerHUD_OnShouldShowExtendedWidgetTooltipChanged(bool Value);                                                   // [0x2339550] Final|Native|Private 
};

/// Class /Script/ConZ.ModularTooltipElement
/// Size: 0x0088 (0x000260 - 0x0002E8)
class UModularTooltipElement : public UUserWidget
{ 
public:
	UModularTooltipElementData*                        _data;                                                      // 0x0260   (0x0008)  
	FDataTableRowHandle                                _neutralDispositionColor;                                   // 0x0268   (0x0010)  
	FDataTableRowHandle                                _goodDispositionColor;                                      // 0x0278   (0x0010)  
	FDataTableRowHandle                                _badDispositionColor;                                       // 0x0288   (0x0010)  
	unsigned char                                      UnknownData00_6[0x50];                                      // 0x0298   (0x0050)  MISSED
};

/// Class /Script/ConZ.ModularTooltipElement_Title
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UModularTooltipElement_Title : public UModularTooltipElement
{ 
public:
	UTextBlock*                                        _titleTextBlock;                                            // 0x02E8   (0x0008)  
};

/// Class /Script/ConZ.ModularTooltipElement_Value
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UModularTooltipElement_Value : public UModularTooltipElement
{ 
public:
	UTextBlock*                                        _nameTextBlock;                                             // 0x02E8   (0x0008)  
	UTextBlock*                                        _valueTextBlock;                                            // 0x02F0   (0x0008)  
};

/// Class /Script/ConZ.ModularTooltipElement_Timer
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UModularTooltipElement_Timer : public UModularTooltipElement
{ 
public:
	UMetabolismAdvancedProgressBar*                    _remainingTimeProgressBar;                                  // 0x02E8   (0x0008)  
};

/// Class /Script/ConZ.ModularTooltipElement_Modifier
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UModularTooltipElement_Modifier : public UModularTooltipElement
{ 
public:
	UTextBlock*                                        _modifierTextBlock;                                         // 0x02E8   (0x0008)  
	UMetabolismAdvancedProgressBar*                    _remainingTimeProgressBar;                                  // 0x02F0   (0x0008)  
};

/// Class /Script/ConZ.ModularTooltipElement_ValueWithModifier
/// Size: 0x0028 (0x0002E8 - 0x000310)
class UModularTooltipElement_ValueWithModifier : public UModularTooltipElement
{ 
public:
	UTextBlock*                                        _nameTextBlock;                                             // 0x02E8   (0x0008)  
	UTextBlock*                                        _currentValueTextBlock;                                     // 0x02F0   (0x0008)  
	UTextBlock*                                        _baseValueTextBlock;                                        // 0x02F8   (0x0008)  
	UTextBlock*                                        _modifierSignTextBlock;                                     // 0x0300   (0x0008)  
	UTextBlock*                                        _modifierTextBlock;                                         // 0x0308   (0x0008)  
};

/// Class /Script/ConZ.ModularTooltipElement_AffectedBy
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UModularTooltipElement_AffectedBy : public UModularTooltipElement
{ 
public:
	UTextBlock*                                        _sourceTextBlock;                                           // 0x02E8   (0x0008)  
	UOverlay*                                          _affectElementOverlay;                                      // 0x02F0   (0x0008)  
};

/// Class /Script/ConZ.ModularTooltipElement_Affects
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UModularTooltipElement_Affects : public UModularTooltipElement
{ 
public:
	UTextBlock*                                        _targetTextBlock;                                           // 0x02E8   (0x0008)  
	UOverlay*                                          _affectElementOverlay;                                      // 0x02F0   (0x0008)  
};

/// Class /Script/ConZ.ModularTooltipElementData
/// Size: 0x0000 (0x000028 - 0x000028)
class UModularTooltipElementData : public UObject
{ 
public:
};

/// Class /Script/ConZ.ModularTooltipElementData_Title
/// Size: 0x0020 (0x000028 - 0x000048)
class UModularTooltipElementData_Title : public UModularTooltipElementData
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0028   (0x0020)  MISSED
};

/// Class /Script/ConZ.ModularTooltipElementData_Value
/// Size: 0x0038 (0x000028 - 0x000060)
class UModularTooltipElementData_Value : public UModularTooltipElementData
{ 
public:
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0028   (0x0038)  MISSED
};

/// Class /Script/ConZ.ModularTooltipElementData_Timer
/// Size: 0x0030 (0x000028 - 0x000058)
class UModularTooltipElementData_Timer : public UModularTooltipElementData
{ 
public:
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x0028   (0x0030)  MISSED
};

/// Class /Script/ConZ.ModularTooltipElementData_Modifier
/// Size: 0x0050 (0x000028 - 0x000078)
class UModularTooltipElementData_Modifier : public UModularTooltipElementData
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0028   (0x0050)  MISSED
};

/// Class /Script/ConZ.ModularTooltipElementData_ValueWithModifier
/// Size: 0x0070 (0x000028 - 0x000098)
class UModularTooltipElementData_ValueWithModifier : public UModularTooltipElementData
{ 
public:
	unsigned char                                      UnknownData00_1[0x70];                                      // 0x0028   (0x0070)  MISSED
};

/// Class /Script/ConZ.ModularTooltipElementData_ValueWithModifier_Small
/// Size: 0x0000 (0x000098 - 0x000098)
class UModularTooltipElementData_ValueWithModifier_Small : public UModularTooltipElementData_ValueWithModifier
{ 
public:
};

/// Class /Script/ConZ.ModularTooltipElementData_ValueWithModifier_Large
/// Size: 0x0000 (0x000098 - 0x000098)
class UModularTooltipElementData_ValueWithModifier_Large : public UModularTooltipElementData_ValueWithModifier
{ 
public:
};

/// Class /Script/ConZ.ModularTooltipElementData_AffectedBy
/// Size: 0x0020 (0x000028 - 0x000048)
class UModularTooltipElementData_AffectedBy : public UModularTooltipElementData
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0028   (0x0018)  MISSED
	UModularTooltipElementData*                        Affect;                                                     // 0x0040   (0x0008)  
};

/// Class /Script/ConZ.ModularTooltipElementData_Affects
/// Size: 0x0020 (0x000028 - 0x000048)
class UModularTooltipElementData_Affects : public UModularTooltipElementData
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0028   (0x0018)  MISSED
	UModularTooltipElementData*                        Affect;                                                     // 0x0040   (0x0008)  
};

/// Class /Script/ConZ.ModularTooltipSection
/// Size: 0x0030 (0x000260 - 0x000290)
class UModularTooltipSection : public UUserWidget
{ 
public:
	FMargin                                            _sectionElementsPadding;                                    // 0x0260   (0x0010)  
	UImage*                                            _sectionSeparatorImage;                                     // 0x0270   (0x0008)  
	UTextBlock*                                        _sectionNameTextBlock;                                      // 0x0278   (0x0008)  
	UVerticalBox*                                      _sectionElementsVerticalBox;                                // 0x0280   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0288   (0x0008)  MISSED
};

/// Class /Script/ConZ.MotorcycleSkill
/// Size: 0x0000 (0x0005D8 - 0x0005D8)
class UMotorcycleSkill : public UDrivingSkill
{ 
public:
};

/// Class /Script/ConZ.Mountable
/// Size: 0x0000 (0x000028 - 0x000028)
class UMountable : public UInterface
{ 
public:
};

/// Class /Script/ConZ.Mountee
/// Size: 0x0000 (0x000028 - 0x000028)
class UMountee : public UInterface
{ 
public:
};

/// Class /Script/ConZ.MountPath
/// Size: 0x0018 (0x000028 - 0x000040)
class UMountPath : public UObject
{ 
public:
	FGameplayTag                                       PathTag;                                                    // 0x0028   (0x0008)  
	UAnimMontage*                                      MountingMontage;                                            // 0x0030   (0x0008)  
	float                                              FallbackMountTime;                                          // 0x0038   (0x0004)  
	EMotionIntensity                                   MountingMotionIntensity;                                    // 0x003C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x003D   (0x0003)  MISSED
};

/// Class /Script/ConZ.ExternalMountPath
/// Size: 0x0060 (0x000040 - 0x0000A0)
class UExternalMountPath : public UMountPath
{ 
public:
	FTransform                                         DestinationTransform;                                       // 0x0040   (0x0030)  
	bool                                               OverrideDestinationAcceptanceRadius;                        // 0x0070   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0071   (0x0003)  MISSED
	float                                              DestinationAcceptanceRadius;                                // 0x0074   (0x0004)  
	float                                              AccesibilityCheck_MountSocketVerticalCorrection;            // 0x0078   (0x0004)  
	float                                              AccesibilityCheck_CapsuleRadius;                            // 0x007C   (0x0004)  
	float                                              AccesibilityCheck_OverlapCapsuleRadius;                     // 0x0080   (0x0004)  
	float                                              AccesibilityCheck_SweepCapsuleHalfHeight;                   // 0x0084   (0x0004)  
	float                                              AccesibilityCheck_OverlapCapsuleHalfHeight;                 // 0x0088   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x008C   (0x0004)  MISSED
	UAnimMontage*                                      UnmountingMontage;                                          // 0x0090   (0x0008)  
	float                                              FallbackUnmountTime;                                        // 0x0098   (0x0004)  
	EMotionIntensity                                   UnmountingMotionIntensity;                                  // 0x009C   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x009D   (0x0003)  MISSED
};

/// Class /Script/ConZ.InternalMountPath
/// Size: 0x0008 (0x000040 - 0x000048)
class UInternalMountPath : public UMountPath
{ 
public:
	FGameplayTag                                       DestinationSlotId;                                          // 0x0040   (0x0008)  
};

/// Class /Script/ConZ.MountPathBlocker
/// Size: 0x0000 (0x000028 - 0x000028)
class UMountPathBlocker : public UInterface
{ 
public:
};

/// Class /Script/ConZ.MountSlot
/// Size: 0x0000 (0x000028 - 0x000028)
class UMountSlot : public UInterface
{ 
public:
};

/// Class /Script/ConZ.MovableAudioSpline
/// Size: 0x0030 (0x000550 - 0x000580)
class UMovableAudioSpline : public USplineComponent
{ 
public:
	TArray<FMovingSplineSoundData>                     _audioEvents;                                               // 0x0548   (0x0010)  
	unsigned char                                      UnknownData00_6[0x28];                                      // 0x0558   (0x0028)  MISSED
};

/// Class /Script/ConZ.MovableCollisionFieldComponent
/// Size: 0x0068 (0x0000B0 - 0x000118)
class UMovableCollisionFieldComponent : public UActorComponent
{ 
public:
	float                                              _collisionCheckInterval;                                    // 0x00B0   (0x0004)  
	FMovableCollisionFieldState                        _currentState;                                              // 0x00B4   (0x0003)  
	unsigned char                                      UnknownData00_5[0x19];                                      // 0x00B7   (0x0019)  MISSED
	FMovableCollisionFieldMoveInfo                     _moveInfo;                                                  // 0x00D0   (0x0010)  
	FVector                                            _startRelativeLocation;                                     // 0x00E0   (0x000C)  
	FVector                                            _endRelativeLocation;                                       // 0x00EC   (0x000C)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x00F8   (0x0020)  MISSED


	/// Functions
	// Function /Script/ConZ.MovableCollisionFieldComponent.OnRep_CurrentState
	void OnRep_CurrentState();                                                                                               // [0x2339390] Final|Native|Private 
	// Function /Script/ConZ.MovableCollisionFieldComponent.NetMulticast_DeactivateField
	void NetMulticast_DeactivateField();                                                                                     // [0x22706f0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.MovableCollisionFieldComponent.NetMulticast_ActivateField
	void NetMulticast_ActivateField();                                                                                       // [0x2315150] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.MovableCollisionFieldComponent.Initialize
	void Initialize(TArray<UStaticMeshComponent*>& movableMeshes, TArray<UStaticMeshComponent*>& collisionMeshes);           // [0x2338c50] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/ConZ.MugshotRoom
/// Size: 0x0020 (0x000220 - 0x000240)
class AMugshotRoom : public AActor
{ 
public:
	USceneComponent*                                   _sceneRoot;                                                 // 0x0220   (0x0008)  
	UChildActorComponent*                              _previewPrisoner;                                           // 0x0228   (0x0008)  
	USceneCaptureComponent2D*                          _mugshotCapture;                                            // 0x0230   (0x0008)  
	UChildActorComponent*                              _inmateShirt;                                               // 0x0238   (0x0008)  
};

/// Class /Script/ConZ.MusicPlayerDisplayWidget
/// Size: 0x00A8 (0x000260 - 0x000308)
class UMusicPlayerDisplayWidget : public UUserWidget
{ 
public:
	UImage*                                            _shuffleImage;                                              // 0x0260   (0x0008)  
	UImage*                                            _repeatImage;                                               // 0x0268   (0x0008)  
	UImage*                                            _previousImage;                                             // 0x0270   (0x0008)  
	UImage*                                            _pauseImage;                                                // 0x0278   (0x0008)  
	UImage*                                            _playImage;                                                 // 0x0280   (0x0008)  
	UImage*                                            _nextImage;                                                 // 0x0288   (0x0008)  
	UTextBlock*                                        _songTitleText;                                             // 0x0290   (0x0008)  
	float                                              _inactiveOpacity;                                           // 0x0298   (0x0004)  
	float                                              _iconActivityDuration;                                      // 0x029C   (0x0004)  
	float                                              _trackNameDuration;                                         // 0x02A0   (0x0004)  
	float                                              _radioStationNameDuration;                                  // 0x02A4   (0x0004)  
	float                                              _trackNameOffsetStep;                                       // 0x02A8   (0x0004)  
	float                                              _trackNameOffsetPadding;                                    // 0x02AC   (0x0004)  
	float                                              _trackNameWaitingDuration;                                  // 0x02B0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x54];                                      // 0x02B4   (0x0054)  MISSED


	/// Functions
	// Function /Script/ConZ.MusicPlayerDisplayWidget.OnTrackNameChange
	void OnTrackNameChange();                                                                                                // [0x23393d0] Final|Native|Private 
	// Function /Script/ConZ.MusicPlayerDisplayWidget.OnPreviousTrackIconTimeFinished
	void OnPreviousTrackIconTimeFinished();                                                                                  // [0x2339370] Final|Native|Private 
	// Function /Script/ConZ.MusicPlayerDisplayWidget.OnNextTrackIconTimeFinished
	void OnNextTrackIconTimeFinished();                                                                                      // [0x2339350] Final|Native|Private 
};

/// Class /Script/ConZ.NameableItemComponentState
/// Size: 0x0010 (0x000040 - 0x000050)
class UNameableItemComponentState : public UItemComponentStateBase
{ 
public:
	FString                                            Name;                                                       // 0x0040   (0x0010)  
};

/// Class /Script/ConZ.NameableItemComponent
/// Size: 0x0048 (0x0000C8 - 0x000110)
class UNameableItemComponent : public UItemComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x00C8   (0x0020)  MISSED
	FString                                            _name;                                                      // 0x00E8   (0x0010)  
	TWeakObjectPtr<UItemStatusWidget*>                 _nameWidget;                                                // 0x00F8   (0x0008)  
	TWeakObjectPtr<UChangeTextWidget*>                 _editNameWidget;                                            // 0x0100   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0108   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.NameableItemComponent.OnRep_Name
	void OnRep_Name();                                                                                                       // [0x23393b0] Final|Native|Private 
	// Function /Script/ConZ.NameableItemComponent.OnLocalPrisonerTabModeClosed
	void OnLocalPrisonerTabModeClosed();                                                                                     // [0x2339330] Final|Native|Private 
	// Function /Script/ConZ.NameableItemComponent.OnLocalPrisonerHoveredActorChanged
	void OnLocalPrisonerHoveredActorChanged(AActor* hoveredActor);                                                           // [0x23392a0] Final|Native|Private 
	// Function /Script/ConZ.NameableItemComponent.OnEditTextWidgetTextAccepted
	void OnEditTextWidgetTextAccepted(APrisoner* User, FText& Text);                                                         // [0x2339190] Final|Native|Private|HasOutParms 
};

/// Class /Script/ConZ.NetworkDataIdAsset
/// Size: 0x00A0 (0x000030 - 0x0000D0)
class UNetworkDataIdAsset : public UDataAsset
{ 
public:
	TMap<uint32_t, FPrimaryAssetId>                    IdToAssetMap;                                               // 0x0030   (0x0050)  
	TMap<FPrimaryAssetId, uint32_t>                    AssetToIdMap;                                               // 0x0080   (0x0050)  
};

/// Class /Script/ConZ.NetworkPredictionComponent
/// Size: 0x0140 (0x0000B0 - 0x0001F0)
class UNetworkPredictionComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x40];                                      // 0x00B0   (0x0040)  MISSED
	float                                              _interpolationBackTime;                                     // 0x00F0   (0x0004)  
	float                                              _timeSmoothing;                                             // 0x00F4   (0x0004)  
	float                                              _positionLerpSpeed;                                         // 0x00F8   (0x0004)  
	float                                              _rotationLerpSpeed;                                         // 0x00FC   (0x0004)  
	SyncMode                                           _syncPosition;                                              // 0x0100   (0x0001)  
	SyncMode                                           _syncRotation;                                              // 0x0101   (0x0001)  
	SyncMode                                           _syncVelocity;                                              // 0x0102   (0x0001)  
	SyncMode                                           _syncAngularVelocity;                                       // 0x0103   (0x0001)  
	bool                                               _isPositionCompressed;                                      // 0x0104   (0x0001)  
	bool                                               _isRotationCompressed;                                      // 0x0105   (0x0001)  
	bool                                               _isVelocityCompressed;                                      // 0x0106   (0x0001)  
	bool                                               _isAngularVelocityCompressed;                               // 0x0107   (0x0001)  
	float                                              _sendRate;                                                  // 0x0108   (0x0004)  
	float                                              _restSendRate;                                              // 0x010C   (0x0004)  
	unsigned char                                      UnknownData01_5[0x64];                                      // 0x0110   (0x0064)  MISSED
	float                                              _atRestPositionThreshold;                                   // 0x0174   (0x0004)  
	float                                              _atRestRotationThreshold;                                   // 0x0178   (0x0004)  
	float                                              _atRestDeltaTimeThreshold;                                  // 0x017C   (0x0004)  
	float                                              _distanceThresholdToSnap;                                   // 0x0180   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4C];                                      // 0x0184   (0x004C)  MISSED
	float                                              _minTimeToCoverPosition;                                    // 0x01D0   (0x0004)  
	float                                              _maxTimeToCoverPosition;                                    // 0x01D4   (0x0004)  
	float                                              _minTimeToCoverRotation;                                    // 0x01D8   (0x0004)  
	float                                              _maxTimeToCoverRotation;                                    // 0x01DC   (0x0004)  
	unsigned char                                      UnknownData03_6[0x10];                                      // 0x01E0   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.NetworkPredictionComponent.Server_SendTransform
	void Server_SendTransform(TArray<char> packedState);                                                                     // [0x23395e0] Net|Native|Event|Public|NetServer 
	// Function /Script/ConZ.NetworkPredictionComponent.Multicast_SendTransform
	void Multicast_SendTransform(TArray<char> packedState);                                                                  // [0x23390f0] Net|Native|Event|NetMulticast|Public 
	// Function /Script/ConZ.NetworkPredictionComponent.ForceStateSendNextFrame
	void ForceStateSendNextFrame();                                                                                          // [0x2338920] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.NetworkStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UNetworkStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.NightVisionGogglesItem
/// Size: 0x00C0 (0x0009C0 - 0x000A80)
class ANightVisionGogglesItem : public AClothesItem
{ 
public:
	UAkAudioEvent*                                     ActivatedSound;                                             // 0x09C0   (0x0008)  
	UAkAudioEvent*                                     DeactivatedSound;                                           // 0x09C8   (0x0008)  
	FMulticastInlineDelegate                           ActivatedChanged;                                           // 0x09D0   (0x0010)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x09E0   (0x0008)  MISSED
	UBasicGameResourceSlotItemComponent*               _resourceSlotComponent;                                     // 0x09E8   (0x0008)  
	FGameplayTag                                       _nightVisionGogglesOnTag;                                   // 0x09F0   (0x0008)  
	FRuntimeFloatCurve                                 _batteryPercentageToGlitchStrengthCurve;                    // 0x09F8   (0x0088)  


	/// Functions
	// Function /Script/ConZ.NightVisionGogglesItem.OnComponentDeactivated
	void OnComponentDeactivated(UActorComponent* Component);                                                                 // [0x233d810] Final|Native|Private 
	// Function /Script/ConZ.NightVisionGogglesItem.OnComponentActivated
	void OnComponentActivated(UActorComponent* Component, bool wasReset);                                                    // [0x233d740] Final|Native|Private 
	// Function /Script/ConZ.NightVisionGogglesItem.ActivatedChangedEvent__DelegateSignature
	void ActivatedChangedEvent__DelegateSignature(ANightVisionGogglesItem* sender);                                          // [0x2859740] MulticastDelegate|Public|Delegate 
};

/// Class /Script/ConZ.NotificationPanelWidget
/// Size: 0x0040 (0x000260 - 0x0002A0)
class UNotificationPanelWidget : public UUserWidget
{ 
public:
	UVerticalBox*                                      _notificationBox;                                           // 0x0260   (0x0008)  
	UBorder*                                           _nextEventBox;                                              // 0x0268   (0x0008)  
	UTextBlock*                                        _nextEventCountdown;                                        // 0x0270   (0x0008)  
	UTextBlock*                                        _nextEventLocation;                                         // 0x0278   (0x0008)  
	UBorder*                                           _eventCancelBox;                                            // 0x0280   (0x0008)  
	UTextBlock*                                        _eventCancelTime;                                           // 0x0288   (0x0008)  
	UBorder*                                           _eventTime;                                                 // 0x0290   (0x0008)  
	UTextBlock*                                        _eventTimeText;                                             // 0x0298   (0x0008)  
};

/// Class /Script/ConZ.NotificationsManager
/// Size: 0x00B8 (0x000220 - 0x0002D8)
class ANotificationsManager : public AActor
{ 
public:
	TMap<FDbIntegerId, UNotificationDescription*>      _queuedNotifications;                                       // 0x0220   (0x0050)  
	TArray<UNotificationChain*>                        _queuedNotificationChains;                                  // 0x0270   (0x0010)  
	unsigned char                                      UnknownData00_5[0x50];                                      // 0x0280   (0x0050)  MISSED
	int64_t                                            _notificationTimeout;                                       // 0x02D0   (0x0008)  


	/// Functions
	// Function /Script/ConZ.NotificationsManager.OnPlayerReadyToPlay
	void OnPlayerReadyToPlay(AConZPlayerController* PlayerController);                                                       // [0x233d8c0] Final|Native|Public  
	// Function /Script/ConZ.NotificationsManager.NetMulticast_RequestNotification
	void NetMulticast_RequestNotification(FNotificationDescriptionReplicationHelper Description);                            // [0x233d680] Net|NetReliableNative|Event|NetMulticast|Public 
};

/// Class /Script/ConZ.NotificationChain
/// Size: 0x0030 (0x000028 - 0x000058)
class UNotificationChain : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0028   (0x0020)  MISSED
	TArray<FNotificationAndDelay>                      _notifications;                                             // 0x0048   (0x0010)  
};

/// Class /Script/ConZ.NotificationWidget
/// Size: 0x0040 (0x000260 - 0x0002A0)
class UNotificationWidget : public UUserWidget
{ 
public:
	USizeBox*                                          _notificationSize;                                          // 0x0260   (0x0008)  
	UImage*                                            _icon;                                                      // 0x0268   (0x0008)  
	UTextBlock*                                        _text;                                                      // 0x0270   (0x0008)  
	UWidgetAnimation*                                  _increaseToMaxSize;                                         // 0x0278   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0280   (0x0020)  MISSED
};

/// Class /Script/ConZ.NPCControllerState
/// Size: 0x0008 (0x000028 - 0x000030)
class UNPCControllerState : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.NPCControllerStateBrennerBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UNPCControllerStateBrennerBase : public UNPCControllerState
{ 
public:
};

/// Class /Script/ConZ.NPCControllerStateBrennerAlerted
/// Size: 0x0000 (0x000030 - 0x000030)
class UNPCControllerStateBrennerAlerted : public UNPCControllerStateBrennerBase
{ 
public:
};

/// Class /Script/ConZ.NPCControllerStateBrennerCombat
/// Size: 0x0028 (0x000030 - 0x000058)
class UNPCControllerStateBrennerCombat : public UNPCControllerStateBrennerBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0030   (0x0028)  MISSED
};

/// Class /Script/ConZ.NPCControllerStateBrennerHibernate
/// Size: 0x0010 (0x000030 - 0x000040)
class UNPCControllerStateBrennerHibernate : public UNPCControllerStateBrennerBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0030   (0x0010)  MISSED
};

/// Class /Script/ConZ.NPCControllerStateBrennerHitReact
/// Size: 0x0000 (0x000030 - 0x000030)
class UNPCControllerStateBrennerHitReact : public UNPCControllerStateBrennerBase
{ 
public:
};

/// Class /Script/ConZ.NPCControllerStateBrennerInvestigateArea
/// Size: 0x0008 (0x000030 - 0x000038)
class UNPCControllerStateBrennerInvestigateArea : public UNPCControllerStateBrennerBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.NPCControllerStateBrennerOpenDoor
/// Size: 0x0028 (0x000030 - 0x000058)
class UNPCControllerStateBrennerOpenDoor : public UNPCControllerStateBrennerBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0030   (0x0028)  MISSED
};

/// Class /Script/ConZ.NPCControllerStateBrennerRage
/// Size: 0x0008 (0x000030 - 0x000038)
class UNPCControllerStateBrennerRage : public UNPCControllerStateBrennerBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.NPCControllerStateBrennerReturnToHibernation
/// Size: 0x0000 (0x000030 - 0x000030)
class UNPCControllerStateBrennerReturnToHibernation : public UNPCControllerStateBrennerBase
{ 
public:
};

/// Class /Script/ConZ.ObjectCondition
/// Size: 0x0000 (0x000028 - 0x000028)
class UObjectCondition : public UInterface
{ 
public:
};

/// Class /Script/ConZ.ObjectiveItemWidget
/// Size: 0x0078 (0x000260 - 0x0002D8)
class UObjectiveItemWidget : public UUserWidget
{ 
public:
	UTextBlock*                                        _objectiveItemText;                                         // 0x0260   (0x0008)  
	UImage*                                            _bullet;                                                    // 0x0268   (0x0008)  
	UImage*                                            _bulletCompleted;                                           // 0x0270   (0x0008)  
	FLinearColor                                       _objectiveActiveColor;                                      // 0x0278   (0x0010)  
	FLinearColor                                       _objectiveCompletedColor;                                   // 0x0288   (0x0010)  
	FLinearColor                                       _objectiveFailedColor;                                      // 0x0298   (0x0010)  
	unsigned char                                      UnknownData00_6[0x30];                                      // 0x02A8   (0x0030)  MISSED
};

/// Class /Script/ConZ.ObjectivesContainerWidget
/// Size: 0x0018 (0x000260 - 0x000278)
class UObjectivesContainerWidget : public UUserWidget
{ 
public:
	UMissionContainerWidget*                           _mainMissionContainerWidget;                                // 0x0260   (0x0008)  
	UMissionContainerWidget*                           _sideMissionContainerWidget;                                // 0x0268   (0x0008)  
	UMissionContainerWidget*                           _tutorialMissionContainerWidget;                            // 0x0270   (0x0008)  
};

/// Class /Script/ConZ.ObjectivesWidget
/// Size: 0x0060 (0x000260 - 0x0002C0)
class UObjectivesWidget : public UUserWidget
{ 
public:
	UTextBlock*                                        _objectiveDescription;                                      // 0x0260   (0x0008)  
	UHorizontalBox*                                    _amountTracker;                                             // 0x0268   (0x0008)  
	UTextBlock*                                        _currentAmount;                                             // 0x0270   (0x0008)  
	UTextBlock*                                        _totalAmount;                                               // 0x0278   (0x0008)  
	FLinearColor                                       activeObjectiveFontColor;                                   // 0x0280   (0x0010)  
	FLinearColor                                       inctiveObjectiveFontColor;                                  // 0x0290   (0x0010)  
	int32_t                                            activeObjectiveFontSize;                                    // 0x02A0   (0x0004)  
	int32_t                                            inactiveObjectiveFontSize;                                  // 0x02A4   (0x0004)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x02A8   (0x0018)  MISSED
};

/// Class /Script/ConZ.ObjectStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UObjectStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.ObstuctsMouthItemTag
/// Size: 0x0000 (0x000030 - 0x000030)
class UObstuctsMouthItemTag : public UBaseItemTag
{ 
public:
};

/// Class /Script/ConZ.OpenItemAction
/// Size: 0x0010 (0x0000A8 - 0x0000B8)
class UOpenItemAction : public UInteractionAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00A8   (0x0010)  MISSED
};

/// Class /Script/ConZ.PaddleItemTag
/// Size: 0x0020 (0x000030 - 0x000050)
class UPaddleItemTag : public UBaseItemTag
{ 
public:
	UBlendSpace*                                       PaddlingLHandAnimation;                                     // 0x0030   (0x0008)  
	UBlendSpace*                                       PaddlingRHandAnimation;                                     // 0x0038   (0x0008)  
	UAnimSequence*                                     PaddlingLToRAnimation;                                      // 0x0040   (0x0008)  
	UAnimSequence*                                     PaddlingRToLAnimation;                                      // 0x0048   (0x0008)  
};

/// Class /Script/ConZ.ParachuteItemTag
/// Size: 0x0000 (0x000030 - 0x000030)
class UParachuteItemTag : public UBaseItemTag
{ 
public:
};

/// Class /Script/ConZ.SimpleParachuteItemTag
/// Size: 0x0050 (0x000030 - 0x000080)
class USimpleParachuteItemTag : public UParachuteItemTag
{ 
public:
	FPrisonerAirMovementParameters                     MovementParameters;                                         // 0x0030   (0x001C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x004C   (0x0004)  MISSED
	FParachuteAnimParams                               FallLongAnimation;                                          // 0x0050   (0x0010)  
	FParachuteAnimParams                               SkydiveSlowAnimation;                                       // 0x0060   (0x0010)  
	FParachuteAnimParams                               SkydiveFastAnimation;                                       // 0x0070   (0x0010)  
};

/// Class /Script/ConZ.PauseMenu
/// Size: 0x0130 (0x000260 - 0x000390)
class UPauseMenu : public UBaseMenu
{ 
public:
	unsigned char                                      UnknownData00_2[0xA8];                                      // 0x0260   (0x00A8)  MISSED
	UConZStandardButton*                               _resume;                                                    // 0x0308   (0x0008)  
	UConZStandardButton*                               _clientSettings;                                            // 0x0310   (0x0008)  
	UConZStandardButton*                               _serverSettings;                                            // 0x0318   (0x0008)  
	UConZStandardButton*                               _addToFavourites;                                           // 0x0320   (0x0008)  
	UConZStandardButton*                               _commitSuicide;                                             // 0x0328   (0x0008)  
	UConZStandardButton*                               _statistics;                                                // 0x0330   (0x0008)  
	UConZStandardButton*                               _mainMenu;                                                  // 0x0338   (0x0008)  
	UConZStandardButton*                               _quitGame;                                                  // 0x0340   (0x0008)  
	UVerticalBox*                                      _messageBoxPanel;                                           // 0x0348   (0x0008)  
	UPanelWidget*                                      _mainPanel;                                                 // 0x0350   (0x0008)  
	UTextBlock*                                        _suicideTimeCooldown;                                       // 0x0358   (0x0008)  
	UClass*                                            _serverSettingsLockedTooltipClass;                          // 0x0360   (0x0008)  
	UTextOnlyTooltip*                                  _serverSettingsLockedTooltip;                               // 0x0368   (0x0008)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x0370   (0x0020)  MISSED


	/// Functions
	// Function /Script/ConZ.PauseMenu.OnStatisticsClicked
	void OnStatisticsClicked();                                                                                              // [0x233d9b0] Final|Native|Private 
	// Function /Script/ConZ.PauseMenu.OnSettingsClicked
	void OnSettingsClicked();                                                                                                // [0x231f230] Final|Native|Private 
	// Function /Script/ConZ.PauseMenu.OnServerSettingsClicked
	void OnServerSettingsClicked();                                                                                          // [0x233d990] Final|Native|Private 
	// Function /Script/ConZ.PauseMenu.OnResumeClicked
	void OnResumeClicked();                                                                                                  // [0x233d970] Final|Native|Private 
	// Function /Script/ConZ.PauseMenu.OnQuitGameClicked
	void OnQuitGameClicked();                                                                                                // [0x233d950] Final|Native|Private 
	// Function /Script/ConZ.PauseMenu.OnExitToMainMenuClicked
	void OnExitToMainMenuClicked();                                                                                          // [0x233d8a0] Final|Native|Private 
	// Function /Script/ConZ.PauseMenu.OnCommitSuicideClicked
	void OnCommitSuicideClicked();                                                                                           // [0x233d720] Final|Native|Private 
	// Function /Script/ConZ.PauseMenu.OnAddToFavouritesClicked
	void OnAddToFavouritesClicked();                                                                                         // [0x233d700] Final|Native|Private 
};

/// Class /Script/ConZ.PauseMenuUIController
/// Size: 0x0040 (0x000028 - 0x000068)
class UPauseMenuUIController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0028   (0x0018)  MISSED
	UAkAudioEvent*                                     _resumeAllSounds;                                           // 0x0040   (0x0008)  
	UAkAudioEvent*                                     _stopAllSounds;                                             // 0x0048   (0x0008)  
	UAkAudioEvent*                                     _pauseAllSounds;                                            // 0x0050   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0058   (0x0010)  MISSED
};

/// Class /Script/ConZ.PesticideItem
/// Size: 0x0020 (0x000910 - 0x000930)
class APesticideItem : public AItem
{ 
public:
	USkeletalMeshComponent*                            SkeletalMesh;                                               // 0x0910   (0x0008)  
	EPesticideType                                     _type;                                                      // 0x0918   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0919   (0x0007)  MISSED
	UAnimMontage*                                      _applyPesticidePrisonerMontage;                             // 0x0920   (0x0008)  
	UAnimMontage*                                      _applyPesticideItemMontage;                                 // 0x0928   (0x0008)  
};

/// Class /Script/ConZ.PhoenixTearsComponent
/// Size: 0x0010 (0x0000C8 - 0x0000D8)
class UPhoenixTearsComponent : public UItemComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00C8   (0x0008)  MISSED
	UAnimMontage*                                      _itemInjectionMontage;                                      // 0x00D0   (0x0008)  
};

/// Class /Script/ConZ.PhotoModeMainPanel
/// Size: 0x01C8 (0x000260 - 0x000428)
class UPhotoModeMainPanel : public UUserWidget
{ 
public:
	UPanelWidget*                                      _mainPanelContainer;                                        // 0x0260   (0x0008)  
	UTabGroup*                                         _coreMenuTabButtons;                                        // 0x0268   (0x0008)  
	UWidgetSwitcher*                                   _coreMenu;                                                  // 0x0270   (0x0008)  
	UOverlay*                                          _inputLegend;                                               // 0x0278   (0x0008)  
	UImage*                                            _gridLine0;                                                 // 0x0280   (0x0008)  
	UImage*                                            _gridLine1;                                                 // 0x0288   (0x0008)  
	UImage*                                            _gridLine2;                                                 // 0x0290   (0x0008)  
	UImage*                                            _gridLine3;                                                 // 0x0298   (0x0008)  
	UImage*                                            _frameDisplay;                                              // 0x02A0   (0x0008)  
	UImage*                                            _logoDisplay;                                               // 0x02A8   (0x0008)  
	FText                                              _cameraTabTitle;                                            // 0x02B0   (0x0018)  
	FText                                              _effectsTabTitle;                                           // 0x02C8   (0x0018)  
	FText                                              _frameTabTitle;                                             // 0x02E0   (0x0018)  
	FText                                              _bodyTabTitle;                                              // 0x02F8   (0x0018)  
	TArray<TWeakObjectPtr>                             _frames;                                                    // 0x0310   (0x0010)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0320   (0x0008)  MISSED
	UClass*                                            _buttonClass;                                               // 0x0328   (0x0008)  
	UCarouselWithLabel*                                _cameraMode;                                                // 0x0330   (0x0008)  
	USliderWithLabelAndNumber*                         _cameraTilt;                                                // 0x0338   (0x0008)  
	USliderWithLabelAndNumber*                         _fieldOfView;                                               // 0x0340   (0x0008)  
	USliderWithLabelAndNumber*                         _depthOfField;                                              // 0x0348   (0x0008)  
	USliderWithLabelAndNumber*                         _focusDistance;                                             // 0x0350   (0x0008)  
	USliderWithLabelAndNumber*                         _selfieLight;                                               // 0x0358   (0x0008)  
	USliderWithLabelAndNumber*                         _exposure;                                                  // 0x0360   (0x0008)  
	USliderWithLabelAndNumber*                         _contrast;                                                  // 0x0368   (0x0008)  
	USliderWithLabelAndNumber*                         _vignette;                                                  // 0x0370   (0x0008)  
	USliderWithLabelAndNumber*                         _chromaticAberration;                                       // 0x0378   (0x0008)  
	USliderWithLabelAndNumber*                         _grain;                                                     // 0x0380   (0x0008)  
	USliderWithLabelAndNumber*                         _time;                                                      // 0x0388   (0x0008)  
	UCarouselWithLabel*                                _frame;                                                     // 0x0390   (0x0008)  
	UCarouselWithLabel*                                _logo;                                                      // 0x0398   (0x0008)  
	UCarouselWithLabel*                                _aspectRatio;                                               // 0x03A0   (0x0008)  
	UCarouselWithLabel*                                _lookAtCamera;                                              // 0x03A8   (0x0008)  
	UCarouselWithLabel*                                _upperBodyPose;                                             // 0x03B0   (0x0008)  
	UCarouselWithLabel*                                _lowerBodyPose;                                             // 0x03B8   (0x0008)  
	UCarouselWithLabel*                                _facialExpression;                                          // 0x03C0   (0x0008)  
	UTextBlock*                                        _selfieModeNote;                                            // 0x03C8   (0x0008)  
	UTextBlock*                                        _bodyPoseNote;                                              // 0x03D0   (0x0008)  
	UTextBlock*                                        _facialExpressionNote;                                      // 0x03D8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x48];                                      // 0x03E0   (0x0048)  MISSED


	/// Functions
	// Function /Script/ConZ.PhotoModeMainPanel.UpdateFrame
	void UpdateFrame();                                                                                                      // [0x2341d90] Final|Native|Private 
	// Function /Script/ConZ.PhotoModeMainPanel.MoveFocusUp
	UWidget* MoveFocusUp(EUINavigation UINavigation);                                                                        // [0x2341a40] Final|Native|Private|BlueprintCallable 
	// Function /Script/ConZ.PhotoModeMainPanel.MoveFocusDown
	UWidget* MoveFocusDown(EUINavigation UINavigation);                                                                      // [0x23419b0] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/ConZ.PhotoModePawn
/// Size: 0x0160 (0x000280 - 0x0003E0)
class APhotoModePawn : public APawn
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0280   (0x0008)  MISSED
	UClass*                                            HudWidgetClass;                                             // 0x0288   (0x0008)  
	UClass*                                            AnimInstanceClass;                                          // 0x0290   (0x0008)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x0298   (0x0010)  MISSED
	UCineCameraComponent*                              _camera;                                                    // 0x02A8   (0x0008)  
	USpotLightComponent*                               _light;                                                     // 0x02B0   (0x0008)  
	UVisionEffectsComponent*                           _visionEffects;                                             // 0x02B8   (0x0008)  
	UAkAudioEvent*                                     _shutterSound;                                              // 0x02C0   (0x0008)  
	float                                              _maxFocusDistance;                                          // 0x02C8   (0x0004)  
	float                                              _collisionSphereRadius;                                     // 0x02CC   (0x0004)  
	float                                              _minOrbitingDistance;                                       // 0x02D0   (0x0004)  
	float                                              _maxDistanceFromTarget;                                     // 0x02D4   (0x0004)  
	float                                              _desiredOrbitDistance;                                      // 0x02D8   (0x0004)  
	float                                              _maxMultiplayerCameraHeightDifference;                      // 0x02DC   (0x0004)  
	float                                              _maxMultiplayerExposureValue;                               // 0x02E0   (0x0004)  
	float                                              _maxMultiplayerCameraFOV;                                   // 0x02E4   (0x0004)  
	float                                              _keyInputCameraSpeed;                                       // 0x02E8   (0x0004)  
	float                                              _timeDilationInterpSpeed;                                   // 0x02EC   (0x0004)  
	unsigned char                                      UnknownData02_6[0xF0];                                      // 0x02F0   (0x00F0)  MISSED


	/// Functions
	// Function /Script/ConZ.PhotoModePawn.SetGameAudioPaused
	void SetGameAudioPaused(bool paused);                                                                                    // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.PhotoModePawn.OnFadeOutFinished
	void OnFadeOutFinished();                                                                                                // [0x2341ad0] Final|Native|Private 
	// Function /Script/ConZ.PhotoModePawn.Client_Initialize
	void Client_Initialize(AActor* Target);                                                                                  // [0x2341920] Net|NetReliableNative|Event|Public|NetClient 
};

/// Class /Script/ConZ.PhysicalSurfacesData
/// Size: 0x04B8 (0x000030 - 0x0004E8)
class UPhysicalSurfacesData : public UDataAsset
{ 
public:
	FPhysicalSurfaceData                               Default;                                                    // 0x0030   (0x001C)  
	FPhysicalSurfaceData                               grass;                                                      // 0x004C   (0x001C)  
	FPhysicalSurfaceData                               ForrestGroundCoastal;                                       // 0x0068   (0x001C)  
	FPhysicalSurfaceData                               ForrestGroundContinental;                                   // 0x0084   (0x001C)  
	FPhysicalSurfaceData                               Rock;                                                       // 0x00A0   (0x001C)  
	FPhysicalSurfaceData                               Stone;                                                      // 0x00BC   (0x001C)  
	FPhysicalSurfaceData                               Gravel;                                                     // 0x00D8   (0x001C)  
	FPhysicalSurfaceData                               GravelBeach;                                                // 0x00F4   (0x001C)  
	FPhysicalSurfaceData                               Pebbles;                                                    // 0x0110   (0x001C)  
	FPhysicalSurfaceData                               Snow;                                                       // 0x012C   (0x001C)  
	FPhysicalSurfaceData                               Ice;                                                        // 0x0148   (0x001C)  
	FPhysicalSurfaceData                               Sand;                                                       // 0x0164   (0x001C)  
	FPhysicalSurfaceData                               Asphalt;                                                    // 0x0180   (0x001C)  
	FPhysicalSurfaceData                               Dirt;                                                       // 0x019C   (0x001C)  
	FPhysicalSurfaceData                               Water;                                                      // 0x01B8   (0x001C)  
	FPhysicalSurfaceData                               WaterOcean;                                                 // 0x01D4   (0x001C)  
	FPhysicalSurfaceData                               Cloth;                                                      // 0x01F0   (0x001C)  
	FPhysicalSurfaceData                               Metal;                                                      // 0x020C   (0x001C)  
	FPhysicalSurfaceData                               Aluminium;                                                  // 0x0228   (0x001C)  
	FPhysicalSurfaceData                               Concrete;                                                   // 0x0244   (0x001C)  
	FPhysicalSurfaceData                               Brick;                                                      // 0x0260   (0x001C)  
	FPhysicalSurfaceData                               Wood;                                                       // 0x027C   (0x001C)  
	FPhysicalSurfaceData                               Plastic;                                                    // 0x0298   (0x001C)  
	FPhysicalSurfaceData                               Rubber;                                                     // 0x02B4   (0x001C)  
	FPhysicalSurfaceData                               Glass;                                                      // 0x02D0   (0x001C)  
	FPhysicalSurfaceData                               Foliage;                                                    // 0x02EC   (0x001C)  
	FPhysicalSurfaceData                               Bark;                                                       // 0x0308   (0x001C)  
	FPhysicalSurfaceData                               Flesh;                                                      // 0x0324   (0x001C)  
	FPhysicalSurfaceData                               RoofTile;                                                   // 0x0340   (0x001C)  
	FPhysicalSurfaceData                               CeramicTiles;                                               // 0x035C   (0x001C)  
	FPhysicalSurfaceData                               Scrap;                                                      // 0x0378   (0x001C)  
	FPhysicalSurfaceData                               Trunk;                                                      // 0x0394   (0x001C)  
	FPhysicalSurfaceData                               Leaves;                                                     // 0x03B0   (0x001C)  
	FPhysicalSurfaceData                               Fruit;                                                      // 0x03CC   (0x001C)  
	FPhysicalSurfaceData                               Cardboard;                                                  // 0x03E8   (0x001C)  
	FPhysicalSurfaceData                               Plaster;                                                    // 0x0404   (0x001C)  
	FPhysicalSurfaceData                               Kevlar;                                                     // 0x0420   (0x001C)  
	FPhysicalSurfaceData                               ForceField;                                                 // 0x043C   (0x001C)  
	FPhysicalSurfaceData                               NoEffect;                                                   // 0x0458   (0x001C)  
	FPhysicalSurfaceData                               WhiteGravel;                                                // 0x0474   (0x001C)  
	FPhysicalSurfaceData                               Mud;                                                        // 0x0490   (0x001C)  
	FPhysicalSurfaceData                               RiverSand;                                                  // 0x04AC   (0x001C)  
	FPhysicalSurfaceData                               GrassContinental;                                           // 0x04C8   (0x001C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x04E4   (0x0004)  MISSED
};

/// Class /Script/ConZ.PhysicalSurfacesEffectsData
/// Size: 0x0D70 (0x000030 - 0x000DA0)
class UPhysicalSurfacesEffectsData : public UDataAsset
{ 
public:
	FPhysicalSurfaceEffectsData                        Default;                                                    // 0x0030   (0x0050)  
	FPhysicalSurfaceEffectsData                        grass;                                                      // 0x0080   (0x0050)  
	FPhysicalSurfaceEffectsData                        ForrestGroundCoastal;                                       // 0x00D0   (0x0050)  
	FPhysicalSurfaceEffectsData                        ForrestGroundContinental;                                   // 0x0120   (0x0050)  
	FPhysicalSurfaceEffectsData                        Rock;                                                       // 0x0170   (0x0050)  
	FPhysicalSurfaceEffectsData                        Stone;                                                      // 0x01C0   (0x0050)  
	FPhysicalSurfaceEffectsData                        Gravel;                                                     // 0x0210   (0x0050)  
	FPhysicalSurfaceEffectsData                        GravelBeach;                                                // 0x0260   (0x0050)  
	FPhysicalSurfaceEffectsData                        Pebbles;                                                    // 0x02B0   (0x0050)  
	FPhysicalSurfaceEffectsData                        Snow;                                                       // 0x0300   (0x0050)  
	FPhysicalSurfaceEffectsData                        Ice;                                                        // 0x0350   (0x0050)  
	FPhysicalSurfaceEffectsData                        Sand;                                                       // 0x03A0   (0x0050)  
	FPhysicalSurfaceEffectsData                        Asphalt;                                                    // 0x03F0   (0x0050)  
	FPhysicalSurfaceEffectsData                        Dirt;                                                       // 0x0440   (0x0050)  
	FPhysicalSurfaceEffectsData                        Water;                                                      // 0x0490   (0x0050)  
	FPhysicalSurfaceEffectsData                        WaterOcean;                                                 // 0x04E0   (0x0050)  
	FPhysicalSurfaceEffectsData                        Cloth;                                                      // 0x0530   (0x0050)  
	FPhysicalSurfaceEffectsData                        Metal;                                                      // 0x0580   (0x0050)  
	FPhysicalSurfaceEffectsData                        Aluminium;                                                  // 0x05D0   (0x0050)  
	FPhysicalSurfaceEffectsData                        Concrete;                                                   // 0x0620   (0x0050)  
	FPhysicalSurfaceEffectsData                        Brick;                                                      // 0x0670   (0x0050)  
	FPhysicalSurfaceEffectsData                        Wood;                                                       // 0x06C0   (0x0050)  
	FPhysicalSurfaceEffectsData                        Plastic;                                                    // 0x0710   (0x0050)  
	FPhysicalSurfaceEffectsData                        Rubber;                                                     // 0x0760   (0x0050)  
	FPhysicalSurfaceEffectsData                        Glass;                                                      // 0x07B0   (0x0050)  
	FPhysicalSurfaceEffectsData                        Foliage;                                                    // 0x0800   (0x0050)  
	FPhysicalSurfaceEffectsData                        Bark;                                                       // 0x0850   (0x0050)  
	FPhysicalSurfaceEffectsData                        Flesh;                                                      // 0x08A0   (0x0050)  
	FPhysicalSurfaceEffectsData                        RoofTile;                                                   // 0x08F0   (0x0050)  
	FPhysicalSurfaceEffectsData                        CeramicTiles;                                               // 0x0940   (0x0050)  
	FPhysicalSurfaceEffectsData                        Scrap;                                                      // 0x0990   (0x0050)  
	FPhysicalSurfaceEffectsData                        Trunk;                                                      // 0x09E0   (0x0050)  
	FPhysicalSurfaceEffectsData                        Leaves;                                                     // 0x0A30   (0x0050)  
	FPhysicalSurfaceEffectsData                        Fruit;                                                      // 0x0A80   (0x0050)  
	FPhysicalSurfaceEffectsData                        Cardboard;                                                  // 0x0AD0   (0x0050)  
	FPhysicalSurfaceEffectsData                        Plaster;                                                    // 0x0B20   (0x0050)  
	FPhysicalSurfaceEffectsData                        Kevlar;                                                     // 0x0B70   (0x0050)  
	FPhysicalSurfaceEffectsData                        ForceField;                                                 // 0x0BC0   (0x0050)  
	FPhysicalSurfaceEffectsData                        NoEffect;                                                   // 0x0C10   (0x0050)  
	FPhysicalSurfaceEffectsData                        WhiteGravel;                                                // 0x0C60   (0x0050)  
	FPhysicalSurfaceEffectsData                        Mud;                                                        // 0x0CB0   (0x0050)  
	FPhysicalSurfaceEffectsData                        RiverSand;                                                  // 0x0D00   (0x0050)  
	FPhysicalSurfaceEffectsData                        GrassContinental;                                           // 0x0D50   (0x0050)  
};

/// Class /Script/ConZ.Physician
/// Size: 0x0000 (0x000028 - 0x000028)
class UPhysician : public UInterface
{ 
public:
};

/// Class /Script/ConZ.PhysicsStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UPhysicsStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.PickupItemAction
/// Size: 0x0000 (0x0000A8 - 0x0000A8)
class UPickupItemAction : public UInteractionAction
{ 
public:
};

/// Class /Script/ConZ.PickupItemAssetData
/// Size: 0x0008 (0x000030 - 0x000038)
class UPickupItemAssetData : public UInteractionAssetData
{ 
public:
	UClass*                                            Item;                                                       // 0x0030   (0x0008)  
};

/// Class /Script/ConZ.PlaceableActorBaseReplicatedState
/// Size: 0x0028 (0x000028 - 0x000050)
class UPlaceableActorBaseReplicatedState : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0028   (0x0028)  MISSED
};

/// Class /Script/ConZ.PlaceableActorBase
/// Size: 0x02C8 (0x000220 - 0x0004E8)
class APlaceableActorBase : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0220   (0x0008)  MISSED
	FDbIntegerId                                       _id;                                                        // 0x0228   (0x0008)  
	UBoxComponent*                                     _boxCollisionComponent;                                     // 0x0230   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0238   (0x0008)  MISSED
	UPlaceableCraftableItem*                           _craftableItem;                                             // 0x0240   (0x0008)  
	float                                              _ingredientMultiplier;                                      // 0x0248   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x024C   (0x0004)  MISSED
	USceneComponent*                                   _rootComponent;                                             // 0x0250   (0x0008)  
	UStaticMeshComponent*                              _staticMeshComponent_Main;                                  // 0x0258   (0x0008)  
	UStaticMeshComponent*                              _staticMeshComponent_Outline;                               // 0x0260   (0x0008)  
	UStaticMeshComponent*                              _staticMeshComponent_Depth;                                 // 0x0268   (0x0008)  
	UStaticMeshComponent*                              _queryStaticMeshComponent;                                  // 0x0270   (0x0008)  
	UStaticMeshComponent*                              _directionIndicatorStaticMeshComponent;                     // 0x0278   (0x0008)  
	UMaterialInstanceDynamic*                          _primaryMaterialAllowed;                                    // 0x0280   (0x0008)  
	UMaterialInstanceDynamic*                          _primaryMaterialDisallowed;                                 // 0x0288   (0x0008)  
	UMaterialInstanceDynamic*                          _outlineMaterial;                                           // 0x0290   (0x0008)  
	UMaterialInstanceDynamic*                          _depthMaterial;                                             // 0x0298   (0x0008)  
	unsigned char                                      UnknownData03_5[0x40];                                      // 0x02A0   (0x0040)  MISSED
	EPlaceableStatusFlags                              _statusFlags;                                               // 0x02E0   (0x0001)  
	unsigned char                                      UnknownData04_5[0x1F];                                      // 0x02E1   (0x001F)  MISSED
	EPlacementBaseState                                _placementState;                                            // 0x0300   (0x0001)  
	unsigned char                                      UnknownData05_5[0x7B];                                      // 0x0301   (0x007B)  MISSED
	int32_t                                            _numTracesX;                                                // 0x037C   (0x0004)  
	int32_t                                            _numTracesY;                                                // 0x0380   (0x0004)  
	float                                              _traceHeightFactor;                                         // 0x0384   (0x0004)  
	float                                              _maxPlacementAngle;                                         // 0x0388   (0x0004)  
	unsigned char                                      UnknownData06_5[0x4];                                       // 0x038C   (0x0004)  MISSED
	TArray<FPlaceableIngredient>                       _ingredients;                                               // 0x0390   (0x0010)  
	float                                              _widgetHidingDistance;                                      // 0x03A0   (0x0004)  
	float                                              _fullWidgetHidingDistance;                                  // 0x03A4   (0x0004)  
	float                                              _widgetSwitchPeriod;                                        // 0x03A8   (0x0004)  
	float                                              _minDistanceToShowWidget;                                   // 0x03AC   (0x0004)  
	float                                              _syncPeriod;                                                // 0x03B0   (0x0004)  
	float                                              _reachabilityMaxDifference;                                 // 0x03B4   (0x0004)  
	float                                              _directionIndicatorOffset;                                  // 0x03B8   (0x0004)  
	unsigned char                                      UnknownData07_5[0x4];                                       // 0x03BC   (0x0004)  MISSED
	FText                                              _destroyInteractionText;                                    // 0x03C0   (0x0018)  
	FVector                                            _replicatedLocation;                                        // 0x03D8   (0x000C)  
	FVector                                            _replicatedPlacedLocation;                                  // 0x03E4   (0x000C)  
	FRotator                                           _replicatedRotation;                                        // 0x03F0   (0x000C)  
	unsigned char                                      UnknownData08_5[0x3C];                                      // 0x03FC   (0x003C)  MISSED
	UMaterialInterface*                                _placementAllowedMaterialOverride;                          // 0x0438   (0x0008)  
	UMaterialInterface*                                _placementDisallowedMaterialOverride;                       // 0x0440   (0x0008)  
	UMaterialInterface*                                _outlineMaterialOverride;                                   // 0x0448   (0x0008)  
	UMaterialInterface*                                _depthMaterialOverride;                                     // 0x0450   (0x0008)  
	unsigned char                                      UnknownData09_6[0x90];                                      // 0x0458   (0x0090)  MISSED


	/// Functions
	// Function /Script/ConZ.PlaceableActorBase.Server_UpdateState
	void Server_UpdateState(FPlaceableActorStateReplicationHelper State);                                                    // [0x2341d00] Final|Net|Native|Event|Private|NetServer 
	// Function /Script/ConZ.PlaceableActorBase.Server_Place
	void Server_Place(FVector Location, FRotator Rotation);                                                                  // [0x2341c30] Net|NetReliableNative|Event|Protected|NetServer|HasDefaults 
	// Function /Script/ConZ.PlaceableActorBase.OnRep_ReplicatedRotation
	void OnRep_ReplicatedRotation();                                                                                         // [0x2341c10] Final|Native|Private 
	// Function /Script/ConZ.PlaceableActorBase.OnRep_ReplicatedPlacedLocation
	void OnRep_ReplicatedPlacedLocation();                                                                                   // [0x2341bf0] Final|Native|Private 
	// Function /Script/ConZ.PlaceableActorBase.OnRep_ReplicatedLocation
	void OnRep_ReplicatedLocation();                                                                                         // [0x2341bd0] Final|Native|Private 
	// Function /Script/ConZ.PlaceableActorBase.OnRep_PlacementState
	void OnRep_PlacementState();                                                                                             // [0x2341b50] Final|Native|Private 
	// Function /Script/ConZ.PlaceableActorBase.OnRep_Ingredients
	void OnRep_Ingredients();                                                                                                // [0x2341b30] Final|Native|Private 
	// Function /Script/ConZ.PlaceableActorBase.OnRep_IngredientMultiplier
	void OnRep_IngredientMultiplier();                                                                                       // [0x2341b30] Final|Native|Private 
	// Function /Script/ConZ.PlaceableActorBase.OnRep_Id
	void OnRep_Id();                                                                                                         // [0x2341b10] Final|Native|Private 
	// Function /Script/ConZ.PlaceableActorBase.OnRep_CraftableItem
	void OnRep_CraftableItem();                                                                                              // [0x2341af0] Final|Native|Private 
};

/// Class /Script/ConZ.PlaceableActorBaseBuildingReplicatedState
/// Size: 0x0020 (0x000050 - 0x000070)
class UPlaceableActorBaseBuildingReplicatedState : public UPlaceableActorBaseReplicatedState
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0050   (0x0020)  MISSED
};

/// Class /Script/ConZ.PlaceableActorBaseBuilding
/// Size: 0x0108 (0x0004E8 - 0x0005F0)
class APlaceableActorBaseBuilding : public APlaceableActorBase
{ 
public:
	int32_t                                            _maxNumberOfTiles;                                          // 0x04E8   (0x0004)  
	float                                              _maxHeightDifferenceForTiling;                              // 0x04EC   (0x0004)  
	float                                              _maxTileHeightAdjustionUp;                                  // 0x04F0   (0x0004)  
	float                                              _maxTileHeightAdjustionDown;                                // 0x04F4   (0x0004)  
	float                                              _tileSnappingAngle;                                         // 0x04F8   (0x0004)  
	float                                              _sizeVariatedTilesMaxHeightDifference;                      // 0x04FC   (0x0004)  
	float                                              _maxGroundPointDistance;                                    // 0x0500   (0x0004)  
	float                                              _groundPointsTraceHeight;                                   // 0x0504   (0x0004)  
	float                                              _groundPointsTraceDepth;                                    // 0x0508   (0x0004)  
	float                                              _maxPlacementLengthForSizeVariatedTiles;                    // 0x050C   (0x0004)  
	unsigned char                                      UnknownData00_5[0x38];                                      // 0x0510   (0x0038)  MISSED
	FTilesData                                         _tilesData;                                                 // 0x0548   (0x0018)  
	UStaticMeshComponent*                              _flagAreaMeshComponent;                                     // 0x0560   (0x0008)  
	UMaterialInstanceDynamic*                          _primaryMaterialFriendlyFlag;                               // 0x0568   (0x0008)  
	FVector                                            _replicatedFirstPointLocation;                              // 0x0570   (0x000C)  
	FRotator                                           _replicatedFirstPointRotation;                              // 0x057C   (0x000C)  
	EPlacementBaseBuildingState                        _placementSubState;                                         // 0x0588   (0x0001)  
	EStateFlags                                        _stateFlags;                                                // 0x0589   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3E];                                      // 0x058A   (0x003E)  MISSED
	TArray<FSizeVariatedTilesData>                     _sizeVariationData;                                         // 0x05C8   (0x0010)  
	unsigned char                                      UnknownData02_6[0x18];                                      // 0x05D8   (0x0018)  MISSED


	/// Functions
	// Function /Script/ConZ.PlaceableActorBaseBuilding.OnRep_ReplicatedFirstPointRotation
	void OnRep_ReplicatedFirstPointRotation();                                                                               // [0x2341bb0] Final|Native|Private 
	// Function /Script/ConZ.PlaceableActorBaseBuilding.OnRep_ReplicatedFirstPointLocation
	void OnRep_ReplicatedFirstPointLocation();                                                                               // [0x2341b90] Final|Native|Private 
	// Function /Script/ConZ.PlaceableActorBaseBuilding.OnRep_PlacementSubState
	void OnRep_PlacementSubState();                                                                                          // [0x2341b70] Final|Native|Private 
};

/// Class /Script/ConZ.PlaceableActorBaseUpgrade
/// Size: 0x0048 (0x0004E8 - 0x000530)
class APlaceableActorBaseUpgrade : public APlaceableActorBase
{ 
public:
	FConZBaseElementIdentifier                         _elementToBeUpgraded;                                       // 0x04E8   (0x0020)  
	unsigned char                                      UnknownData00_6[0x28];                                      // 0x0508   (0x0028)  MISSED


	/// Functions
	// Function /Script/ConZ.PlaceableActorBaseUpgrade.OnRep_ElementToBeUpgraded
	void OnRep_ElementToBeUpgraded();                                                                                        // [0x2346220] Final|Native|Private 
};

/// Class /Script/ConZ.PlaceableActorFortifications
/// Size: 0x0030 (0x0004E8 - 0x000518)
class APlaceableActorFortifications : public APlaceableActorBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x04E8   (0x0030)  MISSED
};

/// Class /Script/ConZ.PlaceableActorGardenReplicatedState
/// Size: 0x0018 (0x000050 - 0x000068)
class UPlaceableActorGardenReplicatedState : public UPlaceableActorBaseReplicatedState
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0050   (0x0018)  MISSED
};

/// Class /Script/ConZ.PlaceableActorGarden
/// Size: 0x00C8 (0x0004E8 - 0x0005B0)
class APlaceableActorGarden : public APlaceableActorBase
{ 
public:
	EGardenPlacementState                              _gardenPlacementState;                                      // 0x04E8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x37];                                      // 0x04E9   (0x0037)  MISSED
	TArray<UStaticMeshComponent*>                      _staticMeshComponents_Main;                                 // 0x0520   (0x0010)  
	TArray<UStaticMeshComponent*>                      _staticMeshComponents_Outline;                              // 0x0530   (0x0010)  
	TArray<UStaticMeshComponent*>                      _staticMeshComponents_Depth;                                // 0x0540   (0x0010)  
	TArray<UStaticMeshComponent*>                      _directionIndicatorStaticMeshComponents;                    // 0x0550   (0x0010)  
	FBox2D                                             _replicatedGardenSize;                                      // 0x0560   (0x0014)  
	unsigned char                                      UnknownData01_6[0x3C];                                      // 0x0574   (0x003C)  MISSED


	/// Functions
	// Function /Script/ConZ.PlaceableActorGarden.OnRep_GardenSize
	void OnRep_GardenSize();                                                                                                 // [0x2346260] Final|Native|Private 
	// Function /Script/ConZ.PlaceableActorGarden.OnRep_GardenPlacementState
	void OnRep_GardenPlacementState();                                                                                       // [0x2346240] Final|Native|Private 
};

/// Class /Script/ConZ.PlaceableActorItems
/// Size: 0x0008 (0x0004E8 - 0x0004F0)
class APlaceableActorItems : public APlaceableActorBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x04E8   (0x0008)  MISSED
};

/// Class /Script/ConZ.PlaceableActorModularBaseBuilding
/// Size: 0x0070 (0x0005F0 - 0x000660)
class APlaceableActorModularBaseBuilding : public APlaceableActorBaseBuilding
{ 
public:
	unsigned char                                      UnknownData00_1[0x70];                                      // 0x05F0   (0x0070)  MISSED
};

/// Class /Script/ConZ.PlaceableActorModularBaseBuildingFoundation
/// Size: 0x0010 (0x000660 - 0x000670)
class APlaceableActorModularBaseBuildingFoundation : public APlaceableActorModularBaseBuilding
{ 
public:
	TArray<FLineTraceSocketPair>                       _lineTraceSockets;                                          // 0x0660   (0x0010)  
};

/// Class /Script/ConZ.PlaceableElementWidget
/// Size: 0x0010 (0x000260 - 0x000270)
class UPlaceableElementWidget : public UUserWidget
{ 
public:
	UImage*                                            _icon;                                                      // 0x0260   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0268   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.PlaceableElementWidget.Init
	void Init(APlaceableActorBase* PlaceableActor);                                                                          // [0x23460b0] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.PlaceableElementWidget.DestroyPlaceable
	void DestroyPlaceable();                                                                                                 // [0x2345e80] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.PlaceableOnRackItemTag
/// Size: 0x0008 (0x000030 - 0x000038)
class UPlaceableOnRackItemTag : public UBaseItemTag
{ 
public:
	FName                                              SocketName;                                                 // 0x0030   (0x0008)  
};

/// Class /Script/ConZ.PlaceableOnRackLargeItemTag
/// Size: 0x0000 (0x000038 - 0x000038)
class UPlaceableOnRackLargeItemTag : public UPlaceableOnRackItemTag
{ 
public:
};

/// Class /Script/ConZ.PlaceableOnWallRackItemTag
/// Size: 0x0000 (0x000038 - 0x000038)
class UPlaceableOnWallRackItemTag : public UPlaceableOnRackItemTag
{ 
public:
};

/// Class /Script/ConZ.PlacedPlaceableWidget
/// Size: 0x0058 (0x000260 - 0x0002B8)
class UPlacedPlaceableWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x0260   (0x0050)  MISSED
	UVerticalBox*                                      _container;                                                 // 0x02B0   (0x0008)  
};

/// Class /Script/ConZ.PlantGrowthDisplay
/// Size: 0x0058 (0x000220 - 0x000278)
class APlantGrowthDisplay : public AActor
{ 
public:
	UPlantSpecies*                                     _plantSpecies;                                              // 0x0220   (0x0008)  
	bool                                               _animateGrowth;                                             // 0x0228   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0229   (0x0003)  MISSED
	float                                              _growthSpeed;                                               // 0x022C   (0x0004)  
	float                                              _growthPercentage;                                          // 0x0230   (0x0004)  
	float                                              _dehydration;                                               // 0x0234   (0x0004)  
	float                                              _pestsIntensity;                                            // 0x0238   (0x0004)  
	float                                              _diseasesIntensity;                                         // 0x023C   (0x0004)  
	FString                                            _stageText;                                                 // 0x0240   (0x0010)  
	UNiagaraSystem*                                    _pestsParticleSystem;                                       // 0x0250   (0x0008)  
	UNiagaraComponent*                                 _pestsParticleComponent;                                    // 0x0258   (0x0008)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x0260   (0x0018)  MISSED


	/// Functions
	// Function /Script/ConZ.PlantGrowthDisplay.GetPlantGrowthStageString
	FString GetPlantGrowthStageString(float growth, UPlantSpecies* species);                                                 // [0x2345fa0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/ConZ.PlantGrowthDisplay.GetPlantGrowthStagePercentage
	float GetPlantGrowthStagePercentage(float growth, UPlantSpecies* species);                                               // [0x2345ed0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/ConZ.PlantGrowthDisplay.GetGrowthPercentage
	float GetGrowthPercentage();                                                                                             // [0x2345ea0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.PlantingPanel
/// Size: 0x0128 (0x000260 - 0x000388)
class UPlantingPanel : public UUserWidget
{ 
public:
	UImageSlotWidget*                                  _seedSlot;                                                  // 0x0260   (0x0008)  
	UImageSlotWidget*                                  _fertilizerSlot;                                            // 0x0268   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0270   (0x0008)  MISSED
	FSlateBrush                                        _organicFertilizerIcon;                                     // 0x0278   (0x0088)  
	FSlateBrush                                        _industrialFertilizerIcon;                                  // 0x0300   (0x0088)  
};

/// Class /Script/ConZ.PlantingPanelUIController
/// Size: 0x0028 (0x000028 - 0x000050)
class UPlantingPanelUIController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0028   (0x0028)  MISSED
};

/// Class /Script/ConZ.PlantSeedComponent
/// Size: 0x0008 (0x0000C8 - 0x0000D0)
class UPlantSeedComponent : public UItemComponent
{ 
public:
	UPlantSpecies*                                     _speciesData;                                               // 0x00C8   (0x0008)  
};

/// Class /Script/ConZ.PlantPestSpecies
/// Size: 0x0020 (0x000030 - 0x000050)
class UPlantPestSpecies : public UDataAsset
{ 
public:
	FText                                              SpeciesName;                                                // 0x0030   (0x0018)  
	float                                              HarvestingReductionPercentage;                              // 0x0048   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x004C   (0x0004)  MISSED
};

/// Class /Script/ConZ.PlantDiseaseSpecies
/// Size: 0x0020 (0x000030 - 0x000050)
class UPlantDiseaseSpecies : public UDataAsset
{ 
public:
	FText                                              SpeciesName;                                                // 0x0030   (0x0018)  
	float                                              HarvestingReductionPercentage;                              // 0x0048   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x004C   (0x0004)  MISSED
};

/// Class /Script/ConZ.PlantSpecies
/// Size: 0x00D0 (0x000030 - 0x000100)
class UPlantSpecies : public UDataAsset
{ 
public:
	FText                                              SpeciesName;                                                // 0x0030   (0x0018)  
	FFloatInterval                                     SeedsOptimaltemperature;                                    // 0x0048   (0x0008)  
	FFloatInterval                                     GrowthOptimalTemperature;                                   // 0x0050   (0x0008)  
	float                                              StageGrowthTimeGameHours;                                   // 0x0058   (0x0004)  
	EPlantGrowthStage                                  LastStage;                                                  // 0x005C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x005D   (0x0003)  MISSED
	float                                              LastStageLifetime;                                          // 0x0060   (0x0004)  
	float                                              LastStageDeathStartPercent;                                 // 0x0064   (0x0004)  
	TArray<UPlantPestSpecies*>                         Pests;                                                      // 0x0068   (0x0010)  
	TArray<UPlantDiseaseSpecies*>                      Diseases;                                                   // 0x0078   (0x0010)  
	UClass*                                            Seed;                                                       // 0x0088   (0x0008)  
	FPlantMeshData                                     PlantMesh;                                                  // 0x0090   (0x0070)  
};

/// Class /Script/ConZ.PlantStatusIndicatorWidget
/// Size: 0x02A0 (0x000260 - 0x000500)
class UPlantStatusIndicatorWidget : public UUserWidget
{ 
public:
	UTextBlock*                                        _speciesNameText;                                           // 0x0260   (0x0008)  
	UTextBlock*                                        _growthStageText;                                           // 0x0268   (0x0008)  
	UTextBlock*                                        _sunEnergyRateText;                                         // 0x0270   (0x0008)  
	UTextBlock*                                        _waterAmountText;                                           // 0x0278   (0x0008)  
	UTextBlock*                                        _fertilizerText;                                            // 0x0280   (0x0008)  
	UVerticalBox*                                      _conditionVerticalBox;                                      // 0x0288   (0x0008)  
	UHorizontalBox*                                    _pestHorizontalBox;                                         // 0x0290   (0x0008)  
	UImage*                                            _pestStatusIcon;                                            // 0x0298   (0x0008)  
	UTextBlock*                                        _pestStatusText;                                            // 0x02A0   (0x0008)  
	UHorizontalBox*                                    _diseaseHorizontalBox;                                      // 0x02A8   (0x0008)  
	UImage*                                            _diseaseStatusIcon;                                         // 0x02B0   (0x0008)  
	UTextBlock*                                        _diseaseStatusText;                                         // 0x02B8   (0x0008)  
	UHorizontalBox*                                    _weedsHorizontalBox;                                        // 0x02C0   (0x0008)  
	UImage*                                            _weedsStatusIcon;                                           // 0x02C8   (0x0008)  
	UTextBlock*                                        _weedsStatusText;                                           // 0x02D0   (0x0008)  
	FSlateBrush                                        _pestIconBrush;                                             // 0x02D8   (0x0088)  
	FSlateBrush                                        _diseaseIconBrush;                                          // 0x0360   (0x0088)  
	FSlateBrush                                        _weedsIconBrush;                                            // 0x03E8   (0x0088)  
	FSlateBrush                                        _treatmentIconBrush;                                        // 0x0470   (0x0088)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x04F8   (0x0008)  MISSED
};

/// Class /Script/ConZ.PlantStatusIndicatorUIController
/// Size: 0x0010 (0x000028 - 0x000038)
class UPlantStatusIndicatorUIController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0028   (0x0010)  MISSED
};

/// Class /Script/ConZ.TradeableDiscountCondition
/// Size: 0x0000 (0x000028 - 0x000028)
class UTradeableDiscountCondition : public UObject
{ 
public:
};

/// Class /Script/ConZ.PlasticSurgeryDiscountCondition
/// Size: 0x0000 (0x000028 - 0x000028)
class UPlasticSurgeryDiscountCondition : public UTradeableDiscountCondition
{ 
public:
};

/// Class /Script/ConZ.PlasticSurgeryMenuWidget
/// Size: 0x01C8 (0x000260 - 0x000428)
class UPlasticSurgeryMenuWidget : public UBaseMenu
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0260   (0x0008)  MISSED
	UOverlay*                                          _overlayMenu;                                               // 0x0268   (0x0008)  
	UWidgetSwitcher*                                   _pageSwitcher;                                              // 0x0270   (0x0008)  
	UTrashNamedCarouselWidget*                         _carouselGender;                                            // 0x0278   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderHead;                                                // 0x0280   (0x0008)  
	UTrashNamedCarouselWidget*                         _carouselHairiness;                                         // 0x0288   (0x0008)  
	UCCGameUpgradeConditionDisplayWidget*              _appearanceUpgradeConditionDisplay;                         // 0x0290   (0x0008)  
	UPresetColorPicker*                                _presetColorPickerSkinTone;                                 // 0x0298   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderAge;                                                 // 0x02A0   (0x0008)  
	UTrashNamedCarouselWidget*                         _carouselConcealedMode;                                     // 0x02A8   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderPenisBreastSize;                                     // 0x02B0   (0x0008)  
	UTrashNamedCarouselWidget*                         _carouselTattoos;                                           // 0x02B8   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderTattooStyle;                                         // 0x02C0   (0x0008)  
	UCCGameUpgradeConditionDisplayWidget*              _tattooUpgradeConditionDisplay;                             // 0x02C8   (0x0008)  
	UConZStandardButton*                               _buttonRandomizeCharacter;                                  // 0x02D0   (0x0008)  
	UConZStandardButton*                               _buttonNextToFace;                                          // 0x02D8   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderFaceType;                                            // 0x02E0   (0x0008)  
	UPresetColorPicker*                                _presetColorPickerEyeColor;                                 // 0x02E8   (0x0008)  
	UTrashNamedSliderWidget*                           _sliderIrisType;                                            // 0x02F0   (0x0008)  
	UConZStandardButton*                               _buttonBackToCharacter;                                     // 0x02F8   (0x0008)  
	UConZStandardButton*                               _buttonRandomizeFace;                                       // 0x0300   (0x0008)  
	UConZStandardButton*                               _buttonApplyPlasticSurgery;                                 // 0x0308   (0x0008)  
	UOverlay*                                          _overlayPlasticSurgeryConfirmation;                         // 0x0310   (0x0008)  
	UConZStandardButton*                               _buttonCancelConfirmation;                                  // 0x0318   (0x0008)  
	UConZStandardButton*                               _buttonContinueConfirmation;                                // 0x0320   (0x0008)  
	UScrollBox*                                        _faceOptionsScrollbox;                                      // 0x0328   (0x0008)  
	unsigned char                                      UnknownData01_6[0xF8];                                      // 0x0330   (0x00F8)  MISSED


	/// Functions
	// Function /Script/ConZ.PlasticSurgeryMenuWidget.OnRandomizeFaceClicked
	void OnRandomizeFaceClicked();                                                                                           // [0x2346200] Final|Native|Private 
	// Function /Script/ConZ.PlasticSurgeryMenuWidget.OnRandomizeCharacterClicked
	void OnRandomizeCharacterClicked();                                                                                      // [0x23461e0] Final|Native|Private 
	// Function /Script/ConZ.PlasticSurgeryMenuWidget.OnNextToFaceClicked
	void OnNextToFaceClicked();                                                                                              // [0x23461c0] Final|Native|Private 
	// Function /Script/ConZ.PlasticSurgeryMenuWidget.OnContinueClickedInConfirmationPanel
	void OnContinueClickedInConfirmationPanel();                                                                             // [0x23461a0] Final|Native|Private 
	// Function /Script/ConZ.PlasticSurgeryMenuWidget.OnCancelClickedInConfirmationPanel
	void OnCancelClickedInConfirmationPanel();                                                                               // [0x2346180] Final|Native|Private 
	// Function /Script/ConZ.PlasticSurgeryMenuWidget.OnBackToCharacterClicked
	void OnBackToCharacterClicked();                                                                                         // [0x2346160] Final|Native|Private 
	// Function /Script/ConZ.PlasticSurgeryMenuWidget.OnApplyFromFaceClicked
	void OnApplyFromFaceClicked();                                                                                           // [0x2346140] Final|Native|Private 
};

/// Class /Script/ConZ.PlasticSurgeryMugshot
/// Size: 0x0088 (0x000260 - 0x0002E8)
class UPlasticSurgeryMugshot : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x60];                                      // 0x0260   (0x0060)  MISSED
	UImage*                                            _imgSelection;                                              // 0x02C0   (0x0008)  
	UWidgetSwitcher*                                   _mugshotGenderSwitcher;                                     // 0x02C8   (0x0008)  
	UWidgetSwitcher*                                   _maleMugshotSwitcher;                                       // 0x02D0   (0x0008)  
	UWidgetSwitcher*                                   _femaleMugshotSwitcher;                                     // 0x02D8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x02E0   (0x0008)  MISSED
};

/// Class /Script/ConZ.PlasticSurgeryService
/// Size: 0x0000 (0x000038 - 0x000038)
class UPlasticSurgeryService : public UTraderService
{ 
public:
};

/// Class /Script/ConZ.PlayableInstrument
/// Size: 0x0000 (0x000028 - 0x000028)
class UPlayableInstrument : public UInterface
{ 
public:
};

/// Class /Script/ConZ.PlayEffectsWhenParticleCollides
/// Size: 0x0008 (0x000028 - 0x000030)
class UPlayEffectsWhenParticleCollides : public UParticleModuleEventSendToGame
{ 
public:
	UProjectileImpactEffects*                          ImpactEffects;                                              // 0x0028   (0x0008)  
};

/// Class /Script/ConZ.PlayerDrone
/// Size: 0x0200 (0x0008C0 - 0x000AC0)
class APlayerDrone : public ADrone
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x08C0   (0x0008)  MISSED
	float                                              _movementInertiaPlayer;                                     // 0x08C8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x08CC   (0x0004)  MISSED
	UCameraComponent*                                  _firstPersonCameraComponent;                                // 0x08D0   (0x0008)  
	UCameraComponent*                                  _thirdPersonCameraComponent;                                // 0x08D8   (0x0008)  
	USpringArmComponent*                               _springArmComponent;                                        // 0x08E0   (0x0008)  
	UCharacterItemDragComponent*                       _itemDragComponent;                                         // 0x08E8   (0x0008)  
	UMaterialInterface*                                _nightVisionMaterial;                                       // 0x08F0   (0x0008)  
	float                                              _interactionDistance;                                       // 0x08F8   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x08FC   (0x0004)  MISSED
	UMaterialInstance*                                 _itemPlacingMaterialAllowed;                                // 0x0900   (0x0008)  
	UMaterialInstance*                                 _itemPlacingMaterialDisallowed;                             // 0x0908   (0x0008)  
	FLinearColor                                       _colorTintWhenInvisible;                                    // 0x0910   (0x0010)  
	FLinearColor                                       _colorTintWhenHidden;                                       // 0x0920   (0x0010)  
	unsigned char                                      UnknownData03_5[0x140];                                     // 0x0930   (0x0140)  MISSED
	UActionProgressWidget*                             _progressWidget;                                            // 0x0A70   (0x0008)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x0A78   (0x0004)  MISSED
	TWeakObjectPtr<UObject*>                           _currentlyDroppingItem;                                     // 0x0A7C   (0x0008)  
	unsigned char                                      UnknownData05_5[0x24];                                      // 0x0A84   (0x0024)  MISSED
	UDoorUpgradeWidget*                                _doorUpgradeWidget;                                         // 0x0AA8   (0x0008)  
	EDroneVisibility                                   _droneVisibility;                                           // 0x0AB0   (0x0001)  
	unsigned char                                      UnknownData06_6[0xF];                                       // 0x0AB1   (0x000F)  MISSED


	/// Functions
	// Function /Script/ConZ.PlayerDrone.TryInteractDefault
	void TryInteractDefault();                                                                                               // [0x2354350] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PlayerDrone.Server_TeleportToNextOrPreviousPlayer
	void Server_TeleportToNextOrPreviousPlayer(bool Next);                                                                   // [0x23537e0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.PlayerDrone.Server_SpawnAndDropItemAt
	void Server_SpawnAndDropItemAt(UContainerItemDescriptor* Item, FVector Location, FRotator Rotation);                     // [0x2353610] Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults 
	// Function /Script/ConZ.PlayerDrone.Server_SetDroneVisibility
	void Server_SetDroneVisibility(EDroneVisibility Value);                                                                  // [0x2353480] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.PlayerDrone.Server_ReportUnauthorizedInteractionAttempt
	void Server_ReportUnauthorizedInteractionAttempt();                                                                      // [0x2353010] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.PlayerDrone.Server_OpenDoor
	void Server_OpenDoor(ADoor* Door);                                                                                       // [0x23529e0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.PlayerDrone.Server_InitializeItemVirtualizedInventory
	void Server_InitializeItemVirtualizedInventory(UObject* Item);                                                           // [0x23527b0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.PlayerDrone.Server_DropItemAt
	void Server_DropItemAt(AItem* Item, FVector Location, FRotator Rotation);                                                // [0x2352510] Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults 
	// Function /Script/ConZ.PlayerDrone.Server_DestroyGarden
	void Server_DestroyGarden(FVector Location, uint16_t gardenId);                                                          // [0x2352350] Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults|Const 
	// Function /Script/ConZ.PlayerDrone.Server_DestroyBaseElement
	void Server_DestroyBaseElement(int64_t BaseId, int64_t ElementID, FVector Location);                                     // [0x2352240] Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults|Const 
	// Function /Script/ConZ.PlayerDrone.Server_CloseDoor
	void Server_CloseDoor(ADoor* Door);                                                                                      // [0x2351e20] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.PlayerDrone.Server_AddInventoryNode
	void Server_AddInventoryNode(UObject* Item, UObject* container, FInventoryPositionDataRepHelper position, UObject* Target); // [0x2351b50] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.PlayerDrone.OnRepDroneVisibility
	void OnRepDroneVisibility();                                                                                             // [0x2351300] Final|Native|Private 
	// Function /Script/ConZ.PlayerDrone.OnProgressWidgetFinished
	void OnProgressWidgetFinished();                                                                                         // [0x23512e0] Final|Native|Private 
	// Function /Script/ConZ.PlayerDrone.Client_OnExitPhotoMode
	void Client_OnExitPhotoMode();                                                                                           // [0x224f460] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/ConZ.PlayerDrone.Client_OnEnterPhotoMode
	void Client_OnEnterPhotoMode();                                                                                          // [0x2264d70] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/ConZ.PlayerDrone.Client_DropItem
	void Client_DropItem(AItem* Item);                                                                                       // [0x234e490] Final|Net|NetReliableNative|Event|Private|NetClient 
	// Function /Script/ConZ.PlayerDrone.CancelInteractableDragging
	void CancelInteractableDragging();                                                                                       // [0x234dca0] Final|Native|Public  
};

/// Class /Script/ConZ.PlayerManagementActivePlayer
/// Size: 0x0000 (0x000260 - 0x000260)
class UPlayerManagementActivePlayer : public UUserWidget
{ 
public:
};

/// Class /Script/ConZ.PlayerManagementActivePlayersList
/// Size: 0x0000 (0x000260 - 0x000260)
class UPlayerManagementActivePlayersList : public UUserWidget
{ 
public:
};

/// Class /Script/ConZ.PlayerManagementMap
/// Size: 0x0000 (0x000260 - 0x000260)
class UPlayerManagementMap : public UUserWidget
{ 
public:
};

/// Class /Script/ConZ.PlayerManagementMenu
/// Size: 0x0020 (0x000260 - 0x000280)
class UPlayerManagementMenu : public UBaseMenu
{ 
public:
	UButton*                                           _buttonBack;                                                // 0x0260   (0x0008)  
	UButton*                                           _buttonApply;                                               // 0x0268   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0270   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.PlayerManagementMenu.CloseMenu
	void CloseMenu();                                                                                                        // [0x234efc0] Final|Native|Private 
};

/// Class /Script/ConZ.PlayerManagementUIController
/// Size: 0x0010 (0x000028 - 0x000038)
class UPlayerManagementUIController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0028   (0x0010)  MISSED
};

/// Class /Script/ConZ.PlayerRpcChannel
/// Size: 0x0080 (0x0000B0 - 0x000130)
class UPlayerRpcChannel : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x80];                                      // 0x00B0   (0x0080)  MISSED
};

/// Class /Script/ConZ.PossibleCookingIngredientWidget
/// Size: 0x0010 (0x000260 - 0x000270)
class UPossibleCookingIngredientWidget : public UUserWidget
{ 
public:
	UImage*                                            _ingredientIcon;                                            // 0x0260   (0x0008)  
	UTextBlock*                                        _titleText;                                                 // 0x0268   (0x0008)  
};

/// Class /Script/ConZ.PowerCableMeshSet
/// Size: 0x0010 (0x000030 - 0x000040)
class UPowerCableMeshSet : public UDataAsset
{ 
public:
	TArray<FPowerCableMeshInfo>                        Meshes;                                                     // 0x0030   (0x0010)  
};

/// Class /Script/ConZ.PowerNode
/// Size: 0x0038 (0x000220 - 0x000258)
class APowerNode : public AActor
{ 
public:
	USceneComponent*                                   _root;                                                      // 0x0220   (0x0008)  
	UStaticMeshComponent*                              _mesh;                                                      // 0x0228   (0x0008)  
	UPowerCableMeshSet*                                _cableMeshSet;                                              // 0x0230   (0x0008)  
	float                                              _maxCablesDrawDistance;                                     // 0x0238   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x023C   (0x0004)  MISSED
	TArray<FPowerNodeConnector>                        _connectors;                                                // 0x0240   (0x0010)  
	APowerNode*                                        _connectionTarget;                                          // 0x0250   (0x0008)  
};

/// Class /Script/ConZ.PracticeLockpickingItem
/// Size: 0x0020 (0x000910 - 0x000930)
class APracticeLockpickingItem : public AItem
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0910   (0x0008)  MISSED
	TArray<ULockData*>                                 _possibleLocks;                                             // 0x0918   (0x0010)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0928   (0x0008)  MISSED
};

/// Class /Script/ConZ.PracticeTrapItem
/// Size: 0x0000 (0x000A60 - 0x000A60)
class APracticeTrapItem : public ATrapItem
{ 
public:
};

/// Class /Script/ConZ.PresetColorPickerButton
/// Size: 0x0078 (0x000260 - 0x0002D8)
class UPresetColorPickerButton : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x58];                                      // 0x0260   (0x0058)  MISSED
	UWidgetSwitcher*                                   _displaySwitcher;                                           // 0x02B8   (0x0008)  
	UImage*                                            _coloredPreviewUnhovered;                                   // 0x02C0   (0x0008)  
	UImage*                                            _coloredPreviewHovered;                                     // 0x02C8   (0x0008)  
	UImage*                                            _variableOpacityBorder;                                     // 0x02D0   (0x0008)  
};

/// Class /Script/ConZ.PresetColorPicker
/// Size: 0x00D0 (0x000260 - 0x000330)
class UPresetColorPicker : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UPanelWidget*                                      _container;                                                 // 0x0278   (0x0008)  
	UTextBlock*                                        _name;                                                      // 0x0280   (0x0008)  
	USelectionOverlayWidget*                           _focusBackground;                                           // 0x0288   (0x0008)  
	FText                                              _mainLabel;                                                 // 0x0290   (0x0018)  
	FSlateFontInfo                                     _defaultFont;                                               // 0x02A8   (0x0058)  
	UClass*                                            _buttonClass;                                               // 0x0300   (0x0008)  
	FMargin                                            _buttonPadding;                                             // 0x0308   (0x0010)  
	TArray<FLinearColor>                               _palette;                                                   // 0x0318   (0x0010)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0328   (0x0008)  MISSED
};

/// Class /Script/ConZ.PreviewAnimationComponent
/// Size: 0x0060 (0x0000B0 - 0x000110)
class UPreviewAnimationComponent : public UActorComponent
{ 
public:
	TMap<FGameplayTag, UAnimationAsset*>               _animationsPerTag;                                          // 0x00B0   (0x0050)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0100   (0x0010)  MISSED
};

/// Class /Script/ConZ.PreviousNextSwitchWidget
/// Size: 0x0030 (0x000260 - 0x000290)
class UPreviousNextSwitchWidget : public UUserWidget
{ 
public:
	FMulticastInlineDelegate                           IndexChanged;                                               // 0x0260   (0x0010)  
	UButton*                                           PreviousButton;                                             // 0x0270   (0x0008)  
	UButton*                                           NextButton;                                                 // 0x0278   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0280   (0x0008)  MISSED
	int32_t                                            _index;                                                     // 0x0288   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x028C   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.PreviousNextSwitchWidget.SwitchToPrevious
	void SwitchToPrevious();                                                                                                 // [0x2366d60] Final|Native|Public  
	// Function /Script/ConZ.PreviousNextSwitchWidget.SwitchToNext
	void SwitchToNext();                                                                                                     // [0x2366d40] Final|Native|Public  
	// Function /Script/ConZ.PreviousNextSwitchWidget.OnSwitchClickedDelegate__DelegateSignature
	void OnSwitchClickedDelegate__DelegateSignature(int32_t widgetArrayIndex, int32_t Index);                                // [0x2859740] MulticastDelegate|Public|Delegate 
};

/// Class /Script/ConZ.PrisonerAction
/// Size: 0x0018 (0x0000F8 - 0x000110)
class UPrisonerAction : public UCharacterAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x00F8   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerActionDescription
/// Size: 0x0000 (0x000038 - 0x000038)
class UPrisonerActionDescription : public UCharacterActionDescription
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionActivateSlot
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionActivateSlot : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionActivateSlotDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerActionActivateSlotDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionAddFertilizer
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionAddFertilizer : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionAddFertilizerDescription
/// Size: 0x0018 (0x000038 - 0x000050)
class UPrisonerActionAddFertilizerDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0038   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerActionAddWeaponAttachment
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionAddWeaponAttachment : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionAddWeaponAttachmentDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerActionAddWeaponAttachmentDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionAlignTransform
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionAlignTransform : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionAlignTransformDescription
/// Size: 0x0058 (0x000038 - 0x000090)
class UPrisonerActionAlignTransformDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x58];                                      // 0x0038   (0x0058)  MISSED
};

/// Class /Script/ConZ.PrisonerActionAnalyzeAnimalTrack
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionAnalyzeAnimalTrack : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionAnalyzeAnimalTrackDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerActionAnalyzeAnimalTrackDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionApplyFlagElementsExpansion
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionApplyFlagElementsExpansion : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionApplyFlagElementsExpansionDescription
/// Size: 0x0028 (0x000038 - 0x000060)
class UPrisonerActionApplyFlagElementsExpansionDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0038   (0x0028)  MISSED
};

/// Class /Script/ConZ.PrisonerActionApplyPesticide
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionApplyPesticide : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionApplyPesticideDescription
/// Size: 0x0018 (0x000038 - 0x000050)
class UPrisonerActionApplyPesticideDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0038   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerActionAttachItem
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionAttachItem : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionAttachItemDescription
/// Size: 0x0038 (0x000038 - 0x000070)
class UPrisonerActionAttachItemDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0038   (0x0038)  MISSED
};

/// Class /Script/ConZ.PrisonerActionBlowAir
/// Size: 0x0020 (0x000110 - 0x000130)
class UPrisonerActionBlowAir : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0110   (0x0020)  MISSED
};

/// Class /Script/ConZ.PrisonerActionBlowAirDescription
/// Size: 0x0020 (0x000038 - 0x000058)
class UPrisonerActionBlowAirDescription : public UCharacterActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0038   (0x0020)  MISSED
};

/// Class /Script/ConZ.PrisonerActionBury
/// Size: 0x0028 (0x000110 - 0x000138)
class UPrisonerActionBury : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0110   (0x0028)  MISSED
};

/// Class /Script/ConZ.PrisonerActionBuryDescription
/// Size: 0x0038 (0x000038 - 0x000070)
class UPrisonerActionBuryDescription : public UCharacterActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0038   (0x0038)  MISSED
};

/// Class /Script/ConZ.PrisonerActionChangeStance
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionChangeStance : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionChangeStanceDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerActionChangeStanceDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionChangeStanceWaitEndOnOwningClient
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionChangeStanceWaitEndOnOwningClient : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionChangeStanceWaitEndOnOwningClientDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerActionChangeStanceWaitEndOnOwningClientDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionChangeVehicleWeaponAimingStance
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionChangeVehicleWeaponAimingStance : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionChangeVehicleWeaponAimingStanceDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerActionChangeVehicleWeaponAimingStanceDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionChangeWeaponFiringMode
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionChangeWeaponFiringMode : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionChangeWeaponFiringModeModeDescription
/// Size: 0x0000 (0x000038 - 0x000038)
class UPrisonerActionChangeWeaponFiringModeModeDescription : public UPrisonerActionDescription
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionChargeVehicleBattery
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionChargeVehicleBattery : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionChargeVehicleBatteryDescription
/// Size: 0x0038 (0x000038 - 0x000070)
class UPrisonerActionChargeVehicleBatteryDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0038   (0x0038)  MISSED
};

/// Class /Script/ConZ.PrisonerActionCheckChainsawFuelStatus
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionCheckChainsawFuelStatus : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionCheckChainsawFuelStatusDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerActionCheckChainsawFuelStatusDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionCheckThermalSensor
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionCheckThermalSensor : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionCheckThermalSensorDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerActionCheckThermalSensorDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionCheckTime
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionCheckTime : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionCheckTimeDescription
/// Size: 0x0000 (0x000038 - 0x000038)
class UPrisonerActionCheckTimeDescription : public UPrisonerActionDescription
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionCheckWeaponAmmo
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionCheckWeaponAmmo : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionCheckWeaponAmmoDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerActionCheckWeaponAmmoDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionCheckWeaponFiringMode
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionCheckWeaponFiringMode : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionCheckWeaponFiringModeDescription
/// Size: 0x0000 (0x000038 - 0x000038)
class UPrisonerActionCheckWeaponFiringModeDescription : public UPrisonerActionDescription
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionChopBaseElement
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionChopBaseElement : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionChopBaseElementDescription
/// Size: 0x0060 (0x000038 - 0x000098)
class UPrisonerActionChopBaseElementDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x60];                                      // 0x0038   (0x0060)  MISSED
};

/// Class /Script/ConZ.PrisonerActionChopItem
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionChopItem : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionChopItemDescription
/// Size: 0x0020 (0x000038 - 0x000058)
class UPrisonerActionChopItemDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0038   (0x0020)  MISSED
};

/// Class /Script/ConZ.PrisonerActionClaimKill
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionClaimKill : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionClaimKillDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerActionClaimKillDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionClean
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionClean : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.UPrisonerActionCleanDescription
/// Size: 0x0018 (0x000038 - 0x000050)
class UUPrisonerActionCleanDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0038   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerActionClearWeaponMalfunction
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionClearWeaponMalfunction : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionClearWeaponMalfunctionDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerActionClearWeaponMalfunctionDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionClimbOntoLadder
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionClimbOntoLadder : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionClimbOntoLadderDescription
/// Size: 0x0018 (0x000038 - 0x000050)
class UPrisonerActionClimbOntoLadderDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0038   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerActionCollectSeeds
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionCollectSeeds : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionCollectSeedsDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerActionCollectSeedsDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionCommitSuicide
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionCommitSuicide : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionCommitSuicideDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerActionCommitSuicideDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionCraftItem
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionCraftItem : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionCraftItemDescription
/// Size: 0x00A8 (0x000038 - 0x0000E0)
class UPrisonerActionCraftItemDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0xA8];                                      // 0x0038   (0x00A8)  MISSED
};

/// Class /Script/ConZ.PrisonerActionCutObject
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionCutObject : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionCutObjectDescription
/// Size: 0x0040 (0x000038 - 0x000078)
class UPrisonerActionCutObjectDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x40];                                      // 0x0038   (0x0040)  MISSED
};

/// Class /Script/ConZ.PrisonerActionDecontaminate
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionDecontaminate : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionDecontaminateDescription
/// Size: 0x0020 (0x000038 - 0x000058)
class UPrisonerActionDecontaminateDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0038   (0x0020)  MISSED
};

/// Class /Script/ConZ.PrisonerActionDecontaminateWithReplenishableResource
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionDecontaminateWithReplenishableResource : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionDecontaminateWithReplenishableResourceDescription
/// Size: 0x0050 (0x000038 - 0x000088)
class UPrisonerActionDecontaminateWithReplenishableResourceDescription : public UCharacterActionDescription
{ 
public:
	unsigned char                                      UnknownData00_2[0x48];                                      // 0x0038   (0x0048)  MISSED
	UGameResourceContainerProxyForReplenishableResource* ProxyForReplenishableResource;                            // 0x0080   (0x0008)  
};

/// Class /Script/ConZ.PrisonerActionDefecate
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionDefecate : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionDefecateDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerActionDefecateDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionDestroyGarden
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionDestroyGarden : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionDestroyGardenDescription
/// Size: 0x0018 (0x000038 - 0x000050)
class UPrisonerActionDestroyGardenDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0038   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerActionDestroyItem
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionDestroyItem : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionDestroyItemDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerActionDestroyItemDescription : public UCharacterActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionDownloadDataToBCUMemoryModule
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionDownloadDataToBCUMemoryModule : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionDownloadDataToBCUMemoryModuleDescription
/// Size: 0x0018 (0x000038 - 0x000050)
class UPrisonerActionDownloadDataToBCUMemoryModuleDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0038   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerActionDrainVehicleFuelIntoItem
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionDrainVehicleFuelIntoItem : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionDrainVehicleFuelIntoItemDescription
/// Size: 0x0038 (0x000038 - 0x000070)
class UPrisonerActionDrainVehicleFuelIntoItemDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0038   (0x0038)  MISSED
};

/// Class /Script/ConZ.PrisonerActionDrinkFromReplenishableResource
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionDrinkFromReplenishableResource : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionDrinkFromReplenishableResourceDescription
/// Size: 0x0048 (0x000038 - 0x000080)
class UPrisonerActionDrinkFromReplenishableResourceDescription : public UCharacterActionDescription
{ 
public:
	unsigned char                                      UnknownData00_2[0x40];                                      // 0x0038   (0x0040)  MISSED
	UGameResourceContainerProxyForReplenishableResource* ProxyForReplenishableResource;                            // 0x0078   (0x0008)  
};

/// Class /Script/ConZ.PrisonerActionDrinkInteraction
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionDrinkInteraction : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionDrinkInteractionDescription
/// Size: 0x0020 (0x000038 - 0x000058)
class UPrisonerActionDrinkInteractionDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0038   (0x0020)  MISSED
};

/// Class /Script/ConZ.PrisonerActionEatItem
/// Size: 0x0020 (0x000110 - 0x000130)
class UPrisonerActionEatItem : public UPrisonerAction
{ 
public:
	UAkAudioEvent*                                     _startEatingAudioEvent;                                     // 0x0110   (0x0008)  
	UAkAudioEvent*                                     _stopEatingAudioEvent;                                      // 0x0118   (0x0008)  
	UClass*                                            _itemClass;                                                 // 0x0120   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0128   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionEatItemDescription
/// Size: 0x0020 (0x000038 - 0x000058)
class UPrisonerActionEatItemDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0038   (0x0020)  MISSED
};

/// Class /Script/ConZ.PrisonerActionEnterCombatMode
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionEnterCombatMode : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionEnterCombatModeDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerActionEnterCombatModeDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionExecuteBodyConditionInteraction
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionExecuteBodyConditionInteraction : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionExecuteBodyConditionInteractionDescription
/// Size: 0x0050 (0x000038 - 0x000088)
class UPrisonerActionExecuteBodyConditionInteractionDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_2[0x40];                                      // 0x0038   (0x0040)  MISSED
	UAkAudioEvent*                                     BeginInteractionPatientAudioEvent;                          // 0x0078   (0x0008)  
	UAkAudioEvent*                                     EndInteractionPatientAudioEvent;                            // 0x0080   (0x0008)  
};

/// Class /Script/ConZ.PrisonerActionExecuteInteraction
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionExecuteInteraction : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionExecuteInteractionDescription
/// Size: 0x00B8 (0x000038 - 0x0000F0)
class UPrisonerActionExecuteInteractionDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0xB8];                                      // 0x0038   (0x00B8)  MISSED
};

/// Class /Script/ConZ.PrisonerActionExtinguishFire
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionExtinguishFire : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionExtinguishFireDescription
/// Size: 0x0020 (0x000038 - 0x000058)
class UPrisonerActionExtinguishFireDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0038   (0x0020)  MISSED
};

/// Class /Script/ConZ.PrisonerActionExtinguishItem
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionExtinguishItem : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionExtinguishItemDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerActionExtinguishItemDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionExtractBloodSample
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionExtractBloodSample : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionExtractBloodSampleDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerActionExtractBloodSampleDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionFillGameResourceContainer
/// Size: 0x0028 (0x000110 - 0x000138)
class UPrisonerActionFillGameResourceContainer : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0110   (0x0028)  MISSED
};

/// Class /Script/ConZ.PrisonerActionFillGameResourceContainerDescription
/// Size: 0x0058 (0x000038 - 0x000090)
class UPrisonerActionFillGameResourceContainerDescription : public UCharacterActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x58];                                      // 0x0038   (0x0058)  MISSED
};

/// Class /Script/ConZ.PrisonerActionFillGameResourceContainerWithReplenishableResourceDescription
/// Size: 0x0018 (0x000090 - 0x0000A8)
class UPrisonerActionFillGameResourceContainerWithReplenishableResourceDescription : public UPrisonerActionFillGameResourceContainerDescription
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0090   (0x0010)  MISSED
	UGameResourceContainerProxyForReplenishableResource* ProxyForReplenishableResource;                            // 0x00A0   (0x0008)  
};

/// Class /Script/ConZ.PrisonerActionFillGameResourceContainerWithInfiniteResourceDescription
/// Size: 0x0060 (0x000090 - 0x0000F0)
class UPrisonerActionFillGameResourceContainerWithInfiniteResourceDescription : public UPrisonerActionFillGameResourceContainerDescription
{ 
public:
	unsigned char                                      UnknownData00_2[0x58];                                      // 0x0090   (0x0058)  MISSED
	UGameResourceContainerProxyForInfiniteResource*    ProxyForInfiniteResource;                                   // 0x00E8   (0x0008)  
};

/// Class /Script/ConZ.PrisonerActionFillResourceContainerWithReplenishableResourcePaid
/// Size: 0x0030 (0x000110 - 0x000140)
class UPrisonerActionFillResourceContainerWithReplenishableResourcePaid : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x0110   (0x0030)  MISSED
};

/// Class /Script/ConZ.PrisonerActionFillGameResourceContainerWithReplenishableResourcePaidDescription
/// Size: 0x0070 (0x000038 - 0x0000A8)
class UPrisonerActionFillGameResourceContainerWithReplenishableResourcePaidDescription : public UCharacterActionDescription
{ 
public:
	unsigned char                                      UnknownData00_2[0x38];                                      // 0x0038   (0x0038)  MISSED
	UGameResourceContainerProxyForReplenishableResource* ProxyForReplenishableResource;                            // 0x0070   (0x0008)  
	unsigned char                                      UnknownData01_6[0x30];                                      // 0x0078   (0x0030)  MISSED
};

/// Class /Script/ConZ.PrisonerActionFillVehicleFuelWithItem
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionFillVehicleFuelWithItem : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionFillVehicleFuelWithItemDescription
/// Size: 0x0038 (0x000038 - 0x000070)
class UPrisonerActionFillVehicleFuelWithItemDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0038   (0x0038)  MISSED
};

/// Class /Script/ConZ.PrisonerActionFillVehicleFuelWithReplenishableResource
/// Size: 0x0038 (0x000110 - 0x000148)
class UPrisonerActionFillVehicleFuelWithReplenishableResource : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0110   (0x0038)  MISSED
};

/// Class /Script/ConZ.PrisonerActionFillVehicleFuelWithReplenishableResourceDescription
/// Size: 0x0050 (0x000038 - 0x000088)
class UPrisonerActionFillVehicleFuelWithReplenishableResourceDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0038   (0x0050)  MISSED
};

/// Class /Script/ConZ.PrisonerActionFillWater
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionFillWater : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionFillWaterDescription
/// Size: 0x0028 (0x000038 - 0x000060)
class UPrisonerActionFillWaterDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0038   (0x0028)  MISSED
};

/// Class /Script/ConZ.PrisonerActionFishing
/// Size: 0x0008 (0x0000F8 - 0x000100)
class UPrisonerActionFishing : public UCharacterAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00F8   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionFishingDescription
/// Size: 0x0000 (0x000038 - 0x000038)
class UPrisonerActionFishingDescription : public UCharacterActionDescription
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionFixTire
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionFixTire : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionFixTireDescription
/// Size: 0x0048 (0x000038 - 0x000080)
class UPrisonerActionFixTireDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x48];                                      // 0x0038   (0x0048)  MISSED
};

/// Class /Script/ConZ.PrisonerActionForceUnlock
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionForceUnlock : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionForceUnlockDescription
/// Size: 0x0068 (0x000038 - 0x0000A0)
class UPrisonerActionForceUnlockDescription : public UCharacterActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x68];                                      // 0x0038   (0x0068)  MISSED
};

/// Class /Script/ConZ.PrisonerActionFuelFire
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionFuelFire : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionFuelFireDescription
/// Size: 0x0018 (0x000038 - 0x000050)
class UPrisonerActionFuelFireDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0038   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerActionGesture
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionGesture : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionGestureDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerActionGestureDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionIgniteItem
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionIgniteItem : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionIgniteItemDescription
/// Size: 0x0020 (0x000038 - 0x000058)
class UPrisonerActionIgniteItemDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0038   (0x0020)  MISSED
};

/// Class /Script/ConZ.PrisonerActionInjectSubstance
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionInjectSubstance : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionInjectSubstanceDescription
/// Size: 0x0030 (0x000038 - 0x000068)
class UPrisonerActionInjectSubstanceDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x0038   (0x0030)  MISSED
};

/// Class /Script/ConZ.PrisonerActionInsertArrow
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionInsertArrow : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionInsertArrowDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerActionInsertArrowDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionLeaveCombatMode
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionLeaveCombatMode : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionLeaveCombatModeDescription
/// Size: 0x0000 (0x000038 - 0x000038)
class UPrisonerActionLeaveCombatModeDescription : public UPrisonerActionDescription
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionLightFire
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionLightFire : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionLightFireDescription
/// Size: 0x0018 (0x000038 - 0x000050)
class UPrisonerActionLightFireDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0038   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerActionLoadAmmoIntoMagazine
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionLoadAmmoIntoMagazine : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0110   (0x0008)  MISSED
	UItemActionSequenceLoadMagazine*                   _itemActionSequence;                                        // 0x0118   (0x0008)  
};

/// Class /Script/ConZ.PrisonerActionLoadAmmoIntoMagazineDescription
/// Size: 0x0028 (0x000038 - 0x000060)
class UPrisonerActionLoadAmmoIntoMagazineDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0038   (0x0028)  MISSED
};

/// Class /Script/ConZ.PrisonerActionLootCorpse
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionLootCorpse : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionLootCorpseDescription
/// Size: 0x0018 (0x000038 - 0x000050)
class UPrisonerActionLootCorpseDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0038   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerActionLootPrisoner
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionLootPrisoner : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionLootPrisonerDescription
/// Size: 0x0018 (0x000038 - 0x000050)
class UPrisonerActionLootPrisonerDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0038   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerActionManipulateTrap
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionManipulateTrap : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionManipulateTrapDescription
/// Size: 0x0020 (0x000038 - 0x000058)
class UPrisonerActionManipulateTrapDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0038   (0x0020)  MISSED
};

/// Class /Script/ConZ.PrisonerActionManualOpenBlastDoor
/// Size: 0x0020 (0x000110 - 0x000130)
class UPrisonerActionManualOpenBlastDoor : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0110   (0x0020)  MISSED
};

/// Class /Script/ConZ.PrisonerActionManualOpenBlastDoorDescription
/// Size: 0x0068 (0x000038 - 0x0000A0)
class UPrisonerActionManualOpenBlastDoorDescription : public UCharacterActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x68];                                      // 0x0038   (0x0068)  MISSED
};

/// Class /Script/ConZ.PrisonerActionMinigame
/// Size: 0x0038 (0x000110 - 0x000148)
class UPrisonerActionMinigame : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0110   (0x0038)  MISSED
};

/// Class /Script/ConZ.PrisonerActionMinigameDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerActionMinigameDescription : public UPrisonerActionDescription
{ 
public:
	UMinigameConfiguration*                            MinigameConfiguration;                                      // 0x0038   (0x0008)  
};

/// Class /Script/ConZ.PrisonerActionModifyWeaponPaintjob
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionModifyWeaponPaintjob : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionModifyWeaponPaintjobDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerActionModifyWeaponPaintjobDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionMoveToLocation
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionMoveToLocation : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionMoveToLocationDescription
/// Size: 0x0028 (0x000038 - 0x000060)
class UPrisonerActionMoveToLocationDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0038   (0x0028)  MISSED
};

/// Class /Script/ConZ.PrisonerActionOpenItem
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionOpenItem : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionOpenItemDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerActionOpenItemDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionOperateBondage
/// Size: 0x0018 (0x000110 - 0x000128)
class UPrisonerActionOperateBondage : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0110   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerActionOperateBondageDescription
/// Size: 0x0020 (0x000038 - 0x000058)
class UPrisonerActionOperateBondageDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0038   (0x0020)  MISSED
};

/// Class /Script/ConZ.PrisonerActionPairRemoteKeyAndSensor
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionPairRemoteKeyAndSensor : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionPairRemoteKeyAndSensorDescription
/// Size: 0x0018 (0x000038 - 0x000050)
class UPrisonerActionPairRemoteKeyAndSensorDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0038   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerActionPickUpVehicle2W
/// Size: 0x0028 (0x000110 - 0x000138)
class UPrisonerActionPickUpVehicle2W : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0110   (0x0028)  MISSED
};

/// Class /Script/ConZ.PrisonerActionPickUpVehicle2WDescription
/// Size: 0x0068 (0x000038 - 0x0000A0)
class UPrisonerActionPickUpVehicle2WDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x68];                                      // 0x0038   (0x0068)  MISSED
};

/// Class /Script/ConZ.PrisonerActionPlaceItemOnRack
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionPlaceItemOnRack : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionPlaceItemOnRackDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerActionPlaceItemOnRackDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionPlantSeed
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionPlantSeed : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionPlantSeedDescription
/// Size: 0x0018 (0x000038 - 0x000050)
class UPrisonerActionPlantSeedDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0038   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerActionPullGrenadePin
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionPullGrenadePin : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionPullGrenadePinDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerActionPullGrenadePinDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionReloadWeapon
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionReloadWeapon : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionReloadWeaponDescription
/// Size: 0x0038 (0x000038 - 0x000070)
class UPrisonerActionReloadWeaponDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0038   (0x0038)  MISSED
};

/// Class /Script/ConZ.PrisonerActionRemoveItemFromHands
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionRemoveItemFromHands : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionRemoveItemFromHandsDescription
/// Size: 0x0040 (0x000038 - 0x000078)
class UPrisonerActionRemoveItemFromHandsDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x40];                                      // 0x0038   (0x0040)  MISSED
};

/// Class /Script/ConZ.PrisonerActionRemovePlant
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionRemovePlant : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionRemovePlantDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerActionRemovePlantDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionRemoveWeaponAttachment
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionRemoveWeaponAttachment : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionRemoveWeaponAttachmentDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerActionRemoveWeaponAttachmentDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionRemoveWeed
/// Size: 0x0018 (0x000110 - 0x000128)
class UPrisonerActionRemoveWeed : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0110   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerActionRemoveWeedDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerActionRemoveWeedDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionRepair
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionRepair : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionRepairDescription
/// Size: 0x0018 (0x000038 - 0x000050)
class UPrisonerActionRepairDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0038   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerActionRepairBaseElement
/// Size: 0x0000 (0x000120 - 0x000120)
class UPrisonerActionRepairBaseElement : public UPrisonerActionRepair
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionRepairBaseElementDescription
/// Size: 0x0050 (0x000050 - 0x0000A0)
class UPrisonerActionRepairBaseElementDescription : public UPrisonerActionRepairDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0050   (0x0050)  MISSED
};

/// Class /Script/ConZ.PrisonerActionRepairItem
/// Size: 0x0000 (0x000120 - 0x000120)
class UPrisonerActionRepairItem : public UPrisonerActionRepair
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionRepairItemDescription
/// Size: 0x0018 (0x000050 - 0x000068)
class UPrisonerActionRepairItemDescription : public UPrisonerActionRepairDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0050   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerActionRepairVehicle
/// Size: 0x0000 (0x000120 - 0x000120)
class UPrisonerActionRepairVehicle : public UPrisonerActionRepair
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionRepairVehicleDescription
/// Size: 0x0008 (0x000050 - 0x000058)
class UPrisonerActionRepairVehicleDescription : public UPrisonerActionRepairDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0050   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionResuscitate
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionResuscitate : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionResuscitateDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerActionResuscitateDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionRollRevolverDrum
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionRollRevolverDrum : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionRollRevolverDrumDescription
/// Size: 0x0018 (0x000038 - 0x000050)
class UPrisonerActionRollRevolverDrumDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0038   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerActionRussianRoulette
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionRussianRoulette : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionRussianRouletteDescription
/// Size: 0x0018 (0x000038 - 0x000050)
class UPrisonerActionRussianRouletteDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0038   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerActionSearchObject
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionSearchObject : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionSearchGardenSlot
/// Size: 0x0000 (0x000120 - 0x000120)
class UPrisonerActionSearchGardenSlot : public UPrisonerActionSearchObject
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionSearchObjectDescription
/// Size: 0x0038 (0x000038 - 0x000070)
class UPrisonerActionSearchObjectDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0038   (0x0038)  MISSED
};

/// Class /Script/ConZ.PrisonerActionSearchGardenSlotDescription
/// Size: 0x0008 (0x000070 - 0x000078)
class UPrisonerActionSearchGardenSlotDescription : public UPrisonerActionSearchObjectDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0070   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionSearchGround
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionSearchGround : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionSearchGroundDescription
/// Size: 0x0030 (0x000038 - 0x000068)
class UPrisonerActionSearchGroundDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x0038   (0x0030)  MISSED
};

/// Class /Script/ConZ.PrisonerActionSearchPrisoner
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionSearchPrisoner : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionSearchPrisonerDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerActionSearchPrisonerDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionSpill
/// Size: 0x0048 (0x000110 - 0x000158)
class UPrisonerActionSpill : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x48];                                      // 0x0110   (0x0048)  MISSED
};

/// Class /Script/ConZ.PrisonerActionSpillDescription
/// Size: 0x0058 (0x000038 - 0x000090)
class UPrisonerActionSpillDescription : public UCharacterActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x58];                                      // 0x0038   (0x0058)  MISSED
};

/// Class /Script/ConZ.PrisonerActionSpillAtLocation
/// Size: 0x0000 (0x000158 - 0x000158)
class UPrisonerActionSpillAtLocation : public UPrisonerActionSpill
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionSpillAtLocationDescription
/// Size: 0x0028 (0x000090 - 0x0000B8)
class UPrisonerActionSpillAtLocationDescription : public UPrisonerActionSpillDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0090   (0x0028)  MISSED
};

/// Class /Script/ConZ.PrisonerActionStartCarryingItem
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionStartCarryingItem : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionStartCarryingItemDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerActionStartCarryingItemDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionStartChainsawEngine
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionStartChainsawEngine : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionStartChainsawEngineDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerActionStartChainsawEngineDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionStartPlayingInstrument
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionStartPlayingInstrument : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionStartPlayingInstrumentDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerActionStartPlayingInstrumentDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionStartResting
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionStartResting : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionStartRestingDescription
/// Size: 0x00B8 (0x000038 - 0x0000F0)
class UPrisonerActionStartRestingDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0xB8];                                      // 0x0038   (0x00B8)  MISSED
};

/// Class /Script/ConZ.PrisonerActionStopResting
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionStopResting : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionStopRestingDescription
/// Size: 0x0000 (0x000038 - 0x000038)
class UPrisonerActionStopRestingDescription : public UPrisonerActionDescription
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionTakeItemInHands
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionTakeItemInHands : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionTakeItemInHandsDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerActionTakeItemInHandsDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionThrowItem
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionThrowItem : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionThrowItemDescription
/// Size: 0x0018 (0x000038 - 0x000050)
class UPrisonerActionThrowItemDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0038   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerActionTreatPatient
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionTreatPatient : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionTreatPatientDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerActionTreatPatientDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionTriggerRemoteKey
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionTriggerRemoteKey : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionTriggerRemoteKeyDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerActionTriggerRemoteKeyDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionTuneBow
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionTuneBow : public UPrisonerAction
{ 
public:
	UAkAudioEvent*                                     _tuneBowAudioEvent;                                         // 0x0110   (0x0008)  
};

/// Class /Script/ConZ.PrisonerActionTuneBowDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerActionTuneBowDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionUncraftItem
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionUncraftItem : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionUncraftItemDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerActionUncraftItemDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionUnequipWeapon
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionUnequipWeapon : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionUnequipWeaponDescription
/// Size: 0x0000 (0x000038 - 0x000038)
class UPrisonerActionUnequipWeaponDescription : public UPrisonerActionDescription
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionUnloadAmmoFromWeapon
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionUnloadAmmoFromWeapon : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionUnloadAmmoFromWeaponDescription
/// Size: 0x0018 (0x000038 - 0x000050)
class UPrisonerActionUnloadAmmoFromWeaponDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0038   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerActionUpgradeBCU
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionUpgradeBCU : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionUpgradeBCUDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerActionUpgradeBCUDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionUrinate
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionUrinate : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionUrinateDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerActionUrinateDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionVoiceline
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionVoiceline : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionVoicelineDescription
/// Size: 0x0028 (0x000038 - 0x000060)
class UPrisonerActionVoicelineDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0038   (0x0028)  MISSED
};

/// Class /Script/ConZ.PrisonerActionVomit
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionVomit : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionVomitDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerActionVomitDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionWashCloth
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionWashCloth : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.UPrisonerActionWashClothDescription
/// Size: 0x0020 (0x000038 - 0x000058)
class UUPrisonerActionWashClothDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0038   (0x0020)  MISSED
};

/// Class /Script/ConZ.PrisonerActionWashEyes
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionWashEyes : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionWashEyesDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerActionWashEyesDescription : public UCharacterActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionWashEyesWithReplenishableResource
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerActionWashEyesWithReplenishableResource : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerActionWashEyesWithReplenishableResourceDescription
/// Size: 0x0040 (0x000038 - 0x000078)
class UPrisonerActionWashEyesWithReplenishableResourceDescription : public UCharacterActionDescription
{ 
public:
	unsigned char                                      UnknownData00_2[0x38];                                      // 0x0038   (0x0038)  MISSED
	UGameResourceContainerProxyForReplenishableResource* ProxyForReplenishableResource;                            // 0x0070   (0x0008)  
};

/// Class /Script/ConZ.PrisonerActionWashWithReplenishableResource
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerActionWashWithReplenishableResource : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerActionWashWithReplenishableResourceDescription
/// Size: 0x0058 (0x000038 - 0x000090)
class UPrisonerActionWashWithReplenishableResourceDescription : public UCharacterActionDescription
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x0038   (0x0050)  MISSED
	UGameResourceContainerProxyForReplenishableResource* ProxyForReplenishableResource;                            // 0x0088   (0x0008)  
};

/// Class /Script/ConZ.PrisonerActionWhistle
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerActionWhistle : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerActionWhistleDescription
/// Size: 0x0000 (0x000038 - 0x000038)
class UPrisonerActionWhistleDescription : public UPrisonerActionDescription
{ 
public:
};

/// Class /Script/ConZ.PrisonerAIController
/// Size: 0x0028 (0x000328 - 0x000350)
class APrisonerAIController : public AAIController
{ 
public:
	APrisoner*                                         _prisoner;                                                  // 0x0328   (0x0008)  
	UPrisonerMovementComponent*                        _prisonerMovementComponent;                                 // 0x0330   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0338   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerAnimInstance
/// Size: 0x0E50 (0x0002C0 - 0x001110)
class UPrisonerAnimInstance : public UAnimInstance
{ 
public:
	float                                              SlowPaceLoopAnimSpeeds;                                     // 0x02B8   (0x0058)  
	float                                              MediumPaceLoopAnimSpeeds;                                   // 0x0310   (0x0058)  
	float                                              FastPaceLoopAnimSpeeds;                                     // 0x0368   (0x0058)  
	float                                              MeleeCombatWalkUsageRadius;                                 // 0x03C0   (0x0004)  
	float                                              MeleeExhaustionFactorInterpSpeed;                           // 0x03C4   (0x0004)  
	bool                                               AutoBlinkEnabled;                                           // 0x03C8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x9F];                                      // 0x03C9   (0x009F)  MISSED
	bool                                               _isPrisonerCompletelyInitialized;                           // 0x0468   (0x0001)  
	bool                                               _isOwnerLocallyControlled;                                  // 0x0469   (0x0001)  
	bool                                               _isOwnerPlayerControlled;                                   // 0x046A   (0x0001)  
	bool                                               _isFemale;                                                  // 0x046B   (0x0001)  
	bool                                               _isInFirstPersonView;                                       // 0x046C   (0x0001)  
	bool                                               _shouldOverrideIsInFirstPersonView;                         // 0x046D   (0x0001)  
	bool                                               _isInFirstPersonViewOverride;                               // 0x046E   (0x0001)  
	bool                                               _isInFirstPersonViewAndIsFemale;                            // 0x046F   (0x0001)  
	bool                                               _isInThirdPersonViewAndIsFemale;                            // 0x0470   (0x0001)  
	bool                                               _isAimingWeapon;                                            // 0x0471   (0x0001)  
	bool                                               _isAbleToFireWeapon;                                        // 0x0472   (0x0001)  
	EWeaponAimingType                                  _weaponAimingType;                                          // 0x0473   (0x0001)  
	FVector                                            _supportingHandIKLocation;                                  // 0x0474   (0x000C)  
	float                                              _weaponAimYaw;                                              // 0x0480   (0x0004)  
	float                                              _weaponAimPitch;                                            // 0x0484   (0x0004)  
	UAnimSequenceBase*                                 _meleeSkill_PrimaryIdleAnimationTP;                         // 0x0488   (0x0008)  
	UAnimSequenceBase*                                 _meleeSkill_PrimaryIdleAnimationFP;                         // 0x0490   (0x0008)  
	UAnimSequenceBase*                                 _meleeSkill_TiredIdleAnimationTP;                           // 0x0498   (0x0008)  
	UAnimSequenceBase*                                 _meleeSkill_TiredIdleAnimationFP;                           // 0x04A0   (0x0008)  
	UAnimSequenceBase*                                 _meleeSkill_WalkingIdleAnimationTP;                         // 0x04A8   (0x0008)  
	UAnimSequenceBase*                                 _meleeSkill_WalkingIdleAnimationFP;                         // 0x04B0   (0x0008)  
	UAnimSequenceBase*                                 _meleeSkill_BlockIdleAnimationTP;                           // 0x04B8   (0x0008)  
	UAnimSequenceBase*                                 _meleeSkill_BlockIdleAnimationFP;                           // 0x04C0   (0x0008)  
	UBlendSpace*                                       _meleeSkill_AimOffsetBlendSpaceTP;                          // 0x04C8   (0x0008)  
	UBlendSpace*                                       _meleeSkill_AimOffsetBlendSpaceFP;                          // 0x04D0   (0x0008)  
	float                                              _meleeSkill_IdleToBlockBlendDuration;                       // 0x04D8   (0x0004)  
	float                                              _meleeSkill_BlockToIdleBlendDuration;                       // 0x04DC   (0x0004)  
	float                                              _meleeSkill_ExhaustionFactor;                               // 0x04E0   (0x0004)  
	bool                                               _shouldUseUnarmedCombatWalk;                                // 0x04E4   (0x0001)  
	bool                                               _isHoldingBlock;                                            // 0x04E5   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x04E6   (0x0002)  MISSED
	float                                              _stamina;                                                   // 0x04E8   (0x0004)  
	float                                              _bellyJiggleAmount;                                         // 0x04EC   (0x0004)  
	float                                              _breastJiggleAmount;                                        // 0x04F0   (0x0004)  
	bool                                               _shouldUseWeaponAnimationPose;                              // 0x04F4   (0x0001)  
	unsigned char                                      UnknownData02_5[0xE3];                                      // 0x04F5   (0x00E3)  MISSED
	bool                                               _shouldIgnoreSupportingHandIK;                              // 0x05D8   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x05D9   (0x0003)  MISSED
	float                                              _firstPersonAimPitch;                                       // 0x05DC   (0x0004)  
	float                                              _firstPersonAimYawDelta;                                    // 0x05E0   (0x0004)  
	bool                                               _shouldAimDownTheSights;                                    // 0x05E4   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x05E5   (0x0003)  MISSED
	FVector                                            _aimingDownTheSightsLocationOffset;                         // 0x05E8   (0x000C)  
	FVector                                            _scopeViewArmDislocationOffset;                             // 0x05F4   (0x000C)  
	FRotator                                           _armsLagRotation;                                           // 0x0600   (0x000C)  
	float                                              _armsLagPitch;                                              // 0x060C   (0x0004)  
	float                                              _armsLagYaw;                                                // 0x0610   (0x0004)  
	EPrisonerStance                                    _stance;                                                    // 0x0614   (0x0001)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x0615   (0x0003)  MISSED
	float                                              _crouchStage;                                               // 0x0618   (0x0004)  
	float                                              _targetCrouchStage;                                         // 0x061C   (0x0004)  
	bool                                               _isFreeLookEnabled;                                         // 0x0620   (0x0001)  
	bool                                               _shouldIgnoreHeadTurning;                                   // 0x0621   (0x0001)  
	unsigned char                                      UnknownData06_5[0x2];                                       // 0x0622   (0x0002)  MISSED
	FRotator                                           _aimOffset;                                                 // 0x0624   (0x000C)  
	float                                              _leanAmount;                                                // 0x0630   (0x0004)  
	bool                                               _shouldLookAtMeleeTarget;                                   // 0x0634   (0x0001)  
	unsigned char                                      UnknownData07_5[0x3];                                       // 0x0635   (0x0003)  MISSED
	FRotator                                           _lookAtMeleeTargetAimOffset;                                // 0x0638   (0x000C)  
	EPrisonerAnimationSet                              _animationSet;                                              // 0x0644   (0x0001)  
	bool                                               _isInRagdoll;                                               // 0x0645   (0x0001)  
	bool                                               _isMovingOnGround;                                          // 0x0646   (0x0001)  
	bool                                               _isFalling;                                                 // 0x0647   (0x0001)  
	bool                                               _isSwimming;                                                // 0x0648   (0x0001)  
	unsigned char                                      UnknownData08_5[0x3];                                       // 0x0649   (0x0003)  MISSED
	FVector                                            _acceleration;                                              // 0x064C   (0x000C)  
	bool                                               _wantsToMove;                                               // 0x0658   (0x0001)  
	bool                                               _wantsToMoveHorizontallyOnly;                               // 0x0659   (0x0001)  
	bool                                               _wantsToMoveVerticallyOnly;                                 // 0x065A   (0x0001)  
	bool                                               _wantsToWalk;                                               // 0x065B   (0x0001)  
	bool                                               _wantsToJog;                                                // 0x065C   (0x0001)  
	bool                                               _wantsToRun;                                                // 0x065D   (0x0001)  
	unsigned char                                      UnknownData09_5[0x2];                                       // 0x065E   (0x0002)  MISSED
	FVector                                            _velocity;                                                  // 0x0660   (0x000C)  
	unsigned char                                      UnknownData10_5[0x4];                                       // 0x066C   (0x0004)  MISSED
	float                                              _speed;                                                     // 0x0670   (0x0004)  
	float                                              _speedXY;                                                   // 0x0674   (0x0004)  
	float                                              _maxSpeed;                                                  // 0x0678   (0x0004)  
	float                                              _stoppingDistance;                                          // 0x067C   (0x0004)  
	unsigned char                                      UnknownData11_5[0x7C];                                      // 0x0680   (0x007C)  MISSED
	float                                              _leftHandIKAmount;                                          // 0x06FC   (0x0004)  
	float                                              _desiredCourseAngle;                                        // 0x0700   (0x0004)  
	float                                              _desiredCoursePitchAngle;                                   // 0x0704   (0x0004)  
	float                                              _actualCourseAngle;                                         // 0x0708   (0x0004)  
	EPrisonerMovementPace                              _desiredMovementPace;                                       // 0x070C   (0x0001)  
	EPrisonerMovementPace                              _clampedDesiredMovementPace;                                // 0x070D   (0x0001)  
	EPrisonerMovementPace                              _movementPaceBeforeGroundStart;                             // 0x070E   (0x0001)  
	unsigned char                                      UnknownData12_5[0x1];                                       // 0x070F   (0x0001)  MISSED
	float                                              _groundStartAnimPlayRate;                                   // 0x0710   (0x0004)  
	float                                              _legsPoseBeforeGroundStop;                                  // 0x0714   (0x0004)  
	ECardinalDirection                                 _movementDirectionBeforeGroundStop;                         // 0x0718   (0x0001)  
	EPrisonerMovementPace                              _movementPaceBeforeGroundStop;                              // 0x0719   (0x0001)  
	EPrisonerAnimationSet                              _animationSetBeforeGroundStop;                              // 0x071A   (0x0001)  
	bool                                               _shouldUseLUGroundStopAnimation;                            // 0x071B   (0x0001)  
	EHitReactState                                     _hitReactState;                                             // 0x071C   (0x0001)  
	unsigned char                                      UnknownData13_5[0x3];                                       // 0x071D   (0x0003)  MISSED
	float                                              _weightLoadFactor;                                          // 0x0720   (0x0004)  
	bool                                               _shouldUseJogStartForRunStart;                              // 0x0724   (0x0001)  
	bool                                               _useLocomotionAdditiveAnimations;                           // 0x0725   (0x0001)  
	unsigned char                                      UnknownData14_5[0x2];                                       // 0x0726   (0x0002)  MISSED
	float                                              _disorientation;                                            // 0x0728   (0x0004)  
	float                                              _disorientationMultiplier;                                  // 0x072C   (0x0004)  
	bool                                               _isLimping;                                                 // 0x0730   (0x0001)  
	bool                                               _shouldRotateBonesWithFirstPersonAimPitch;                  // 0x0731   (0x0001)  
	unsigned char                                      UnknownData15_5[0x6];                                       // 0x0732   (0x0006)  MISSED
	float                                              _jumpApex;                                                  // 0x0738   (0x0004)  
	float                                              _distanceToJumpApex;                                        // 0x073C   (0x0004)  
	float                                              _legsPoseBeforeJump;                                        // 0x0740   (0x0004)  
	EPrisonerMovementPace                              _movementPaceBeforeJump;                                    // 0x0744   (0x0001)  
	EPrisonerAnimationSet                              _animationSetBeforeJump;                                    // 0x0745   (0x0001)  
	bool                                               _shouldJumpGoToFallingLoop;                                 // 0x0746   (0x0001)  
	unsigned char                                      UnknownData16_5[0x1];                                       // 0x0747   (0x0001)  MISSED
	float                                              _waterImmersionDepth;                                       // 0x0748   (0x0004)  
	FVector                                            _meshOffsetWhenInWater;                                     // 0x074C   (0x000C)  
	bool                                               _wantsToDiveIn;                                             // 0x0758   (0x0001)  
	unsigned char                                      UnknownData17_5[0xD3];                                      // 0x0759   (0x00D3)  MISSED
	bool                                               _isClimbing;                                                // 0x082C   (0x0001)  
	bool                                               _isClimbingAnchoring;                                       // 0x082D   (0x0001)  
	unsigned char                                      UnknownData18_5[0x8A];                                      // 0x082E   (0x008A)  MISSED
	UAnimSequenceBase*                                 _climbAnchoringAnimation;                                   // 0x08B8   (0x0008)  
	float                                              _climbAnchoringAnimationTime;                               // 0x08C0   (0x0004)  
	bool                                               _isClimbingLadder;                                          // 0x08C4   (0x0001)  
	unsigned char                                      UnknownData19_5[0xBB];                                      // 0x08C5   (0x00BB)  MISSED
	FVector                                            _ladderClimbingRootBoneOffset;                              // 0x0980   (0x000C)  
	float                                              _ladderClimbingLoopState;                                   // 0x098C   (0x0004)  
	float                                              _ladderClimbingLoopStateForPeeking;                         // 0x0990   (0x0004)  
	float                                              _ladderClimbingPeekState;                                   // 0x0994   (0x0004)  
	bool                                               _isClimbingWindow;                                          // 0x0998   (0x0001)  
	bool                                               _isClimbingWindowAnchoring;                                 // 0x0999   (0x0001)  
	unsigned char                                      UnknownData20_5[0x6];                                       // 0x099A   (0x0006)  MISSED
	UAnimSequenceBase*                                 _windowClimbingAnchoringAnimation;                          // 0x09A0   (0x0008)  
	float                                              _windowClimbingAnchoringAnimationTime;                      // 0x09A8   (0x0004)  
	EWeaponType                                        _weaponType;                                                // 0x09AC   (0x0001)  
	bool                                               _isDedicatedServer;                                         // 0x09AD   (0x0001)  
	unsigned char                                      UnknownData21_5[0x32A];                                     // 0x09AE   (0x032A)  MISSED
	UAnimSequenceBase*                                 _itemFirstPersonUpperBodyStandIdle;                         // 0x0CD8   (0x0008)  
	UBlendSpace1D*                                     _itemFirstPersonUpperBodyStandWalk;                         // 0x0CE0   (0x0008)  
	UBlendSpace1D*                                     _itemFirstPersonUpperBodyStandWalkLimping;                  // 0x0CE8   (0x0008)  
	UBlendSpace1D*                                     _itemFirstPersonUpperBodyStandJog;                          // 0x0CF0   (0x0008)  
	UBlendSpace1D*                                     _itemFirstPersonUpperBodyStandJogLimping;                   // 0x0CF8   (0x0008)  
	UAnimSequenceBase*                                 _itemFirstPersonUpperBodyStandRun;                          // 0x0D00   (0x0008)  
	UAnimSequenceBase*                                 _itemFirstPersonUpperBodyCrouchIdle;                        // 0x0D08   (0x0008)  
	UBlendSpace1D*                                     _itemFirstPersonUpperBodyCrouchWalk;                        // 0x0D10   (0x0008)  
	UBlendSpace1D*                                     _itemFirstPersonUpperBodyCrouchWalkLimping;                 // 0x0D18   (0x0008)  
	UAnimSequenceBase*                                 _itemFirstPersonUpperBodyProneIdle;                         // 0x0D20   (0x0008)  
	UAnimSequenceBase*                                 _weaponAimingHipFirstPersonUpperBodyStandIdle;              // 0x0D28   (0x0008)  
	UBlendSpace1D*                                     _weaponAimingHipFirstPersonUpperBodyStandWalk;              // 0x0D30   (0x0008)  
	UBlendSpace1D*                                     _weaponAimingHipFirstPersonUpperBodyStandWalkLimping;       // 0x0D38   (0x0008)  
	UBlendSpace1D*                                     _weaponAimingHipFirstPersonUpperBodyStandJog;               // 0x0D40   (0x0008)  
	UBlendSpace1D*                                     _weaponAimingHipFirstPersonUpperBodyStandJogLimping;        // 0x0D48   (0x0008)  
	UAnimSequenceBase*                                 _weaponAimingHipFirstPersonUpperBodyStandRun;               // 0x0D50   (0x0008)  
	UAnimSequenceBase*                                 _weaponAimingHipFirstPersonUpperBodyCrouchIdle;             // 0x0D58   (0x0008)  
	UBlendSpace1D*                                     _weaponAimingHipFirstPersonUpperBodyCrouchWalk;             // 0x0D60   (0x0008)  
	UBlendSpace1D*                                     _weaponAimingHipFirstPersonUpperBodyCrouchWalkLimping;      // 0x0D68   (0x0008)  
	UAnimSequenceBase*                                 _weaponAimingHipFirstPersonUpperBodyProneIdle;              // 0x0D70   (0x0008)  
	bool                                               _shouldUseItemFirstPersonAimOffsets;                        // 0x0D78   (0x0001)  
	unsigned char                                      UnknownData22_5[0x7];                                       // 0x0D79   (0x0007)  MISSED
	UBlendSpace*                                       _itemFirstPersonAimOffsetStanding;                          // 0x0D80   (0x0008)  
	UBlendSpace*                                       _itemFirstPersonAimOffsetCrouching;                         // 0x0D88   (0x0008)  
	UBlendSpace*                                       _itemFirstPersonAimOffsetProne;                             // 0x0D90   (0x0008)  
	UAnimSequenceBase*                                 _rightHandCorrectionPoseStanding;                           // 0x0D98   (0x0008)  
	UAnimSequenceBase*                                 _rightHandCorrectionPoseCrouching;                          // 0x0DA0   (0x0008)  
	UAnimSequenceBase*                                 _rightHandCorrectionPoseProne;                              // 0x0DA8   (0x0008)  
	UAnimSequenceBase*                                 _rightFistCorrectionPoseStanding;                           // 0x0DB0   (0x0008)  
	UAnimSequenceBase*                                 _rightFistCorrectionPoseStandingInCombatMode;               // 0x0DB8   (0x0008)  
	UAnimSequenceBase*                                 _rightFistCorrectionPoseCrouching;                          // 0x0DC0   (0x0008)  
	UAnimSequenceBase*                                 _rightFistCorrectionPoseProne;                              // 0x0DC8   (0x0008)  
	float                                              _rightHandToIdleBlendAlphaStanding;                         // 0x0DD0   (0x0004)  
	float                                              _rightHandToIdleBlendAlphaCrouching;                        // 0x0DD4   (0x0004)  
	UAnimSequenceBase*                                 _leftHandCorrectionPoseStanding;                            // 0x0DD8   (0x0008)  
	UAnimSequenceBase*                                 _leftHandCorrectionPoseCrouching;                           // 0x0DE0   (0x0008)  
	UAnimSequenceBase*                                 _leftHandCorrectionPoseProne;                               // 0x0DE8   (0x0008)  
	UAnimSequenceBase*                                 _leftFistCorrectionPoseStanding;                            // 0x0DF0   (0x0008)  
	UAnimSequenceBase*                                 _leftFistCorrectionPoseStandingInCombatMode;                // 0x0DF8   (0x0008)  
	UAnimSequenceBase*                                 _leftFistCorrectionPoseCrouching;                           // 0x0E00   (0x0008)  
	UAnimSequenceBase*                                 _leftFistCorrectionPoseProne;                               // 0x0E08   (0x0008)  
	float                                              _leftHandToIdleBlendAlphaStanding;                          // 0x0E10   (0x0004)  
	float                                              _leftHandToIdleBlendAlphaCrouching;                         // 0x0E14   (0x0004)  
	unsigned char                                      UnknownData23_5[0x8];                                       // 0x0E18   (0x0008)  MISSED
	bool                                               _hasItemInHands;                                            // 0x0E20   (0x0001)  
	unsigned char                                      UnknownData24_5[0x3];                                       // 0x0E21   (0x0003)  MISSED
	FVector                                            _itemInHandsLeftHandLocationInRightHandSpace;               // 0x0E24   (0x000C)  
	FRotator                                           _itemInHandsLeftHandRotationInRightHandSpace;               // 0x0E30   (0x000C)  
	float                                              _itemInHandsObstructionDepth;                               // 0x0E3C   (0x0004)  
	float                                              _itemInHandsObstructionDepthSmoothed;                       // 0x0E40   (0x0004)  
	bool                                               _isItemInHandsObstructed;                                   // 0x0E44   (0x0001)  
	bool                                               _isItemInHandsCompletelyObstructed;                         // 0x0E45   (0x0001)  
	unsigned char                                      UnknownData25_5[0x2];                                       // 0x0E46   (0x0002)  MISSED
	float                                              _itemInHandsObstructionSide;                                // 0x0E48   (0x0004)  
	unsigned char                                      UnknownData26_5[0x4];                                       // 0x0E4C   (0x0004)  MISSED
	UAnimSequenceBase*                                 _itemInHandsLeftObstructedIdleFP;                           // 0x0E50   (0x0008)  
	UAnimSequenceBase*                                 _itemInHandsRightObstructedIdleFP;                          // 0x0E58   (0x0008)  
	UAnimSequenceBase*                                 _itemInHandsObstructedIdleTP;                               // 0x0E60   (0x0008)  
	UAnimSequenceBase*                                 _itemInHandsObstructedIdleProneTP;                          // 0x0E68   (0x0008)  
	bool                                               _isInCombatMode;                                            // 0x0E70   (0x0001)  
	bool                                               _shouldUseHandCorrections;                                  // 0x0E71   (0x0001)  
	bool                                               _shouldUseFistCorrections;                                  // 0x0E72   (0x0001)  
	bool                                               _overrideFingersOnlyInProne;                                // 0x0E73   (0x0001)  
	bool                                               _ignoreAimOffsets;                                          // 0x0E74   (0x0001)  
	EPrisonerMontageBlendType                          _prisonerMontageBlendType;                                  // 0x0E75   (0x0001)  
	bool                                               _isAimingBow;                                               // 0x0E76   (0x0001)  
	unsigned char                                      UnknownData27_5[0x1];                                       // 0x0E77   (0x0001)  MISSED
	float                                              _bowArmsShakeValue;                                         // 0x0E78   (0x0004)  
	bool                                               _isScoping;                                                 // 0x0E7C   (0x0001)  
	unsigned char                                      UnknownData28_5[0x53];                                      // 0x0E7D   (0x0053)  MISSED
	TSet<UClass*>                                      _responseIdleClassReferences;                               // 0x0ED0   (0x0050)  
	unsigned char                                      UnknownData29_5[0x30];                                      // 0x0F20   (0x0030)  MISSED
	bool                                               _shouldUpperBodyBeUsedAsFullBodyInIdle;                     // 0x0F50   (0x0001)  
	bool                                               _isPlayingInstrument;                                       // 0x0F51   (0x0001)  
	unsigned char                                      UnknownData30_5[0x6];                                       // 0x0F52   (0x0006)  MISSED
	UAnimSequenceBase*                                 _playingInstrumentIdleAnimation;                            // 0x0F58   (0x0008)  
	UAnimSequenceBase*                                 _playingInstrumentPlayAnimation;                            // 0x0F60   (0x0008)  
	EPlayingInstrumentState                            _playingInstrumentState;                                    // 0x0F68   (0x0001)  
	bool                                               _isCarryingItem;                                            // 0x0F69   (0x0001)  
	unsigned char                                      UnknownData31_5[0x6];                                       // 0x0F6A   (0x0006)  MISSED
	UAnimSequenceBase*                                 _carryingItemIdleFPAnimation;                               // 0x0F70   (0x0008)  
	UAnimSequenceBase*                                 _carryingItemIdleTPAnimation;                               // 0x0F78   (0x0008)  
	ECarryingItemState                                 _carryingItemState;                                         // 0x0F80   (0x0001)  
	bool                                               _isMounted;                                                 // 0x0F81   (0x0001)  
	unsigned char                                      UnknownData32_5[0x6];                                       // 0x0F82   (0x0006)  MISSED
	UAnimSequenceBase*                                 _mountedAnimation;                                          // 0x0F88   (0x0008)  
	bool                                               _isVehicleDriver;                                           // 0x0F90   (0x0001)  
	unsigned char                                      UnknownData33_5[0x7];                                       // 0x0F91   (0x0007)  MISSED
	UBlendSpace*                                       _vehicleDriverForwardIdleAnimation;                         // 0x0F98   (0x0008)  
	UAnimSequenceBase*                                 _vehicleDriverForwardSteeringAnimation;                     // 0x0FA0   (0x0008)  
	UAnimSequenceBase*                                 _vehicleDriverForwardSteeringAnimationFP;                   // 0x0FA8   (0x0008)  
	UBlendSpace*                                       _vehicleDriverReverseIdleAnimation;                         // 0x0FB0   (0x0008)  
	UAnimSequenceBase*                                 _vehicleDriverReverseSteeringAnimation;                     // 0x0FB8   (0x0008)  
	UAnimSequenceBase*                                 _vehicleDriverReverseSteeringAnimationFP;                   // 0x0FC0   (0x0008)  
	UBlendSpace*                                       _vehiclePassengerIdleAnimation;                             // 0x0FC8   (0x0008)  
	float                                              _vehicleSpeed;                                              // 0x0FD0   (0x0004)  
	float                                              _vehicleSpeedKph;                                           // 0x0FD4   (0x0004)  
	float                                              _vehicleBumpiness;                                          // 0x0FD8   (0x0004)  
	float                                              _vehicleDriverSteeringAnimationTime;                        // 0x0FDC   (0x0004)  
	float                                              _vehicleDriverSteeringAnimationTimeInterpSpeed;             // 0x0FE0   (0x0004)  
	float                                              _vehicleThrottleAmount;                                     // 0x0FE4   (0x0004)  
	float                                              _vehicleBrakeAmount;                                        // 0x0FE8   (0x0004)  
	float                                              _vehicleHandbrakeAmount;                                    // 0x0FEC   (0x0004)  
	float                                              _vehicleSteerAmount;                                        // 0x0FF0   (0x0004)  
	bool                                               _isSledgeAcceleratingForward;                               // 0x0FF4   (0x0001)  
	bool                                               _isSledgeAcceleratingBackward;                              // 0x0FF5   (0x0001)  
	unsigned char                                      UnknownData34_5[0x2];                                       // 0x0FF6   (0x0002)  MISSED
	float                                              _sledgeSlidingThresholdSpeed;                               // 0x0FF8   (0x0004)  
	bool                                               _isSledgeSliding;                                           // 0x0FFC   (0x0001)  
	unsigned char                                      UnknownData35_5[0x3];                                       // 0x0FFD   (0x0003)  MISSED
	UAnimSequenceBase*                                 _bowArmsShakeAnimation;                                     // 0x1000   (0x0008)  
	float                                              _weaponBreathFactor;                                        // 0x1008   (0x0004)  
	float                                              _weaponAimDownTheSightsStillBlendFactor;                    // 0x100C   (0x0004)  
	bool                                               _areHandsBound;                                             // 0x1010   (0x0001)  
	unsigned char                                      UnknownData36_5[0x7];                                       // 0x1011   (0x0007)  MISSED
	UAnimSequenceBase*                                 _handsBoundIdleFPAnimation;                                 // 0x1018   (0x0008)  
	UAnimSequenceBase*                                 _handsBoundIdleTPAnimation;                                 // 0x1020   (0x0008)  
	bool                                               _isResting;                                                 // 0x1028   (0x0001)  
	unsigned char                                      UnknownData37_5[0x7];                                       // 0x1029   (0x0007)  MISSED
	UAnimSequenceBase*                                 _restingAnimation;                                          // 0x1030   (0x0008)  
	float                                              _restingFeetOffset;                                         // 0x1038   (0x0004)  
	float                                              _cameraToActorRotationDeltaYaw;                             // 0x103C   (0x0004)  
	float                                              _cameraToActorRotationDeltaPitch;                           // 0x1040   (0x0004)  
	EVehicleWeaponAimingStance                         _vehicleWeaponAimingStance;                                 // 0x1044   (0x0001)  
	bool                                               _useMountedFirstPersonWeaponAimingParameters;               // 0x1045   (0x0001)  
	unsigned char                                      UnknownData38_5[0x2];                                       // 0x1046   (0x0002)  MISSED
	FVector                                            _vehicleWAPLocationOffsetDefaultStanceFP;                   // 0x1048   (0x000C)  
	FVector                                            _vehicleWAPLocationOffsetLeaningStanceFP;                   // 0x1054   (0x000C)  
	bool                                               _useMountedThirdPersonWeaponAimingParameters;               // 0x1060   (0x0001)  
	unsigned char                                      UnknownData39_5[0x7];                                       // 0x1061   (0x0007)  MISSED
	UBlendSpace*                                       _vehicleWAPAimOffsetTP;                                     // 0x1068   (0x0008)  
	bool                                               _useVehicleWAPAimOffsetTP;                                  // 0x1070   (0x0001)  
	unsigned char                                      UnknownData40_5[0x7];                                       // 0x1071   (0x0007)  MISSED
	UBlendSpace*                                       _vehicleWAPAimOffsetDefaultStanceTP;                        // 0x1078   (0x0008)  
	bool                                               _useVehicleWAPAimOffsetDefaultStanceTP;                     // 0x1080   (0x0001)  
	unsigned char                                      UnknownData41_5[0x7];                                       // 0x1081   (0x0007)  MISSED
	UBlendSpace*                                       _vehicleWAPAimOffsetLeaningStanceTP;                        // 0x1088   (0x0008)  
	bool                                               _useVehicleWAPAimOffsetLeaningStanceTP;                     // 0x1090   (0x0001)  
	bool                                               _useVehicleWAPUpperBodyIdleTP;                              // 0x1091   (0x0001)  
	unsigned char                                      UnknownData42_5[0x6];                                       // 0x1092   (0x0006)  MISSED
	UAnimSequenceBase*                                 _vehicleWAPUpperBodyIdleRelaxedTP;                          // 0x1098   (0x0008)  
	UAnimSequenceBase*                                 _vehicleWAPUpperBodyIdleAimingTP;                           // 0x10A0   (0x0008)  
	bool                                               _useVehicleWAPLowerBodyIdleTP;                              // 0x10A8   (0x0001)  
	unsigned char                                      UnknownData43_5[0x7];                                       // 0x10A9   (0x0007)  MISSED
	UAnimSequenceBase*                                 _vehicleWAPLowerBodyIdleRelaxedTP;                          // 0x10B0   (0x0008)  
	UAnimSequenceBase*                                 _vehicleWAPLowerBodyIdleAimingTP;                           // 0x10B8   (0x0008)  
	UAnimSequenceBase*                                 _vehicleWAPLowerBodyIdleRelaxedDefaultTP;                   // 0x10C0   (0x0008)  
	UAnimSequenceBase*                                 _vehicleWAPLowerBodyIdleAimingDefaultTP;                    // 0x10C8   (0x0008)  
	UAnimSequenceBase*                                 _vehicleWAPLowerBodyIdleRelaxedLeaningTP;                   // 0x10D0   (0x0008)  
	UAnimSequenceBase*                                 _vehicleWAPLowerBodyIdleAimingLeaningTP;                    // 0x10D8   (0x0008)  
	bool                                               _isPlayingWAPStanceTransitionMontage;                       // 0x10E0   (0x0001)  
	bool                                               _isActivelyFishing;                                         // 0x10E1   (0x0001)  
	bool                                               _isBaitingFish;                                             // 0x10E2   (0x0001)  
	bool                                               _shouldUseGrappleAnimInstance;                              // 0x10E3   (0x0001)  
	bool                                               _useWeaponAimingDownTheSightsZeroRangeBlendSpace;           // 0x10E4   (0x0001)  
	unsigned char                                      UnknownData44_5[0x3];                                       // 0x10E5   (0x0003)  MISSED
	UBlendSpace1D*                                     _weaponAimingDownTheSightsZeroRangeBlendSpace;              // 0x10E8   (0x0008)  
	float                                              _weaponZeroRange;                                           // 0x10F0   (0x0004)  
	bool                                               _isInPhotoMode;                                             // 0x10F4   (0x0001)  
	bool                                               _hasHighHeels;                                              // 0x10F5   (0x0001)  
	unsigned char                                      UnknownData45_5[0xA];                                       // 0x10F6   (0x000A)  MISSED
	FVector                                            _grappledWallOffsetVector;                                  // 0x1100   (0x000C)  
	unsigned char                                      UnknownData46_6[0x4];                                       // 0x110C   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.PrisonerAnimInstance.TakePenis
	void TakePenis();                                                                                                        // [0x2381520] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.PrisonerAnimInstance.ReleasePenis
	void ReleasePenis();                                                                                                     // [0x2381500] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.PrisonerAnimInstance.OnIdleStateExit
	void OnIdleStateExit(FAnimNode_StateMachine& Machine, int32_t prevStateIndex, int32_t nextStateIndex);                   // [0x23811a0] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.PrisonerAnimInstance.OnIdleStateEntry
	void OnIdleStateEntry(FAnimNode_StateMachine& Machine, int32_t prevStateIndex, int32_t nextStateIndex);                  // [0x2380e40] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.PrisonerAnimInstance.IsCourseAngleSupportedByStartAndStopAnimations
	bool IsCourseAngleSupportedByStartAndStopAnimations(float courseAngle);                                                  // [0x2380db0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.IsAnyStanceTransitionActive
	bool IsAnyStanceTransitionActive();                                                                                      // [0x2380d80] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PrisonerAnimInstance.GetWeaponRelatedIdleStateAnimationPlayRateOnGameThread
	float GetWeaponRelatedIdleStateAnimationPlayRateOnGameThread();                                                          // [0x2380d50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetWeaponAnimationPoseOnWorkerThread
	UAnimSequenceBase* GetWeaponAnimationPoseOnWorkerThread(EWeaponAnimationPose animationPose, EPrisonerStance stance);     // [0x2380c70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetWeaponAimOffsetOnGameThread
	UBlendSpace* GetWeaponAimOffsetOnGameThread(EPrisonerAimOffsetType prisonerAimOffsetType);                               // [0x2380b80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetWeaponAimingNoisePlayRateOnGameThread
	float GetWeaponAimingNoisePlayRateOnGameThread();                                                                        // [0x2380c40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetWeaponAimingNoiseBlendValueOnGameThread
	float GetWeaponAimingNoiseBlendValueOnGameThread();                                                                      // [0x2380c10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetVehicleThrottleAmount
	float GetVehicleThrottleAmount();                                                                                        // [0x2380b50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetVehicleSteerAmount
	float GetVehicleSteerAmount();                                                                                           // [0x2380b20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetVehicleSpeedKph
	float GetVehicleSpeedKph();                                                                                              // [0x2380af0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetVehicleSpeed
	float GetVehicleSpeed();                                                                                                 // [0x2380ac0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetVehiclePassengerIdleAnimation
	UBlendSpace* GetVehiclePassengerIdleAnimation();                                                                         // [0x2380a90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetVehicleHandbrakeAmount
	float GetVehicleHandbrakeAmount();                                                                                       // [0x2380a60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetVehicleDriverForwardIdleAnimation
	UBlendSpace* GetVehicleDriverForwardIdleAnimation();                                                                     // [0x2380a30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetVehicleBumpiness
	float GetVehicleBumpiness();                                                                                             // [0x2380a00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetVehicleBrakeAmount
	float GetVehicleBrakeAmount();                                                                                           // [0x23809d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetStandLookBlendAlpha
	float GetStandLookBlendAlpha();                                                                                          // [0x23809a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetPlayRateFromSpeed
	float GetPlayRateFromSpeed(float speedInAnimation, float MinPlayRate, float MaxPlayRate);                                // [0x2380880] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetPenisSize
	float GetPenisSize();                                                                                                    // [0x2380850] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetLocomotionStateWeight
	float GetLocomotionStateWeight(EPrisonerAnimationState State);                                                           // [0x23807c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetLeanBlendWeights
	void GetLeanBlendWeights(float& Left, float& Right, float Multiplier, UCurveFloat* strengthBySpeedCurve);                // [0x2380640] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetKnownCurveValueOnWorkerThread
	float GetKnownCurveValueOnWorkerThread(EPrisonerAnimationCurve Curve);                                                   // [0x23805b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetIsVehicleDriver
	bool GetIsVehicleDriver();                                                                                               // [0x2380580] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetInPlaceTurningElapsedTimeRight
	float GetInPlaceTurningElapsedTimeRight(EPrisonerStance stance);                                                         // [0x23804f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetInPlaceTurningElapsedTimeLeft
	float GetInPlaceTurningElapsedTimeLeft(EPrisonerStance stance);                                                          // [0x2380460] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetInPlaceTurningDirectionBlendAlpha
	float GetInPlaceTurningDirectionBlendAlpha(EPrisonerStance stance);                                                      // [0x23803d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetInPlaceTurningBlendAlpha
	float GetInPlaceTurningBlendAlpha(EPrisonerStance stance);                                                               // [0x2380340] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetIKLegsRootOffsetVectorFromCardinalDirection
	FVector GetIKLegsRootOffsetVectorFromCardinalDirection(ECardinalDirection Value);                                        // [0x23802a0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetFacialExpressionBlendWeightOnWorkerThread
	float GetFacialExpressionBlendWeightOnWorkerThread(EPrisonerFacialExpression facialExpression);                          // [0x2380210] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetFacialExpressionBlendWeightOnGameThread
	float GetFacialExpressionBlendWeightOnGameThread(EPrisonerFacialExpression facialExpression);                            // [0x2380180] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetCurrentLocomotionStateElapsedTime
	float GetCurrentLocomotionStateElapsedTime();                                                                            // [0x2380150] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetCurrentLocomotionState
	EPrisonerAnimationState GetCurrentLocomotionState();                                                                     // [0x2380120] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetCardinalDirectionFromCourseAngle
	ECardinalDirection GetCardinalDirectionFromCourseAngle(float Value);                                                     // [0x2380090] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetBoxingTurnAngle
	float GetBoxingTurnAngle();                                                                                              // [0x2303ed0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetBoxingInPlaceTurningElapsedTimeRight
	float GetBoxingInPlaceTurningElapsedTimeRight();                                                                         // [0x2380060] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetBoxingInPlaceTurningElapsedTimeLeft
	float GetBoxingInPlaceTurningElapsedTimeLeft();                                                                          // [0x2380030] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetBoxingInPlaceTurningDirectionBlendAlpha
	float GetBoxingInPlaceTurningDirectionBlendAlpha();                                                                      // [0x2380000] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetBoxingInPlaceTurningBlendAlpha
	float GetBoxingInPlaceTurningBlendAlpha();                                                                               // [0x237ffd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.GetBowArmsShakeAnimationOnGameThread
	UAnimSequenceBase* GetBowArmsShakeAnimationOnGameThread(EPrisonerStance stance);                                         // [0x237ff40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerAnimInstance.FindTimeBeforeJumpApex
	float FindTimeBeforeJumpApex(UAnimSequenceBase* AnimSequence, float distanceToApex);                                     // [0x237fe70] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/ConZ.PrisonerAnimInstance.FindTimeAtStoppingDistance
	float FindTimeAtStoppingDistance(UAnimSequenceBase* AnimSequence, float stoppingDistance);                               // [0x237fda0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/ConZ.PrisonerAnimInstance.FindTimeAfterJumpApex
	float FindTimeAfterJumpApex(UAnimSequenceBase* AnimSequence, float distanceToApex);                                      // [0x237fcd0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/ConZ.PrisonerAnimInstance.DeactivateFacialExpressionOnGameThread
	void DeactivateFacialExpressionOnGameThread(EPrisonerFacialExpression facialExpression);                                 // [0x237fc50] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PrisonerAnimInstance.DeactivateAllFacialExpressionsOnGameThread
	void DeactivateAllFacialExpressionsOnGameThread();                                                                       // [0x237fc30] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PrisonerAnimInstance.Blink
	void Blink();                                                                                                            // [0x237fc10] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PrisonerAnimInstance.AnimNotify_TakePenis
	void AnimNotify_TakePenis();                                                                                             // [0x237fbf0] Native|Event|Protected|BlueprintEvent 
	// Function /Script/ConZ.PrisonerAnimInstance.AnimNotify_TakeItemInHands
	void AnimNotify_TakeItemInHands(UAnimNotify* Notify);                                                                    // [0x237fb60] Final|Native|Protected 
	// Function /Script/ConZ.PrisonerAnimInstance.AnimNotify_RFootDown
	void AnimNotify_RFootDown();                                                                                             // [0x237fa90] Native|Event|Protected|BlueprintEvent 
	// Function /Script/ConZ.PrisonerAnimInstance.AnimNotify_RemoveItemFromHands
	void AnimNotify_RemoveItemFromHands(UAnimNotify* Notify);                                                                // [0x237fad0] Final|Native|Protected 
	// Function /Script/ConZ.PrisonerAnimInstance.AnimNotify_ReleasePenis
	void AnimNotify_ReleasePenis();                                                                                          // [0x237fab0] Native|Event|Protected|BlueprintEvent 
	// Function /Script/ConZ.PrisonerAnimInstance.AnimNotify_LFootDown
	void AnimNotify_LFootDown();                                                                                             // [0x237fa90] Native|Event|Protected|BlueprintEvent 
	// Function /Script/ConZ.PrisonerAnimInstance.AnimNotify_EnableCapsuleCollision
	void AnimNotify_EnableCapsuleCollision(UAnimNotify* Notify);                                                             // [0x237fa00] Final|Native|Protected 
	// Function /Script/ConZ.PrisonerAnimInstance.AnimNotify_DisableCapsuleCollision
	void AnimNotify_DisableCapsuleCollision(UAnimNotify* Notify);                                                            // [0x237f970] Final|Native|Protected 
	// Function /Script/ConZ.PrisonerAnimInstance.ActivateFacialExpressionOnGameThread
	void ActivateFacialExpressionOnGameThread(EPrisonerFacialExpression facialExpression, float BlendInDuration, float Duration, float BlendOutDuration, float blendWeightMultiplier); // [0x237f7c0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.PrisonerAnimInstance_Aerial
/// Size: 0x0070 (0x0002C0 - 0x000330)
class UPrisonerAnimInstance_Aerial : public UAnimInstance
{ 
public:
	EPrisonerFallingPose                               _upcomingPose;                                              // 0x02B8   (0x0001)  
	EPrisonerFallingPose                               _previousPose;                                              // 0x02B9   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x02BA   (0x0006)  MISSED
	UAnimSequence*                                     _blendAnimationOverride;                                    // 0x02C0   (0x0008)  
	float                                              _blendAnimationOverrideTime;                                // 0x02C8   (0x0004)  
	float                                              _poseBlendWeight;                                           // 0x02CC   (0x0004)  
	FVector2D                                          _fallingControl;                                            // 0x02D0   (0x0008)  
	float                                              _fallSpeed;                                                 // 0x02D8   (0x0004)  
	float                                              _yawRotationRate;                                           // 0x02DC   (0x0004)  
	bool                                               _isInFirstPersonView;                                       // 0x02E0   (0x0001)  
	bool                                               _hasHandBondage;                                            // 0x02E1   (0x0001)  
	bool                                               _jumpingAfterApex;                                          // 0x02E2   (0x0001)  
	bool                                               _shouldUsePoseSnapshot;                                     // 0x02E3   (0x0001)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x02E4   (0x0004)  MISSED
	UAnimSequenceBase*                                 _handsBoundIdleFPAnimation;                                 // 0x02E8   (0x0008)  
	UAnimSequenceBase*                                 _handsBoundIdleTPAnimation;                                 // 0x02F0   (0x0008)  
	float                                              _distanceToJumpApexNormalized;                              // 0x02F8   (0x0004)  
	float                                              _legsPoseBeforeJump;                                        // 0x02FC   (0x0004)  
	EPrisonerMovementPace                              _movementPaceBeforeJump;                                    // 0x0300   (0x0001)  
	unsigned char                                      UnknownData02_6[0x2F];                                      // 0x0301   (0x002F)  MISSED


	/// Functions
	// Function /Script/ConZ.PrisonerAnimInstance_Aerial.FindJumpTime
	float FindJumpTime(UAnimSequenceBase* AnimSequence, float distanceToApex, bool afterApex);                               // [0x23850e0] Final|Native|Static|Private|BlueprintCallable|BlueprintPure 
};

/// Class /Script/ConZ.PrisonerAnimInstance_Airplane
/// Size: 0x00E0 (0x0002C0 - 0x0003A0)
class UPrisonerAnimInstance_Airplane : public UAnimInstance
{ 
public:
	bool                                               _isDriver;                                                  // 0x02B8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x02B9   (0x0003)  MISSED
	float                                              _pitchAmount;                                               // 0x02BC   (0x0004)  
	float                                              _rollAmount;                                                // 0x02C0   (0x0004)  
	float                                              _yawAmount;                                                 // 0x02C4   (0x0004)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x02C8   (0x0008)  MISSED
	FTransform                                         _throttleTransform;                                         // 0x02D0   (0x0030)  
	FTransform                                         _leftPedalTransform;                                        // 0x0300   (0x0030)  
	FTransform                                         _rightPedalTransform;                                       // 0x0330   (0x0030)  
	FTransform                                         _stickTransform;                                            // 0x0360   (0x0030)  
	UBlendSpace*                                       _driverIdleAnimation;                                       // 0x0390   (0x0008)  
	UBlendSpace*                                       _passengerIdleAnimation;                                    // 0x0398   (0x0008)  
};

/// Class /Script/ConZ.PrisonerAnimInstance_Bike
/// Size: 0x0190 (0x0002C0 - 0x000450)
class UPrisonerAnimInstance_Bike : public UAnimInstance
{ 
public:
	float                                              _bikeSpeed;                                                 // 0x02B8   (0x0004)  
	float                                              _bikeSpeedKmh;                                              // 0x02BC   (0x0004)  
	float                                              _steerAmount;                                               // 0x02C0   (0x0004)  
	float                                              _brakeAmount;                                               // 0x02C4   (0x0004)  
	float                                              _throttleAmount;                                            // 0x02C8   (0x0004)  
	bool                                               _isInCombatMode;                                            // 0x02CC   (0x0001)  
	bool                                               _isDriver;                                                  // 0x02CD   (0x0001)  
	bool                                               _isBicycle;                                                 // 0x02CE   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x02CF   (0x0001)  MISSED
	float                                              _vehicleRoll;                                               // 0x02D0   (0x0004)  
	float                                              _lerpedBrakeThrottle;                                       // 0x02D4   (0x0004)  
	float                                              _inAirTimer;                                                // 0x02D8   (0x0004)  
	float                                              _driverIdlePlayRate;                                        // 0x02DC   (0x0004)  
	bool                                               _isStartingEngine;                                          // 0x02E0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x02E1   (0x0007)  MISSED
	UBlendSpace*                                       _driverIdleAnimation;                                       // 0x02E8   (0x0008)  
	UBlendSpace*                                       _driverReverseIdleAnimation;                                // 0x02F0   (0x0008)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x02F8   (0x0008)  MISSED
	FTransform                                         _driverLHandleTransform;                                    // 0x0300   (0x0030)  
	FTransform                                         _driverRHandleTransform;                                    // 0x0330   (0x0030)  
	FTransform                                         _driverReverseSeatHandTransform;                            // 0x0360   (0x0030)  
	FTransform                                         _driverLFootRestTransform;                                  // 0x0390   (0x0030)  
	FTransform                                         _driverRFootRestTransform;                                  // 0x03C0   (0x0030)  
	UBlendSpace*                                       _passengerIdleAnimation;                                    // 0x03F0   (0x0008)  
	bool                                               _useVehicleWAPLowerBodyIdleTP;                              // 0x03F8   (0x0001)  
	unsigned char                                      UnknownData03_5[0x7];                                       // 0x03F9   (0x0007)  MISSED
	UAnimSequenceBase*                                 _vehicleWAPLowerBodyIdleAimingTP;                           // 0x0400   (0x0008)  
	UAnimSequenceBase*                                 _vehicleWAPLowerBodyIdleRelaxedTP;                          // 0x0408   (0x0008)  
	UAnimSequence*                                     _startEngineStartAnimation;                                 // 0x0410   (0x0008)  
	UAnimSequence*                                     _startEngineLoopAnimation;                                  // 0x0418   (0x0008)  
	UAnimSequence*                                     _startEngineLongLoopAnimation;                              // 0x0420   (0x0008)  
	UAnimSequence*                                     _startEngineEndAnimation;                                   // 0x0428   (0x0008)  
	UAnimSequence*                                     _standUpStartAnimation;                                     // 0x0430   (0x0008)  
	UAnimSequence*                                     _standUpLoopAnimation;                                      // 0x0438   (0x0008)  
	UAnimSequence*                                     _standUpEndAnimation;                                       // 0x0440   (0x0008)  
	UAimOffsetBlendSpace*                              _turnAimOffset;                                             // 0x0448   (0x0008)  
};

/// Class /Script/ConZ.PrisonerAnimInstance_Boat
/// Size: 0x0170 (0x0002C0 - 0x000430)
class UPrisonerAnimInstance_Boat : public UAnimInstance
{ 
public:
	float                                              _vehicleSpeed;                                              // 0x02B8   (0x0004)  
	float                                              _vehicleSpeedKph;                                           // 0x02BC   (0x0004)  
	bool                                               _isVehicleDriver;                                           // 0x02C0   (0x0001)  
	bool                                               _isRowing;                                                  // 0x02C1   (0x0001)  
	bool                                               _isPaddling;                                                // 0x02C2   (0x0001)  
	bool                                               _isMotorPropelled;                                          // 0x02C3   (0x0001)  
	bool                                               _isSailing;                                                 // 0x02C4   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x02C5   (0x0003)  MISSED
	float                                              _sailsDeployAmount;                                         // 0x02C8   (0x0004)  
	float                                              _sailsSteerAmount;                                          // 0x02CC   (0x0004)  
	float                                              _sailsTurnAmount;                                           // 0x02D0   (0x0004)  
	int32_t                                            _paddleCounter;                                             // 0x02D4   (0x0004)  
	float                                              _vehicleThrottleAmount;                                     // 0x02D8   (0x0004)  
	float                                              _vehicleBrakeAmount;                                        // 0x02DC   (0x0004)  
	float                                              _vehicleSteerAmount;                                        // 0x02E0   (0x0004)  
	int32_t                                            _numPaddleSwingsInOneHand;                                  // 0x02E4   (0x0004)  
	UBlendSpace*                                       _vehicleDriverForwardIdleAnimation;                         // 0x02E8   (0x0008)  
	UBlendSpace*                                       _vehiclePassengerIdleAnimation;                             // 0x02F0   (0x0008)  
	UBlendSpace*                                       _boatDriverPaddleLAnimation;                                // 0x02F8   (0x0008)  
	UBlendSpace*                                       _boatDriverPaddleRAnimation;                                // 0x0300   (0x0008)  
	UAnimSequence*                                     _boatDriverPaddleLToRAnimation;                             // 0x0308   (0x0008)  
	UAnimSequence*                                     _boatDriverPaddleRToLAnimation;                             // 0x0310   (0x0008)  
	float                                              _paddleInHand;                                              // 0x0318   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x031C   (0x0004)  MISSED
	FTransform                                         _motorHandleSocketTransform;                                // 0x0320   (0x0030)  
	FTransform                                         _sailsHandleSocketTransform;                                // 0x0350   (0x0030)  
	FTransform                                         _rudderSocketTransform;                                     // 0x0380   (0x0030)  
	float                                              _maxSpineLeanAngle;                                         // 0x03B0   (0x0004)  
	float                                              _spineLeanAmountForHandlingMotor;                           // 0x03B4   (0x0004)  
	EPrisonerMovementPace                              _movementPace;                                              // 0x03B8   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x03B9   (0x0003)  MISSED
	float                                              _normalizedMovementPace;                                    // 0x03BC   (0x0004)  
	float                                              _playRateFromMovementPace;                                  // 0x03C0   (0x0004)  
	EEngineBlockState                                  _engineState;                                               // 0x03C4   (0x0001)  
	bool                                               _useVehicleWAPLowerBodyIdleTP;                              // 0x03C5   (0x0001)  
	unsigned char                                      UnknownData03_5[0x2];                                       // 0x03C6   (0x0002)  MISSED
	UAnimSequenceBase*                                 _vehicleWAPLowerBodyIdleAimingTP;                           // 0x03C8   (0x0008)  
	UAnimSequenceBase*                                 _vehicleWAPLowerBodyIdleRelaxedTP;                          // 0x03D0   (0x0008)  
	bool                                               _isInCombatMode;                                            // 0x03D8   (0x0001)  
	unsigned char                                      UnknownData04_5[0x7];                                       // 0x03D9   (0x0007)  MISSED
	UAnimSequence*                                     _startEngineStartAnimation;                                 // 0x03E0   (0x0008)  
	UAnimSequence*                                     _startEngineLoopAnimation;                                  // 0x03E8   (0x0008)  
	UAnimSequence*                                     _startEngineLongLoopAnimation;                              // 0x03F0   (0x0008)  
	UAnimSequence*                                     _startEngineEndAnimation;                                   // 0x03F8   (0x0008)  
	unsigned char                                      UnknownData05_6[0x30];                                      // 0x0400   (0x0030)  MISSED
};

/// Class /Script/ConZ.PrisonerAnimInstance_FemaleCorrections
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UPrisonerAnimInstance_FemaleCorrections : public UAnimInstance
{ 
public:
	FName                                              _correctionsDisabledCurveName;                              // 0x02B8   (0x0008)  
	float                                              _correctionsDisabledCurveValue;                             // 0x02C0   (0x0004)  
	float                                              _correctionsDisabledCurveValueInverse;                      // 0x02C4   (0x0004)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x02C8   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerAnimInstance_Fishing
/// Size: 0x0020 (0x0002C0 - 0x0002E0)
class UPrisonerAnimInstance_Fishing : public UAnimInstance
{ 
public:
	float                                              _aimOffsetYaw;                                              // 0x02B8   (0x0004)  
	float                                              _aimOffsetPitch;                                            // 0x02BC   (0x0004)  
	bool                                               _isActivelyFishing;                                         // 0x02C0   (0x0001)  
	bool                                               _castingFinished;                                           // 0x02C1   (0x0001)  
	bool                                               _floaterHitWaterSurface;                                    // 0x02C2   (0x0001)  
	bool                                               _fishIsHooked;                                              // 0x02C3   (0x0001)  
	EPrisonerStance                                    _stance;                                                    // 0x02C4   (0x0001)  
	bool                                               _isInFirstPersonView;                                       // 0x02C5   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x02C6   (0x0002)  MISSED
	FRotator                                           _armsLagRotation;                                           // 0x02C8   (0x000C)  
	float                                              _armsLagPitch;                                              // 0x02D4   (0x0004)  
	float                                              _armsLagYaw;                                                // 0x02D8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x02DC   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerAnimInstance_Grappled
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UPrisonerAnimInstance_Grappled : public UAnimInstance
{ 
public:
};

/// Class /Script/ConZ.PrisonerAnimInstance_Parachute
/// Size: 0x0020 (0x0002C0 - 0x0002E0)
class UPrisonerAnimInstance_Parachute : public UAnimInstance
{ 
public:
	UAnimSequence*                                     _defaultOpeningAnimation;                                   // 0x02B8   (0x0008)  
	UAnimSequence*                                     _openingAnimation;                                          // 0x02C0   (0x0008)  
	float                                              _openingAnimationTime;                                      // 0x02C8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x14];                                      // 0x02CC   (0x0014)  MISSED
};

/// Class /Script/ConZ.PrisonerAnimInstance_PrisonerCreation
/// Size: 0x0020 (0x0002C0 - 0x0002E0)
class UPrisonerAnimInstance_PrisonerCreation : public UAnimInstance
{ 
public:
	EConZGender                                        _gender;                                                    // 0x02B8   (0x0001)  
	bool                                               _isCameraFocusedOnFace;                                     // 0x02B9   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x02BA   (0x0006)  MISSED
	UAnimMontage*                                      _femaleCloseUpIdle;                                         // 0x02C0   (0x0008)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x02C8   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerAnimInstance_VehicleBase
/// Size: 0x0090 (0x001110 - 0x0011A0)
class UPrisonerAnimInstance_VehicleBase : public UPrisonerAnimInstance
{ 
public:
	bool                                               _isDriver;                                                  // 0x1110   (0x0001)  
	bool                                               _isPushing;                                                 // 0x1111   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x1112   (0x0006)  MISSED
	UBlendSpace*                                       _mountedBlendspace;                                         // 0x1118   (0x0008)  
	float                                              _maxPushingSpeedKmh;                                        // 0x1120   (0x0004)  
	unsigned char                                      UnknownData01_5[0xC];                                       // 0x1124   (0x000C)  MISSED
	FTransform                                         _leftHandIKTransform;                                       // 0x1130   (0x0030)  
	FTransform                                         _rightHandIKTransform;                                      // 0x1160   (0x0030)  
	bool                                               _hasDashboard;                                              // 0x1190   (0x0001)  
	unsigned char                                      UnknownData02_6[0xF];                                       // 0x1191   (0x000F)  MISSED
};

/// Class /Script/ConZ.PrisonerAnimInstance_WeightLoad
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UPrisonerAnimInstance_WeightLoad : public UAnimInstance
{ 
public:
};

/// Class /Script/ConZ.PrisonerAnimInstance_WheelBarrow
/// Size: 0x00E0 (0x0002C0 - 0x0003A0)
class UPrisonerAnimInstance_WheelBarrow : public UAnimInstance
{ 
public:
	float                                              _wheelBarrowSpeed;                                          // 0x02B8   (0x0004)  
	float                                              _wheelBarrowSpeedKph;                                       // 0x02BC   (0x0004)  
	float                                              _wheelBarrowBumpiness;                                      // 0x02C0   (0x0004)  
	float                                              _wheelBarrowRollAngleRelativeToDriver;                      // 0x02C4   (0x0004)  
	bool                                               _isInCombatMode;                                            // 0x02C8   (0x0001)  
	bool                                               _isLimping;                                                 // 0x02C9   (0x0001)  
	bool                                               _isDriver;                                                  // 0x02CA   (0x0001)  
	unsigned char                                      UnknownData00_5[0x5];                                       // 0x02CB   (0x0005)  MISSED
	UAnimSequenceBase*                                 _driverIdleAnimation;                                       // 0x02D0   (0x0008)  
	UBlendSpace*                                       _driverWalkJogAnimation;                                    // 0x02D8   (0x0008)  
	UBlendSpace*                                       _driverWalkJogLimpingAnimation;                             // 0x02E0   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x02E8   (0x0008)  MISSED
	FTransform                                         _driverLHandGripTransform;                                  // 0x02F0   (0x0030)  
	FTransform                                         _driverRHandGripTransform;                                  // 0x0320   (0x0030)  
	float                                              _driverSpineBendAngle;                                      // 0x0350   (0x0004)  
	float                                              _driverSpineBendScale;                                      // 0x0354   (0x0004)  
	float                                              _driverSpineBendAngleInterpSpeed;                           // 0x0358   (0x0004)  
	float                                              _driverSpineLeanAngle;                                      // 0x035C   (0x0004)  
	float                                              _driverSpineLeanScale;                                      // 0x0360   (0x0004)  
	float                                              _driverSpineLeanAngleInterpSpeed;                           // 0x0364   (0x0004)  
	bool                                               _driverHasFloor;                                            // 0x0368   (0x0001)  
	bool                                               _isDriverMoving;                                            // 0x0369   (0x0001)  
	unsigned char                                      UnknownData02_5[0x2];                                       // 0x036A   (0x0002)  MISSED
	float                                              _driverSpeed;                                               // 0x036C   (0x0004)  
	float                                              _driverCourseAngle;                                         // 0x0370   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x0374   (0x0004)  MISSED
	UBlendSpace*                                       _passengerIdleAnimation;                                    // 0x0378   (0x0008)  
	bool                                               _useVehicleWAPLowerBodyIdleTP;                              // 0x0380   (0x0001)  
	unsigned char                                      UnknownData04_5[0x7];                                       // 0x0381   (0x0007)  MISSED
	UAnimSequenceBase*                                 _vehicleWAPLowerBodyIdleAimingTP;                           // 0x0388   (0x0008)  
	UAnimSequenceBase*                                 _vehicleWAPLowerBodyIdleRelaxedTP;                          // 0x0390   (0x0008)  
	unsigned char                                      UnknownData05_6[0x8];                                       // 0x0398   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.PrisonerAnimInstance_WheelBarrow.AnimNotify_RFootDown
	void AnimNotify_RFootDown();                                                                                             // [0x23850c0] Native|Event|Protected|BlueprintEvent 
	// Function /Script/ConZ.PrisonerAnimInstance_WheelBarrow.AnimNotify_LFootDown
	void AnimNotify_LFootDown();                                                                                             // [0x23850a0] Native|Event|Protected|BlueprintEvent 
};

/// Class /Script/ConZ.PrisonerAnimNotify_PlayGearSound
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerAnimNotify_PlayGearSound : public UAnimNotify
{ 
public:
	EMotionIntensity                                   motionIntensity;                                            // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0039   (0x0007)  MISSED
};

/// Class /Script/ConZ.PrisonerAnimStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UPrisonerAnimStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.PrisonerAppearanceComponent
/// Size: 0x0090 (0x0000B0 - 0x000140)
class UPrisonerAppearanceComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x44];                                      // 0x00B0   (0x0044)  MISSED
	bool                                               _overrideVisualParameters;                                  // 0x00F4   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x00F5   (0x0003)  MISSED
	TArray<FVisualParameter>                           _visualParameterOverrides;                                  // 0x00F8   (0x0010)  
	bool                                               _overridePenisLocations;                                    // 0x0108   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0109   (0x0003)  MISSED
	FVector                                            _penisLocationDefaultOverride;                              // 0x010C   (0x000C)  
	FVector                                            _penisLocationFatOverride;                                  // 0x0118   (0x000C)  
	FVector                                            _penisLocationMuscularOverride;                             // 0x0124   (0x000C)  
	FVector                                            _penisLocationSkinnyOverride;                               // 0x0130   (0x000C)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x013C   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.PrisonerAppearanceComponent.NetMulticast_UpdateState
	void NetMulticast_UpdateState(TArray<char> Payload);                                                                     // [0x23390f0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.PrisonerAppearanceComponent.NetMulticast_UpdateChipLightColorIndex
	void NetMulticast_UpdateChipLightColorIndex(int8_t chipLightColor);                                                      // [0x23851f0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/ConZ.PrisonerBodyCompositionMorphsComputer
/// Size: 0x0000 (0x000028 - 0x000028)
class UPrisonerBodyCompositionMorphsComputer : public UObject
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyCompositionMorphsComputer_CharacterCreationOrMugshot
/// Size: 0x0000 (0x000028 - 0x000028)
class UPrisonerBodyCompositionMorphsComputer_CharacterCreationOrMugshot : public UPrisonerBodyCompositionMorphsComputer
{ 
public:
};

/// Class /Script/ConZ.PrisonerAppearanceDataAsset
/// Size: 0x01D0 (0x000030 - 0x000200)
class UPrisonerAppearanceDataAsset : public UDataAsset
{ 
public:
	EDeluxeVersion                                     GameUpgradeRequired;                                        // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	TArray<UCharacterMesh*>                            CharacterMeshes;                                            // 0x0038   (0x0010)  
	TMap<FName, TWeakObjectPtr>                        SkinMaterials;                                              // 0x0048   (0x0050)  
	FGameplayTag                                       TypeTag;                                                    // 0x0098   (0x0008)  
	FGameplayTag                                       RaceTag;                                                    // 0x00A0   (0x0008)  
	FName                                              CharacterAkSwitchValue;                                     // 0x00A8   (0x0008)  
	TWeakObjectPtr<UTexture2D*>                        SkinNormal;                                                 // 0x00B0   (0x0028)  
	TArray<FPrisonerAppearance_HairStyle>              FacialHairStyles;                                           // 0x00D8   (0x0010)  
	TArray<FPrisonerAppearance_HairStyle>              BeardStyles;                                                // 0x00E8   (0x0010)  
	TArray<FPrisonerAppearance_HairStyle>              MoustacheStyles;                                            // 0x00F8   (0x0010)  
	TWeakObjectPtr<UTexture2D*>                        Hairless_SkinColor;                                         // 0x0108   (0x0028)  
	TWeakObjectPtr<UTexture2D*>                        Hairless_SkinRoughness;                                     // 0x0130   (0x0028)  
	TWeakObjectPtr<UTexture2D*>                        Hairless_SkinMask;                                          // 0x0158   (0x0028)  
	TWeakObjectPtr<UTexture2D*>                        Hairy_SkinColor;                                            // 0x0180   (0x0028)  
	TWeakObjectPtr<UTexture2D*>                        Hairy_SkinRoughness;                                        // 0x01A8   (0x0028)  
	TWeakObjectPtr<UTexture2D*>                        Hairy_SkinMask;                                             // 0x01D0   (0x0028)  
	bool                                               HasLimitedCharacterCreationOptions;                         // 0x01F8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x01F9   (0x0007)  MISSED
};

/// Class /Script/ConZ.PrisonerAppearanceSetDataAsset
/// Size: 0x02A8 (0x000030 - 0x0002D8)
class UPrisonerAppearanceSetDataAsset : public UDataAsset
{ 
public:
	float                                              BreastSizeMin;                                              // 0x0030   (0x0004)  
	float                                              BreastSizeMax;                                              // 0x0034   (0x0004)  
	float                                              BreastSizeMaxInCharacterCreation;                           // 0x0038   (0x0004)  
	float                                              BreastSizeDeluxeModifier;                                   // 0x003C   (0x0004)  
	float                                              PenisSizeMin;                                               // 0x0040   (0x0004)  
	float                                              PenisSizeMax;                                               // 0x0044   (0x0004)  
	float                                              PenisSizeMaxInCharacterCreation;                            // 0x0048   (0x0004)  
	float                                              PenisSizeDeluxeModifier;                                    // 0x004C   (0x0004)  
	UClass*                                            HairClass;                                                  // 0x0050   (0x0008)  
	UClass*                                            MoustacheClass;                                             // 0x0058   (0x0008)  
	UClass*                                            BeardClass;                                                 // 0x0060   (0x0008)  
	FRuntimeFloatCurve                                 DefinitionMaterialParamVsFatMassRatio;                      // 0x0068   (0x0088)  
	FRuntimeFloatCurve                                 DefinitionMaterialParamVsMuscleMassRatio;                   // 0x00F0   (0x0088)  
	TArray<UPrisonerAppearanceDataAsset*>              _femaleAppearanceData;                                      // 0x0178   (0x0010)  
	TArray<UPrisonerAppearanceDataAsset*>              _maleAppearanceData;                                        // 0x0188   (0x0010)  
	TArray<FPrisonerAppearance_HairStyle>              _maleHairStyles;                                            // 0x0198   (0x0010)  
	TArray<FPrisonerAppearance_HairStyle>              _femaleHairStyles;                                          // 0x01A8   (0x0010)  
	TArray<FPrisonerAppearance_HairColorPreset>        _dyedHairColors;                                            // 0x01B8   (0x0010)  
	TMap<FGameplayTag, FPrisonerAppearance_TattooArray> _tattooArrays;                                             // 0x01C8   (0x0050)  
	TMap<FGameplayTag, FPrisonerAppearance_SkinParams> _femaleSkinParams;                                          // 0x0218   (0x0050)  
	TMap<FGameplayTag, FPrisonerAppearance_SkinParams> _maleSkinParams;                                            // 0x0268   (0x0050)  
	TArray<FPrisonerAppearance_IrisColor>              _irisColors;                                                // 0x02B8   (0x0010)  
	TArray<FPrisonerAppearance_IrisVariation>          _irisVariations;                                            // 0x02C8   (0x0010)  
};

/// Class /Script/ConZ.PrisonerAppearanceUIController
/// Size: 0x01C8 (0x000028 - 0x0001F0)
class UPrisonerAppearanceUIController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x1C8];                                     // 0x0028   (0x01C8)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyAbrasionsStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UPrisonerBodyAbrasionsStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyMuscleGroupToBurnInjuryClassMappings
/// Size: 0x00C8 (0x000030 - 0x0000F8)
class UPrisonerBodyMuscleGroupToBurnInjuryClassMappings : public UDataAsset
{ 
public:
	UClass*                                            _burnInjuryClasses;                                         // 0x0030   (0x00C8)  
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect
/// Size: 0x0008 (0x000028 - 0x000030)
class UPrisonerBodyConditionOrSymptomSideEffect : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_Damage
/// Size: 0x0128 (0x000030 - 0x000158)
class UPrisonerBodyConditionOrSymptomSideEffect_Damage : public UPrisonerBodyConditionOrSymptomSideEffect
{ 
public:
	FRuntimeFloatCurve                                 _damageVsSeverity;                                          // 0x0030   (0x0088)  
	FRuntimeFloatCurve                                 _damageRatioVsSeverity;                                     // 0x00B8   (0x0088)  
	bool                                               _useBaseMaxHealthInsteadOfMaxHealthToComputeDamageRatio;    // 0x0140   (0x0001)  
	bool                                               _useSeverityToDetermineLifeThreateningStatus;               // 0x0141   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0142   (0x0002)  MISSED
	FFloatRange                                        _severityRangeToBeLifeThreatening;                          // 0x0144   (0x0010)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0154   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySimulationUIData
/// Size: 0x0030 (0x000028 - 0x000058)
class UPrisonerBodySimulationUIData : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x0028   (0x0030)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyEffectUIData
/// Size: 0x0010 (0x000028 - 0x000038)
class UPrisonerBodyEffectUIData : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	UClass*                                            _bodyEffectClass;                                           // 0x0030   (0x0008)  
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomUIData
/// Size: 0x0058 (0x000038 - 0x000090)
class UPrisonerBodyConditionOrSymptomUIData : public UPrisonerBodyEffectUIData
{ 
public:
	bool                                               _isVisibleByDefault;                                        // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0039   (0x0007)  MISSED
	FText                                              _name;                                                      // 0x0040   (0x0018)  
	FText                                              _description;                                               // 0x0058   (0x0018)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x0070   (0x0010)  MISSED
	TArray<UPrisonerBodyConditionOrSymptomSideEffectUIData*> _sideEffectsUIData;                                   // 0x0080   (0x0010)  
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData
/// Size: 0x0000 (0x000028 - 0x000028)
class UPrisonerBodyConditionOrSymptomSideEffectUIData : public UObject
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_Damage
/// Size: 0x0008 (0x000028 - 0x000030)
class UPrisonerBodyConditionOrSymptomSideEffectUIData_Damage : public UPrisonerBodyConditionOrSymptomSideEffectUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_MaxMovementPace
/// Size: 0x0018 (0x000030 - 0x000048)
class UPrisonerBodyConditionOrSymptomSideEffect_MaxMovementPace : public UPrisonerBodyConditionOrSymptomSideEffect
{ 
public:
	FPrisonerMaxMovementPaceVsSeverity                 _maxMovementPaceVsSeverity;                                 // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0040   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_MaxMovementPace
/// Size: 0x0008 (0x000028 - 0x000030)
class UPrisonerBodyConditionOrSymptomSideEffectUIData_MaxMovementPace : public UPrisonerBodyConditionOrSymptomSideEffectUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
/// Size: 0x0090 (0x000030 - 0x0000C0)
class UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier : public UPrisonerBodyConditionOrSymptomSideEffect
{ 
public:
	FRuntimeFloatCurve                                 _modifierVsSeverity;                                        // 0x0030   (0x0088)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x00B8   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier
/// Size: 0x0008 (0x000028 - 0x000030)
class UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier : public UPrisonerBodyConditionOrSymptomSideEffectUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_StrengthModifier
/// Size: 0x0000 (0x0000C0 - 0x0000C0)
class UPrisonerBodyConditionOrSymptomSideEffect_StrengthModifier : public UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_StrengthModifier
/// Size: 0x0000 (0x000030 - 0x000030)
class UPrisonerBodyConditionOrSymptomSideEffectUIData_StrengthModifier : public UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_ConstitutionModifier
/// Size: 0x0000 (0x0000C0 - 0x0000C0)
class UPrisonerBodyConditionOrSymptomSideEffect_ConstitutionModifier : public UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_ConstitutionModifier
/// Size: 0x0000 (0x000030 - 0x000030)
class UPrisonerBodyConditionOrSymptomSideEffectUIData_ConstitutionModifier : public UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_DexterityModifier
/// Size: 0x0000 (0x0000C0 - 0x0000C0)
class UPrisonerBodyConditionOrSymptomSideEffect_DexterityModifier : public UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_DexterityModifier
/// Size: 0x0000 (0x000030 - 0x000030)
class UPrisonerBodyConditionOrSymptomSideEffectUIData_DexterityModifier : public UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_IntelligenceModifier
/// Size: 0x0000 (0x0000C0 - 0x0000C0)
class UPrisonerBodyConditionOrSymptomSideEffect_IntelligenceModifier : public UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_IntelligenceModifier
/// Size: 0x0000 (0x000030 - 0x000030)
class UPrisonerBodyConditionOrSymptomSideEffectUIData_IntelligenceModifier : public UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_HealingSpeedModifier
/// Size: 0x0000 (0x0000C0 - 0x0000C0)
class UPrisonerBodyConditionOrSymptomSideEffect_HealingSpeedModifier : public UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_HealingSpeedModifier
/// Size: 0x0000 (0x000030 - 0x000030)
class UPrisonerBodyConditionOrSymptomSideEffectUIData_HealingSpeedModifier : public UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_ImmuneSystemEfficiencyModifier
/// Size: 0x0000 (0x0000C0 - 0x0000C0)
class UPrisonerBodyConditionOrSymptomSideEffect_ImmuneSystemEfficiencyModifier : public UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_ImmuneSystemEfficiencyModifier
/// Size: 0x0000 (0x000030 - 0x000030)
class UPrisonerBodyConditionOrSymptomSideEffectUIData_ImmuneSystemEfficiencyModifier : public UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_PerformanceScoreModifier
/// Size: 0x0000 (0x0000C0 - 0x0000C0)
class UPrisonerBodyConditionOrSymptomSideEffect_PerformanceScoreModifier : public UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_PerformanceScoreModifier
/// Size: 0x0000 (0x000030 - 0x000030)
class UPrisonerBodyConditionOrSymptomSideEffectUIData_PerformanceScoreModifier : public UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_GroundMovementSpeedModifier
/// Size: 0x0000 (0x0000C0 - 0x0000C0)
class UPrisonerBodyConditionOrSymptomSideEffect_GroundMovementSpeedModifier : public UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_GroundMovementSpeedModifier
/// Size: 0x0000 (0x000030 - 0x000030)
class UPrisonerBodyConditionOrSymptomSideEffectUIData_GroundMovementSpeedModifier : public UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_WaterMovementSpeedModifier
/// Size: 0x0000 (0x0000C0 - 0x0000C0)
class UPrisonerBodyConditionOrSymptomSideEffect_WaterMovementSpeedModifier : public UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_MaxStaminaModifier
/// Size: 0x0000 (0x0000C0 - 0x0000C0)
class UPrisonerBodyConditionOrSymptomSideEffect_MaxStaminaModifier : public UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_MaxStaminaModifier
/// Size: 0x0000 (0x000030 - 0x000030)
class UPrisonerBodyConditionOrSymptomSideEffectUIData_MaxStaminaModifier : public UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyEffect
/// Size: 0x0018 (0x000028 - 0x000040)
class UPrisonerBodyEffect : public UObject
{ 
public:
	int32_t                                            _id;                                                        // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x002C   (0x0008)  MISSED
	float                                              _tickInterval;                                              // 0x0034   (0x0004)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptom
/// Size: 0x0060 (0x000040 - 0x0000A0)
class UPrisonerBodyConditionOrSymptom : public UPrisonerBodyEffect
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0040   (0x0018)  MISSED
	UClass*                                            _uiDataClass;                                               // 0x0058   (0x0008)  
	bool                                               _useSeverityToDetermineLifeThreateningStatus;               // 0x0060   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0061   (0x0003)  MISSED
	FFloatRange                                        _severityRangeToBeLifeThreatening;                          // 0x0064   (0x0010)  
	float                                              _severityRatioChangeToReplicate;                            // 0x0074   (0x0004)  
	float                                              _clientSeverityRatioInterpSpeed;                            // 0x0078   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x007C   (0x0004)  MISSED
	TArray<UPrisonerBodyConditionOrSymptomSideEffect*> _sideEffects;                                               // 0x0080   (0x0010)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x0090   (0x0008)  MISSED
	float                                              _repSeverity;                                               // 0x0098   (0x0004)  
	float                                              _repMaxSeverity;                                            // 0x009C   (0x0004)  
};

/// Class /Script/ConZ.PrisonerBodyCondition
/// Size: 0x0020 (0x0000A0 - 0x0000C0)
class UPrisonerBodyCondition : public UPrisonerBodyConditionOrSymptom
{ 
public:
	TArray<UClass*>                                    _initialInteractions;                                       // 0x00A0   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x00B0   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyCondition_Injury
/// Size: 0x0000 (0x0000C0 - 0x0000C0)
class UPrisonerBodyCondition_Injury : public UPrisonerBodyCondition
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyCondition_Abrasions
/// Size: 0x0628 (0x0000C0 - 0x0006E8)
class UPrisonerBodyCondition_Abrasions : public UPrisonerBodyCondition_Injury
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00C0   (0x0008)  MISSED
	FFloatInterval                                     _baseAbrasionsRaiseRateVsConstitution;                      // 0x00C8   (0x0008)  
	float                                              _abrasionsWeightFactor;                                     // 0x00D0   (0x0004)  
	float                                              _abrasionsFallRate;                                         // 0x00D4   (0x0004)  
	FRuntimeFloatCurve                                 _severityVsAbrasions;                                       // 0x00D8   (0x0088)  
	float                                              _abrasions;                                                 // 0x0160   (0x0004)  
	float                                              _abrasionsAtRecoveryStart;                                  // 0x0164   (0x0004)  
	float                                              _bandagesProtection;                                        // 0x0168   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x016C   (0x0004)  MISSED
	FBandages                                          _bandages;                                                  // 0x0170   (0x0018)  
	UClass*                                            _bandagesProtectionDecreaseNotification;                    // 0x0188   (0x0008)  
	float                                              _bandagesProtectionDecreaseNotificationCooldown;            // 0x0190   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0194   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _stabilizationDurationVsSeverity;                           // 0x0198   (0x0088)  
	float                                              _stabilizationDurationReductionFromPhysician;               // 0x0220   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x0224   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _recoveryDurationVsSeverity;                                // 0x0228   (0x0088)  
	FRuntimeFloatCurve                                 _bleedingSeverityVsSeverity;                                // 0x02B0   (0x0088)  
	UClass*                                            _bleedingSymptomClass;                                      // 0x0338   (0x0008)  
	UPrisonerBodySymptomCause_Bleeding*                _bleedingSymptomCause;                                      // 0x0340   (0x0008)  
	float                                              _bloodLoss;                                                 // 0x0348   (0x0004)  
	float                                              _bloodLossToRecover;                                        // 0x034C   (0x0004)  
	UAkAudioEvent*                                     _painGruntAudioEvent;                                       // 0x0350   (0x0008)  
	FRuntimeFloatCurve                                 _painGruntIntervalVsSeverity;                               // 0x0358   (0x0088)  
	unsigned char                                      UnknownData04_5[0x8];                                       // 0x03E0   (0x0008)  MISSED
	UClass*                                            _painSymptomClass;                                          // 0x03E8   (0x0008)  
	UPrisonerBodySymptomCause_Pain*                    _painSymptomCause;                                          // 0x03F0   (0x0008)  
	FRuntimeFloatCurve                                 _painSymptomOverallIntensityVsSeverity;                     // 0x03F8   (0x0088)  
	FRuntimeFloatCurve                                 _painSymptomLimpingIntensityVsSeverity;                     // 0x0480   (0x0088)  
	FPrisonerMaxMovementPaceVsSeverity                 _painSymptomMaxMovementPaceVsSeverity;                      // 0x0508   (0x0010)  
	FRuntimeFloatCurve                                 _painSymptomMovementSpeedModifierVsSeverity;                // 0x0518   (0x0088)  
	EPrisonerBodyConditionState                        _state;                                                     // 0x05A0   (0x0001)  
	unsigned char                                      UnknownData05_5[0x7];                                       // 0x05A1   (0x0007)  MISSED
	float                                              _timerElapsedTime;                                          // 0x05A8   (0x0004)  
	float                                              _timerDuration;                                             // 0x05AC   (0x0004)  
	float                                              _disinfectantAmount;                                        // 0x05B0   (0x0004)  
	unsigned char                                      UnknownData06_5[0x4];                                       // 0x05B4   (0x0004)  MISSED
	UClass*                                            _infectionClass;                                            // 0x05B8   (0x0008)  
	UPrisonerBodyCondition_Infection*                  _infection;                                                 // 0x05C0   (0x0008)  
	float                                              _contaminationIncreaseBaseRate;                             // 0x05C8   (0x0004)  
	unsigned char                                      UnknownData07_5[0x4];                                       // 0x05CC   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _contaminationIncreaseRateMultiplierVsSeverity;             // 0x05D0   (0x0088)  
	FRuntimeFloatCurve                                 _contaminationIncreaseRateMultiplierVsAsepsis;              // 0x0658   (0x0088)  
	float                                              _disinfectantContaminationDecreaseRate;                     // 0x06E0   (0x0004)  
	float                                              _disinfectantEvaporationRate;                               // 0x06E4   (0x0004)  
};

/// Class /Script/ConZ.PrisonerBodyConditionUIData
/// Size: 0x0110 (0x000090 - 0x0001A0)
class UPrisonerBodyConditionUIData : public UPrisonerBodyConditionOrSymptomUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x110];                                     // 0x0090   (0x0110)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionUIData_Abrasions
/// Size: 0x0040 (0x0001A0 - 0x0001E0)
class UPrisonerBodyConditionUIData_Abrasions : public UPrisonerBodyConditionUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x40];                                      // 0x01A0   (0x0040)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyCondition_AcuteRadiationSyndrome
/// Size: 0x0250 (0x0000C0 - 0x000310)
class UPrisonerBodyCondition_AcuteRadiationSyndrome : public UPrisonerBodyCondition
{ 
public:
	float                                              _amount;                                                    // 0x00C0   (0x0004)  
	float                                              _maxAmount;                                                 // 0x00C4   (0x0004)  
	float                                              _amountAtRecoveryStart;                                     // 0x00C8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00CC   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _severityVsAmountRatio;                                     // 0x00D0   (0x0088)  
	FRuntimeFloatCurve                                 _increaseRateVsEffectiveRadiationAmountRatio;               // 0x0158   (0x0088)  
	FRuntimeFloatCurve                                 _decreaseRateVsSeverity;                                    // 0x01E0   (0x0088)  
	FFloatInterval                                     _decreaseRateMultiplierVsConstitutionRatio;                 // 0x0268   (0x0008)  
	FFloatInterval                                     _randomBleedingIntervalRange;                               // 0x0270   (0x0008)  
	FRuntimeFloatCurve                                 _randomBleedingChanceVsSeverity;                            // 0x0278   (0x0088)  
	float                                              _randomBleedingTimer;                                       // 0x0300   (0x0004)  
	float                                              _chosenRandomBleedingInterval;                              // 0x0304   (0x0004)  
	EPrisonerBodyConditionState                        _state;                                                     // 0x0308   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0309   (0x0007)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionUIData_AcuteRadiationSyndrome
/// Size: 0x0008 (0x0001A0 - 0x0001A8)
class UPrisonerBodyConditionUIData_AcuteRadiationSyndrome : public UPrisonerBodyConditionUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x01A0   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyCondition_BandagesTreatment
/// Size: 0x0000 (0x000028 - 0x000028)
class UPrisonerBodyCondition_BandagesTreatment : public UInterface
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyCondition_BasicInjury
/// Size: 0x0098 (0x0000C0 - 0x000158)
class UPrisonerBodyCondition_BasicInjury : public UPrisonerBodyCondition_Injury
{ 
public:
	FRuntimeFloatCurve                                 _severityVsDamageRatio;                                     // 0x00C0   (0x0088)  
	float                                              _healingRate;                                               // 0x0148   (0x0004)  
	float                                              _damage;                                                    // 0x014C   (0x0004)  
	float                                              _damageToRecover;                                           // 0x0150   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0154   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyCondition_BladderFull
/// Size: 0x0028 (0x0000C0 - 0x0000E8)
class UPrisonerBodyCondition_BladderFull : public UPrisonerBodyCondition
{ 
public:
	float                                              _bladderFullnessToExist;                                    // 0x00C0   (0x0004)  
	float                                              _bladderFullnessToForceUrinate;                             // 0x00C4   (0x0004)  
	UClass*                                            _needToUrinateSymptomClass;                                 // 0x00C8   (0x0008)  
	UPrisonerBodySymptomCause*                         _needToUrinateSymptomCause;                                 // 0x00D0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x00D8   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyCondition_BleedingInjury
/// Size: 0x0470 (0x0000C0 - 0x000530)
class UPrisonerBodyCondition_BleedingInjury : public UPrisonerBodyCondition_Injury
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00C0   (0x0008)  MISSED
	FRuntimeFloatCurve                                 _selfStabilizationDurationVsSeverity;                       // 0x00C8   (0x0088)  
	FRuntimeFloatCurve                                 _stabilizationDurationVsBloodLossRatio;                     // 0x0150   (0x0088)  
	FRuntimeFloatCurve                                 _destabilizationActionDifficultyRatioVsSeverity;            // 0x01D8   (0x0088)  
	UClass*                                            _destabilizationNotification;                               // 0x0260   (0x0008)  
	float                                              _destabilizationNotificationCooldown;                       // 0x0268   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x026C   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _recoveryDurationVsBloodLossRatio;                          // 0x0270   (0x0088)  
	UClass*                                            _bleedingSymptomClass;                                      // 0x02F8   (0x0008)  
	UPrisonerBodySymptomCause_Bleeding*                _bleedingSymptomCause;                                      // 0x0300   (0x0008)  
	UClass*                                            _painSymptomClass;                                          // 0x0308   (0x0008)  
	UPrisonerBodySymptomCause_Pain*                    _painSymptomCause;                                          // 0x0310   (0x0008)  
	FRuntimeFloatCurve                                 _painIntensityVsSeverity;                                   // 0x0318   (0x0088)  
	float                                              _limpingIntensityPerLegsDamageRatio;                        // 0x03A0   (0x0004)  
	float                                              _legsBleedingSeverityThresholdToLimp;                       // 0x03A4   (0x0004)  
	UPrisonerBodyMuscleGroupToInfectionClassMappings*  _infectionClassMappings;                                    // 0x03A8   (0x0008)  
	UPrisonerBodyCondition_Infection*                  _infection;                                                 // 0x03B0   (0x0008)  
	float                                              _contaminationIncreaseBaseRate;                             // 0x03B8   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x03BC   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _contaminationIncreaseRateMultiplierVsSeverity;             // 0x03C0   (0x0088)  
	FRuntimeFloatCurve                                 _contaminationIncreaseRateMultiplierVsAsepsis;              // 0x0448   (0x0088)  
	float                                              _disinfectantContaminationDecreaseRate;                     // 0x04D0   (0x0004)  
	float                                              _disinfectantEvaporationRate;                               // 0x04D4   (0x0004)  
	EPrisonerBodyMuscleGroup                           _muscleGroup;                                               // 0x04D8   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x04D9   (0x0003)  MISSED
	float                                              _damage;                                                    // 0x04DC   (0x0004)  
	float                                              _damageAtRecoveryStart;                                     // 0x04E0   (0x0004)  
	float                                              _bloodLoss;                                                 // 0x04E4   (0x0004)  
	float                                              _bloodLossAtRecoveryStart;                                  // 0x04E8   (0x0004)  
	float                                              _bloodLossRate;                                             // 0x04EC   (0x0004)  
	float                                              _bloodLossRateAtRecoveryStart;                              // 0x04F0   (0x0004)  
	float                                              _selfStabilizationBleedingSuppression;                      // 0x04F4   (0x0004)  
	float                                              _stabilizationDurationReductionFromPhysician;               // 0x04F8   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x04FC   (0x0004)  MISSED
	FBandages                                          _bandages;                                                  // 0x0500   (0x0018)  
	float                                              _disinfectantAmount;                                        // 0x0518   (0x0004)  
	EPrisonerBodyConditionState                        _state;                                                     // 0x051C   (0x0001)  
	unsigned char                                      UnknownData05_5[0xB];                                       // 0x051D   (0x000B)  MISSED
	float                                              _timerElapsedTime;                                          // 0x0528   (0x0004)  
	float                                              _timerDuration;                                             // 0x052C   (0x0004)  
};

/// Class /Script/ConZ.PrisonerBodyConditionUIData_BleedingInjury
/// Size: 0x0040 (0x0001A0 - 0x0001E0)
class UPrisonerBodyConditionUIData_BleedingInjury : public UPrisonerBodyConditionUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x40];                                      // 0x01A0   (0x0040)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyCondition_BurnInjury
/// Size: 0x0558 (0x0000C0 - 0x000618)
class UPrisonerBodyCondition_BurnInjury : public UPrisonerBodyCondition_Injury
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00C0   (0x0008)  MISSED
	float                                              _initialDamageMultiplier;                                   // 0x00C8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x00CC   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _severityVsDamageRatio;                                     // 0x00D0   (0x0088)  
	FRuntimeFloatCurve                                 _untreatedDurationVsSeverity;                               // 0x0158   (0x0088)  
	FRuntimeFloatCurve                                 _stabilizationDurationVsSeverity;                           // 0x01E0   (0x0088)  
	FRuntimeFloatCurve                                 _recoveryDurationVsSeverity;                                // 0x0268   (0x0088)  
	FRuntimeFloatCurve                                 _stabilizationDurationReductionVsGelRatio;                  // 0x02F0   (0x0088)  
	FRuntimeFloatCurve                                 _recoveryDurationReductionVsGelRatio;                       // 0x0378   (0x0088)  
	UClass*                                            _painSymptomClass;                                          // 0x0400   (0x0008)  
	UPrisonerBodySymptomCause_Pain*                    _painSymptomCause;                                          // 0x0408   (0x0008)  
	FRuntimeFloatCurve                                 _painIntensityVsSeverity;                                   // 0x0410   (0x0088)  
	float                                              _limpingIntensityPerLegsDamageRatio;                        // 0x0498   (0x0004)  
	float                                              _legsBurnSeverityThresholdToLimp;                           // 0x049C   (0x0004)  
	UPrisonerBodyMuscleGroupToInfectionClassMappings*  _infectionClassMappings;                                    // 0x04A0   (0x0008)  
	UPrisonerBodyCondition_Infection*                  _infection;                                                 // 0x04A8   (0x0008)  
	float                                              _contaminationIncreaseBaseRate;                             // 0x04B0   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x04B4   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _contaminationIncreaseRateMultiplierVsSeverity;             // 0x04B8   (0x0088)  
	FRuntimeFloatCurve                                 _contaminationIncreaseRateMultiplierVsAsepsis;              // 0x0540   (0x0088)  
	float                                              _disinfectantContaminationDecreaseRate;                     // 0x05C8   (0x0004)  
	float                                              _disinfectantEvaporationRate;                               // 0x05CC   (0x0004)  
	EPrisonerBodyMuscleGroup                           _muscleGroup;                                               // 0x05D0   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x05D1   (0x0003)  MISSED
	float                                              _damage;                                                    // 0x05D4   (0x0004)  
	float                                              _damageAtRecoveryStart;                                     // 0x05D8   (0x0004)  
	float                                              _selfStabilizationBurnSuppression;                          // 0x05DC   (0x0004)  
	float                                              _stabilizationDurationReductionFromPhysician;               // 0x05E0   (0x0004)  
	float                                              _recoveryDurationReductionFromPhysician;                    // 0x05E4   (0x0004)  
	FBandages                                          _bandages;                                                  // 0x05E8   (0x0018)  
	float                                              _disinfectantAmount;                                        // 0x0600   (0x0004)  
	float                                              _gelAmount;                                                 // 0x0604   (0x0004)  
	EPrisonerBodyConditionState                        _state;                                                     // 0x0608   (0x0001)  
	unsigned char                                      UnknownData04_5[0x7];                                       // 0x0609   (0x0007)  MISSED
	float                                              _timerElapsedTime;                                          // 0x0610   (0x0004)  
	float                                              _timerDuration;                                             // 0x0614   (0x0004)  
};

/// Class /Script/ConZ.PrisonerBodyConditionUIData_BurnInjury
/// Size: 0x0038 (0x0001A0 - 0x0001D8)
class UPrisonerBodyConditionUIData_BurnInjury : public UPrisonerBodyConditionUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x01A0   (0x0038)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyCondition_Choking
/// Size: 0x0010 (0x0000C0 - 0x0000D0)
class UPrisonerBodyCondition_Choking : public UPrisonerBodyCondition
{ 
public:
	float                                              _oxygenSaturationToExist;                                   // 0x00C0   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x00C4   (0x000C)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyCondition_ColonFull
/// Size: 0x0040 (0x0000C0 - 0x000100)
class UPrisonerBodyCondition_ColonFull : public UPrisonerBodyCondition
{ 
public:
	float                                              _colonFullnessToExist;                                      // 0x00C0   (0x0004)  
	float                                              _colonFullnessToForceDefecate;                              // 0x00C4   (0x0004)  
	UClass*                                            _needToDefecateSymptomClass;                                // 0x00C8   (0x0008)  
	UPrisonerBodySymptomCause*                         _needToDefecateSymptomCause;                                // 0x00D0   (0x0008)  
	float                                              _colonFullnessAtWhichFartingStarts;                         // 0x00D8   (0x0004)  
	float                                              _fartingInterval;                                           // 0x00DC   (0x0004)  
	UClass*                                            _fartingSymptomClass;                                       // 0x00E0   (0x0008)  
	UPrisonerBodySymptomCause_Farting*                 _fartingSymptomCause;                                       // 0x00E8   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x00F0   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyCondition_Drunkenness
/// Size: 0x0130 (0x0000C0 - 0x0001F0)
class UPrisonerBodyCondition_Drunkenness : public UPrisonerBodyCondition
{ 
public:
	FRuntimeFloatCurve                                 _severityVsAbsorbedAlcoholRatio;                            // 0x00C0   (0x0088)  
	float                                              _alcoholAbsorptionAtRecoveryStart;                          // 0x0148   (0x0004)  
	EPrisonerBodyConditionState                        _state;                                                     // 0x014C   (0x0001)  
	unsigned char                                      UnknownData00_5[0xF];                                       // 0x014D   (0x000F)  MISSED
	float                                              _vomitCheckInterval;                                        // 0x015C   (0x0004)  
	float                                              _alcoholInStomachRatioVomitThreshold;                       // 0x0160   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0164   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _vomitProbabilityVsSeverity;                                // 0x0168   (0x0088)  
};

/// Class /Script/ConZ.PrisonerBodyCondition_EnergyDeficiency
/// Size: 0x00A8 (0x0000C0 - 0x000168)
class UPrisonerBodyCondition_EnergyDeficiency : public UPrisonerBodyCondition
{ 
public:
	FRuntimeFloatCurve                                 _severityVsEnergyDeficiencyRatio;                           // 0x00C0   (0x0088)  
	float                                              _maxRatioOfAbsorbedEnergyCapacityToBeRecovered;             // 0x0148   (0x0004)  
	float                                              _artificialAbsorbedEnergyAccumulationScale;                 // 0x014C   (0x0004)  
	float                                              _energyDeficiency;                                          // 0x0150   (0x0004)  
	float                                              _energyDeficiencyToRecover;                                 // 0x0154   (0x0004)  
	float                                              _artificialAbsorbedEnergy;                                  // 0x0158   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x015C   (0x000C)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionUIData_EnergyDeficiency
/// Size: 0x0008 (0x0001A0 - 0x0001A8)
class UPrisonerBodyConditionUIData_EnergyDeficiency : public UPrisonerBodyConditionUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x01A0   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyCondition_Exhaustion
/// Size: 0x00B0 (0x0000C0 - 0x000170)
class UPrisonerBodyCondition_Exhaustion : public UPrisonerBodyCondition
{ 
public:
	EPrisonerBodyConditionState                        _state;                                                     // 0x00C0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x00C1   (0x0007)  MISSED
	float                                              _exhaustionAmount;                                          // 0x00C8   (0x0004)  
	float                                              _exhaustionAmountAtRecoveryStart;                           // 0x00CC   (0x0004)  
	FRuntimeFloatCurve                                 _severityVsExhaustion;                                      // 0x00D0   (0x0088)  
	float                                              _severityToStartMaxStaminaReduction;                        // 0x0158   (0x0004)  
	float                                              _maxStaminaReduction;                                       // 0x015C   (0x0004)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0160   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionUIData_Exhaustion
/// Size: 0x0018 (0x0001A0 - 0x0001B8)
class UPrisonerBodyConditionUIData_Exhaustion : public UPrisonerBodyConditionUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x01A0   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyCondition_FoodDisgust
/// Size: 0x0078 (0x0000C0 - 0x000138)
class UPrisonerBodyCondition_FoodDisgust : public UPrisonerBodyCondition
{ 
public:
	FFloatInterval                                     _disgustAmountMultiplierVsConstitution;                     // 0x00C0   (0x0008)  
	float                                              _disgustAmountTolerated;                                    // 0x00C8   (0x0004)  
	float                                              _disgustAmountToIssueFirstWarning;                          // 0x00CC   (0x0004)  
	UClass*                                            _firstDisgustWarning;                                       // 0x00D0   (0x0008)  
	float                                              _disgustAmountToIssueSecondWarning;                         // 0x00D8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00DC   (0x0004)  MISSED
	UClass*                                            _secondDisgustWarning;                                      // 0x00E0   (0x0008)  
	float                                              _disgustWarningCooldown;                                    // 0x00E8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x00EC   (0x0008)  MISSED
	float                                              _disgustAmountToBeAbleToVomit;                              // 0x00F4   (0x0004)  
	float                                              _disgustAmountToVomit;                                      // 0x00F8   (0x0004)  
	float                                              _disgustAmountDecreaseMultiplier;                           // 0x00FC   (0x0004)  
	float                                              _disgustAmount;                                             // 0x0100   (0x0004)  
	unsigned char                                      UnknownData02_5[0x1C];                                      // 0x0104   (0x001C)  MISSED
	float                                              _disgustAmountAtStabilizationStart;                         // 0x0120   (0x0004)  
	float                                              _disgustAmountAtRecoveryStart;                              // 0x0124   (0x0004)  
	UClass*                                            _nauseaSymptomClass;                                        // 0x0128   (0x0008)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x0130   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionUIData_FoodDisgust
/// Size: 0x0000 (0x0001A0 - 0x0001A0)
class UPrisonerBodyConditionUIData_FoodDisgust : public UPrisonerBodyConditionUIData
{ 
public:
};

/// Class /Script/ConZ.PrisonerConsumableDigestionHandler_FoodDisgust
/// Size: 0x0010 (0x000028 - 0x000038)
class UPrisonerConsumableDigestionHandler_FoodDisgust : public UConsumableDigestionHandler
{ 
public:
	float                                              _disgustAmountPerMassInStomach;                             // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x002C   (0x000C)  MISSED
};

/// Class /Script/ConZ.PrisonerConsumableDigestionHandler_FoodDisgustAntidote
/// Size: 0x0000 (0x000038 - 0x000038)
class UPrisonerConsumableDigestionHandler_FoodDisgustAntidote : public UPrisonerConsumableDigestionHandler_FoodDisgust
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyCondition_FootAbrasions
/// Size: 0x0000 (0x0006E8 - 0x0006E8)
class UPrisonerBodyCondition_FootAbrasions : public UPrisonerBodyCondition_Abrasions
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyCondition_ForeignSubstancePoisoning
/// Size: 0x00D0 (0x0000C0 - 0x000190)
class UPrisonerBodyCondition_ForeignSubstancePoisoning : public UPrisonerBodyCondition
{ 
public:
	FRuntimeFloatCurve                                 _severityVsForeignSubstanceAmountRatio;                     // 0x00C0   (0x0088)  
	float                                              _foreignSubstanceAmountRatioToExist;                        // 0x0148   (0x0004)  
	float                                              _foreignSubstanceAmountAtRecoveryStart;                     // 0x014C   (0x0004)  
	EPrisonerBodyConditionState                        _state;                                                     // 0x0150   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0151   (0x0007)  MISSED
	FPrisonerBodyBoneGroupsVsSeverity                  _affectedBodyBoneGroupsVsSeverity;                          // 0x0158   (0x0010)  
	FPrisonerBodyMuscleGroupsVsSeverity                _affectedBodyMuscleGroupsVsSeverity;                        // 0x0168   (0x0010)  
	FPrisonerBodyOrganGroupsVsSeverity                 _affectedBodyOrganGroupsVsSeverity;                         // 0x0178   (0x0010)  
	UClass*                                            _foreignSubstanceClass;                                     // 0x0188   (0x0008)  
};

/// Class /Script/ConZ.PrisonerBodyConditionUIData_ForeignSubstancePoisoning
/// Size: 0x0028 (0x0001A0 - 0x0001C8)
class UPrisonerBodyConditionUIData_ForeignSubstancePoisoning : public UPrisonerBodyConditionUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x01A0   (0x0028)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyCondition_HandAbrasions
/// Size: 0x0008 (0x0006E8 - 0x0006F0)
class UPrisonerBodyCondition_HandAbrasions : public UPrisonerBodyCondition_Abrasions
{ 
public:
	float                                              _vehiclePropellingAbrasivenessMultiplier;                   // 0x06E8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x06EC   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyCondition_HealthLow
/// Size: 0x0090 (0x0000C0 - 0x000150)
class UPrisonerBodyCondition_HealthLow : public UPrisonerBodyCondition
{ 
public:
	float                                              _healthRatioToExist;                                        // 0x00C0   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00C4   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _colorSaturationEffectIntensityVsEffectsIntensity;          // 0x00C8   (0x0088)  
};

/// Class /Script/ConZ.PrisonerBodyCondition_HeavyInjuries
/// Size: 0x0020 (0x0000C0 - 0x0000E0)
class UPrisonerBodyCondition_HeavyInjuries : public UPrisonerBodyCondition
{ 
public:
	FFloatInterval                                     _injuriesDamageRatioToExistVsConstitution;                  // 0x00C0   (0x0008)  
	float                                              _painSymptomOverallIntensity;                               // 0x00C8   (0x0004)  
	float                                              _painSymptomLimpingIntensity;                               // 0x00CC   (0x0004)  
	UClass*                                            _painSymptomClass;                                          // 0x00D0   (0x0008)  
	UPrisonerBodySymptomCause_Pain*                    _painSymptomCause;                                          // 0x00D8   (0x0008)  
};

/// Class /Script/ConZ.PrisonerBodyCondition_Hyperthermia
/// Size: 0x0048 (0x0000C0 - 0x000108)
class UPrisonerBodyCondition_Hyperthermia : public UPrisonerBodyCondition
{ 
public:
	float                                              _maxSeverity;                                               // 0x00C0   (0x0004)  
	float                                              _bodyTemperatureToDie;                                      // 0x00C4   (0x0004)  
	float                                              _bodyTemperatureToExist;                                    // 0x00C8   (0x0004)  
	float                                              _bodyTemperatureToRecover;                                  // 0x00CC   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00D0   (0x0004)  MISSED
	float                                              _bodyTemperatureSampleInterval;                             // 0x00D4   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x00D8   (0x0004)  MISSED
	float                                              _bodyTemperatureAtUntreatedStart;                           // 0x00DC   (0x0004)  
	float                                              _bodyTemperatureAtStabilizationStart;                       // 0x00E0   (0x0004)  
	float                                              _bodyTemperatureAtRecoveryStart;                            // 0x00E4   (0x0004)  
	EPrisonerBodyConditionState                        _state;                                                     // 0x00E8   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x00E9   (0x0007)  MISSED
	float                                              _severityRatio;                                             // 0x00F0   (0x0004)  
	float                                              _severityRatioAtUntreatedStart;                             // 0x00F4   (0x0004)  
	float                                              _severityRatioAtRecoveryStart;                              // 0x00F8   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x00FC   (0x0004)  MISSED
	float                                              _severityRatioInterpSpeed;                                  // 0x0100   (0x0004)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x0104   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionUIData_Hyperthermia
/// Size: 0x0000 (0x0001A0 - 0x0001A0)
class UPrisonerBodyConditionUIData_Hyperthermia : public UPrisonerBodyConditionUIData
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyCondition_Hypothermia
/// Size: 0x0048 (0x0000C0 - 0x000108)
class UPrisonerBodyCondition_Hypothermia : public UPrisonerBodyCondition
{ 
public:
	float                                              _maxSeverity;                                               // 0x00C0   (0x0004)  
	float                                              _bodyTemperatureToDie;                                      // 0x00C4   (0x0004)  
	float                                              _bodyTemperatureToExist;                                    // 0x00C8   (0x0004)  
	float                                              _bodyTemperatureToRecover;                                  // 0x00CC   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00D0   (0x0004)  MISSED
	float                                              _bodyTemperatureSampleInterval;                             // 0x00D4   (0x0004)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x00D8   (0x0008)  MISSED
	float                                              _bodyTemperatureAtUntreatedStart;                           // 0x00E0   (0x0004)  
	float                                              _bodyTemperatureAtStabilizationStart;                       // 0x00E4   (0x0004)  
	float                                              _bodyTemperatureAtRecoveryStart;                            // 0x00E8   (0x0004)  
	EPrisonerBodyConditionState                        _state;                                                     // 0x00EC   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x00ED   (0x0007)  MISSED
	float                                              _severityRatio;                                             // 0x00F4   (0x0004)  
	float                                              _severityRatioAtUntreatedStart;                             // 0x00F8   (0x0004)  
	float                                              _severityRatioAtRecoveryStart;                              // 0x00FC   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x0100   (0x0004)  MISSED
	float                                              _severityRatioInterpSpeed;                                  // 0x0104   (0x0004)  
};

/// Class /Script/ConZ.PrisonerBodyConditionUIData_Hypothermia
/// Size: 0x0000 (0x0001A0 - 0x0001A0)
class UPrisonerBodyConditionUIData_Hypothermia : public UPrisonerBodyConditionUIData
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyCondition_Infection
/// Size: 0x0068 (0x0000C0 - 0x000128)
class UPrisonerBodyCondition_Infection : public UPrisonerBodyCondition
{ 
public:
	float                                              _maxSeverity;                                               // 0x00C0   (0x0004)  
	float                                              _maxContamination;                                          // 0x00C4   (0x0004)  
	float                                              _toleratedContamination;                                    // 0x00C8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00CC   (0x0004)  MISSED
	UClass*                                            _sepsisClass;                                               // 0x00D0   (0x0008)  
	UPrisonerBodyConditionCause_Sepsis*                _sepsisCause;                                               // 0x00D8   (0x0008)  
	UClass*                                            _infectedNotification;                                      // 0x00E0   (0x0008)  
	float                                              _infectedNotificationCooldown;                              // 0x00E8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x00EC   (0x0010)  MISSED
	float                                              _contamination;                                             // 0x00FC   (0x0004)  
	float                                              _contaminationAtRecoveryStart;                              // 0x0100   (0x0004)  
	float                                              _contaminationIncreaseRate;                                 // 0x0104   (0x0004)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x0108   (0x0008)  MISSED
	float                                              _contaminationDecreaseRate;                                 // 0x0110   (0x0004)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x0114   (0x0008)  MISSED
	EPrisonerBodyConditionState                        _state;                                                     // 0x011C   (0x0001)  
	unsigned char                                      UnknownData04_6[0xB];                                       // 0x011D   (0x000B)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionUIData_Infection
/// Size: 0x0010 (0x0001A0 - 0x0001B0)
class UPrisonerBodyConditionUIData_Infection : public UPrisonerBodyConditionUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x01A0   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyCondition_InhalationPoisoning
/// Size: 0x0168 (0x0000C0 - 0x000228)
class UPrisonerBodyCondition_InhalationPoisoning : public UPrisonerBodyCondition
{ 
public:
	FRuntimeFloatCurve                                 _severityVsInhalableSubstanceAmountRatio;                   // 0x00C0   (0x0088)  
	float                                              _inhalableSubstanceAmountAtRecoveryStart;                   // 0x0148   (0x0004)  
	EPrisonerBodyConditionState                        _state;                                                     // 0x014C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x014D   (0x0007)  MISSED
	float                                              _inhalableSubstanceAmount;                                  // 0x0154   (0x0004)  
	FRuntimeFloatCurve                                 _inhalableSubstanceMaxAmountVsConstitutionRatio;            // 0x0158   (0x0088)  
	float                                              _baseInhalableSubstanceDiscardRate;                         // 0x01E0   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x01E4   (0x0004)  MISSED
	FPrisonerBodyBoneGroupsVsSeverity                  _affectedBodyBoneGroupsVsSeverity;                          // 0x01E8   (0x0010)  
	FPrisonerBodyMuscleGroupsVsSeverity                _affectedBodyMuscleGroupsVsSeverity;                        // 0x01F8   (0x0010)  
	FPrisonerBodyOrganGroupsVsSeverity                 _affectedBodyOrganGroupsVsSeverity;                         // 0x0208   (0x0010)  
	unsigned char                                      UnknownData02_6[0x10];                                      // 0x0218   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionUIData_InhalationPoisoning
/// Size: 0x0028 (0x0001A0 - 0x0001C8)
class UPrisonerBodyConditionUIData_InhalationPoisoning : public UPrisonerBodyConditionUIData
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x01A0   (0x0010)  MISSED
	FText                                              _substanceName;                                             // 0x01B0   (0x0018)  
};

/// Class /Script/ConZ.PrisonerBodyCondition_KillBoxGasPoisoning
/// Size: 0x0038 (0x0000C0 - 0x0000F8)
class UPrisonerBodyCondition_KillBoxGasPoisoning : public UPrisonerBodyCondition
{ 
public:
	float                                              _maxSeverity;                                               // 0x00C0   (0x0004)  
	float                                              _poisoningDuration;                                         // 0x00C4   (0x0004)  
	float                                              _poisoningTriggerCooldown;                                  // 0x00C8   (0x0004)  
	float                                              _poisoningTriggerTimer;                                     // 0x00CC   (0x0004)  
	float                                              _recoveryDuration;                                          // 0x00D0   (0x0004)  
	float                                              _damagedEffectTriggerInterval;                              // 0x00D4   (0x0004)  
	float                                              _damagedEffectDuration;                                     // 0x00D8   (0x0004)  
	float                                              _damagedEffectIntensity;                                    // 0x00DC   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00E0   (0x0004)  MISSED
	EPrisonerBodyConditionState                        _state;                                                     // 0x00E4   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x00E5   (0x0007)  MISSED
	float                                              _severityRatio;                                             // 0x00EC   (0x0004)  
	float                                              _severityRatioAtRecoveryStart;                              // 0x00F0   (0x0004)  
	float                                              _drunkenness;                                               // 0x00F4   (0x0004)  


	/// Functions
	// Function /Script/ConZ.PrisonerBodyCondition_KillBoxGasPoisoning.Client_TriggerDamagedEffect
	void Client_TriggerDamagedEffect(float Duration, float Intensity);                                                       // [0x238e900] Final|Net|NetReliableNative|Event|Private|NetClient 
};

/// Class /Script/ConZ.PrisonerBodyConditionUIData_KillBoxGasPoisoning
/// Size: 0x0000 (0x0001A0 - 0x0001A0)
class UPrisonerBodyConditionUIData_KillBoxGasPoisoning : public UPrisonerBodyConditionUIData
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyCondition_Knockout
/// Size: 0x0030 (0x0000C0 - 0x0000F0)
class UPrisonerBodyCondition_Knockout : public UPrisonerBodyCondition
{ 
public:
	FText                                              _reason;                                                    // 0x00C0   (0x0018)  
	float                                              _duration;                                                  // 0x00D8   (0x0004)  
	float                                              _elapsedTime;                                               // 0x00DC   (0x0004)  
	UClass*                                            _unconsciousnessSymptomClass;                               // 0x00E0   (0x0008)  
	UPrisonerBodySymptomCause_Unconsciousness*         _unconsciousnessSymptomCause;                               // 0x00E8   (0x0008)  
};

/// Class /Script/ConZ.PrisonerBodyCondition_NutrientDeficiency
/// Size: 0x00B0 (0x0000C0 - 0x000170)
class UPrisonerBodyCondition_NutrientDeficiency : public UPrisonerBodyCondition
{ 
public:
	ENutrient                                          _nutrient;                                                  // 0x00C0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x00C1   (0x0007)  MISSED
	FRuntimeFloatCurve                                 _severityVsNutrientDeficiencyRatio;                         // 0x00C8   (0x0088)  
	float                                              _maxRatioOfAbsorbedNutrientCapacityToBeRecovered;           // 0x0150   (0x0004)  
	float                                              _artificialAbsorbedNutrientAccumulationScale;               // 0x0154   (0x0004)  
	float                                              _nutrientDeficiency;                                        // 0x0158   (0x0004)  
	float                                              _nutrientDeficiencyToRecover;                               // 0x015C   (0x0004)  
	float                                              _artificialAbsorbedNutrient;                                // 0x0160   (0x0004)  
	unsigned char                                      UnknownData01_6[0xC];                                       // 0x0164   (0x000C)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionUIData_NutrientDeficiency
/// Size: 0x0008 (0x0001A0 - 0x0001A8)
class UPrisonerBodyConditionUIData_NutrientDeficiency : public UPrisonerBodyConditionUIData
{ 
public:
	unsigned char                                      UnknownData00_2[0x4];                                       // 0x01A0   (0x0004)  MISSED
	EConZUnit                                          NutrientUnit;                                               // 0x01A4   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x01A5   (0x0003)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyCondition_RadiationPresence
/// Size: 0x00A0 (0x0000C0 - 0x000160)
class UPrisonerBodyCondition_RadiationPresence : public UPrisonerBodyCondition
{ 
public:
	float                                              _radiationAmount;                                           // 0x00C0   (0x0004)  
	float                                              _radiationMaxAmount;                                        // 0x00C4   (0x0004)  
	float                                              _radiationAmountAtRecoveryStart;                            // 0x00C8   (0x0004)  
	float                                              _baseRadiationDispersionRate;                               // 0x00CC   (0x0004)  
	FPrisonerActionDifficultyCurve                     _radiationDispersionRatePerActionDifficulty;                // 0x00D0   (0x0018)  
	float                                              _radiationDispersionRateIncreaseWhileSwimming;              // 0x00E8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00EC   (0x0004)  MISSED
	TMap<UClass*, FRuntimeFloatCurve>                  _effectiveRadiationAmountChangePerForeignSubstancePresence; // 0x00F0   (0x0050)  
	float                                              _radiationAmountDecreaseViaUrination;                       // 0x0140   (0x0004)  
	float                                              _radiationIncreaseRateToInstantlyDie;                       // 0x0144   (0x0004)  
	EPrisonerBodyConditionState                        _state;                                                     // 0x0148   (0x0001)  
	unsigned char                                      UnknownData01_6[0x17];                                      // 0x0149   (0x0017)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionUIData_RadiationPresence
/// Size: 0x0018 (0x0001A0 - 0x0001B8)
class UPrisonerBodyConditionUIData_RadiationPresence : public UPrisonerBodyConditionUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x01A0   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionWithCauses
/// Size: 0x0010 (0x0000C0 - 0x0000D0)
class UPrisonerBodyConditionWithCauses : public UPrisonerBodyCondition
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00C0   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyCondition_Sepsis
/// Size: 0x0020 (0x0000D0 - 0x0000F0)
class UPrisonerBodyCondition_Sepsis : public UPrisonerBodyConditionWithCauses
{ 
public:
	float                                              _maxSeverity;                                               // 0x00D0   (0x0004)  
	float                                              _maxContamination;                                          // 0x00D4   (0x0004)  
	float                                              _contamination;                                             // 0x00D8   (0x0004)  
	float                                              _contaminationChangeRate;                                   // 0x00DC   (0x0004)  
	float                                              _contaminationAtRecoveryStart;                              // 0x00E0   (0x0004)  
	EPrisonerBodyConditionState                        _state;                                                     // 0x00E4   (0x0001)  
	unsigned char                                      UnknownData00_6[0xB];                                       // 0x00E5   (0x000B)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionWithCausesUIData
/// Size: 0x0010 (0x0001A0 - 0x0001B0)
class UPrisonerBodyConditionWithCausesUIData : public UPrisonerBodyConditionUIData
{ 
public:
	TArray<UPrisonerBodyConditionCauseUIData*>         _causes;                                                    // 0x01A0   (0x0010)  
};

/// Class /Script/ConZ.PrisonerBodyConditionUIData_Sepsis
/// Size: 0x0008 (0x0001B0 - 0x0001B8)
class UPrisonerBodyConditionUIData_Sepsis : public UPrisonerBodyConditionWithCausesUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x01B0   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyCondition_StomachEmpty
/// Size: 0x0020 (0x0000C0 - 0x0000E0)
class UPrisonerBodyCondition_StomachEmpty : public UPrisonerBodyCondition
{ 
public:
	float                                              _stomachEmptinessToExist;                                   // 0x00C0   (0x0004)  
	float                                              _energyRatioToExist;                                        // 0x00C4   (0x0004)  
	UClass*                                            _stomachGrowlingSymptomClass;                               // 0x00C8   (0x0008)  
	UPrisonerBodySymptomCause_StomachGrowling*         _stomachGrowlingSymptomCause;                               // 0x00D0   (0x0008)  
	float                                              _stomachGrowlingSymptomSoundInterval;                       // 0x00D8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00DC   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyCondition_StomachFull
/// Size: 0x0078 (0x0000C0 - 0x000138)
class UPrisonerBodyCondition_StomachFull : public UPrisonerBodyCondition
{ 
public:
	float                                              _stomachFullnessToExist;                                    // 0x00C0   (0x0004)  
	float                                              _stomachFullnessToDie;                                      // 0x00C4   (0x0004)  
	float                                              _stomachFullnessToBeRecovered;                              // 0x00C8   (0x0004)  
	float                                              _stomachFullnessAtWhichToAutoCancelConsumptionOnce;         // 0x00CC   (0x0004)  
	float                                              _stomachFullnessAtWhichToEnableAutoConsumptionCancelationAgain; // 0x00D0   (0x0004)  
	float                                              _minMaxStaminaModifierForFatigueSymptom;                    // 0x00D4   (0x0004)  
	float                                              _stomachFullnessAtWhichBurpingStarts;                       // 0x00D8   (0x0004)  
	float                                              _burpingInterval;                                           // 0x00DC   (0x0004)  
	UClass*                                            _stomachFullnessSymptomClass;                               // 0x00E0   (0x0008)  
	UPrisonerBodySymptomCause*                         _stomachFullnessSymptomCause;                               // 0x00E8   (0x0008)  
	UClass*                                            _fatigueSymptomClass;                                       // 0x00F0   (0x0008)  
	UPrisonerBodySymptomCause_Fatigue*                 _fatigueSymptomCause;                                       // 0x00F8   (0x0008)  
	UClass*                                            _burpingSymptomClass;                                       // 0x0100   (0x0008)  
	UPrisonerBodySymptomCause_Burping*                 _burpingSymptomCause;                                       // 0x0108   (0x0008)  
	UClass*                                            _stomachRuptureWarningNotificationClass;                    // 0x0110   (0x0008)  
	UClass*                                            _stomachRuptureNotificationClass;                           // 0x0118   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0120   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyCondition_TearGasExposure
/// Size: 0x00A0 (0x0000C0 - 0x000160)
class UPrisonerBodyCondition_TearGasExposure : public UPrisonerBodyCondition
{ 
public:
	FRuntimeFloatCurve                                 _severityVsTime;                                            // 0x00C0   (0x0088)  
	float                                              _timeSinceExposure;                                         // 0x0148   (0x0004)  
	float                                              _timeAtRecoveryStart;                                       // 0x014C   (0x0004)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0150   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyCondition_Test
/// Size: 0x0090 (0x0000C0 - 0x000150)
class UPrisonerBodyCondition_Test : public UPrisonerBodyCondition
{ 
public:
	FRuntimeFloatCurve                                 _severityVsElapsedTime;                                     // 0x00C0   (0x0088)  
	bool                                               _shouldBeRemovedWhenTimeElapses;                            // 0x0148   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0149   (0x0003)  MISSED
	float                                              _elapsedTime;                                               // 0x014C   (0x0004)  
};

/// Class /Script/ConZ.PrisonerBodyCondition_TrenchFoot
/// Size: 0x0638 (0x0000C0 - 0x0006F8)
class UPrisonerBodyCondition_TrenchFoot : public UPrisonerBodyCondition_Injury
{ 
public:
	FRuntimeFloatCurve                                 _trenchnessIncreaseRateVsFeetWetness;                       // 0x00C0   (0x0088)  
	FFloatInterval                                     _trenchnessIncreaseRateMultiplierVsConstitution;            // 0x0148   (0x0008)  
	FRuntimeFloatCurve                                 _trenchnessIncreaseRateMultiplierVsAirTemperature;          // 0x0150   (0x0088)  
	FRuntimeFloatCurve                                 _trenchnessDecreaseRateMultiplierVsAirTemperature;          // 0x01D8   (0x0088)  
	FRuntimeFloatCurve                                 _recoveryDurationMultiplierVsAirTemperature;                // 0x0260   (0x0088)  
	float                                              _trenchnessFallRate;                                        // 0x02E8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x02EC   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _severityVsTrenchness;                                      // 0x02F0   (0x0088)  
	float                                              _trenchness;                                                // 0x0378   (0x0004)  
	float                                              _trenchnessTreated;                                         // 0x037C   (0x0004)  
	float                                              _trenchnessAtRecoveryStart;                                 // 0x0380   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0384   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _stabilizationDurationVsSeverity;                           // 0x0388   (0x0088)  
	FRuntimeFloatCurve                                 _recoveryDurationVsSeverity;                                // 0x0410   (0x0088)  
	UAkAudioEvent*                                     _painGruntAudioEvent;                                       // 0x0498   (0x0008)  
	FRuntimeFloatCurve                                 _painGruntIntervalVsSeverity;                               // 0x04A0   (0x0088)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x0528   (0x0008)  MISSED
	UClass*                                            _painSymptomClass;                                          // 0x0530   (0x0008)  
	UPrisonerBodySymptomCause_Pain*                    _painSymptomCause;                                          // 0x0538   (0x0008)  
	FRuntimeFloatCurve                                 _painSymptomOverallIntensityVsSeverity;                     // 0x0540   (0x0088)  
	FRuntimeFloatCurve                                 _painSymptomLimpingIntensityVsSeverity;                     // 0x05C8   (0x0088)  
	FPrisonerMaxMovementPaceVsSeverity                 _painSymptomMaxMovementPaceVsSeverity;                      // 0x0650   (0x0010)  
	FRuntimeFloatCurve                                 _painSymptomMovementSpeedModifierVsSeverity;                // 0x0660   (0x0088)  
	EPrisonerBodyConditionState                        _state;                                                     // 0x06E8   (0x0001)  
	unsigned char                                      UnknownData03_5[0x7];                                       // 0x06E9   (0x0007)  MISSED
	float                                              _timerElapsedTime;                                          // 0x06F0   (0x0004)  
	float                                              _timerDuration;                                             // 0x06F4   (0x0004)  
};

/// Class /Script/ConZ.PrisonerBodyConditionUIData_TrenchFoot
/// Size: 0x0008 (0x0001A0 - 0x0001A8)
class UPrisonerBodyConditionUIData_TrenchFoot : public UPrisonerBodyConditionUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x01A0   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionCause
/// Size: 0x0008 (0x000028 - 0x000030)
class UPrisonerBodyConditionCause : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionCause_Sepsis
/// Size: 0x0008 (0x000030 - 0x000038)
class UPrisonerBodyConditionCause_Sepsis : public UPrisonerBodyConditionCause
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionCauseUIData
/// Size: 0x0008 (0x000028 - 0x000030)
class UPrisonerBodyConditionCauseUIData : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionCauseUIData_Sepsis
/// Size: 0x0008 (0x000030 - 0x000038)
class UPrisonerBodyConditionCauseUIData_Sepsis : public UPrisonerBodyConditionCauseUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionInteraction
/// Size: 0x0058 (0x000028 - 0x000080)
class UPrisonerBodyConditionInteraction : public UObject
{ 
public:
	FText                                              _name;                                                      // 0x0028   (0x0018)  
	float                                              _actionDurationVsPhysicianSkillLevel;                       // 0x0040   (0x0014)  
	float                                              _experiencePointsToGainVsPhysicianSkillLevel;               // 0x0054   (0x0014)  
	EPrisonerMontage                                   _beginInteractionMontage;                                   // 0x0068   (0x0001)  
	EPrisonerMontage                                   _endInteractionMontage;                                     // 0x0069   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x006A   (0x0006)  MISSED
	UAkAudioEvent*                                     _beginInteractionPatientAudioEvent;                         // 0x0070   (0x0008)  
	UAkAudioEvent*                                     _endInteractionPatientAudioEvent;                           // 0x0078   (0x0008)  
};

/// Class /Script/ConZ.PrisonerBodyConditionInteraction_RemoveBandages
/// Size: 0x0008 (0x000080 - 0x000088)
class UPrisonerBodyConditionInteraction_RemoveBandages : public UPrisonerBodyConditionInteraction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0080   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionInteractionQueryResults
/// Size: 0x0078 (0x000028 - 0x0000A0)
class UPrisonerBodyConditionInteractionQueryResults : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x78];                                      // 0x0028   (0x0078)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionInteractionItemTag
/// Size: 0x0030 (0x000030 - 0x000060)
class UPrisonerBodyConditionInteractionItemTag : public UBaseItemTag
{ 
public:
	TArray<UClass*>                                    SupportedConditions;                                        // 0x0030   (0x0010)  
	FText                                              InteractionCaption;                                         // 0x0040   (0x0018)  
	EPrisonerMontage                                   BeginInteractionMontage;                                    // 0x0058   (0x0001)  
	EPrisonerMontage                                   EndInteractionMontage;                                      // 0x0059   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x005A   (0x0006)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionTreatInteractionItemTag
/// Size: 0x0000 (0x000060 - 0x000060)
class UPrisonerBodyConditionTreatInteractionItemTag : public UPrisonerBodyConditionInteractionItemTag
{ 
public:
};

/// Class /Script/ConZ.PBCTIIT_ApplyBandagesOrDisinfect_Disinfect
/// Size: 0x0070 (0x000060 - 0x0000D0)
class UPBCTIIT_ApplyBandagesOrDisinfect_Disinfect : public UPrisonerBodyConditionTreatInteractionItemTag
{ 
public:
	TArray<float>                                      TreatmentDurationPerSeverityLevel;                          // 0x0060   (0x0010)  
	TArray<float>                                      TreatmentDurationPerUsePerSeverityLevel;                    // 0x0070   (0x0010)  
	FPBCTIIT_ApplyBandagesOrDisinfect_Disinfect_PerSkillData SkillData;                                            // 0x0080   (0x0050)  
};

/// Class /Script/ConZ.PBCTIIT_ApplyBandagesOrDisinfect_ApplyBandages
/// Size: 0x0080 (0x000060 - 0x0000E0)
class UPBCTIIT_ApplyBandagesOrDisinfect_ApplyBandages : public UPrisonerBodyConditionTreatInteractionItemTag
{ 
public:
	TArray<float>                                      TreatmentDurationPerSeverityLevel;                          // 0x0060   (0x0010)  
	TArray<float>                                      TreatmentDurationPerUsePerSeverityLevel;                    // 0x0070   (0x0010)  
	float                                              StabilizationDurationReduction;                             // 0x0080   (0x0004)  
	float                                              RecoveryDurationReduction;                                  // 0x0084   (0x0004)  
	UCurveFloat*                                       RecoveryDurationReductionMultiplierVsItemHealthRatio;       // 0x0088   (0x0008)  
	FPBCTIIT_ApplyBandagesOrDisinfect_ApplyBandages_PerSkillData SkillData;                                        // 0x0090   (0x0050)  
};

/// Class /Script/ConZ.PBCIQR_ApplyBandagesOrDisinfect_Disinfect
/// Size: 0x0008 (0x0000A0 - 0x0000A8)
class UPBCIQR_ApplyBandagesOrDisinfect_Disinfect : public UPrisonerBodyConditionInteractionQueryResults
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00A0   (0x0008)  MISSED
};

/// Class /Script/ConZ.PBCIQR_ApplyBandagesOrDisinfect_ApplyBandages
/// Size: 0x0020 (0x0000A0 - 0x0000C0)
class UPBCIQR_ApplyBandagesOrDisinfect_ApplyBandages : public UPrisonerBodyConditionInteractionQueryResults
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x00A0   (0x0020)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionTreatInteraction
/// Size: 0x0000 (0x000080 - 0x000080)
class UPrisonerBodyConditionTreatInteraction : public UPrisonerBodyConditionInteraction
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyConditionTreatInteraction_ApplyBandagesOrDisinfect
/// Size: 0x00A8 (0x000080 - 0x000128)
class UPrisonerBodyConditionTreatInteraction_ApplyBandagesOrDisinfect : public UPrisonerBodyConditionTreatInteraction
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0080   (0x0020)  MISSED
	FPBCTI_ApplyBandagesOrDisinfect_DisinfectData      _disinfectData;                                             // 0x00A0   (0x0038)  
	FPBCTI_ApplyBandagesOrDisinfect_ApplyBandagesData  _applyBandagesData;                                         // 0x00D8   (0x0050)  
};

/// Class /Script/ConZ.PBCTIIT_ApplyGel
/// Size: 0x0070 (0x000060 - 0x0000D0)
class UPBCTIIT_ApplyGel : public UPrisonerBodyConditionTreatInteractionItemTag
{ 
public:
	TArray<float>                                      TreatmentDurationPerSeverityLevel;                          // 0x0060   (0x0010)  
	TArray<float>                                      TreatmentDurationPerUsePerSeverityLevel;                    // 0x0070   (0x0010)  
	FPBCTIIT_ApplyGel_PerSkillData                     SkillData;                                                  // 0x0080   (0x0050)  
};

/// Class /Script/ConZ.PBCIQR_ApplyGel
/// Size: 0x0008 (0x0000A0 - 0x0000A8)
class UPBCIQR_ApplyGel : public UPrisonerBodyConditionInteractionQueryResults
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00A0   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionTreatInteraction_ApplyGel
/// Size: 0x0040 (0x000080 - 0x0000C0)
class UPrisonerBodyConditionTreatInteraction_ApplyGel : public UPrisonerBodyConditionTreatInteraction
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0080   (0x0008)  MISSED
	FPBCTI_ApplyGelData                                _applyGelData;                                              // 0x0088   (0x0038)  
};

/// Class /Script/ConZ.PrisonerBodyEffect_AntibioticsReaction
/// Size: 0x0090 (0x000040 - 0x0000D0)
class UPrisonerBodyEffect_AntibioticsReaction : public UPrisonerBodyEffect
{ 
public:
	UClass*                                            _uiDataClass;                                               // 0x0040   (0x0008)  
	FRuntimeFloatCurve                                 _immuneSystemEfficiencyModifierVsAntibioticsAmountRatio;    // 0x0048   (0x0088)  
};

/// Class /Script/ConZ.PrisonerBodyEffectUIData_AntibioticsReaction
/// Size: 0x0020 (0x000038 - 0x000058)
class UPrisonerBodyEffectUIData_AntibioticsReaction : public UPrisonerBodyEffectUIData
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0038   (0x0008)  MISSED
	FText                                              _name;                                                      // 0x0040   (0x0018)  
};

/// Class /Script/ConZ.PrisonerBodyEffect_Coma
/// Size: 0x0000 (0x000040 - 0x000040)
class UPrisonerBodyEffect_Coma : public UPrisonerBodyEffect
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyEffect_CoolingSwingItem
/// Size: 0x0008 (0x000040 - 0x000048)
class UPrisonerBodyEffect_CoolingSwingItem : public UPrisonerBodyEffect
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0040   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyEffect_Death
/// Size: 0x0000 (0x000040 - 0x000040)
class UPrisonerBodyEffect_Death : public UPrisonerBodyEffect
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyEffect_ExhaustionChange
/// Size: 0x0048 (0x000040 - 0x000088)
class UPrisonerBodyEffect_ExhaustionChange : public UPrisonerBodyEffect
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0040   (0x0030)  MISSED
	UClass*                                            _uiDataClass;                                               // 0x0070   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0078   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyEffectUIData_ExhaustionChange
/// Size: 0x0038 (0x000038 - 0x000070)
class UPrisonerBodyEffectUIData_ExhaustionChange : public UPrisonerBodyEffectUIData
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0038   (0x0008)  MISSED
	FText                                              _name;                                                      // 0x0040   (0x0018)  
	FText                                              _suffix;                                                    // 0x0058   (0x0018)  
};

/// Class /Script/ConZ.PrisonerBodyEffect_InfectionController
/// Size: 0x0090 (0x000040 - 0x0000D0)
class UPrisonerBodyEffect_InfectionController : public UPrisonerBodyEffect
{ 
public:
	FRuntimeFloatCurve                                 _passiveContaminationIncreaseRateVsContaminationRatio;      // 0x0040   (0x0088)  
	float                                              _contaminationSuppressionRate;                              // 0x00C8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00CC   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyEffect_Limping
/// Size: 0x0008 (0x000040 - 0x000048)
class UPrisonerBodyEffect_Limping : public UPrisonerBodyEffect
{ 
public:
	float                                              _duration;                                                  // 0x0040   (0x0004)  
	float                                              _elapsedTime;                                               // 0x0044   (0x0004)  
};

/// Class /Script/ConZ.PrisonerBodyEffect_NotificationCooldown
/// Size: 0x0010 (0x000040 - 0x000050)
class UPrisonerBodyEffect_NotificationCooldown : public UPrisonerBodyEffect
{ 
public:
	UClass*                                            _notificationClass;                                         // 0x0040   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0048   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyMuscleGroupToInfectionClassMappings
/// Size: 0x00C8 (0x000030 - 0x0000F8)
class UPrisonerBodyMuscleGroupToInfectionClassMappings : public UDataAsset
{ 
public:
	UClass*                                            _infectionClasses;                                          // 0x0030   (0x00C8)  
};

/// Class /Script/ConZ.AsepsisItemTag
/// Size: 0x0008 (0x000030 - 0x000038)
class UAsepsisItemTag : public UBaseItemTag
{ 
public:
	float                                              Asepsis;                                                    // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyInfectionStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UPrisonerBodyInfectionStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodySimulationComponent
/// Size: 0x0670 (0x0000B0 - 0x000720)
class UPrisonerBodySimulationComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x1B0];                                     // 0x00B0   (0x01B0)  MISSED
	UPrisonerBodySimulationData*                       _data;                                                      // 0x0260   (0x0008)  
	unsigned char                                      UnknownData01_5[0x2B0];                                     // 0x0268   (0x02B0)  MISSED
	TArray<UPrisonerBodyEffect*>                       _bodyEffects;                                               // 0x0518   (0x0010)  
	unsigned char                                      UnknownData02_5[0x178];                                     // 0x0528   (0x0178)  MISSED
	UMetabolism*                                       _metabolism;                                                // 0x06A0   (0x0008)  
	unsigned char                                      UnknownData03_5[0x20];                                      // 0x06A8   (0x0020)  MISSED
	uint64_t                                           _repState1;                                                 // 0x06C8   (0x0008)  
	uint64_t                                           _repState2;                                                 // 0x06D0   (0x0008)  
	uint64_t                                           _repState3;                                                 // 0x06D8   (0x0008)  
	uint64_t                                           _repState4;                                                 // 0x06E0   (0x0008)  
	uint64_t                                           _repState5;                                                 // 0x06E8   (0x0008)  
	char                                               _repState6;                                                 // 0x06F0   (0x0001)  
	unsigned char                                      UnknownData04_5[0x7];                                       // 0x06F1   (0x0007)  MISSED
	uint64_t                                           _repState7;                                                 // 0x06F8   (0x0008)  
	uint64_t                                           _repState8;                                                 // 0x0700   (0x0008)  
	TArray<UPrisonerBodyEffect*>                       _repBodyEffects;                                            // 0x0708   (0x0010)  
	unsigned char                                      UnknownData05_6[0x8];                                       // 0x0718   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.PrisonerBodySimulationComponent.OnRep_State8
	void OnRep_State8();                                                                                                     // [0x2397e20] Final|Native|Private 
	// Function /Script/ConZ.PrisonerBodySimulationComponent.OnRep_State7
	void OnRep_State7();                                                                                                     // [0x2397e00] Final|Native|Private 
	// Function /Script/ConZ.PrisonerBodySimulationComponent.OnRep_State6
	void OnRep_State6();                                                                                                     // [0x2397de0] Final|Native|Private 
	// Function /Script/ConZ.PrisonerBodySimulationComponent.OnRep_State5
	void OnRep_State5();                                                                                                     // [0x2397dc0] Final|Native|Private 
	// Function /Script/ConZ.PrisonerBodySimulationComponent.OnRep_State4
	void OnRep_State4();                                                                                                     // [0x2397da0] Final|Native|Private 
	// Function /Script/ConZ.PrisonerBodySimulationComponent.OnRep_State3
	void OnRep_State3();                                                                                                     // [0x2397d80] Final|Native|Private 
	// Function /Script/ConZ.PrisonerBodySimulationComponent.OnRep_State2
	void OnRep_State2();                                                                                                     // [0x2397d60] Final|Native|Private 
	// Function /Script/ConZ.PrisonerBodySimulationComponent.OnRep_State1
	void OnRep_State1();                                                                                                     // [0x2397d40] Final|Native|Private 
	// Function /Script/ConZ.PrisonerBodySimulationComponent.OnRep_BodyEffects
	void OnRep_BodyEffects();                                                                                                // [0x2397d20] Final|Native|Private 
};

/// Class /Script/ConZ.PrisonerBodySimulationData
/// Size: 0x06D8 (0x000030 - 0x000708)
class UPrisonerBodySimulationData : public UDataAsset
{ 
public:
	FRuntimeFloatCurve                                 MaxStrengthGainRateVsStrength;                              // 0x0030   (0x0088)  
	float                                              StrengthLossPerMissingProtein;                              // 0x00B8   (0x0004)  
	float                                              MaxConstitutionGainRate;                                    // 0x00BC   (0x0004)  
	float                                              MaxConstitutionLossRate;                                    // 0x00C0   (0x0004)  
	float                                              DexterityChangePerStorageFatEnergy;                         // 0x00C4   (0x0004)  
	float                                              IntelligenceExperiencePercentagePerAttribute;               // 0x00C8   (0x0004)  
	float                                              IntelligenceLossOnSuicide;                                  // 0x00CC   (0x0004)  
	float                                              MaxBleedingSeverity;                                        // 0x00D0   (0x0004)  
	FFloatInterval                                     BleedOutDurationVsBleedingSeverity;                         // 0x00D4   (0x0008)  
	FFloatInterval                                     BleedOutDurationMultiplierVsConstitution;                   // 0x00DC   (0x0008)  
	float                                              MaxBurnSeverity;                                            // 0x00E4   (0x0004)  
	FRuntimeFloatCurve                                 DamageRatioVsBloodLossRatio;                                // 0x00E8   (0x0088)  
	FFloatInterval                                     HealingSpeedMultiplierVsConstitution;                       // 0x0170   (0x0008)  
	FRuntimeFloatCurve                                 HealingSpeedMultiplierVsActionDifficultyRatio;              // 0x0178   (0x0088)  
	FFloatInterval                                     ImmuneSystemEfficiencyMultiplierVsConstitution;             // 0x0200   (0x0008)  
	FRuntimeFloatCurve                                 ImmuneSystemEfficiencyMultiplierVsActionDifficultyRatio;    // 0x0208   (0x0088)  
	FPrisonerActionDifficultyCurve                     StaminaChangeRateVsActionDifficulty;                        // 0x0290   (0x0018)  
	float                                              ExhaustionIncrement;                                        // 0x02A8   (0x0004)  
	float                                              ExhaustionFallRate;                                         // 0x02AC   (0x0004)  
	float                                              ExhaustionFallRateMultiplierWhenLyingOnFurniture;           // 0x02B0   (0x0004)  
	float                                              ExhaustionBonusModifierPerConsumedItem;                     // 0x02B4   (0x0004)  
	float                                              ExhaustionBonusMaxModifier;                                 // 0x02B8   (0x0004)  
	float                                              MaxStaminaReductionIncreaseMultiplier;                      // 0x02BC   (0x0004)  
	FPrisonerActionDifficultyCurve                     HeartRateRatioVsActionDifficulty;                           // 0x02C0   (0x0018)  
	float                                              HeartRateRaiseInterpSpeed;                                  // 0x02D8   (0x0004)  
	float                                              HeartRateFallRate;                                          // 0x02DC   (0x0004)  
	float                                              BreathingRateInterpSpeed;                                   // 0x02E0   (0x0004)  
	FPrisonerActionDifficultyCurve                     OxygenSaturationRaiseRateVsActionDifficulty;                // 0x02E4   (0x0018)  
	FPrisonerActionDifficultyCurve                     OxygenSaturationFallRateVsActionDifficulty;                 // 0x02FC   (0x0018)  
	float                                              PreferredEnvironmentTemperatureWhenNaked;                   // 0x0314   (0x0004)  
	FRuntimeFloatCurve                                 PhoenixTearsDiscardRateVsAmount;                            // 0x0318   (0x0088)  
	FRuntimeFloatCurve                                 HealingSpeedMultiplierVsPhoenixTearsAmount;                 // 0x03A0   (0x0088)  
	FRuntimeFloatCurve                                 ImmuneSystemEfficiencyMultiplierVsPhoenixTearsAmount;       // 0x0428   (0x0088)  
	UClass*                                            MetabolismClass;                                            // 0x04B0   (0x0008)  
	float                                              MetabolismUpdateInterval;                                   // 0x04B8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x04BC   (0x0004)  MISSED
	FRuntimeFloatCurve                                 CaloriesConsumptionMultiplierVsHeartRateRatio;              // 0x04C0   (0x0088)  
	FRuntimeFloatCurve                                 WaterConsumptionMultiplierVsHeartRateRatio;                 // 0x0548   (0x0088)  
	FFloatInterval                                     NutrientsConsumptionFactorVsConstitutionRatio;              // 0x05D0   (0x0008)  
	float                                              StomachFullnessToBeAbleToVomit;                             // 0x05D8   (0x0004)  
	float                                              BladderFullnessToBeAbleToUrinate;                           // 0x05DC   (0x0004)  
	float                                              ColonFullnessToBeAbleToDefecate;                            // 0x05E0   (0x0004)  
	float                                              ColonWaterContentRatioToHaveDiarrhea;                       // 0x05E4   (0x0004)  
	FFloatInterval                                     ConsumptionDurationMultiplierVsEatingSpeed;                 // 0x05E8   (0x0008)  
	TMap<FGameplayTag, float>                          ConsumptionDurations;                                       // 0x05F0   (0x0050)  
	FPrisonerBodySimulationData_ConsumableDigestionHandlersForValueRanges DigestionHandlersPerConsumableHealthRatios; // 0x0640   (0x0010)  
	FPrisonerBodySimulationData_ConsumableDigestionHandlersForValueRanges DigestionHandlersPerConsumableFatsContentRatios; // 0x0650   (0x0010)  
	TMap<ENutrient, FPrisonerBodySimulationData_ConsumableDigestionHandlersForValueRanges> DigestionHandlersPerConsumableNutrientContentRatios; // 0x0660   (0x0050)  
	FPrisonerBodySimulationData_Effects                Effects;                                                    // 0x06B0   (0x0058)  
};

/// Class /Script/ConZ.PrisonerBodySimulationSave
/// Size: 0x00A0 (0x000028 - 0x0000C8)
class UPrisonerBodySimulationSave : public UObject
{ 
public:
	bool                                               IsDead;                                                     // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0029   (0x0007)  MISSED
	double                                             BaseStrength;                                               // 0x0030   (0x0008)  
	double                                             BaseConstitution;                                           // 0x0038   (0x0008)  
	double                                             BaseDexterity;                                              // 0x0040   (0x0008)  
	double                                             BaseIntelligence;                                           // 0x0048   (0x0008)  
	float                                              InitialAge;                                                 // 0x0050   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0054   (0x0004)  MISSED
	double                                             LifeTimeSinceInitialization;                                // 0x0058   (0x0008)  
	double                                             LifeTimeSinceSpawn;                                         // 0x0060   (0x0008)  
	int64_t                                            TimeOfDeath;                                                // 0x0068   (0x0008)  
	int64_t                                            TimeOfRevive;                                               // 0x0070   (0x0008)  
	int64_t                                            TimeOfComa;                                                 // 0x0078   (0x0008)  
	int64_t                                            TimeOfComaWakeUp;                                           // 0x0080   (0x0008)  
	float                                              Stamina;                                                    // 0x0088   (0x0004)  
	float                                              AccumulatedFatigue;                                         // 0x008C   (0x0004)  
	float                                              HeartRate;                                                  // 0x0090   (0x0004)  
	float                                              BreathingRate;                                              // 0x0094   (0x0004)  
	float                                              OxygenSaturation;                                           // 0x0098   (0x0004)  
	float                                              BodyTemperature;                                            // 0x009C   (0x0004)  
	float                                              PhoenixTearsAmount;                                         // 0x00A0   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x00A4   (0x0004)  MISSED
	TArray<FPrisonerBodyEffectSave>                    BodyEffects;                                                // 0x00A8   (0x0010)  
	TArray<char>                                       Metabolism;                                                 // 0x00B8   (0x0010)  
};

/// Class /Script/ConZ.PrisonerBodySimulationStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UPrisonerBodySimulationStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.PrisonerUIDataController
/// Size: 0x0130 (0x000028 - 0x000158)
class UPrisonerUIDataController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0028   (0x0020)  MISSED
	UPrisonerBodySimulationUIController*               BodySimulationUIController;                                 // 0x0048   (0x0008)  
	UPrisonerSkillComponentUIController*               SkillComponentUIController;                                 // 0x0050   (0x0008)  
	UPrisonerTreatmentUIController*                    TreatmentUIController;                                      // 0x0058   (0x0008)  
	unsigned char                                      UnknownData01_5[0x48];                                      // 0x0060   (0x0048)  MISSED
	UPrisonerUIData*                                   _prisonerUIData;                                            // 0x00A8   (0x0008)  
	UPrisonerUITooltipCache*                           _tooltipCache;                                              // 0x00B0   (0x0008)  
	unsigned char                                      UnknownData02_6[0xA0];                                      // 0x00B8   (0x00A0)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySimulationUIController
/// Size: 0x01C0 (0x000028 - 0x0001E8)
class UPrisonerBodySimulationUIController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x1C0];                                     // 0x0028   (0x01C0)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySimulationUIDataImpl
/// Size: 0x00B8 (0x000058 - 0x000110)
class UPrisonerBodySimulationUIDataImpl : public UPrisonerBodySimulationUIData
{ 
public:
	unsigned char                                      UnknownData00_2[0xA0];                                      // 0x0058   (0x00A0)  MISSED
	TArray<UPrisonerBodyEffectUIData*>                 BodyEffectsUIData;                                          // 0x00F8   (0x0010)  
	UPrisonerMetabolismUIData*                         MetabolismUIData;                                           // 0x0108   (0x0008)  
};

/// Class /Script/ConZ.PrisonerBodySimulationUIStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UPrisonerBodySimulationUIStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodySymptom
/// Size: 0x0018 (0x0000A0 - 0x0000B8)
class UPrisonerBodySymptom : public UPrisonerBodyConditionOrSymptom
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x00A0   (0x0010)  MISSED
	UPrisonerBodySymptomNotifier*                      _notifier;                                                  // 0x00B0   (0x0008)  
};

/// Class /Script/ConZ.PrisonerBodySymptom_AttributeChange
/// Size: 0x0050 (0x0000B8 - 0x000108)
class UPrisonerBodySymptom_AttributeChange : public UPrisonerBodySymptom
{ 
public:
	TSet<UClass*>                                      _attributeModifierForeignSubstanceClasses;                  // 0x00B8   (0x0050)  
};

/// Class /Script/ConZ.PrisonerBodySymptomUIData
/// Size: 0x0018 (0x000090 - 0x0000A8)
class UPrisonerBodySymptomUIData : public UPrisonerBodyConditionOrSymptomUIData
{ 
public:
	bool                                               _shouldCreateTooltipElementForSeverity;                     // 0x0090   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0091   (0x0007)  MISSED
	TArray<UPrisonerBodySymptomCauseUIData*>           _causes;                                                    // 0x0098   (0x0010)  
};

/// Class /Script/ConZ.PrisonerBodySymptomUIData_AttributeChange
/// Size: 0x0010 (0x0000A8 - 0x0000B8)
class UPrisonerBodySymptomUIData_AttributeChange : public UPrisonerBodySymptomUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00A8   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomCause
/// Size: 0x0008 (0x000028 - 0x000030)
class UPrisonerBodySymptomCause : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_Bleeding
/// Size: 0x0008 (0x000030 - 0x000038)
class UPrisonerBodySymptomCause_Bleeding : public UPrisonerBodySymptomCause
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptom_Bleeding
/// Size: 0x01A8 (0x0000B8 - 0x000260)
class UPrisonerBodySymptom_Bleeding : public UPrisonerBodySymptom
{ 
public:
	FRuntimeFloatCurve                                 _vignetteEffectIntensityVsSeverityRatio;                    // 0x00B8   (0x0088)  
	FRuntimeFloatCurve                                 _vignetteEffectPulsationFrequencyVsSeverityRatio;           // 0x0140   (0x0088)  
	FRuntimeFloatCurve                                 _vignetteEffectSeverityRatioMultiplierVsHealthRatio;        // 0x01C8   (0x0088)  
	float                                              _vignetteEffectIntensityInterpSpeed;                        // 0x0250   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0254   (0x0004)  MISSED
	float                                              _vignetteEffectFrequencyInterpSpeed;                        // 0x0258   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x025C   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomUIData_Bleeding
/// Size: 0x0008 (0x0000A8 - 0x0000B0)
class UPrisonerBodySymptomUIData_Bleeding : public UPrisonerBodySymptomUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00A8   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_BloodshotEyes
/// Size: 0x0008 (0x000030 - 0x000038)
class UPrisonerBodySymptomCause_BloodshotEyes : public UPrisonerBodySymptomCause
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptom_BloodshotEyes
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UPrisonerBodySymptom_BloodshotEyes : public UPrisonerBodySymptom
{ 
public:
	float                                              _maxSeverity;                                               // 0x00B8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00BC   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_BloodshotEyes
/// Size: 0x00A0 (0x000030 - 0x0000D0)
class UPrisonerBodyConditionOrSymptomSideEffect_BloodshotEyes : public UPrisonerBodyConditionOrSymptomSideEffect
{ 
public:
	UClass*                                            _symptomClass;                                              // 0x0030   (0x0008)  
	UPrisonerBodySymptomCause_BloodshotEyes*           _symptomCause;                                              // 0x0038   (0x0008)  
	FRuntimeFloatCurve                                 _intensityVsSeverity;                                       // 0x0040   (0x0088)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x00C8   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_BlurredVision
/// Size: 0x0010 (0x000030 - 0x000040)
class UPrisonerBodySymptomCause_BlurredVision : public UPrisonerBodySymptomCause
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0030   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptom_BlurredVision
/// Size: 0x0018 (0x0000B8 - 0x0000D0)
class UPrisonerBodySymptom_BlurredVision : public UPrisonerBodySymptom
{ 
public:
	unsigned char                                      UnknownData00_2[0xC];                                       // 0x00B8   (0x000C)  MISSED
	float                                              _repOffset;                                                 // 0x00C4   (0x0004)  
	float                                              _repFalloff;                                                // 0x00C8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x00CC   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomUIData_BlurredVision
/// Size: 0x0000 (0x0000A8 - 0x0000A8)
class UPrisonerBodySymptomUIData_BlurredVision : public UPrisonerBodySymptomUIData
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_BlurredVision
/// Size: 0x01A8 (0x000030 - 0x0001D8)
class UPrisonerBodyConditionOrSymptomSideEffect_BlurredVision : public UPrisonerBodyConditionOrSymptomSideEffect
{ 
public:
	UClass*                                            _symptomClass;                                              // 0x0030   (0x0008)  
	UPrisonerBodySymptomCause_BlurredVision*           _symptomCause;                                              // 0x0038   (0x0008)  
	FRuntimeFloatCurve                                 _intensityVsSeverity;                                       // 0x0040   (0x0088)  
	FRuntimeFloatCurve                                 _offsetVsSeverity;                                          // 0x00C8   (0x0088)  
	FRuntimeFloatCurve                                 _falloffVsSeverity;                                         // 0x0150   (0x0088)  
};

/// Class /Script/ConZ.PrisonerBodySymptom_BoostOfEnergy
/// Size: 0x0090 (0x0000B8 - 0x000148)
class UPrisonerBodySymptom_BoostOfEnergy : public UPrisonerBodySymptom
{ 
public:
	FRuntimeFloatCurve                                 _severityVsEnergyBoosterSubstanceAmountRatio;               // 0x00B8   (0x0088)  
	UClass*                                            _energyBoosterSubstanceClass;                               // 0x0140   (0x0008)  
};

/// Class /Script/ConZ.PrisonerBodySymptomUIData_BoostOfEnergy
/// Size: 0x0028 (0x0000A8 - 0x0000D0)
class UPrisonerBodySymptomUIData_BoostOfEnergy : public UPrisonerBodySymptomUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x00A8   (0x0028)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptom_BreathingObstructed
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UPrisonerBodySymptom_BreathingObstructed : public UPrisonerBodySymptom
{ 
public:
	float                                              _maxSeverity;                                               // 0x00B8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00BC   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomUIData_BreathingObstructed
/// Size: 0x0000 (0x0000A8 - 0x0000A8)
class UPrisonerBodySymptomUIData_BreathingObstructed : public UPrisonerBodySymptomUIData
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_PeriodicSound
/// Size: 0x0008 (0x000030 - 0x000038)
class UPrisonerBodySymptomCause_PeriodicSound : public UPrisonerBodySymptomCause
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_Burping
/// Size: 0x0000 (0x000038 - 0x000038)
class UPrisonerBodySymptomCause_Burping : public UPrisonerBodySymptomCause_PeriodicSound
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodySymptom_PeriodicSound
/// Size: 0x0020 (0x0000B8 - 0x0000D8)
class UPrisonerBodySymptom_PeriodicSound : public UPrisonerBodySymptom
{ 
public:
	UAkAudioEvent*                                     _sound;                                                     // 0x00B8   (0x0008)  
	FFloatInterval                                     _soundInitialDelay;                                         // 0x00C0   (0x0008)  
	FFloatInterval                                     _soundIntervalDeviationRatio;                               // 0x00C8   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x00D0   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.PrisonerBodySymptom_PeriodicSound.NetMulticast_PlaySound
	void NetMulticast_PlaySound();                                                                                           // [0x239e590] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/ConZ.PrisonerBodySymptom_Burping
/// Size: 0x0000 (0x0000D8 - 0x0000D8)
class UPrisonerBodySymptom_Burping : public UPrisonerBodySymptom_PeriodicSound
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_PeriodicAffect
/// Size: 0x0010 (0x000030 - 0x000040)
class UPrisonerBodySymptomCause_PeriodicAffect : public UPrisonerBodySymptomCause
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0030   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_Diarrhea
/// Size: 0x0000 (0x000040 - 0x000040)
class UPrisonerBodySymptomCause_Diarrhea : public UPrisonerBodySymptomCause_PeriodicAffect
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodySymptom_PeriodicAffect
/// Size: 0x0030 (0x0000B8 - 0x0000E8)
class UPrisonerBodySymptom_PeriodicAffect : public UPrisonerBodySymptom
{ 
public:
	FFloatInterval                                     _affectIntervalDeviationRatio;                              // 0x00B8   (0x0008)  
	FFloatInterval                                     _affectDurationDeviationRatio;                              // 0x00C0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x00C8   (0x0020)  MISSED


	/// Functions
	// Function /Script/ConZ.PrisonerBodySymptom_PeriodicAffect.Client_PendAffect
	void Client_PendAffect(float Duration, float Intensity);                                                                 // [0x239e4c0] Final|Net|NetReliableNative|Event|Private|NetClient 
};

/// Class /Script/ConZ.PrisonerBodySymptom_Diarrhea
/// Size: 0x0000 (0x0000E8 - 0x0000E8)
class UPrisonerBodySymptom_Diarrhea : public UPrisonerBodySymptom_PeriodicAffect
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_Disorientation
/// Size: 0x0008 (0x000030 - 0x000038)
class UPrisonerBodySymptomCause_Disorientation : public UPrisonerBodySymptomCause
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptom_Disorientation
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UPrisonerBodySymptom_Disorientation : public UPrisonerBodySymptom
{ 
public:
	float                                              _maxSeverity;                                               // 0x00B8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00BC   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_Disorientation
/// Size: 0x00A0 (0x000030 - 0x0000D0)
class UPrisonerBodyConditionOrSymptomSideEffect_Disorientation : public UPrisonerBodyConditionOrSymptomSideEffect
{ 
public:
	UClass*                                            _symptomClass;                                              // 0x0030   (0x0008)  
	UPrisonerBodySymptomCause_Disorientation*          _symptomCause;                                              // 0x0038   (0x0008)  
	FRuntimeFloatCurve                                 _intensityVsSeverity;                                       // 0x0040   (0x0088)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x00C8   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_Dizziness
/// Size: 0x0000 (0x000040 - 0x000040)
class UPrisonerBodySymptomCause_Dizziness : public UPrisonerBodySymptomCause_PeriodicAffect
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodySymptom_Dizziness
/// Size: 0x0090 (0x0000E8 - 0x000178)
class UPrisonerBodySymptom_Dizziness : public UPrisonerBodySymptom_PeriodicAffect
{ 
public:
	FRuntimeFloatCurve                                 _blackoutIntensityVsElapsedTime;                            // 0x00E8   (0x0088)  
	float                                              _unconsciousnessDelay;                                      // 0x0170   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0174   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_DoubleVision
/// Size: 0x0008 (0x000030 - 0x000038)
class UPrisonerBodySymptomCause_DoubleVision : public UPrisonerBodySymptomCause
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptom_DoubleVision
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UPrisonerBodySymptom_DoubleVision : public UPrisonerBodySymptom
{ 
public:
	float                                              _maxSeverity;                                               // 0x00B8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00BC   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_DoubleVision
/// Size: 0x00A0 (0x000030 - 0x0000D0)
class UPrisonerBodyConditionOrSymptomSideEffect_DoubleVision : public UPrisonerBodyConditionOrSymptomSideEffect
{ 
public:
	UClass*                                            _symptomClass;                                              // 0x0030   (0x0008)  
	UPrisonerBodySymptomCause_DoubleVision*            _symptomCause;                                              // 0x0038   (0x0008)  
	FRuntimeFloatCurve                                 _intensityVsSeverity;                                       // 0x0040   (0x0088)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x00C8   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_EyePressure
/// Size: 0x0008 (0x000030 - 0x000038)
class UPrisonerBodySymptomCause_EyePressure : public UPrisonerBodySymptomCause
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptom_EyePressure
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UPrisonerBodySymptom_EyePressure : public UPrisonerBodySymptom
{ 
public:
	float                                              _maxSeverity;                                               // 0x00B8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00BC   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_EyePressure
/// Size: 0x00A0 (0x000030 - 0x0000D0)
class UPrisonerBodyConditionOrSymptomSideEffect_EyePressure : public UPrisonerBodyConditionOrSymptomSideEffect
{ 
public:
	UClass*                                            _symptomClass;                                              // 0x0030   (0x0008)  
	UPrisonerBodySymptomCause_EyePressure*             _symptomCause;                                              // 0x0038   (0x0008)  
	FRuntimeFloatCurve                                 _intensityVsSeverity;                                       // 0x0040   (0x0088)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x00C8   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_Farting
/// Size: 0x0000 (0x000038 - 0x000038)
class UPrisonerBodySymptomCause_Farting : public UPrisonerBodySymptomCause_PeriodicSound
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodySymptom_Farting
/// Size: 0x0000 (0x0000D8 - 0x0000D8)
class UPrisonerBodySymptom_Farting : public UPrisonerBodySymptom_PeriodicSound
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_Fatigue
/// Size: 0x0008 (0x000030 - 0x000038)
class UPrisonerBodySymptomCause_Fatigue : public UPrisonerBodySymptomCause
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptom_Fatigue
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UPrisonerBodySymptom_Fatigue : public UPrisonerBodySymptom
{ 
public:
	float                                              _maxSeverity;                                               // 0x00B8   (0x0004)  
	float                                              _maxSeverityMaxStaminaModifier;                             // 0x00BC   (0x0004)  
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_Fatigue
/// Size: 0x00A0 (0x000030 - 0x0000D0)
class UPrisonerBodyConditionOrSymptomSideEffect_Fatigue : public UPrisonerBodyConditionOrSymptomSideEffect
{ 
public:
	UClass*                                            _symptomClass;                                              // 0x0030   (0x0008)  
	UPrisonerBodySymptomCause_Fatigue*                 _symptomCause;                                              // 0x0038   (0x0008)  
	FRuntimeFloatCurve                                 _maxStaminaModifierVsSeverity;                              // 0x0040   (0x0088)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x00C8   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomUIData_Fatigue
/// Size: 0x0008 (0x0000A8 - 0x0000B0)
class UPrisonerBodySymptomUIData_Fatigue : public UPrisonerBodySymptomUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00A8   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomCauseUIData
/// Size: 0x0008 (0x000028 - 0x000030)
class UPrisonerBodySymptomCauseUIData : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomCauseUIData_Fatigue
/// Size: 0x0008 (0x000030 - 0x000038)
class UPrisonerBodySymptomCauseUIData_Fatigue : public UPrisonerBodySymptomCauseUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptom_FeelingCold
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UPrisonerBodySymptom_FeelingCold : public UPrisonerBodySymptom
{ 
public:
	float                                              _maxSeverity;                                               // 0x00B8   (0x0004)  
	float                                              _temperatureDeltaAtMaxSeverity;                             // 0x00BC   (0x0004)  
};

/// Class /Script/ConZ.PrisonerBodySymptomUIData_FeelingCold
/// Size: 0x0000 (0x0000A8 - 0x0000A8)
class UPrisonerBodySymptomUIData_FeelingCold : public UPrisonerBodySymptomUIData
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodySymptom_FeelingHot
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UPrisonerBodySymptom_FeelingHot : public UPrisonerBodySymptom
{ 
public:
	float                                              _maxSeverity;                                               // 0x00B8   (0x0004)  
	float                                              _temperatureDeltaAtMaxSeverity;                             // 0x00BC   (0x0004)  
};

/// Class /Script/ConZ.PrisonerBodySymptomUIData_FeelingHot
/// Size: 0x0000 (0x0000A8 - 0x0000A8)
class UPrisonerBodySymptomUIData_FeelingHot : public UPrisonerBodySymptomUIData
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_Hallucinations
/// Size: 0x0008 (0x000030 - 0x000038)
class UPrisonerBodySymptomCause_Hallucinations : public UPrisonerBodySymptomCause
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptom_Hallucinations
/// Size: 0x0170 (0x0000B8 - 0x000228)
class UPrisonerBodySymptom_Hallucinations : public UPrisonerBodySymptom
{ 
public:
	TArray<FPrisonerHallucinationSymptomSeverityLevelParams> _severityLevelParams;                                 // 0x00B8   (0x0010)  
	UClass*                                            _hallucinationEpisodeClass;                                 // 0x00C8   (0x0008)  
	TArray<FPrisonerHallucinationIllusionInfo>         _hallucinationIllusionInfosSP;                              // 0x00D0   (0x0010)  
	TArray<FPrisonerHallucinationIllusionInfo>         _hallucinationIllusionInfosMP;                              // 0x00E0   (0x0010)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x00F0   (0x0010)  MISSED
	FRuntimeFloatCurve                                 _effectsIntensityVsElapsedTimePeriod;                       // 0x0100   (0x0088)  
	float                                              _effectsBlendInDuration;                                    // 0x0188   (0x0004)  
	float                                              _effectsFrequencyMultiplier;                                // 0x018C   (0x0004)  
	FRuntimeFloatCurve                                 _effectsIntensityScaleVsSeverityRatio;                      // 0x0190   (0x0088)  
	float                                              _visualEffectsIntensityScale;                               // 0x0218   (0x0004)  
	float                                              _soundEffectsIntensityScale;                                // 0x021C   (0x0004)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0220   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_Hallucinations
/// Size: 0x0098 (0x000030 - 0x0000C8)
class UPrisonerBodyConditionOrSymptomSideEffect_Hallucinations : public UPrisonerBodyConditionOrSymptomSideEffect
{ 
public:
	UClass*                                            _symptomClass;                                              // 0x0030   (0x0008)  
	UPrisonerBodySymptomCause_Hallucinations*          _symptomCause;                                              // 0x0038   (0x0008)  
	FRuntimeFloatCurve                                 _hallucinationsSeverityVsSeverity;                          // 0x0040   (0x0088)  
};

/// Class /Script/ConZ.PrisonerHallucinationEpisode
/// Size: 0x00E8 (0x000028 - 0x000110)
class UPrisonerHallucinationEpisode : public UObject
{ 
public:
	UAkAudioEvent*                                     _begunAudioEvent;                                           // 0x0028   (0x0008)  
	UAkAudioEvent*                                     _endedAudioEvent;                                           // 0x0030   (0x0008)  
	FRuntimeFloatCurve                                 _visualEffectIntensityVsTime;                               // 0x0038   (0x0088)  
	float                                              _illusionsPreSpawnEffectsDelay;                             // 0x00C0   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00C4   (0x0004)  MISSED
	UAkAudioEvent*                                     _illusionsPreSpawnAudioEvent;                               // 0x00C8   (0x0008)  
	float                                              _spawnIllusionsDelay;                                       // 0x00D0   (0x0004)  
	unsigned char                                      UnknownData01_5[0x2C];                                      // 0x00D4   (0x002C)  MISSED
	TArray<UClass*>                                    _loadedIllusionClasses;                                     // 0x0100   (0x0010)  
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_HeightenedSenses
/// Size: 0x0008 (0x000030 - 0x000038)
class UPrisonerBodySymptomCause_HeightenedSenses : public UPrisonerBodySymptomCause
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptom_HeightenedSenses
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UPrisonerBodySymptom_HeightenedSenses : public UPrisonerBodySymptom
{ 
public:
	float                                              _maxSeverity;                                               // 0x00B8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00BC   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_HeightenedSenses
/// Size: 0x00A0 (0x000030 - 0x0000D0)
class UPrisonerBodyConditionOrSymptomSideEffect_HeightenedSenses : public UPrisonerBodyConditionOrSymptomSideEffect
{ 
public:
	UClass*                                            _symptomClass;                                              // 0x0030   (0x0008)  
	UPrisonerBodySymptomCause_HeightenedSenses*        _symptomCause;                                              // 0x0038   (0x0008)  
	FRuntimeFloatCurve                                 _intensityVsSeverity;                                       // 0x0040   (0x0088)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x00C8   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptom_Hunger
/// Size: 0x0088 (0x0000B8 - 0x000140)
class UPrisonerBodySymptom_Hunger : public UPrisonerBodySymptom
{ 
public:
	FRuntimeFloatCurve                                 _severityVsEnergyRatio;                                     // 0x00B8   (0x0088)  
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_Leukopenia
/// Size: 0x0008 (0x000030 - 0x000038)
class UPrisonerBodySymptomCause_Leukopenia : public UPrisonerBodySymptomCause
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptom_Leukopenia
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UPrisonerBodySymptom_Leukopenia : public UPrisonerBodySymptom
{ 
public:
	float                                              _maxSeverity;                                               // 0x00B8   (0x0004)  
	float                                              _maxSeverityImmuneSystemEfficiencyModifier;                 // 0x00BC   (0x0004)  
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_Leukopenia
/// Size: 0x00A0 (0x000030 - 0x0000D0)
class UPrisonerBodyConditionOrSymptomSideEffect_Leukopenia : public UPrisonerBodyConditionOrSymptomSideEffect
{ 
public:
	UClass*                                            _symptomClass;                                              // 0x0030   (0x0008)  
	UPrisonerBodySymptomCause_Leukopenia*              _symptomCause;                                              // 0x0038   (0x0008)  
	FRuntimeFloatCurve                                 _immuneSystemEfficiencyModifierVsSeverity;                  // 0x0040   (0x0088)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x00C8   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomUIData_Leukopenia
/// Size: 0x0008 (0x0000A8 - 0x0000B0)
class UPrisonerBodySymptomUIData_Leukopenia : public UPrisonerBodySymptomUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00A8   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomCauseUIData_Leukopenia
/// Size: 0x0008 (0x000030 - 0x000038)
class UPrisonerBodySymptomCauseUIData_Leukopenia : public UPrisonerBodySymptomCauseUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_Nausea
/// Size: 0x0008 (0x000030 - 0x000038)
class UPrisonerBodySymptomCause_Nausea : public UPrisonerBodySymptomCause
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptom_Nausea
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UPrisonerBodySymptom_Nausea : public UPrisonerBodySymptom
{ 
public:
	float                                              _maxSeverity;                                               // 0x00B8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00BC   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomUIData_Nausea
/// Size: 0x0008 (0x0000A8 - 0x0000B0)
class UPrisonerBodySymptomUIData_Nausea : public UPrisonerBodySymptomUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00A8   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptom_NeedToDefecate
/// Size: 0x0088 (0x0000B8 - 0x000140)
class UPrisonerBodySymptom_NeedToDefecate : public UPrisonerBodySymptom
{ 
public:
	FRuntimeFloatCurve                                 _severityVsColonFullness;                                   // 0x00B8   (0x0088)  
};

/// Class /Script/ConZ.PrisonerBodySymptom_NeedToUrinate
/// Size: 0x0088 (0x0000B8 - 0x000140)
class UPrisonerBodySymptom_NeedToUrinate : public UPrisonerBodySymptom
{ 
public:
	FRuntimeFloatCurve                                 _severityVsBladderFullness;                                 // 0x00B8   (0x0088)  
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_Pain
/// Size: 0x0010 (0x000030 - 0x000040)
class UPrisonerBodySymptomCause_Pain : public UPrisonerBodySymptomCause
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0030   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptom_Pain
/// Size: 0x0010 (0x0000B8 - 0x0000C8)
class UPrisonerBodySymptom_Pain : public UPrisonerBodySymptom
{ 
public:
	float                                              _maxSeverity;                                               // 0x00B8   (0x0004)  
	FFloatInterval                                     _painSuppressorsRatioForPainToBeSuppressedVsConstitution;   // 0x00BC   (0x0008)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00C4   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomUIData_Pain
/// Size: 0x0018 (0x0000A8 - 0x0000C0)
class UPrisonerBodySymptomUIData_Pain : public UPrisonerBodySymptomUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x00A8   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_PeriodicAffect
/// Size: 0x0130 (0x000030 - 0x000160)
class UPrisonerBodyConditionOrSymptomSideEffect_PeriodicAffect : public UPrisonerBodyConditionOrSymptomSideEffect
{ 
public:
	UClass*                                            _symptomClass;                                              // 0x0030   (0x0008)  
	UPrisonerBodySymptomCause_PeriodicAffect*          _symptomCause;                                              // 0x0038   (0x0008)  
	FRuntimeFloatCurve                                 _intervalVsSeverity;                                        // 0x0040   (0x0088)  
	FRuntimeFloatCurve                                 _chanceVsSeverity;                                          // 0x00C8   (0x0088)  
	FFloatInterval                                     _durationVsConstitution;                                    // 0x0150   (0x0008)  
	FFloatInterval                                     _intensityVsConstitution;                                   // 0x0158   (0x0008)  
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_PhoenixTearsPresence
/// Size: 0x0000 (0x000030 - 0x000030)
class UPrisonerBodySymptomCause_PhoenixTearsPresence : public UPrisonerBodySymptomCause
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodySymptom_PhoenixTearsPresence
/// Size: 0x0000 (0x0000B8 - 0x0000B8)
class UPrisonerBodySymptom_PhoenixTearsPresence : public UPrisonerBodySymptom
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodySymptomUIData_PhoenixTearsPresence
/// Size: 0x0008 (0x0000A8 - 0x0000B0)
class UPrisonerBodySymptomUIData_PhoenixTearsPresence : public UPrisonerBodySymptomUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00A8   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptom_StomachFullness
/// Size: 0x0110 (0x0000B8 - 0x0001C8)
class UPrisonerBodySymptom_StomachFullness : public UPrisonerBodySymptom
{ 
public:
	FRuntimeFloatCurve                                 _severityVsStomachFullness;                                 // 0x00B8   (0x0088)  
	FRuntimeFloatCurve                                 _eatingSpeedModifierVsSeverity;                             // 0x0140   (0x0088)  
};

/// Class /Script/ConZ.PrisonerBodySymptomUIData_StomachFullness
/// Size: 0x0008 (0x0000A8 - 0x0000B0)
class UPrisonerBodySymptomUIData_StomachFullness : public UPrisonerBodySymptomUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00A8   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_StomachGrowling
/// Size: 0x0000 (0x000038 - 0x000038)
class UPrisonerBodySymptomCause_StomachGrowling : public UPrisonerBodySymptomCause_PeriodicSound
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodySymptom_StomachGrowling
/// Size: 0x0000 (0x0000D8 - 0x0000D8)
class UPrisonerBodySymptom_StomachGrowling : public UPrisonerBodySymptom_PeriodicSound
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodySymptom_Thirst
/// Size: 0x0088 (0x0000B8 - 0x000140)
class UPrisonerBodySymptom_Thirst : public UPrisonerBodySymptom
{ 
public:
	FRuntimeFloatCurve                                 _severityVsHydrationRatio;                                  // 0x00B8   (0x0088)  
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_Unconsciousness
/// Size: 0x0008 (0x000030 - 0x000038)
class UPrisonerBodySymptomCause_Unconsciousness : public UPrisonerBodySymptomCause
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptom_Unconsciousness
/// Size: 0x0000 (0x0000B8 - 0x0000B8)
class UPrisonerBodySymptom_Unconsciousness : public UPrisonerBodySymptom
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_Vomiting
/// Size: 0x0000 (0x000040 - 0x000040)
class UPrisonerBodySymptomCause_Vomiting : public UPrisonerBodySymptomCause_PeriodicAffect
{ 
public:
};

/// Class /Script/ConZ.PrisonerBodySymptom_Vomiting
/// Size: 0x0018 (0x0000E8 - 0x000100)
class UPrisonerBodySymptom_Vomiting : public UPrisonerBodySymptom_PeriodicAffect
{ 
public:
	float                                              _minimalSubstanceVolumeInStomachRatioToVomit;               // 0x00E8   (0x0004)  
	FFloatInterval                                     _retryVomitingInterval;                                     // 0x00EC   (0x0008)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x00F4   (0x000C)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomCause_Weakness
/// Size: 0x0010 (0x000030 - 0x000040)
class UPrisonerBodySymptomCause_Weakness : public UPrisonerBodySymptomCause
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0030   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptom_Weakness
/// Size: 0x0008 (0x0000B8 - 0x0000C0)
class UPrisonerBodySymptom_Weakness : public UPrisonerBodySymptom
{ 
public:
	float                                              _maxSeverity;                                               // 0x00B8   (0x0004)  
	float                                              _maxSeverityPerformanceScoreModifier;                       // 0x00BC   (0x0004)  
};

/// Class /Script/ConZ.PrisonerBodyConditionOrSymptomSideEffect_Weakness
/// Size: 0x00A8 (0x000030 - 0x0000D8)
class UPrisonerBodyConditionOrSymptomSideEffect_Weakness : public UPrisonerBodyConditionOrSymptomSideEffect
{ 
public:
	UClass*                                            _symptomClass;                                              // 0x0030   (0x0008)  
	UPrisonerBodySymptomCause_Weakness*                _symptomCause;                                              // 0x0038   (0x0008)  
	FRuntimeFloatCurve                                 _performanceScoreModifierVsSeverity;                        // 0x0040   (0x0088)  
	float                                              _strengthModifierPerPerformanceScoreModifier;               // 0x00C8   (0x0004)  
	float                                              _constitutionModifierPerPerformanceScoreModifier;           // 0x00CC   (0x0004)  
	float                                              _dexterityModifierPerPerformanceScoreModifier;              // 0x00D0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00D4   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomUIData_Weakness
/// Size: 0x0010 (0x0000A8 - 0x0000B8)
class UPrisonerBodySymptomUIData_Weakness : public UPrisonerBodySymptomUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00A8   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomCauseUIData_Weakness
/// Size: 0x0010 (0x000030 - 0x000040)
class UPrisonerBodySymptomCauseUIData_Weakness : public UPrisonerBodySymptomCauseUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0030   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptom_WetFeet
/// Size: 0x0090 (0x0000B8 - 0x000148)
class UPrisonerBodySymptom_WetFeet : public UPrisonerBodySymptom
{ 
public:
	float                                              _feetWetnessToExist;                                        // 0x00B8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00BC   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _severityVsFeetWetness;                                     // 0x00C0   (0x0088)  
};

/// Class /Script/ConZ.PrisonerBodySymptomUIData_WetFeet
/// Size: 0x0008 (0x0000A8 - 0x0000B0)
class UPrisonerBodySymptomUIData_WetFeet : public UPrisonerBodySymptomUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00A8   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerBodySymptomNotifier
/// Size: 0x0008 (0x000028 - 0x000030)
class UPrisonerBodySymptomNotifier : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.BasicPrisonerBodySymptomNotifier
/// Size: 0x0030 (0x000030 - 0x000060)
class UBasicPrisonerBodySymptomNotifier : public UPrisonerBodySymptomNotifier
{ 
public:
	FFloatInterval                                     _triggerDelay;                                              // 0x0030   (0x0008)  
	bool                                               _shouldDisplayNotificationOnChangeForWorse;                 // 0x0038   (0x0001)  
	bool                                               _shouldResetNotificationTimerOnSeverityChange;              // 0x0039   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x003A   (0x0006)  MISSED
	TArray<FBasicPrisonerBodySymptomNotificationParameters> _notificationParameters;                               // 0x0040   (0x0010)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0050   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerBuryComponent
/// Size: 0x0008 (0x0000C0 - 0x0000C8)
class UPrisonerBuryComponent : public UCharacterActionComponent
{ 
public:
	EBuryState                                         _buryState;                                                 // 0x00C0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00C1   (0x0007)  MISSED


	/// Functions
	// Function /Script/ConZ.PrisonerBuryComponent.OnRep_BuryState
	void OnRep_BuryState();                                                                                                  // [0x23a1180] Final|Native|Private 
};

/// Class /Script/ConZ.PrisonerCharacterMesh
/// Size: 0x0038 (0x000060 - 0x000098)
class UPrisonerCharacterMesh : public UCharacterMesh
{ 
public:
	EBodySlot                                          BodySlotMapping;                                            // 0x0060   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0061   (0x0003)  MISSED
	FPrisonerCharacterMeshDecayMultiplierData          DecayMultiplierData;                                        // 0x0064   (0x002C)  
	float                                              WarmthFactor;                                               // 0x0090   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0094   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerCommonData
/// Size: 0x0F80 (0x000030 - 0x000FB0)
class UPrisonerCommonData : public UDataAsset
{ 
public:
	UClass*                                            FemaleAnimationInstance;                                    // 0x0030   (0x0008)  
	UClass*                                            MaleAnimationInstance;                                      // 0x0038   (0x0008)  
	FFloatInterval                                     ExhaustionRange;                                            // 0x0040   (0x0008)  
	float                                              ExhaustionDamageMultiplier;                                 // 0x0048   (0x0004)  
	float                                              SkinHardness;                                               // 0x004C   (0x0004)  
	float                                              ClothesBaseTemperatureResistanceThreshold;                  // 0x0050   (0x0004)  
	float                                              LastDamageDealerResetTime;                                  // 0x0054   (0x0004)  
	FFloatInterval                                     StrengthMeleeDamageMultiplierRange;                         // 0x0058   (0x0008)  
	float                                              ExhaustionMeleeDamageMultiplier;                            // 0x0060   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0064   (0x0004)  MISSED
	TMap<FGameplayTag, EClothesPart>                   ClothesPartUsedByMeleeAttackCapsuleAttachment;              // 0x0068   (0x0050)  
	TMap<FGameplayTag, FName>                          AttackerBoneByMeleeAttackCapsuleAttachment;                 // 0x00B8   (0x0050)  
	float                                              UnarmedAttackBaseEnergy;                                    // 0x0108   (0x0004)  
	FFloatInterval                                     StrengthThrowingDamageMultiplierRange;                      // 0x010C   (0x0008)  
	float                                              ExhaustionThrowingDamageMultiplier;                         // 0x0114   (0x0004)  
	float                                              NoSkillThrowingDamageMultiplier;                            // 0x0118   (0x0004)  
	float                                              BasicSkillThrowingDamageMultiplier;                         // 0x011C   (0x0004)  
	float                                              MediumSkillThrowingDamageMultiplier;                        // 0x0120   (0x0004)  
	float                                              AdvancedSkillThrowingDamageMultiplier;                      // 0x0124   (0x0004)  
	float                                              AboveAdvancedSkillThrowingDamageMultiplier;                 // 0x0128   (0x0004)  
	FFloatInterval                                     ThrowEnergyRange;                                           // 0x012C   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0134   (0x0004)  MISSED
	UClass*                                            CorpseClass;                                                // 0x0138   (0x0008)  
	UClass*                                            HeadExplosionGibClass;                                      // 0x0140   (0x0008)  
	UParticleSystem*                                   HeadExplosionParticles;                                     // 0x0148   (0x0008)  
	TArray<UStaticMesh*>                               HeadExplosionGibMeshes;                                     // 0x0150   (0x0010)  
	UChoppingRecipeDataAsset*                          CorpseChoppingRecipeDataAsset;                              // 0x0160   (0x0008)  
	UChoppingRecipeDataAsset*                          CorpseHeadlessChoppingRecipeDataAsset;                      // 0x0168   (0x0008)  
	UAkAudioEvent*                                     CorpseStartSearchAudioEvent;                                // 0x0170   (0x0008)  
	UAkAudioEvent*                                     CorpseStopSearchAudioEvent;                                 // 0x0178   (0x0008)  
	float                                              MaxActorEyesOffsetWhenLeaning;                              // 0x0180   (0x0004)  
	unsigned char                                      UnknownData02_5[0xC];                                       // 0x0184   (0x000C)  MISSED
	FTransform                                         DefaultMeshTransform;                                       // 0x0190   (0x0030)  
	int32_t                                            NumberOfCrouchStages;                                       // 0x01C0   (0x0004)  
	float                                              CrouchStagesInterpSpeed;                                    // 0x01C4   (0x0004)  
	UCurveFloat*                                       CrouchViewsAdditionalGlobalOffsetZVsCrouchStage;            // 0x01C8   (0x0008)  
	float                                              ProneEyeHeight;                                             // 0x01D0   (0x0004)  
	float                                              ProneEyeForwardOffset;                                      // 0x01D4   (0x0004)  
	float                                              SittingOnGroundEyeHeight;                                   // 0x01D8   (0x0004)  
	float                                              LyingOnGroundEyeHeight;                                     // 0x01DC   (0x0004)  
	float                                              RestingOnGroundBackwardOffset;                              // 0x01E0   (0x0004)  
	EPrisonerMovementPace                              DefaultPace;                                                // 0x01E4   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x01E5   (0x0003)  MISSED
	UPrisonerMovementSettings*                         MovementSettings;                                           // 0x01E8   (0x0008)  
	float                                              DefaultViewBlendDuration;                                   // 0x01F0   (0x0004)  
	float                                              MinEyesRotationYaw;                                         // 0x01F4   (0x0004)  
	float                                              MaxEyesRotationYaw;                                         // 0x01F8   (0x0004)  
	float                                              MinEyesRotationPitch;                                       // 0x01FC   (0x0004)  
	float                                              MaxEyesRotationPitch;                                       // 0x0200   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x0204   (0x0004)  MISSED
	UCurveFloat*                                       MinEyesRotationPitchCurve;                                  // 0x0208   (0x0008)  
	UCurveFloat*                                       MaxEyesRotationPitchCurve;                                  // 0x0210   (0x0008)  
	float                                              EyesRotationSpeed;                                          // 0x0218   (0x0004)  
	bool                                               DebugEyesRotation;                                          // 0x021C   (0x0001)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x021D   (0x0003)  MISSED
	UAkAudioEvent*                                     ComaAudioEvent;                                             // 0x0220   (0x0008)  
	UAkAudioEvent*                                     ComaScreamAudioEvent;                                       // 0x0228   (0x0008)  
	UAkAudioEvent*                                     DeathAudioEvent;                                            // 0x0230   (0x0008)  
	UAkAudioEvent*                                     DeathScreamAudioEvent;                                      // 0x0238   (0x0008)  
	UParticleSystem*                                   ColdBreathParticles;                                        // 0x0240   (0x0008)  
	FName                                              ColdBreathParticlesAttachPointName;                         // 0x0248   (0x0008)  
	UMaterialInstance*                                 StandardUndershirtMaterial;                                 // 0x0250   (0x0008)  
	UMaterialInstance*                                 DeluxeUndershirtMaterial;                                   // 0x0258   (0x0008)  
	UAkAudioEvent*                                     JumpAudioEvent;                                             // 0x0260   (0x0008)  
	float                                              LandingImpactHorizontalSpeedWeight;                         // 0x0268   (0x0004)  
	float                                              LandingImpactVerticalSpeedWeight;                           // 0x026C   (0x0004)  
	UCurveFloat*                                       LandingStaminaDrainCurve;                                   // 0x0270   (0x0008)  
	ULandingEffects*                                   LandingEffects;                                             // 0x0278   (0x0008)  
	UParticleSystem*                                   WaterParticlesWhenIdle;                                     // 0x0280   (0x0008)  
	UParticleSystem*                                   WaterParticlesWhenIdleInOcean;                              // 0x0288   (0x0008)  
	UParticleSystem*                                   WaterParticlesWhenMoving;                                   // 0x0290   (0x0008)  
	UParticleSystem*                                   WaterParticlesWhenMovingInOcean;                            // 0x0298   (0x0008)  
	UParticleSystem*                                   WaterParticlesWhenDiving;                                   // 0x02A0   (0x0008)  
	FName                                              WaterParticlesWhenDivingAttachPointName;                    // 0x02A8   (0x0008)  
	UParticleSystem*                                   WaterContactParticles;                                      // 0x02B0   (0x0008)  
	FName                                              WaterContactParticlesAttachPointName;                       // 0x02B8   (0x0008)  
	float                                              MinVelocityZToSpawnWaterContactParticles;                   // 0x02C0   (0x0004)  
	unsigned char                                      UnknownData06_5[0x4];                                       // 0x02C4   (0x0004)  MISSED
	UCurveFloat*                                       BuoyancyMultiplierVsGearWeightLimitDeviation;               // 0x02C8   (0x0008)  
	UAkAudioEvent*                                     StartedDivingAudioEvent;                                    // 0x02D0   (0x0008)  
	UAkAudioEvent*                                     StoppedDivingAudioEvent;                                    // 0x02D8   (0x0008)  
	UAkAudioEvent*                                     EndDivingOnPlayAudioEvent;                                  // 0x02E0   (0x0008)  
	float                                              MaxHeadWaterWeight;                                         // 0x02E8   (0x0004)  
	float                                              MaxUpperBodyWaterWeight;                                    // 0x02EC   (0x0004)  
	float                                              MaxLowerBodyWaterWeight;                                    // 0x02F0   (0x0004)  
	float                                              MaxFeetWaterWeight;                                         // 0x02F4   (0x0004)  
	float                                              OutwardsWaterPropagationFactor;                             // 0x02F8   (0x0004)  
	float                                              InwardsWaterPropagationRate;                                // 0x02FC   (0x0004)  
	float                                              OutwardsWaterPropagationRate;                               // 0x0300   (0x0004)  
	unsigned char                                      UnknownData07_5[0x4];                                       // 0x0304   (0x0004)  MISSED
	UCurveFloat*                                       GettingDryRateVsSpeed;                                      // 0x0308   (0x0008)  
	UParticleSystem*                                   SmallBleedingEffect;                                        // 0x0310   (0x0008)  
	UParticleSystem*                                   LargeBleedingEffect;                                        // 0x0318   (0x0008)  
	UParticleSystem*                                   UrineParticles;                                             // 0x0320   (0x0008)  
	FName                                              UrineParticlesAttachPointName;                              // 0x0328   (0x0008)  
	FName                                              UrineParticlesAttachPointSmallestName;                      // 0x0330   (0x0008)  
	FName                                              UrineParticlesAttachPointBiggestName;                       // 0x0338   (0x0008)  
	FName                                              UrineParticlesAttachPointFemaleName;                        // 0x0340   (0x0008)  
	FName                                              UrineParticlesAttachPointMaleName;                          // 0x0348   (0x0008)  
	float                                              DetectNearbyFoliageRadius;                                  // 0x0350   (0x0004)  
	float                                              MinLocationDeltaToUpdateNearbyFoliage;                      // 0x0354   (0x0004)  
	float                                              MinSpeedToTriggerMovingThroughFoliageEffects;               // 0x0358   (0x0004)  
	float                                              MinAngularSpeedToTriggerMovingThroughFoliageEffects;        // 0x035C   (0x0004)  
	float                                              ShouldAutomaticallyBeSeenInFoliageByAIDistance;             // 0x0360   (0x0004)  
	unsigned char                                      UnknownData08_5[0x4];                                       // 0x0364   (0x0004)  MISSED
	UAkAudioEvent*                                     OpenInventoryAudioEvent;                                    // 0x0368   (0x0008)  
	UAkAudioEvent*                                     CloseInventoryAudioEvent;                                   // 0x0370   (0x0008)  
	UAkAudioEvent*                                     OpenOceanAudioEvent;                                        // 0x0378   (0x0008)  
	float                                              CharacterDetectionRadiusForIngameMusic;                     // 0x0380   (0x0004)  
	float                                              BulletFlybyDangerCooldown;                                  // 0x0384   (0x0004)  
	float                                              HeadExplodeDamageThreshold;                                 // 0x0388   (0x0004)  
	float                                              MeleeDangerCooldown;                                        // 0x038C   (0x0004)  
	float                                              MeleeDangerRadius;                                          // 0x0390   (0x0004)  
	float                                              MeleeDangerAngle;                                           // 0x0394   (0x0004)  
	float                                              PostReviveStateDuration;                                    // 0x0398   (0x0004)  
	FGameplayTag                                       HitReactTypeWhenStanding;                                   // 0x039C   (0x0008)  
	FGameplayTag                                       HitReactTypeWhenStandingInCombatMode;                       // 0x03A4   (0x0008)  
	FGameplayTag                                       HitReactTypeWhenStandingInCombatModeAndHoldingBlock;        // 0x03AC   (0x0008)  
	FGameplayTag                                       HitReactTypeWhenCrouching;                                  // 0x03B4   (0x0008)  
	FGameplayTag                                       HitReactTypeWhenProne;                                      // 0x03BC   (0x0008)  
	FGameplayTag                                       HitReactTypeWhenCaptured;                                   // 0x03C4   (0x0008)  
	unsigned char                                      UnknownData09_5[0x4];                                       // 0x03CC   (0x0004)  MISSED
	TMap<EPrisonerFallingPose, UHitReactLandingParams*> HitReactLandingParamsMap;                                  // 0x03D0   (0x0050)  
	FGameplayTag                                       MeleeAttackCapsulesAttachmentForItemInLHand;                // 0x0420   (0x0008)  
	FGameplayTag                                       MeleeAttackCapsulesAttachmentForItemInRHand;                // 0x0428   (0x0008)  
	FPrisonerMeleeAttackTypes                          MeleeAttackTypes;                                           // 0x0430   (0x0088)  
	float                                              MeleeTargetMaxDistance;                                     // 0x04B8   (0x0004)  
	float                                              MeleeTargetMaxHeightDifference;                             // 0x04BC   (0x0004)  
	UCurveFloat*                                       MeleeTargetMaxConeHalfAngleVsDistanceToTarget;              // 0x04C0   (0x0008)  
	float                                              TimeSpanAfterWhichMeleeAttacksBecomeInitial;                // 0x04C8   (0x0004)  
	unsigned char                                      UnknownData10_5[0x4];                                       // 0x04CC   (0x0004)  MISSED
	TMap<EDamageMagnitudeType, float>                  MeleeHitRagdollImpulseByDamageMagnitudeType;                // 0x04D0   (0x0050)  
	float                                              DefaultMeleeHitRagdollImpulse;                              // 0x0520   (0x0004)  
	float                                              ThrowModeActivationDelay;                                   // 0x0524   (0x0004)  
	FName                                              ThrowLaunchLocationSocketName;                              // 0x0528   (0x0008)  
	UCurveFloat*                                       ThrowingPathBrightnessFromTimeCurve;                        // 0x0530   (0x0008)  
	float                                              IslandBoundsCheckInterval;                                  // 0x0538   (0x0004)  
	unsigned char                                      UnknownData11_5[0x4];                                       // 0x053C   (0x0004)  MISSED
	UPhysicalSurfacesData*                             PhysicalSurfacesData;                                       // 0x0540   (0x0008)  
	UClass*                                            DeluxeWristwatchClass;                                      // 0x0548   (0x0008)  
	UClass*                                            ScopeWidget;                                                // 0x0550   (0x0008)  
	UClass*                                            PlaceableActorItemsClass;                                   // 0x0558   (0x0008)  
	UClass*                                            PlaceableActorFortificationsClass;                          // 0x0560   (0x0008)  
	UClass*                                            PlaceableActorBaseBuildingClass;                            // 0x0568   (0x0008)  
	UClass*                                            PlaceableActorBaseUpgradeClass;                             // 0x0570   (0x0008)  
	UClass*                                            PlaceableActorGardenClass;                                  // 0x0578   (0x0008)  
	UClass*                                            PlaceableActorModularBaseBuildingClass;                     // 0x0580   (0x0008)  
	int32_t                                            MaxPossiblePlacedBlueprints;                                // 0x0588   (0x0004)  
	float                                              OpenOceanRange;                                             // 0x058C   (0x0004)  
	FGameplayTag                                       FeetSlot;                                                   // 0x0590   (0x0008)  
	FGameplayTag                                       HairSlot;                                                   // 0x0598   (0x0008)  
	FGameplayTag                                       HeadSlot;                                                   // 0x05A0   (0x0008)  
	FGameplayTag                                       NeckSlot;                                                   // 0x05A8   (0x0008)  
	FGameplayTag                                       FacialHairSlot;                                             // 0x05B0   (0x0008)  
	FGameplayTag                                       PenisSlot;                                                  // 0x05B8   (0x0008)  
	FGameplayTag                                       ChipSlot;                                                   // 0x05C0   (0x0008)  
	FGameplayTag                                       LEyeSlot;                                                   // 0x05C8   (0x0008)  
	FGameplayTag                                       REyeSlot;                                                   // 0x05D0   (0x0008)  
	FGameplayTag                                       EyewearSlot;                                                // 0x05D8   (0x0008)  
	FGameplayTag                                       HandsSlot;                                                  // 0x05E0   (0x0008)  
	FGameplayTag                                       MaskSlot;                                                   // 0x05E8   (0x0008)  
	FGameplayTag                                       CensorshipActiveTag;                                        // 0x05F0   (0x0008)  
	FGameplayTag                                       PrisonerMountedTag;                                         // 0x05F8   (0x0008)  
	FGameplayTag                                       HeadHiddenTag;                                              // 0x0600   (0x0008)  
	FGameplayTag                                       HeadExplodedTag;                                            // 0x0608   (0x0008)  
	FGameplayTag                                       ShowGenitalsOverrideTag;                                    // 0x0610   (0x0008)  
	UClass*                                            BodyCharacterMeshClass;                                     // 0x0618   (0x0008)  
	UClass*                                            ClothesCharacterMeshClass;                                  // 0x0620   (0x0008)  
	UClass*                                            CensorshipCharacterMeshClass;                               // 0x0628   (0x0008)  
	TArray<UClass*>                                    ShoesCharacterMeshClasses;                                  // 0x0630   (0x0010)  
	TArray<UClass*>                                    FaceCoveringCharacterMeshClasses;                           // 0x0640   (0x0010)  
	FGameplayTagContainer                              GearSlotsCausingUpperBodyNoise;                             // 0x0650   (0x0020)  
	TMap<EPrisonerBorderCrossingPenalty, float>        LeavingTheIslandPenaltyTimes;                               // 0x0670   (0x0050)  
	float                                              GameEventOutOfBoundsDamage;                                 // 0x06C0   (0x0004)  
	unsigned char                                      UnknownData12_5[0x4];                                       // 0x06C4   (0x0004)  MISSED
	UMaterialInstance*                                 ItemPlacingMaterialAllowed;                                 // 0x06C8   (0x0008)  
	UMaterialInstance*                                 ItemPlacingMaterialDisallowed;                              // 0x06D0   (0x0008)  
	UMaterialInstance*                                 VehicleServiceMaterial;                                     // 0x06D8   (0x0008)  
	float                                              IkInterpSpeed;                                              // 0x06E0   (0x0004)  
	unsigned char                                      UnknownData13_5[0x4];                                       // 0x06E4   (0x0004)  MISSED
	UMaterialParameterCollection*                      CommonParameterCollection;                                  // 0x06E8   (0x0008)  
	FName                                              WeaponSocketName;                                           // 0x06F0   (0x0008)  
	FName                                              WeaponHolsterSocketName;                                    // 0x06F8   (0x0008)  
	UAnimMontage*                                      SwapWeapons;                                                // 0x0700   (0x0008)  
	UAnimMontage*                                      SwapItemsThrowingItemToWeapon;                              // 0x0708   (0x0008)  
	UAnimMontage*                                      SwapItemsWeaponToThrowingItem;                              // 0x0710   (0x0008)  
	UAnimMontage*                                      SwapItemsNotWeaponToNotWeapon;                              // 0x0718   (0x0008)  
	UAnimMontage*                                      SwapItemsWeaponToWeapon;                                    // 0x0720   (0x0008)  
	UAnimMontage*                                      SwapItemsNotWeaponToWeapon;                                 // 0x0728   (0x0008)  
	UAnimMontage*                                      SwapItemsWeaponToNotWeapon;                                 // 0x0730   (0x0008)  
	UAnimMontage*                                      EquipRifleStanding;                                         // 0x0738   (0x0008)  
	UAnimMontage*                                      UnequipRifleStanding;                                       // 0x0740   (0x0008)  
	UAnimMontage*                                      EquipHandgunStanding;                                       // 0x0748   (0x0008)  
	UAnimMontage*                                      UnequipHadgunStanding;                                      // 0x0750   (0x0008)  
	UAnimMontage*                                      UrinateMaleMontage;                                         // 0x0758   (0x0008)  
	UAnimMontage*                                      UrinateFemaleMontage;                                       // 0x0760   (0x0008)  
	UAnimMontage*                                      UrinateMaleForcedMontage;                                   // 0x0768   (0x0008)  
	UAnimMontage*                                      UrinateFemaleForcedMontage;                                 // 0x0770   (0x0008)  
	UAnimMontage*                                      DefecateMontage;                                            // 0x0778   (0x0008)  
	UAnimMontage*                                      DefecateForcedMontage;                                      // 0x0780   (0x0008)  
	UAnimMontage*                                      VomitMontage;                                               // 0x0788   (0x0008)  
	UAnimMontage*                                      VomitForcedMontage;                                         // 0x0790   (0x0008)  
	UAnimMontage*                                      SearchObject;                                               // 0x0798   (0x0008)  
	UAnimMontage*                                      SearchObjectWhileItemInHands;                               // 0x07A0   (0x0008)  
	UAnimMontage*                                      SearchObjectWhileWeaponInHands;                             // 0x07A8   (0x0008)  
	UAnimMontage*                                      SearchObjectWhenSwimming;                                   // 0x07B0   (0x0008)  
	UAnimMontage*                                      SearchPrisoner;                                             // 0x07B8   (0x0008)  
	UAnimMontage*                                      PatchWoundsStanding;                                        // 0x07C0   (0x0008)  
	UAnimMontage*                                      PatchWoundsCrouching;                                       // 0x07C8   (0x0008)  
	UAnimMontage*                                      PatchWoundsProne;                                           // 0x07D0   (0x0008)  
	UAnimMontage*                                      PatchWoundsStandingEnd;                                     // 0x07D8   (0x0008)  
	UAnimMontage*                                      PatchWoundsCrouchingEnd;                                    // 0x07E0   (0x0008)  
	UAnimMontage*                                      PatchWoundsProneEnd;                                        // 0x07E8   (0x0008)  
	UAnimMontage*                                      EatGeneric;                                                 // 0x07F0   (0x0008)  
	UAnimMontage*                                      EatCan;                                                     // 0x07F8   (0x0008)  
	UAnimMontage*                                      DrinkFromBottleStanding;                                    // 0x0800   (0x0008)  
	UAnimMontage*                                      DrinkFromBottleCrouching;                                   // 0x0808   (0x0008)  
	UAnimMontage*                                      DrinkInteraction;                                           // 0x0810   (0x0008)  
	UAnimMontage*                                      DefaultLongThrowMontage;                                    // 0x0818   (0x0008)  
	UAnimMontage*                                      DefaultLongThrowLoopMontage;                                // 0x0820   (0x0008)  
	UAnimMontage*                                      DefaultShortThrowMontage;                                   // 0x0828   (0x0008)  
	UAnimMontage*                                      DefaultThrowbackGrenadeMontage;                             // 0x0830   (0x0008)  
	UAnimMontage*                                      ChopTreeStanding;                                           // 0x0838   (0x0008)  
	UAnimMontage*                                      ChopTreeStandingEnd;                                        // 0x0840   (0x0008)  
	UAnimMontage*                                      ChopLogStanding;                                            // 0x0848   (0x0008)  
	UAnimMontage*                                      ChopLogStandingEnd;                                         // 0x0850   (0x0008)  
	UAnimMontage*                                      BreakStone;                                                 // 0x0858   (0x0008)  
	UAnimMontage*                                      BreakStoneEnd;                                              // 0x0860   (0x0008)  
	UAnimMontage*                                      CraftStanding;                                              // 0x0868   (0x0008)  
	UAnimMontage*                                      CraftCrouching;                                             // 0x0870   (0x0008)  
	UAnimMontage*                                      CraftProne;                                                 // 0x0878   (0x0008)  
	UAnimMontage*                                      UncraftStanding;                                            // 0x0880   (0x0008)  
	UAnimMontage*                                      UncraftCrouching;                                           // 0x0888   (0x0008)  
	UAnimMontage*                                      UncraftProne;                                               // 0x0890   (0x0008)  
	UAnimMontage*                                      CheckTime;                                                  // 0x0898   (0x0008)  
	UAnimMontage*                                      CheckTimeFemale;                                            // 0x08A0   (0x0008)  
	UAnimMontage*                                      CheckTimeWhileItemInHands;                                  // 0x08A8   (0x0008)  
	UAnimMontage*                                      CheckTimeWhileItemInHandsFemale;                            // 0x08B0   (0x0008)  
	UAnimMontage*                                      CheckTimeWhileWeaponInHands;                                // 0x08B8   (0x0008)  
	UAnimMontage*                                      CheckTimeWhileWeaponInHandsFemale;                          // 0x08C0   (0x0008)  
	UAnimMontage*                                      CheckTemperature;                                           // 0x08C8   (0x0008)  
	UAnimMontage*                                      ForceUnlockStanding;                                        // 0x08D0   (0x0008)  
	UAnimMontage*                                      ForceUnlockStandingEnd;                                     // 0x08D8   (0x0008)  
	UAnimMontage*                                      ForceUnlockStandingStop;                                    // 0x08E0   (0x0008)  
	UAnimMontage*                                      ManualUnlockStanding;                                       // 0x08E8   (0x0008)  
	UAnimMontage*                                      ManualUnlockStandingEnd;                                    // 0x08F0   (0x0008)  
	UAnimMontage*                                      ManualUnlockStandingStop;                                   // 0x08F8   (0x0008)  
	UAnimMontage*                                      SpillMontage;                                               // 0x0900   (0x0008)  
	UAnimMontage*                                      StompOutFireMontage;                                        // 0x0908   (0x0008)  
	UAnimMontage*                                      BlowAirIntoFireMontage;                                     // 0x0910   (0x0008)  
	UAnimMontage*                                      BlowAirIntoLowFireMontage;                                  // 0x0918   (0x0008)  
	UAnimMontage*                                      GestureShowFinger;                                          // 0x0920   (0x0008)  
	UAnimMontage*                                      GestureStandSurrender;                                      // 0x0928   (0x0008)  
	UAnimMontage*                                      GestureWaveHi;                                              // 0x0930   (0x0008)  
	UAnimMontage*                                      GestureYouAreDead;                                          // 0x0938   (0x0008)  
	UAnimMontage*                                      GestureFY;                                                  // 0x0940   (0x0008)  
	UAnimMontage*                                      GesturePoint;                                               // 0x0948   (0x0008)  
	UAnimMontage*                                      GestureHeart;                                               // 0x0950   (0x0008)  
	UAnimMontage*                                      GestureBallpalm;                                            // 0x0958   (0x0008)  
	UAnimMontage*                                      GestureFacepalm;                                            // 0x0960   (0x0008)  
	UAnimMontage*                                      GestureFingerGun;                                           // 0x0968   (0x0008)  
	UAnimMontage*                                      GestureLaughing;                                            // 0x0970   (0x0008)  
	UAnimMontage*                                      GestureSmellWave;                                           // 0x0978   (0x0008)  
	UAnimMontage*                                      GestureSquat;                                               // 0x0980   (0x0008)  
	UAnimMontage*                                      GestureCharge;                                              // 0x0988   (0x0008)  
	UAnimMontage*                                      GestureChargeCombat;                                        // 0x0990   (0x0008)  
	UAnimMontage*                                      GestureFreeze;                                              // 0x0998   (0x0008)  
	UAnimMontage*                                      GestureFreezeCombat;                                        // 0x09A0   (0x0008)  
	UAnimMontage*                                      GestureGetDown;                                             // 0x09A8   (0x0008)  
	UAnimMontage*                                      GestureGetDownCombat;                                       // 0x09B0   (0x0008)  
	UAnimMontage*                                      GestureGetUp;                                               // 0x09B8   (0x0008)  
	UAnimMontage*                                      GestureGetUpCombat;                                         // 0x09C0   (0x0008)  
	UAnimMontage*                                      GestureHalt;                                                // 0x09C8   (0x0008)  
	UAnimMontage*                                      GestureHaltCombat;                                          // 0x09D0   (0x0008)  
	UAnimMontage*                                      GestureHurryUp;                                             // 0x09D8   (0x0008)  
	UAnimMontage*                                      GestureHurryUpCombat;                                       // 0x09E0   (0x0008)  
	UAnimMontage*                                      GesturePointMe;                                             // 0x09E8   (0x0008)  
	UAnimMontage*                                      GesturePointMeCombat;                                       // 0x09F0   (0x0008)  
	UAnimMontage*                                      GesturePointYou;                                            // 0x09F8   (0x0008)  
	UAnimMontage*                                      GesturePointYouCombat;                                      // 0x0A00   (0x0008)  
	UAnimMontage*                                      GestureRally;                                               // 0x0A08   (0x0008)  
	UAnimMontage*                                      GestureRallyCombat;                                         // 0x0A10   (0x0008)  
	UAnimMontage*                                      GestureThumbsUp;                                            // 0x0A18   (0x0008)  
	UAnimMontage*                                      GestureThumbsUpCombat;                                      // 0x0A20   (0x0008)  
	UAnimMontage*                                      GestureThumbsDown;                                          // 0x0A28   (0x0008)  
	UAnimMontage*                                      GestureThumbsDownCombat;                                    // 0x0A30   (0x0008)  
	UAnimMontage*                                      GestureUnderstandNot;                                       // 0x0A38   (0x0008)  
	UAnimMontage*                                      GestureUnderstandNotCombat;                                 // 0x0A40   (0x0008)  
	UAnimMontage*                                      GestureUnderstandYes;                                       // 0x0A48   (0x0008)  
	UAnimMontage*                                      GestureUnderstandYesCombat;                                 // 0x0A50   (0x0008)  
	UAnimMontage*                                      CommitSuicideStanding;                                      // 0x0A58   (0x0008)  
	UAnimMontage*                                      CommitSuicideCrouching;                                     // 0x0A60   (0x0008)  
	UAnimMontage*                                      CommitSuicideRareStanding;                                  // 0x0A68   (0x0008)  
	UAnimMontage*                                      LockpickRegular;                                            // 0x0A70   (0x0008)  
	UAnimMontage*                                      WhistleMontageMale;                                         // 0x0A78   (0x0008)  
	UAnimMontage*                                      WhistleMontageFemale;                                       // 0x0A80   (0x0008)  
	UAnimMontage*                                      TuneBowMontage;                                             // 0x0A88   (0x0008)  
	UAnimMontage*                                      RepairVehicleMontage;                                       // 0x0A90   (0x0008)  
	UAnimMontage*                                      WashClothMontage;                                           // 0x0A98   (0x0008)  
	UAnimMontage*                                      BuryStandingMontage;                                        // 0x0AA0   (0x0008)  
	UAnimMontage*                                      BuryRestStandingMontage;                                    // 0x0AA8   (0x0008)  
	UAnimMontage*                                      BuryResumeStandingMontage;                                  // 0x0AB0   (0x0008)  
	UAnimMontage*                                      BuryCrouchingMontage;                                       // 0x0AB8   (0x0008)  
	UAnimMontage*                                      BuryRestCrouchingMontage;                                   // 0x0AC0   (0x0008)  
	UAnimMontage*                                      SitOnGroundStandingStartMontage;                            // 0x0AC8   (0x0008)  
	UAnimMontage*                                      SitOnGroundStandingEndMontage;                              // 0x0AD0   (0x0008)  
	UAnimMontage*                                      SitOnGroundCrouchingStartMontage;                           // 0x0AD8   (0x0008)  
	UAnimMontage*                                      SitOnGroundCrouchingEndMontage;                             // 0x0AE0   (0x0008)  
	UAnimMontage*                                      LayOnGroundStandingStartMontage;                            // 0x0AE8   (0x0008)  
	UAnimMontage*                                      LayOnGroundStandingEndMontage;                              // 0x0AF0   (0x0008)  
	UAnimMontage*                                      LayOnGroundCrouchingStartMontage;                           // 0x0AF8   (0x0008)  
	UAnimMontage*                                      LayOnGroundCrouchingEndMontage;                             // 0x0B00   (0x0008)  
	UAnimSequenceBase*                                 SittingOnGroundAnimation;                                   // 0x0B08   (0x0008)  
	UAnimSequenceBase*                                 LyingOnGroundAnimation;                                     // 0x0B10   (0x0008)  
	UAnimMontage*                                      LightFlareMontage;                                          // 0x0B18   (0x0008)  
	UAnimMontage*                                      ArmTrapMontage;                                             // 0x0B20   (0x0008)  
	UAnimMontage*                                      FishingEnterMontage;                                        // 0x0B28   (0x0008)  
	UAnimMontage*                                      FishingLeaveMontage;                                        // 0x0B30   (0x0008)  
	UAnimMontage*                                      FishingCastMontage;                                         // 0x0B38   (0x0008)  
	UAnimMontage*                                      FishingLongCastEndMontage;                                  // 0x0B40   (0x0008)  
	UAnimMontage*                                      FishingShortCastEndMontage;                                 // 0x0B48   (0x0008)  
	UAnimMontage*                                      FishingPullStartMontage;                                    // 0x0B50   (0x0008)  
	UAnimMontage*                                      FishingPullEndMontage;                                      // 0x0B58   (0x0008)  
	UAnimMontage*                                      FishingFishCaughtMontage;                                   // 0x0B60   (0x0008)  
	UAnimMontage*                                      FishingKeepFishMontage;                                     // 0x0B68   (0x0008)  
	UAnimMontage*                                      FishingDiscardFishMontage;                                  // 0x0B70   (0x0008)  
	UAnimMontage*                                      FishingWireBreakMontage;                                    // 0x0B78   (0x0008)  
	UAnimMontage*                                      BasicDance1Montage;                                         // 0x0B80   (0x0008)  
	UAnimMontage*                                      BasicDance2Montage;                                         // 0x0B88   (0x0008)  
	UAnimMontage*                                      BasicDance3Montage;                                         // 0x0B90   (0x0008)  
	UAnimMontage*                                      BasicDance4Montage;                                         // 0x0B98   (0x0008)  
	UAnimMontage*                                      BasicDance5Montage;                                         // 0x0BA0   (0x0008)  
	UAnimMontage*                                      AdvanceDance1Montage;                                       // 0x0BA8   (0x0008)  
	UAnimMontage*                                      AdvanceDance2Montage;                                       // 0x0BB0   (0x0008)  
	UAnimMontage*                                      AdvanceDance3Montage;                                       // 0x0BB8   (0x0008)  
	UAnimMontage*                                      AdvanceDance4Montage;                                       // 0x0BC0   (0x0008)  
	UAnimMontage*                                      AdvanceDance5Montage;                                       // 0x0BC8   (0x0008)  
	UAnimMontage*                                      AdvanceDance6Montage;                                       // 0x0BD0   (0x0008)  
	UAnimMontage*                                      AdvanceDance7Montage;                                       // 0x0BD8   (0x0008)  
	UAnimMontage*                                      InjectSelfMontage;                                          // 0x0BE0   (0x0008)  
	UAnimMontage*                                      InjectOtherMontage;                                         // 0x0BE8   (0x0008)  
	UAnimMontage*                                      HalloweenGesture1Montage;                                   // 0x0BF0   (0x0008)  
	UAnimMontage*                                      HalloweenGesture2Montage;                                   // 0x0BF8   (0x0008)  
	UAnimMontage*                                      HalloweenGesture3Montage;                                   // 0x0C00   (0x0008)  
	UAnimMontage*                                      HalloweenGesture4Montage;                                   // 0x0C08   (0x0008)  
	UAnimMontage*                                      RemoveWeedMontage;                                          // 0x0C10   (0x0008)  
	UAnimMontage*                                      RemoveWeedWithHoeMontage;                                   // 0x0C18   (0x0008)  
	UAnimMontage*                                      ApplyPesticideMontage;                                      // 0x0C20   (0x0008)  
	UAnimMontage*                                      AddFertilizerMontage;                                       // 0x0C28   (0x0008)  
	UAnimMontage*                                      PlantSeedMontage;                                           // 0x0C30   (0x0008)  
	UAnimMontage*                                      RemovePlantMontage;                                         // 0x0C38   (0x0008)  
	UAnimMontage*                                      DestroyGardenMontage;                                       // 0x0C40   (0x0008)  
	UAnimMontage*                                      WashEyesMontage;                                            // 0x0C48   (0x0008)  
	FPrisonerTurnMontageDescription                    TurnMontageDescription;                                     // 0x0C50   (0x0030)  
	float                                              MinThrowItemSpeed;                                          // 0x0C80   (0x0004)  
	float                                              MaxThrowItemSpeed;                                          // 0x0C84   (0x0004)  
	float                                              ScreenCenterDotOpacityDecreaseDelay;                        // 0x0C88   (0x0004)  
	float                                              ScreenCenterDotOpacityDecrease;                             // 0x0C8C   (0x0004)  
	float                                              ScreenCenterDotOpacityIncrease;                             // 0x0C90   (0x0004)  
	float                                              ShortThrowReductionMultiplier;                              // 0x0C94   (0x0004)  
	float                                              ThrowingObstacleCheckOffset;                                // 0x0C98   (0x0004)  
	float                                              ThrowingObstacleOffset;                                     // 0x0C9C   (0x0004)  
	TMap<EThrowingAnimationType, FThrowingAnimationSet> ThrowingAnimationSets;                                     // 0x0CA0   (0x0050)  
	float                                              RespawnTime;                                                // 0x0CF0   (0x0004)  
	unsigned char                                      UnknownData14_5[0x4];                                       // 0x0CF4   (0x0004)  MISSED
	UCurveFloat*                                       FocusModeZoomEffectCurve;                                   // 0x0CF8   (0x0008)  
	float                                              FocusModeZoomSpeed;                                         // 0x0D00   (0x0004)  
	unsigned char                                      UnknownData15_5[0x4];                                       // 0x0D04   (0x0004)  MISSED
	TArray<UCircularMenuSegmentInfo*>                  SelfInteractionSegmentInfo;                                 // 0x0D08   (0x0010)  
	UCircularMenuSegmentIcons*                         SelfInteractionVoicelineIcons;                              // 0x0D18   (0x0008)  
	TArray<UCharacterVoiceline*>                       CharacterVoicelines;                                        // 0x0D20   (0x0010)  
	TWeakObjectPtr<UClass*>                            PrisonWalletComponentClass;                                 // 0x0D30   (0x0028)  
	UClass*                                            MusicPlayerComponentClass;                                  // 0x0D58   (0x0008)  
	float                                              WetnessReachableFromSkyChecksInterval;                      // 0x0D60   (0x0004)  
	float                                              DedicatedServerHandleFootstepInterval;                      // 0x0D64   (0x0004)  
	float                                              PlayInstrumentEventNetworkDelay;                            // 0x0D68   (0x0004)  
	float                                              PlayInstrumentExitStateDuration;                            // 0x0D6C   (0x0004)  
	UClass*                                            BodyCompositionMorphsComputer;                              // 0x0D70   (0x0008)  
	FVector                                            PenisLocationDefault;                                       // 0x0D78   (0x000C)  
	FVector                                            PenisLocationFat;                                           // 0x0D84   (0x000C)  
	FVector                                            PenisLocationMuscular;                                      // 0x0D90   (0x000C)  
	FVector                                            PenisLocationSkinny;                                        // 0x0D9C   (0x000C)  
	float                                              PenisMinSizeHandleZ;                                        // 0x0DA8   (0x0004)  
	float                                              PenisMaxSizeHandleZ;                                        // 0x0DAC   (0x0004)  
	float                                              PenisGrowOverTimeThreshold;                                 // 0x0DB0   (0x0004)  
	float                                              UnmountSpeedThresholdForRagdoll;                            // 0x0DB4   (0x0004)  
	float                                              MountTiltAngleForRagdoll;                                   // 0x0DB8   (0x0004)  
	float                                              RareSuicideAnimationChance;                                 // 0x0DBC   (0x0004)  
	UCurveFloat*                                       FaceAgingIntensityCurve;                                    // 0x0DC0   (0x0008)  
	float                                              HairGrowthTotalTime;                                        // 0x0DC8   (0x0004)  
	float                                              FacialHairGrowthTotalTime;                                  // 0x0DCC   (0x0004)  
	float                                              HairUpdateRate;                                             // 0x0DD0   (0x0004)  
	unsigned char                                      UnknownData16_5[0x4];                                       // 0x0DD4   (0x0004)  MISSED
	UCurveFloat*                                       ShortHairCurve;                                             // 0x0DD8   (0x0008)  
	UCurveFloat*                                       MediumHairCurve;                                            // 0x0DE0   (0x0008)  
	UCurveFloat*                                       MediumHairPDOCurve;                                         // 0x0DE8   (0x0008)  
	UCurveFloat*                                       MediumHairTopOpacityCurve;                                  // 0x0DF0   (0x0008)  
	UCurveFloat*                                       LongHairCurve;                                              // 0x0DF8   (0x0008)  
	UCurveFloat*                                       LongHairPDOCurve;                                           // 0x0E00   (0x0008)  
	UCurveFloat*                                       LongHairTopOpacityCurve;                                    // 0x0E08   (0x0008)  
	UCurveFloat*                                       AfroHairCurve;                                              // 0x0E10   (0x0008)  
	UCurveFloat*                                       ShortFacialHairCurve;                                       // 0x0E18   (0x0008)  
	UCurveFloat*                                       MediumFacialHairCurve;                                      // 0x0E20   (0x0008)  
	UCurveFloat*                                       MediumFacialHairPDOCurve;                                   // 0x0E28   (0x0008)  
	UCurveFloat*                                       MediumFacialHairTopOpacityCurve;                            // 0x0E30   (0x0008)  
	UCurveFloat*                                       LongFacialHairCurve;                                        // 0x0E38   (0x0008)  
	UCurveFloat*                                       LongFacialHairPDOCurve;                                     // 0x0E40   (0x0008)  
	UCurveFloat*                                       LongFacialHairTopOpacityCurve;                              // 0x0E48   (0x0008)  
	float                                              MaxRestingAngle;                                            // 0x0E50   (0x0004)  
	float                                              GenericAcceptanceRadius;                                    // 0x0E54   (0x0004)  
	float                                              DistanceWhereRotationStarts;                                // 0x0E58   (0x0004)  
	unsigned char                                      UnknownData17_5[0x4];                                       // 0x0E5C   (0x0004)  MISSED
	UClass*                                            AutoTriggeredVomitingNotification;                          // 0x0E60   (0x0008)  
	UClass*                                            AutoTriggeredUrinationNotification;                         // 0x0E68   (0x0008)  
	UClass*                                            AutoTriggeredDefecationNotification;                        // 0x0E70   (0x0008)  
	UClass*                                            UIDataClass;                                                // 0x0E78   (0x0008)  
	UAkAudioEvent*                                     DefecateNakedForcedAudioEvent;                              // 0x0E80   (0x0008)  
	UAkAudioEvent*                                     DefecateClothedForcedAudioEvent;                            // 0x0E88   (0x0008)  
	UAkAudioEvent*                                     DefecateNakedForcedDiarrheaAudioEvent;                      // 0x0E90   (0x0008)  
	UAkAudioEvent*                                     DefecateClothedForcedDiarrheaAudioEvent;                    // 0x0E98   (0x0008)  
	UAkAudioEvent*                                     UrinateForcedAudioEvent;                                    // 0x0EA0   (0x0008)  
	UAkAudioEvent*                                     StartBlowingAirAudioEvent;                                  // 0x0EA8   (0x0008)  
	UAkAudioEvent*                                     StopBlowingAirAudioEvent;                                   // 0x0EB0   (0x0008)  
	UAkAudioEvent*                                     PhoenixTearsEffectSound;                                    // 0x0EB8   (0x0008)  
	UParticleSystem*                                   DiarrheaParticleSystem;                                     // 0x0EC0   (0x0008)  
	UClass*                                            FecesClass;                                                 // 0x0EC8   (0x0008)  
	FName                                              FecesSocketName;                                            // 0x0ED0   (0x0008)  
	FPrisonerCommonData_ResponseIdles                  ResponseIdles;                                              // 0x0ED8   (0x0008)  
	FBasicNotificationDescriptionData                  ParachutingMoveInputNotificationData;                       // 0x0EE0   (0x0038)  
	FBasicNotificationDescriptionData                  ParachutingChangePoseInputNotificationData;                 // 0x0F18   (0x0038)  
	FBasicNotificationDescriptionData                  ParachutingOpenParachuteInputNotificationData;              // 0x0F50   (0x0038)  
	UAkAudioEvent*                                     SkydivingStartAudioEvent;                                   // 0x0F88   (0x0008)  
	UAkAudioEvent*                                     SkydivingStopAudioEvent;                                    // 0x0F90   (0x0008)  
	UAkAudioEvent*                                     IntroCinematicScreamAudioEvent;                             // 0x0F98   (0x0008)  
	float                                              MaxSpeedWhileMountedToBeRelevantForHunting;                 // 0x0FA0   (0x0004)  
	unsigned char                                      UnknownData18_6[0xC];                                       // 0x0FA4   (0x000C)  MISSED
};

/// Class /Script/ConZ.PrisonerConsumableDigestionHandler_Exhaustion
/// Size: 0x0008 (0x000028 - 0x000030)
class UPrisonerConsumableDigestionHandler_Exhaustion : public UConsumableDigestionHandler
{ 
public:
	float                                              _exhaustionAmountToRecoverPerSubstancesAbsorbedMass;        // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerConsumableUserData
/// Size: 0x0020 (0x000028 - 0x000048)
class UPrisonerConsumableUserData : public UConsumableUserData
{ 
public:
	EGameResourceConsumptionMethod                     ConsumptionMethod;                                          // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0029   (0x0007)  MISSED
	UClass*                                            ItemClass;                                                  // 0x0030   (0x0008)  
	UClass*                                            ResourceTypeClass;                                          // 0x0038   (0x0008)  
	float                                              RadiationAmount;                                            // 0x0040   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerCorpse
/// Size: 0x0450 (0x000220 - 0x000670)
class APrisonerCorpse : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0220   (0x0020)  MISSED
	USkeletalMeshComponent*                            RagdollMeshComponent;                                       // 0x0240   (0x0008)  
	FName                                              MainBoneName;                                               // 0x0248   (0x0008)  
	FCorpseSkeletalMeshRepData                         RagdollMeshData;                                            // 0x0250   (0x0070)  
	TArray<FCorpseStaticMeshRepData>                   StaticMeshData;                                             // 0x02C0   (0x0010)  
	TArray<FCorpseSkeletalMeshRepData>                 SkeletalMeshData;                                           // 0x02D0   (0x0010)  
	float                                              SearchTime;                                                 // 0x02E0   (0x0004)  
	float                                              PhysicsPauseDistance;                                       // 0x02E4   (0x0004)  
	float                                              AutoDestructTime;                                           // 0x02E8   (0x0004)  
	float                                              AutoDestructRadius;                                         // 0x02EC   (0x0004)  
	TArray<AActor*>                                    Attachements;                                               // 0x02F0   (0x0010)  
	TArray<FName>                                      AttachementSockets;                                         // 0x0300   (0x0010)  
	TArray<FCorpseStaticMeshRepData>                   StrippedStaticMeshData;                                     // 0x0310   (0x0010)  
	TArray<FCorpseSkeletalMeshRepData>                 StrippedSkeletalMeshData;                                   // 0x0320   (0x0010)  
	UStaticMesh*                                       CensorMesh;                                                 // 0x0330   (0x0008)  
	UMaterialInstance*                                 CensorMaterial;                                             // 0x0338   (0x0008)  
	UStaticMeshComponent*                              GenitalsCensorComponent;                                    // 0x0340   (0x0008)  
	UStaticMeshComponent*                              LeftBreastCensorComponent;                                  // 0x0348   (0x0008)  
	UStaticMeshComponent*                              RightBreastCensorComponent;                                 // 0x0350   (0x0008)  
	float                                              _fatness;                                                   // 0x0358   (0x0004)  
	float                                              _muscliness;                                                // 0x035C   (0x0004)  
	float                                              _skinniness;                                                // 0x0360   (0x0004)  
	float                                              _breastSize;                                                // 0x0364   (0x0004)  
	float                                              _penisSize;                                                 // 0x0368   (0x0004)  
	bool                                               _penisShowing;                                              // 0x036C   (0x0001)  
	bool                                               _breastsShowing;                                            // 0x036D   (0x0001)  
	unsigned char                                      UnknownData01_5[0x32];                                      // 0x036E   (0x0032)  MISSED
	UClass*                                            _censorClass;                                               // 0x03A0   (0x0008)  
	unsigned char                                      UnknownData02_5[0x248];                                     // 0x03A8   (0x0248)  MISSED
	FCorpsePoseData                                    PoseData;                                                   // 0x05F0   (0x0040)  
	TArray<AItem*>                                     inventory;                                                  // 0x0630   (0x0010)  
	bool                                               _atRest;                                                    // 0x0640   (0x0001)  
	unsigned char                                      UnknownData03_6[0x2F];                                      // 0x0641   (0x002F)  MISSED


	/// Functions
	// Function /Script/ConZ.PrisonerCorpse.OnRep_PoseData
	void OnRep_PoseData();                                                                                                   // [0x23a4d20] Final|Native|Private 
	// Function /Script/ConZ.PrisonerCorpse.OnRep_PenisShowing
	void OnRep_PenisShowing();                                                                                               // [0x23a4cc0] Final|Native|Private 
	// Function /Script/ConZ.PrisonerCorpse.OnRep_Inventory
	void OnRep_Inventory();                                                                                                  // [0x23a4d00] Final|Native|Private 
	// Function /Script/ConZ.PrisonerCorpse.OnRep_BreastsShowing
	void OnRep_BreastsShowing();                                                                                             // [0x23a4cc0] Final|Native|Private 
	// Function /Script/ConZ.PrisonerCorpse.OnRep_AtRest
	void OnRep_AtRest();                                                                                                     // [0x23a4ca0] Final|Native|Private 
	// Function /Script/ConZ.PrisonerCorpse.Multicast_ClonePoseLocally
	void Multicast_ClonePoseLocally(AConZCharacter* sourceCharacter);                                                        // [0x22cad10] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.PrisonerCorpse.GetHairMeshComponent
	USkeletalMeshComponent* GetHairMeshComponent();                                                                          // [0x23a4c70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerCorpse.GetFacialHairMeshComponent
	USkeletalMeshComponent* GetFacialHairMeshComponent();                                                                    // [0x23a4c40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.PrisonerCreationUIController
/// Size: 0x0458 (0x000028 - 0x000480)
class UPrisonerCreationUIController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x2EC];                                     // 0x0028   (0x02EC)  MISSED
	FName                                              _editedPrisonerActorTag;                                    // 0x0314   (0x0008)  
	FName                                              _mugshotPrisonerActorTag;                                   // 0x031C   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0324   (0x0004)  MISSED
	TArray<UCharacterMesh*>                            _characterMeshesToAddOntoMugshotPrisoner;                   // 0x0328   (0x0010)  
	FGameplayTag                                       _femaleTag;                                                 // 0x0338   (0x0008)  
	FGameplayTag                                       _maleTag;                                                   // 0x0340   (0x0008)  
	unsigned char                                      UnknownData02_6[0x138];                                     // 0x0348   (0x0138)  MISSED
};

/// Class /Script/ConZ.PrisonerUIDebugData
/// Size: 0x0010 (0x000028 - 0x000038)
class UPrisonerUIDebugData : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0028   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerDebugUI_SkillItem
/// Size: 0x0010 (0x000028 - 0x000038)
class UPrisonerDebugUI_SkillItem : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0028   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerDebugUI_SkillEntryWidget
/// Size: 0x0010 (0x000260 - 0x000270)
class UPrisonerDebugUI_SkillEntryWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0260   (0x0008)  MISSED
	UTextBlock*                                        _nameTextBlock;                                             // 0x0268   (0x0008)  
};

/// Class /Script/ConZ.PrisonerDebugUI_BodyConditionItem
/// Size: 0x0008 (0x000028 - 0x000030)
class UPrisonerDebugUI_BodyConditionItem : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerDebugUI_BodyStateItem
/// Size: 0x0008 (0x000030 - 0x000038)
class UPrisonerDebugUI_BodyStateItem : public UPrisonerDebugUI_BodyConditionItem
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerDebugUI_BodyEffectItem
/// Size: 0x0008 (0x000030 - 0x000038)
class UPrisonerDebugUI_BodyEffectItem : public UPrisonerDebugUI_BodyConditionItem
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerDebugUI_BodyConditionEntryWidget
/// Size: 0x0010 (0x000260 - 0x000270)
class UPrisonerDebugUI_BodyConditionEntryWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0260   (0x0008)  MISSED
	UTextBlock*                                        _nameTextBlock;                                             // 0x0268   (0x0008)  
};

/// Class /Script/ConZ.PrisonerDebugUI_MainWidget
/// Size: 0x0090 (0x000260 - 0x0002F0)
class UPrisonerDebugUI_MainWidget : public UUserWidget
{ 
public:
	UComboBoxString*                                   _prisonersComboBox;                                         // 0x0260   (0x0008)  
	UTextBlock*                                        _lifeTimeTextBlock;                                         // 0x0268   (0x0008)  
	UTextBlock*                                        _strengthTextBlock;                                         // 0x0270   (0x0008)  
	UTextBlock*                                        _constitutionTextBlock;                                     // 0x0278   (0x0008)  
	UTextBlock*                                        _dexterityTextBlock;                                        // 0x0280   (0x0008)  
	UTextBlock*                                        _intelligenceTextBlock;                                     // 0x0288   (0x0008)  
	UTextBlock*                                        _healthTextBlock;                                           // 0x0290   (0x0008)  
	UTextBlock*                                        _bodyTemperatureTextBlock;                                  // 0x0298   (0x0008)  
	UTextBlock*                                        _apparentTemperatureTextBlock;                              // 0x02A0   (0x0008)  
	UTextBlock*                                        _clothesTemperatureTextBlock;                               // 0x02A8   (0x0008)  
	UListView*                                         _skillsListView;                                            // 0x02B0   (0x0008)  
	UListView*                                         _bodyConditionsListView;                                    // 0x02B8   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x02C0   (0x0008)  MISSED
	UPrisonerUIData*                                   _data;                                                      // 0x02C8   (0x0008)  
	UPrisonerUITooltipCache*                           _tooltipCache;                                              // 0x02D0   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x02D8   (0x0004)  MISSED
	float                                              _dataRequestTimerInterval;                                  // 0x02DC   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x02E0   (0x0004)  MISSED
	float                                              _dataApplyTimerInterval;                                    // 0x02E4   (0x0004)  
	UTextBlock*                                        _prisonerBodyEffects;                                       // 0x02E8   (0x0008)  


	/// Functions
	// Function /Script/ConZ.PrisonerDebugUI_MainWidget.PrisonersComboBox_SelectionChanged
	void PrisonersComboBox_SelectionChanged(FString SelectedItem, TEnumAsByte<ESelectInfo> SelectionType);                   // [0x23a4d40] Final|Native|Private 
};

/// Class /Script/ConZ.PrisonerEntitySetup
/// Size: 0x0000 (0x000080 - 0x000080)
class UPrisonerEntitySetup : public UEntitySetup
{ 
public:
};

/// Class /Script/ConZ.PrisonerExcretionUserData
/// Size: 0x0008 (0x000028 - 0x000030)
class UPrisonerExcretionUserData : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerFirstPersonSubviewComponent
/// Size: 0x00F0 (0x0007D0 - 0x0008C0)
class UPrisonerFirstPersonSubviewComponent : public UCameraComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x07D0   (0x0008)  MISSED
	EPrisonerFirstPersonSubview                        SubviewID;                                                  // 0x07D8   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x07D9   (0x0003)  MISSED
	float                                              WeaponFOV;                                                  // 0x07DC   (0x0004)  
	FVector                                            WeaponFoveationOffset;                                      // 0x07E0   (0x000C)  
	float                                              MinViewPitch;                                               // 0x07EC   (0x0004)  
	float                                              MaxViewPitch;                                               // 0x07F0   (0x0004)  
	float                                              MinViewYaw;                                                 // 0x07F4   (0x0004)  
	float                                              MaxViewYaw;                                                 // 0x07F8   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x07FC   (0x0004)  MISSED
	UCurveLinearColor*                                 MinMaxViewPitchByYawAndSpeed;                               // 0x0800   (0x0008)  
	UCurveVector*                                      LocalSpaceOffsetByYaw;                                      // 0x0808   (0x0008)  
	UCurveVector*                                      LocalSpaceOffsetByPitch;                                    // 0x0810   (0x0008)  
	UCurveVector*                                      ActorSpaceOffsetByYaw;                                      // 0x0818   (0x0008)  
	UCurveVector*                                      ActorSpaceOffsetByPitch;                                    // 0x0820   (0x0008)  
	FName                                              LockRotationToSocketAnimationCurveName;                     // 0x0828   (0x0008)  
	FName                                              LockRotationToSocketSocketName;                             // 0x0830   (0x0008)  
	float                                              ProbeSize;                                                  // 0x0838   (0x0004)  
	TEnumAsByte<ECollisionChannel>                     ProbeChannel;                                               // 0x083C   (0x0001)  
	bool                                               DoCollisionTest;                                            // 0x083D   (0x0001)  
	unsigned char                                      UnknownData03_5[0x2];                                       // 0x083E   (0x0002)  MISSED
	FName                                              AnimationBobbingTXCurveName;                                // 0x0840   (0x0008)  
	FName                                              AnimationBobbingTYCurveName;                                // 0x0848   (0x0008)  
	FName                                              AnimationBobbingTZCurveName;                                // 0x0850   (0x0008)  
	FName                                              AnimationBobbingRYCurveName;                                // 0x0858   (0x0008)  
	FName                                              AnimationBobbingRPCurveName;                                // 0x0860   (0x0008)  
	FName                                              AnimationBobbingRRCurveName;                                // 0x0868   (0x0008)  
	float                                              AnimationBobbingTScale;                                     // 0x0870   (0x0004)  
	float                                              AnimationBobbingRScale;                                     // 0x0874   (0x0004)  
	FName                                              AnimationCameraOffsetTXCurveName;                           // 0x0878   (0x0008)  
	FName                                              AnimationCameraOffsetTYCurveName;                           // 0x0880   (0x0008)  
	FName                                              AnimationCameraOffsetTZCurveName;                           // 0x0888   (0x0008)  
	FName                                              AnimationCameraOffsetRYCurveName;                           // 0x0890   (0x0008)  
	FName                                              AnimationCameraOffsetRPCurveName;                           // 0x0898   (0x0008)  
	FName                                              AnimationCameraOffsetRRCurveName;                           // 0x08A0   (0x0008)  
	float                                              AnimationCameraOffsetTScale;                                // 0x08A8   (0x0004)  
	float                                              AnimationCameraOffsetRScale;                                // 0x08AC   (0x0004)  
	float                                              BlendInDuration;                                            // 0x08B0   (0x0004)  
	float                                              BlendOutDuration;                                           // 0x08B4   (0x0004)  
	float                                              _minFactorForPrisonerHiding;                                // 0x08B8   (0x0004)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x08BC   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerFirstPersonVehicleAimingSubviewComponent
/// Size: 0x0000 (0x0008C0 - 0x0008C0)
class UPrisonerFirstPersonVehicleAimingSubviewComponent : public UPrisonerFirstPersonSubviewComponent
{ 
public:
};

/// Class /Script/ConZ.PrisonerViewComponent
/// Size: 0x0020 (0x0000B0 - 0x0000D0)
class UPrisonerViewComponent : public UActorComponent
{ 
public:
	float                                              DefaultSubviewBlendDuration;                                // 0x00B0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x1C];                                      // 0x00B4   (0x001C)  MISSED
};

/// Class /Script/ConZ.PrisonerFirstPersonViewComponent
/// Size: 0x0130 (0x0000D0 - 0x000200)
class UPrisonerFirstPersonViewComponent : public UPrisonerViewComponent
{ 
public:
	TArray<EPrisonerFirstPersonSubview>                SubviewBlendingPriorities;                                  // 0x00D0   (0x0010)  
	TArray<FPrisonerFirstPersonSubviewBlendOverride>   SubviewBlendOverrides;                                      // 0x00E0   (0x0010)  
	unsigned char                                      UnknownData00_6[0x110];                                     // 0x00F0   (0x0110)  MISSED
};

/// Class /Script/ConZ.PrisonerFishingComponent
/// Size: 0x0010 (0x0000C0 - 0x0000D0)
class UPrisonerFishingComponent : public UCharacterActionComponent
{ 
public:
	EFishingState                                      _fishingState;                                              // 0x00C0   (0x0001)  
	unsigned char                                      UnknownData00_6[0xF];                                       // 0x00C1   (0x000F)  MISSED


	/// Functions
	// Function /Script/ConZ.PrisonerFishingComponent.OnRep_FishingState
	void OnRep_FishingState();                                                                                               // [0x23a4ce0] Final|Native|Private 
};

/// Class /Script/ConZ.PrisonerForeignSubstance
/// Size: 0x0098 (0x0000A8 - 0x000140)
class UPrisonerForeignSubstance : public UForeignSubstance
{ 
public:
	bool                                               _shouldConstitutionAffectAbsorptionCapacity;                // 0x00A8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x00A9   (0x0007)  MISSED
	FRuntimeFloatCurve                                 _absorptionCapacityModifierVsConstitutionRatio;             // 0x00B0   (0x0088)  
	bool                                               _shouldBeDiscardedWithPhoenixTears;                         // 0x0138   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0139   (0x0007)  MISSED
};

/// Class /Script/ConZ.PrisonerForeignSubstance_Antibiotics
/// Size: 0x0000 (0x000140 - 0x000140)
class UPrisonerForeignSubstance_Antibiotics : public UPrisonerForeignSubstance
{ 
public:
};

/// Class /Script/ConZ.PrisonerForeignSubstance_AttributeModifier
/// Size: 0x0020 (0x000140 - 0x000160)
class UPrisonerForeignSubstance_AttributeModifier : public UPrisonerForeignSubstance
{ 
public:
	float                                              _strengthModifier;                                          // 0x0140   (0x0004)  
	float                                              _strengthChange;                                            // 0x0144   (0x0004)  
	float                                              _constitutionModifier;                                      // 0x0148   (0x0004)  
	float                                              _constitutionChange;                                        // 0x014C   (0x0004)  
	float                                              _dexterityModifier;                                         // 0x0150   (0x0004)  
	float                                              _dexterityChange;                                           // 0x0154   (0x0004)  
	float                                              _intelligenceModifier;                                      // 0x0158   (0x0004)  
	float                                              _intelligenceChange;                                        // 0x015C   (0x0004)  
};

/// Class /Script/ConZ.PrisonerForeignSubstance_Painkillers
/// Size: 0x0000 (0x000140 - 0x000140)
class UPrisonerForeignSubstance_Painkillers : public UPrisonerForeignSubstance
{ 
public:
};

/// Class /Script/ConZ.PrisonerForeignSubstance_Toxins
/// Size: 0x0000 (0x000140 - 0x000140)
class UPrisonerForeignSubstance_Toxins : public UPrisonerForeignSubstance
{ 
public:
};

/// Class /Script/ConZ.PrisonerForeignSubstanceStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UPrisonerForeignSubstanceStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.PrisonerHallucinationIllusion
/// Size: 0x0000 (0x000220 - 0x000220)
class APrisonerHallucinationIllusion : public AActor
{ 
public:
};

/// Class /Script/ConZ.PrisonerHallucinationIllusion_SeeFirearmsAsSticksAndBananas
/// Size: 0x0020 (0x000220 - 0x000240)
class APrisonerHallucinationIllusion_SeeFirearmsAsSticksAndBananas : public APrisonerHallucinationIllusion
{ 
public:
	UStaticMesh*                                       _bananaMesh;                                                // 0x0220   (0x0008)  
	UStaticMesh*                                       _mediumStickMesh;                                           // 0x0228   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0230   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerHallucinationIllusion_SeeOtherPlayersExtremelyFatOrSkinny
/// Size: 0x0050 (0x000220 - 0x000270)
class APrisonerHallucinationIllusion_SeeOtherPlayersExtremelyFatOrSkinny : public APrisonerHallucinationIllusion
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0220   (0x0050)  MISSED
};

/// Class /Script/ConZ.PrisonerHallucinationIllusion_SeeOtherPlayersWithWeirdMasks
/// Size: 0x0030 (0x000220 - 0x000250)
class APrisonerHallucinationIllusion_SeeOtherPlayersWithWeirdMasks : public APrisonerHallucinationIllusion
{ 
public:
	TArray<UStaticMesh*>                               _maskMeshes;                                                // 0x0220   (0x0010)  
	TArray<UCharacterMesh*>                            _maskCharacterMeshes;                                       // 0x0230   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0240   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerHallucinationIllusion_SpawnCompanionCrow
/// Size: 0x0300 (0x000220 - 0x000520)
class APrisonerHallucinationIllusion_SpawnCompanionCrow : public APrisonerHallucinationIllusion
{ 
public:
	UClass*                                            _crowClass;                                                 // 0x0220   (0x0008)  
	FName                                              _crowAttachSocketName;                                      // 0x0228   (0x0008)  
	FTransform                                         _attachedCrowRelativeTransform;                             // 0x0230   (0x0030)  
	FFloatInterval                                     _responseIdleInitialInterval;                               // 0x0260   (0x0008)  
	FFloatInterval                                     _responseIdleInterval;                                      // 0x0268   (0x0008)  
	TArray<UAnimMontage*>                              _responseIdleMontages;                                      // 0x0270   (0x0010)  
	FVector                                            _flyoffDirection;                                           // 0x0280   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x028C   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _flyoffSpeedVsTime;                                         // 0x0290   (0x0088)  
	UAkAudioEvent*                                     _flyoffAudioEvent;                                          // 0x0318   (0x0008)  
	FRuntimeFloatCurve                                 _cruisingSpeedVsTime;                                       // 0x0320   (0x0088)  
	FRuntimeFloatCurve                                 _cruisingRotationRateVsTime;                                // 0x03A8   (0x0088)  
	FRuntimeFloatCurve                                 _rollVsSteerRate;                                           // 0x0430   (0x0088)  
	float                                              _landingDuration;                                           // 0x04B8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x04BC   (0x0004)  MISSED
	UAkAudioEvent*                                     _landingAudioEvent;                                         // 0x04C0   (0x0008)  
	UAkAudioEvent*                                     _landedAudioEvent;                                          // 0x04C8   (0x0008)  
	UAnimMontage*                                      _landedMontage;                                             // 0x04D0   (0x0008)  
	unsigned char                                      UnknownData02_6[0x48];                                      // 0x04D8   (0x0048)  MISSED
};

/// Class /Script/ConZ.PrisonerHallucinationIllusion_SpawnFakeItemsThatDisappearOnPickup
/// Size: 0x0068 (0x000220 - 0x000288)
class APrisonerHallucinationIllusion_SpawnFakeItemsThatDisappearOnPickup : public APrisonerHallucinationIllusion
{ 
public:
	TArray<UClass*>                                    _fakeItemClasses;                                           // 0x0220   (0x0010)  
	float                                              _fakeItemSpawnChance;                                       // 0x0230   (0x0004)  
	unsigned char                                      UnknownData00_6[0x54];                                      // 0x0234   (0x0054)  MISSED
};

/// Class /Script/ConZ.PrisonerHallucinationIllusion_SpawnMiniatureZombies
/// Size: 0x0068 (0x000220 - 0x000288)
class APrisonerHallucinationIllusion_SpawnMiniatureZombies : public APrisonerHallucinationIllusion
{ 
public:
	TArray<UClass*>                                    _zombieClasses;                                             // 0x0220   (0x0010)  
	UClass*                                            _aiControllerClass;                                         // 0x0230   (0x0008)  
	int32_t                                            _zombieGroupSize;                                           // 0x0238   (0x0004)  
	int32_t                                            _maxZombiesToSpawnPerTick;                                  // 0x023C   (0x0004)  
	int32_t                                            _maxZombiesToDestroyPerTick;                                // 0x0240   (0x0004)  
	FFloatInterval                                     _zombieGroupSpawnInterval;                                  // 0x0244   (0x0008)  
	FFloatInterval                                     _zombieSpawnDistance;                                       // 0x024C   (0x0008)  
	float                                              _maxZombieDistance;                                         // 0x0254   (0x0004)  
	float                                              _maxTimeWithoutZombieLineOfSight;                           // 0x0258   (0x0004)  
	float                                              _zombieSoundAttenuationScalingFactor;                       // 0x025C   (0x0004)  
	unsigned char                                      UnknownData00_5[0x18];                                      // 0x0260   (0x0018)  MISSED
	TArray<AController*>                               _zombieControllers;                                         // 0x0278   (0x0010)  
};

/// Class /Script/ConZ.PrisonerHUD
/// Size: 0x0580 (0x000310 - 0x000890)
class APrisonerHUD : public AHUD
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0310   (0x0010)  MISSED
	UHudWidget*                                        HudWidget;                                                  // 0x0320   (0x0008)  
	UDamageDirectionIndicator*                         DamageDirectionIndicator;                                   // 0x0328   (0x0008)  
	bool                                               ShouldDrawCrosshair;                                        // 0x0330   (0x0001)  
	bool                                               ShouldDrawScreenCenterDot;                                  // 0x0331   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x0332   (0x0006)  MISSED
	UMaterialInterface*                                TacticsMaterial;                                            // 0x0338   (0x0008)  
	ULoadingIconWidget*                                LoadingIconWidget;                                          // 0x0340   (0x0008)  
	USpawnScreen*                                      SpawnScreenWidget;                                          // 0x0348   (0x0008)  
	UWaypointScreenWidget*                             WaypointScreenWidget;                                       // 0x0350   (0x0008)  
	FMulticastInlineDelegate                           OnShouldShowExtendedWidgetTooltipChanged;                   // 0x0358   (0x0010)  
	UFont*                                             _HUDFont;                                                   // 0x0368   (0x0008)  
	UFont*                                             _HUDFontScope;                                              // 0x0370   (0x0008)  
	unsigned char                                      UnknownData02_5[0x30];                                      // 0x0378   (0x0030)  MISSED
	float                                              _customMapBorderWidth;                                      // 0x03A8   (0x0004)  
	FLinearColor                                       _customMapBorderColor;                                      // 0x03AC   (0x0010)  
	unsigned char                                      UnknownData03_5[0x3C];                                      // 0x03BC   (0x003C)  MISSED
	UClass*                                            _pauseMenuUIControllerClass;                                // 0x03F8   (0x0008)  
	FGameplayTagContainer                              _traderCategories;                                          // 0x0400   (0x0020)  
	unsigned char                                      UnknownData04_5[0x8];                                       // 0x0420   (0x0008)  MISSED
	UClass*                                            _plantingPanelWidgetClass;                                  // 0x0428   (0x0008)  
	UClass*                                            _adminPlantPanelWidgetClass;                                // 0x0430   (0x0008)  
	unsigned char                                      UnknownData05_5[0x8];                                       // 0x0438   (0x0008)  MISSED
	UClass*                                            _plantStatusIndicatorWidgetClass;                           // 0x0440   (0x0008)  
	unsigned char                                      UnknownData06_5[0x18];                                      // 0x0448   (0x0018)  MISSED
	UClass*                                            _cookingUIControllerClass;                                  // 0x0460   (0x0008)  
	unsigned char                                      UnknownData07_5[0x8];                                       // 0x0468   (0x0008)  MISSED
	UClass*                                            _chatUIControllerClass;                                     // 0x0470   (0x0008)  
	unsigned char                                      UnknownData08_5[0x7A];                                      // 0x0478   (0x007A)  MISSED
	bool                                               _shouldDrawOtherPlayerInfo;                                 // 0x04F2   (0x0001)  
	bool                                               _isLeftMouseButtonPressed;                                  // 0x04F3   (0x0001)  
	unsigned char                                      UnknownData09_5[0x2C];                                      // 0x04F4   (0x002C)  MISSED
	FMapHUDPrisonerObject                              _prisonerMapHUDObject;                                      // 0x0520   (0x0040)  
	FMapHUDHomeLocationObject                          _homeLocationMapHUDObject;                                  // 0x0560   (0x0048)  
	FMapHUDWorldEventsObject                           _worldEventsMapHUDObject;                                   // 0x05A8   (0x0018)  
	FMapHUDOtherPlayersObject                          _otherPlayersMapHUDObjects;                                 // 0x05C0   (0x00C0)  
	FMapHUDDroneObject                                 _droneMapHUDObject;                                         // 0x0680   (0x0038)  
	FMapHUDVehiclesObject                              _vehicleMapHUDObjects;                                      // 0x06B8   (0x00C0)  
	unsigned char                                      UnknownData10_5[0x20];                                      // 0x0778   (0x0020)  MISSED
	FMapHUDFlagsObject                                 _flagMapHUDObjects;                                         // 0x0798   (0x00C0)  
	unsigned char                                      UnknownData11_5[0x30];                                      // 0x0858   (0x0030)  MISSED
	UItemSplitWidget*                                  _itemSplitWidget;                                           // 0x0888   (0x0008)  


	/// Functions
	// Function /Script/ConZ.PrisonerHUD.ShouldShowExtendedWidgetTooltipChanged__DelegateSignature
	void ShouldShowExtendedWidgetTooltipChanged__DelegateSignature(bool ShouldShowExtendedWidgetTooltip);                    // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.PrisonerHUD.ShouldShowExtendedWidgetTooltip
	bool ShouldShowExtendedWidgetTooltip();                                                                                  // [0x23a8a40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerHUD.SetHUDMode
	void SetHUDMode(EPrisonerHUDMode NewMode);                                                                               // [0x23a89c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PrisonerHUD.SendVehicleMarkerDataDataRequest
	void SendVehicleMarkerDataDataRequest();                                                                                 // [0x23a89a0] Final|Native|Private 
	// Function /Script/ConZ.PrisonerHUD.ReceiveVehicleMarkerData
	void ReceiveVehicleMarkerData(UVehicleMarkersData* Data);                                                                // [0x23a8600] Final|Native|Private 
	// Function /Script/ConZ.PrisonerHUD.IsShowingSpawnScreen
	bool IsShowingSpawnScreen();                                                                                             // [0x23a8540] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerHUD.IsShowingLoading
	bool IsShowingLoading();                                                                                                 // [0x23a8510] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerHUD.GetWaypointScreenWidget
	UWaypointScreenWidget* GetWaypointScreenWidget();                                                                        // [0x23a83a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PrisonerHUD.GetHudWidgetCanvasPanel
	UCanvasPanel* GetHudWidgetCanvasPanel();                                                                                 // [0x23a8270] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PrisonerHUD.GetHUDMode
	EPrisonerHUDMode GetHUDMode();                                                                                           // [0x23a8240] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.PrisonerInventoryComponent
/// Size: 0x0288 (0x0000B0 - 0x000338)
class UPrisonerInventoryComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x28];                                      // 0x00B0   (0x0028)  MISSED
	FMulticastInlineDelegate                           ItemEquipped;                                               // 0x00D8   (0x0010)  
	FMulticastInlineDelegate                           ItemUnequipped;                                             // 0x00E8   (0x0010)  
	float                                              AddSelectionDuration;                                       // 0x00F8   (0x0004)  
	float                                              AddSelectionReplicationDelay;                               // 0x00FC   (0x0004)  
	float                                              TickFrequency;                                              // 0x0100   (0x0004)  
	unsigned char                                      UnknownData01_5[0xC];                                       // 0x0104   (0x000C)  MISSED
	UStaticMesh*                                       _chipMesh;                                                  // 0x0110   (0x0008)  
	unsigned char                                      UnknownData02_5[0x18];                                      // 0x0118   (0x0018)  MISSED
	UQuickAccessManager*                               _quickAccessManager;                                        // 0x0130   (0x0008)  
	unsigned char                                      UnknownData03_5[0x18];                                      // 0x0138   (0x0018)  MISSED
	TMap<TWeakObjectPtr, uint32_t>                     _vicinityItems;                                             // 0x0150   (0x0050)  
	unsigned char                                      UnknownData04_5[0x18];                                      // 0x01A0   (0x0018)  MISSED
	TMap<FGameplayTag, FClothesPartSet>                _clothesPartsToDamageByMeleeAttackCapsuleAttachment;        // 0x01B8   (0x0050)  
	TArray<TWeakObjectPtr>                             _characterMeshClassesSorted;                                // 0x0208   (0x0010)  
	UClass*                                            _parachuteClass;                                            // 0x0218   (0x0008)  
	UInventoryContainerClothes*                        _inventoryClothes;                                          // 0x0220   (0x0008)  
	UInventoryContainerHandsHolsters*                  _inventoryHandsHolsters;                                    // 0x0228   (0x0008)  
	UInventoryContainerSelection*                      _inventorySelection2;                                       // 0x0230   (0x0008)  
	unsigned char                                      UnknownData05_5[0x50];                                      // 0x0238   (0x0050)  MISSED
	UInv2021_InventoryContainerClothes*                _inventoryContainerClothes;                                 // 0x0288   (0x0008)  
	unsigned char                                      UnknownData06_6[0xA8];                                      // 0x0290   (0x00A8)  MISSED


	/// Functions
	// Function /Script/ConZ.PrisonerInventoryComponent.UnEquipStolenClothesItemOnServer
	void UnEquipStolenClothesItemOnServer(APrisoner* stolenPrisoner, AClothesItem* Item);                                    // [0x23a8de0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.PrisonerInventoryComponent.UnEquipClothesItemOnServer
	void UnEquipClothesItemOnServer(AClothesItem* Item, bool placeInInventory, bool shouldEverDrop);                         // [0x23a8cc0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.PrisonerInventoryComponent.UnEquipClothesItem
	void UnEquipClothesItem(AClothesItem* Item, bool placeInInventory, bool shouldEverDrop);                                 // [0x23a8bb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PrisonerInventoryComponent.SpawnAndDropItemAtOnServer
	void SpawnAndDropItemAtOnServer(UContainerItemDescriptor* Item, FVector Location, FRotator Rotation);                    // [0x23a8a70] Net|NetReliableNative|Event|Public|NetServer|HasDefaults 
	// Function /Script/ConZ.PrisonerInventoryComponent.Server_SendQuickAccessState
	void Server_SendQuickAccessState(TArray<FQuickAccessSlotData> Data);                                                     // [0x23390f0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.PrisonerInventoryComponent.Server_InitializeItemVirtualizedInventory
	void Server_InitializeItemVirtualizedInventory(UObject* Item, UObject* container);                                       // [0x2260770] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.PrisonerInventoryComponent.RemoveStolenItemOnServer
	void RemoveStolenItemOnServer(APrisoner* stolenPrisoner, AItem* Item);                                                   // [0x23a88d0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.PrisonerInventoryComponent.RemoveStacks
	TScriptInterface<Class> RemoveStacks(int32_t stacksToSplit);                                                             // [0x23a8820] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PrisonerInventoryComponent.RemoveSelectionItemsOnClients
	void RemoveSelectionItemsOnClients(TArray<AItem*> Items, bool allClients);                                               // [0x23a8730] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.PrisonerInventoryComponent.RemoveSelectionItemsOnClient
	void RemoveSelectionItemsOnClient(TArray<AItem*> Items);                                                                 // [0x23a8690] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.PrisonerInventoryComponent.RemoveItemOnServer
	void RemoveItemOnServer(AItem* Item);                                                                                    // [0x23460b0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.PrisonerInventoryComponent.OnEquippedClothesDestroyed
	void OnEquippedClothesDestroyed(AActor* Actor);                                                                          // [0x23a8570] Final|Native|Public  
	// Function /Script/ConZ.PrisonerInventoryComponent.ItemUnequippedDelegate__DelegateSignature
	void ItemUnequippedDelegate__DelegateSignature(UPrisonerInventoryComponent* sender, AItem* Item);                        // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.PrisonerInventoryComponent.ItemEquippedDelegate__DelegateSignature
	void ItemEquippedDelegate__DelegateSignature(UPrisonerInventoryComponent* sender, AItem* Item);                          // [0x2859740] MulticastDelegate|Public|Delegate 
	// Function /Script/ConZ.PrisonerInventoryComponent.IsClothesItemEquipped
	bool IsClothesItemEquipped(AClothesItem* Item);                                                                          // [0x23a8470] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PrisonerInventoryComponent.HasSelectionItem
	bool HasSelectionItem(AItem* Item);                                                                                      // [0x23a83d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerInventoryComponent.GetStacksCount
	int32_t GetStacksCount();                                                                                                // [0x23a8360] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerInventoryComponent.GetMaxHairLength
	float GetMaxHairLength(EConZGender Gender);                                                                              // [0x23a82d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerInventoryComponent.GetMaxFacialHairLength
	float GetMaxFacialHairLength();                                                                                          // [0x23a82a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerInventoryComponent.GetGearWeightFast
	float GetGearWeightFast();                                                                                               // [0x23a8210] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerInventoryComponent.GetGearWeight
	float GetGearWeight();                                                                                                   // [0x23a81e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerInventoryComponent.GetEquippedClothes
	TArray<AClothesItem*> GetEquippedClothes();                                                                              // [0x23a8160] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerInventoryComponent.FinishAddSelectionItemOnServer
	void FinishAddSelectionItemOnServer();                                                                                   // [0x2315170] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.PrisonerInventoryComponent.EquipItemInHandsOnServer
	void EquipItemInHandsOnServer(AItem* Item);                                                                              // [0x2314e20] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.PrisonerInventoryComponent.EquipClothesItemOnServer
	void EquipClothesItemOnServer(AClothesItem* Item);                                                                       // [0x23a7ee0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.PrisonerInventoryComponent.EquipClothesItem
	void EquipClothesItem(AClothesItem* Item);                                                                               // [0x23a7e50] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PrisonerInventoryComponent.DropItemOnServer
	void DropItemOnServer(AItem* Item);                                                                                      // [0x23a7dc0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.PrisonerInventoryComponent.DropItemOnClient
	void DropItemOnClient(AItem* Item);                                                                                      // [0x23a7d30] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.PrisonerInventoryComponent.DropItemAtOnServer
	void DropItemAtOnServer(AItem* Item, FVector Location, FRotator Rotation);                                               // [0x23a7bf0] Net|NetReliableNative|Event|Public|NetServer|HasDefaults 
	// Function /Script/ConZ.PrisonerInventoryComponent.DropAllItemsOnServer
	void DropAllItemsOnServer(TArray<AItem*> Items, bool removeSelection);                                                   // [0x23a7b00] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.PrisonerInventoryComponent.Client_SendQuickAccessState
	void Client_SendQuickAccessState(TArray<FQuickAccessClientSyncData> Data, bool enableSendingState);                      // [0x23a7a10] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.PrisonerInventoryComponent.CanStackWith
	bool CanStackWith(UObject* Item);                                                                                        // [0x23a7970] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerInventoryComponent.CanStack
	bool CanStack();                                                                                                         // [0x23a7930] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerInventoryComponent.CanEquipClothesItem
	bool CanEquipClothesItem(AClothesItem* Item);                                                                            // [0x23a7890] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PrisonerInventoryComponent.CanAddItem
	bool CanAddItem(AItem* Item, bool tryToJoinItems);                                                                       // [0x23a77c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PrisonerInventoryComponent.AutoAddItemOnServer
	void AutoAddItemOnServer(AItem* Item, bool tryToJoinItems);                                                              // [0x23a76f0] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.PrisonerInventoryComponent.AutoAddAllItemsOnServer
	void AutoAddAllItemsOnServer(TArray<AItem*> Items, bool removeSelection);                                                // [0x23a7600] Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable 
	// Function /Script/ConZ.PrisonerInventoryComponent.AddStack
	void AddStack(TScriptInterface<Class> Item);                                                                             // [0x23a7550] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PrisonerInventoryComponent.AddSelectionItemOnClient
	void AddSelectionItemOnClient(AItem* Item);                                                                              // [0x23a74c0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.PrisonerInventoryComponent.AddDefaultEquipment
	void AddDefaultEquipment();                                                                                              // [0x23a74a0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.PrisonerLifeIndicatorsSprite
/// Size: 0x0138 (0x000260 - 0x000398)
class UPrisonerLifeIndicatorsSprite : public UUserWidget
{ 
public:
	UCanvasPanel*                                      MPI_CanvasPanel;                                            // 0x0260   (0x0008)  
	UBreathingBarLungsWidget*                          _breathingBarLungsWidget;                                   // 0x0268   (0x0008)  
	UDualArcedProgressBar*                             _dualProgressBarBreathing;                                  // 0x0270   (0x0008)  
	UGradedArcedProgressBar*                           _gradedProgressBarActionDifficulty;                         // 0x0278   (0x0008)  
	UCircularProgressBar*                              CircularProgressBarSpritesHLTH;                             // 0x0280   (0x0008)  
	UCircularProgressBar*                              CircularProgressBarSpritesSTA;                              // 0x0288   (0x0008)  
	UCircularProgressBar*                              CircularProgressBarSpritesNRG;                              // 0x0290   (0x0008)  
	UCircularProgressBar*                              CircularProgressBarSpritesHYD;                              // 0x0298   (0x0008)  
	UCircularProgressBar*                              CircularProgressBarSpritesNoise;                            // 0x02A0   (0x0008)  
	UCircularProgressBar*                              CircularProgressBarSpritesAIPerception;                     // 0x02A8   (0x0008)  
	UImage*                                            HeadInjury;                                                 // 0x02B0   (0x0008)  
	UImage*                                            ChestInjury;                                                // 0x02B8   (0x0008)  
	UImage*                                            AbdomenInjury;                                              // 0x02C0   (0x0008)  
	UImage*                                            ArmRightUpperInjury;                                        // 0x02C8   (0x0008)  
	UImage*                                            ArmRightLowerInjury;                                        // 0x02D0   (0x0008)  
	UImage*                                            ArmLeftUpperInjury;                                         // 0x02D8   (0x0008)  
	UImage*                                            ArmLeftLowerInjury;                                         // 0x02E0   (0x0008)  
	UImage*                                            LegRightUpperInjury;                                        // 0x02E8   (0x0008)  
	UImage*                                            LegRightLowerInjury;                                        // 0x02F0   (0x0008)  
	UImage*                                            LegLeftUpperInjury;                                         // 0x02F8   (0x0008)  
	UImage*                                            LegLeftLowerInjury;                                         // 0x0300   (0x0008)  
	UScaleBox*                                         BloodDropBox;                                               // 0x0308   (0x0008)  
	unsigned char                                      UnknownData00_5[0x78];                                      // 0x0310   (0x0078)  MISSED
	UWidgetAnimation*                                  NewAnimation;                                               // 0x0388   (0x0008)  
	APrisoner*                                         _prisoner;                                                  // 0x0390   (0x0008)  
};

/// Class /Script/ConZ.PrisonerSpawnEquipment
/// Size: 0x0078 (0x000030 - 0x0000A8)
class UPrisonerSpawnEquipment : public UDataAsset
{ 
public:
	FGameplayTagQuery                                  Condition;                                                  // 0x0030   (0x0048)  
	TWeakObjectPtr<UClass*>                            ItemClass;                                                  // 0x0078   (0x0028)  
	EPrisonerItemEquipType                             EquipType;                                                  // 0x00A0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00A1   (0x0007)  MISSED
};

/// Class /Script/ConZ.PrisonerLoadout
/// Size: 0x0068 (0x000030 - 0x000098)
class UPrisonerLoadout : public UDataAsset
{ 
public:
	UClass*                                            primary;                                                    // 0x0030   (0x0008)  
	TArray<UClass*>                                    primaryAttachments;                                         // 0x0038   (0x0010)  
	UClass*                                            secondary;                                                  // 0x0048   (0x0008)  
	TArray<UClass*>                                    secondaryAttachments;                                       // 0x0050   (0x0010)  
	UClass*                                            tertiary;                                                   // 0x0060   (0x0008)  
	TArray<UClass*>                                    tertiaryAttachments;                                        // 0x0068   (0x0010)  
	TArray<UClass*>                                    outfit;                                                     // 0x0078   (0x0010)  
	TArray<UClass*>                                    support;                                                    // 0x0088   (0x0010)  


	/// Functions
	// Function /Script/ConZ.PrisonerLoadout.EquipPrisoner
	void EquipPrisoner(APrisoner* Prisoner, TArray<AItem*>& givenItems, bool ClearEquipment, bool applyOutfit, bool applyItems); // [0x23a7f70] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/ConZ.PrisonerMakeoverUIController
/// Size: 0x0118 (0x000028 - 0x000140)
class UPrisonerMakeoverUIController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x118];                                     // 0x0028   (0x0118)  MISSED
};

/// Class /Script/ConZ.PrisonerMeshManager
/// Size: 0x0690 (0x000230 - 0x0008C0)
class UPrisonerMeshManager : public UCharacterMeshManager
{ 
public:
	unsigned char                                      UnknownData00_2[0x300];                                     // 0x0230   (0x0300)  MISSED
	FGameplayTagContainer                              _bodyPartVsCharacterMeshSlotMapping;                        // 0x0530   (0x0180)  
	FGameplayTagContainer                              _wettablePartVsCharacterMeshSlotMapping;                    // 0x06B0   (0x0080)  
	FGameplayTagContainer                              _clothesPartVsCharacterMeshSlotMapping;                     // 0x0730   (0x0160)  
	UClass*                                            _characterBodyClass;                                        // 0x0890   (0x0008)  
	TArray<UClass*>                                    _classesIgnoringFPVHiding;                                  // 0x0898   (0x0010)  
	FGameplayTag                                       _highHeelsTag;                                              // 0x08A8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x08B0   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerMetabolismUIData
/// Size: 0x00D8 (0x000028 - 0x000100)
class UPrisonerMetabolismUIData : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0xD8];                                      // 0x0028   (0x00D8)  MISSED
};

/// Class /Script/ConZ.PrisonerMetabolismUIDataImpl
/// Size: 0x02C8 (0x000100 - 0x0003C8)
class UPrisonerMetabolismUIDataImpl : public UPrisonerMetabolismUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x2C8];                                     // 0x0100   (0x02C8)  MISSED
};

/// Class /Script/ConZ.PrisonerMovementComponent
/// Size: 0x07D0 (0x000C10 - 0x0013E0)
class UPrisonerMovementComponent : public UConZCharacterMovementComponent
{ 
public:
	float                                              CapsuleHalfHeightWhenCrouched;                              // 0x0C08   (0x0004)  
	float                                              CapsuleHalfHeightWhenProne;                                 // 0x0C0C   (0x0004)  
	float                                              CapsuleHalfHeightWhenSwimming;                              // 0x0C10   (0x0004)  
	bool                                               UseCustomRotationRate;                                      // 0x0C14   (0x0001)  
	bool                                               RequestedPathMovesForwardOnly;                              // 0x0C15   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0C16   (0x0002)  MISSED
	float                                              RotationInterpolationSpeed;                                 // 0x0C18   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0C1C   (0x0004)  MISSED
	UCurveFloat*                                       MaxRotationRateCurve;                                       // 0x0C20   (0x0008)  
	float                                              RotationRateMultiplierWhenStanding;                         // 0x0C28   (0x0004)  
	float                                              RotationRateMultiplierWhenCrouched;                         // 0x0C2C   (0x0004)  
	float                                              RotationRateMultiplierWhenProne;                            // 0x0C30   (0x0004)  
	float                                              RotationRateMultiplierWhenSwimming;                         // 0x0C34   (0x0004)  
	float                                              RotationRateMultiplierWhenSwimmingAndDiving;                // 0x0C38   (0x0004)  
	float                                              GroundSlopeAngleForSpeedScalingSmoothingRate;               // 0x0C3C   (0x0004)  
	float                                              GroundSlopeAngleSmoothingRate;                              // 0x0C40   (0x0004)  
	bool                                               UseSmoothedGroundSlopeAngleForPaceChecks;                   // 0x0C44   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0C45   (0x0003)  MISSED
	float                                              MinGroundSlopeAngleForJogging;                              // 0x0C48   (0x0004)  
	float                                              MaxGroundSlopeAngleForJogging;                              // 0x0C4C   (0x0004)  
	float                                              MinGroundSlopeAngleForRunning;                              // 0x0C50   (0x0004)  
	float                                              MaxGroundSlopeAngleForRunning;                              // 0x0C54   (0x0004)  
	float                                              MinSpeedModifierWhenMovingUphill;                           // 0x0C58   (0x0004)  
	float                                              BaseJumpZVelocity;                                          // 0x0C5C   (0x0004)  
	unsigned char                                      UnknownData03_5[0x38];                                      // 0x0C60   (0x0038)  MISSED
	float                                              MaxAbsoluteVelocityZAfterClimb;                             // 0x0C98   (0x0004)  
	float                                              StaminaUnitsToDrainOnJump;                                  // 0x0C9C   (0x0004)  
	UCurveFloat*                                       JumpZVelocityMultiplierVsSpeed;                             // 0x0CA0   (0x0008)  
	UCurveFloat*                                       JumpZVelocityMultiplierVsGroundSlopeAngle;                  // 0x0CA8   (0x0008)  
	TArray<FPrisonerClimbAnimationInfo>                ClimbAnimations;                                            // 0x0CB0   (0x0010)  
	float                                              ClimbingStaminaDrainModifier;                               // 0x0CC0   (0x0004)  
	float                                              ClimbingPlayRateMultiplierWhenRequiredHandIsNotFree;        // 0x0CC4   (0x0004)  
	bool                                               ClimbingDebuggingEnabled;                                   // 0x0CC8   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x0CC9   (0x0003)  MISSED
	float                                              ClimbingDebuggingDrawTime;                                  // 0x0CCC   (0x0004)  
	FVector                                            LadderClimbingCapsuleBias;                                  // 0x0CD0   (0x000C)  
	float                                              LadderClimbingMaxSpeed;                                     // 0x0CDC   (0x0004)  
	bool                                               CanClimbOffLadderUpwardsAutomatically;                      // 0x0CE0   (0x0001)  
	bool                                               CanClimbOffLadderDownwardsAutomatically;                    // 0x0CE1   (0x0001)  
	unsigned char                                      UnknownData05_5[0x2];                                       // 0x0CE2   (0x0002)  MISSED
	float                                              MaxHorzDistanceToLadderForClimbing;                         // 0x0CE4   (0x0004)  
	int32_t                                            NumberOfLadderPeekSteps;                                    // 0x0CE8   (0x0004)  
	FVector                                            PostLadderClimbingLaunchVelocity;                           // 0x0CEC   (0x000C)  
	float                                              MaxHeightToJumpOffLadderSafely;                             // 0x0CF8   (0x0004)  
	float                                              MaxFallingSpeedAllowedForLadderClimbing;                    // 0x0CFC   (0x0004)  
	float                                              MaxGroundSlopeAllowedForLadderClimbing;                     // 0x0D00   (0x0004)  
	unsigned char                                      UnknownData06_5[0x4];                                       // 0x0D04   (0x0004)  MISSED
	UCurveFloat*                                       MaxHorzDistanceToWindowForClimbingVsSpeed;                  // 0x0D08   (0x0008)  
	TArray<FWindowClimbingAnimationInfo>               WindowClimbingAnimations;                                   // 0x0D10   (0x0010)  
	float                                              WaterImmersionToStartSwimming;                              // 0x0D20   (0x0004)  
	float                                              WaterImmersionToStopSwimming;                               // 0x0D24   (0x0004)  
	float                                              SwimmingToWalkingDepthTolerance;                            // 0x0D28   (0x0004)  
	float                                              SwimmingToWalkingCapsuleCollisionTolerance;                 // 0x0D2C   (0x0004)  
	float                                              DesiredWaterImmersion;                                      // 0x0D30   (0x0004)  
	float                                              DesiredWaterImmersionCorrectionAcceleration;                // 0x0D34   (0x0004)  
	UCurveFloat*                                       DesiredWaterImmersionCorrectionAccelerationCurve;           // 0x0D38   (0x0008)  
	float                                              WaterResurfaceAcceleration;                                 // 0x0D40   (0x0004)  
	FVector2D                                          OceanWavesAcceleration;                                     // 0x0D44   (0x0008)  
	float                                              WaterImmersionAfterWhichRunningIsDisabled;                  // 0x0D4C   (0x0004)  
	float                                              ImmersionCorrectionDownMultiplier;                          // 0x0D50   (0x0004)  
	float                                              RotationRateMultiplierWhenImmersedInWater;                  // 0x0D54   (0x0004)  
	float                                              DiveInAccelerationScale;                                    // 0x0D58   (0x0004)  
	float                                              DiveInAccelerationTimeout;                                  // 0x0D5C   (0x0004)  
	float                                              DiveInCollisionCheckOffset;                                 // 0x0D60   (0x0004)  
	float                                              BuoyancyWhenDiving;                                         // 0x0D64   (0x0004)  
	float                                              BuoyancyWhenNotDiving;                                      // 0x0D68   (0x0004)  
	float                                              RotationRatePitchWhenDiving;                                // 0x0D6C   (0x0004)  
	float                                              SurfaceTensionForce;                                        // 0x0D70   (0x0004)  
	float                                              MaxWindSpeedForAerialDrag;                                  // 0x0D74   (0x0004)  
	float                                              LongFallSpeedThreshold;                                     // 0x0D78   (0x0004)  
	float                                              BodyRotationCorrectionRate;                                 // 0x0D7C   (0x0004)  
	FVector                                            BodyRotationDrag;                                           // 0x0D80   (0x000C)  
	FWaterForceWhenSwimmingParams                      WaterForceWhenSwimmingParams;                               // 0x0D8C   (0x0014)  
	FVector_NetQuantizeNormal                          _repAccelerationNormal;                                     // 0x0DA0   (0x000C)  
	unsigned char                                      UnknownData07_5[0x30];                                      // 0x0DAC   (0x0030)  MISSED
	float                                              _timeToSpendFallingBeforeHandsAreFree;                      // 0x0DDC   (0x0004)  
	float                                              _maxLatencyForStanceCheckInterpolation;                     // 0x0DE0   (0x0004)  
	unsigned char                                      UnknownData08_5[0x12C];                                     // 0x0DE4   (0x012C)  MISSED
	char                                               _repBuoyancy;                                               // 0x0F10   (0x0001)  
	unsigned char                                      UnknownData09_5[0x1CF];                                     // 0x0F11   (0x01CF)  MISSED
	FLadderInfoRepData                                 _ladderInfoRepData;                                         // 0x10E0   (0x0050)  
	unsigned char                                      UnknownData10_5[0x202];                                     // 0x1130   (0x0202)  MISSED
	uint16_t                                           _fallingPoseBlendRepData;                                   // 0x1332   (0x0002)  
	char                                               _fallingControlRepData;                                     // 0x1334   (0x0001)  
	unsigned char                                      UnknownData11_6[0xAB];                                      // 0x1335   (0x00AB)  MISSED


	/// Functions
	// Function /Script/ConZ.PrisonerMovementComponent.Server_SetFallingControlRepData
	void Server_SetFallingControlRepData(char RepData);                                                                      // [0x23ad260] Final|Net|Native|Event|Private|NetServer 
	// Function /Script/ConZ.PrisonerMovementComponent.Server_SetDivingState
	void Server_SetDivingState(EPrisonerDivingState Value);                                                                  // [0x23ad1e0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.PrisonerMovementComponent.Server_SetDesiredFallingPose
	void Server_SetDesiredFallingPose(EPrisonerFallingPose Pose, bool force);                                                // [0x23ad100] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.PrisonerMovementComponent.Server_ClimbOffLadder
	void Server_ClimbOffLadder();                                                                                            // [0x23ad0e0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.PrisonerMovementComponent.OnRep_FallingPoseBlend
	void OnRep_FallingPoseBlend();                                                                                           // [0x23ad0c0] Final|Native|Private 
	// Function /Script/ConZ.PrisonerMovementComponent.OnRep_FallingControl
	void OnRep_FallingControl();                                                                                             // [0x23ad0a0] Final|Native|Private 
	// Function /Script/ConZ.PrisonerMovementComponent.OnRep_Buoyancy
	void OnRep_Buoyancy();                                                                                                   // [0x23ad080] Final|Native|Private 
	// Function /Script/ConZ.PrisonerMovementComponent.OnRep_AccelerationNormal
	void OnRep_AccelerationNormal();                                                                                         // [0xb92f40] Final|Native|Private 
	// Function /Script/ConZ.PrisonerMovementComponent.NetMulticast_SetDesiredFallingPose
	void NetMulticast_SetDesiredFallingPose(EPrisonerFallingPose Pose, bool force);                                          // [0x23acfa0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.PrisonerMovementComponent.NetMulticast_SetBodyRotation
	void NetMulticast_SetBodyRotation(FQuat Rotation, FVector AngularVelocity);                                              // [0x23acec0] Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults 
	// Function /Script/ConZ.PrisonerMovementComponent.NetMulticast_PlayAnimMontageIfSimulatedProxy
	void NetMulticast_PlayAnimMontageIfSimulatedProxy(UAnimMontage* Montage, float PlayRate);                                // [0x23acdf0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.PrisonerMovementComponent.NetMulticast_FinishAnchoring
	void NetMulticast_FinishAnchoring(bool anchoringSucceded);                                                               // [0x23acd60] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.PrisonerMovementComponent.JumpOffLadder
	bool JumpOffLadder(FVector& jumpVelocity);                                                                               // [0x23accc0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/ConZ.PrisonerMovementComponent.IsFlyingOrFalling
	float IsFlyingOrFalling();                                                                                               // [0x23acc90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.IsDiving
	bool IsDiving();                                                                                                         // [0x23acc60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.IsClimbingWindow
	bool IsClimbingWindow();                                                                                                 // [0x23acc30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.IsClimbingLadder
	bool IsClimbingLadder();                                                                                                 // [0x23acc00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.IsClimbing
	bool IsClimbing();                                                                                                       // [0x23acbd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.GetWindowInfo
	FWindowInfo GetWindowInfo();                                                                                             // [0x23acb00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.GetWaterImmersionDepth
	float GetWaterImmersionDepth();                                                                                          // [0x23acad0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.GetTimeSpentInAir
	float GetTimeSpentInAir();                                                                                               // [0x23acaa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.GetTimeSpentFalling
	float GetTimeSpentFalling();                                                                                             // [0x23aca70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.GetMaxAllowedPace
	EPrisonerMovementPace GetMaxAllowedPace();                                                                               // [0x23aca40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.GetLadderInfo
	FLadderInfo GetLadderInfo();                                                                                             // [0x23ac950] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.GetGroundSlopeAngleSmoothed
	float GetGroundSlopeAngleSmoothed();                                                                                     // [0x23ac920] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.GetGroundSlopeAngleForSpeedScaling
	float GetGroundSlopeAngleForSpeedScaling();                                                                              // [0x23ac8f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.GetGroundSlopeAngle
	float GetGroundSlopeAngle();                                                                                             // [0x23ac8c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.GetDivingDepth
	float GetDivingDepth();                                                                                                  // [0x23ac890] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.GetDesiredCoursePitchAngle
	float GetDesiredCoursePitchAngle();                                                                                      // [0x23ac860] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.GetDesiredCourseAngle
	float GetDesiredCourseAngle();                                                                                           // [0x23ac830] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.GetCustomMovementMode
	EPrisonerMovementMode GetCustomMovementMode();                                                                           // [0x23ac800] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.GetClimbableObstacleInfo
	FClimbableObstacleInfo GetClimbableObstacleInfo();                                                                       // [0x23ac780] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.GetAnticipatedLandingSpot
	FHitResult GetAnticipatedLandingSpot();                                                                                  // [0x23ac700] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.GetActualCourseAngle
	float GetActualCourseAngle();                                                                                            // [0x23ac6d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.DetectWindow
	bool DetectWindow(FWindowInfo& Result);                                                                                  // [0x23ac5a0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.DetectLadderDisembarkLocation
	bool DetectLadderDisembarkLocation(FLadderInfo& LadderInfo, FVector& newCapsuleLocation, FRotator& newCapsuleRotation);  // [0x23ac440] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.DetectLadder
	bool DetectLadder(FLadderInfo& Result);                                                                                  // [0x23ac370] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.DetectClimbableObstacle
	bool DetectClimbableObstacle(FClimbableObstacleInfo& Result);                                                            // [0x23ac240] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.ClimbWindow
	bool ClimbWindow(FWindowInfo& WindowInfo);                                                                               // [0x23ac110] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.PrisonerMovementComponent.ClimbOntoLadder
	bool ClimbOntoLadder(FLadderInfo& LadderInfo);                                                                           // [0x23ac040] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.PrisonerMovementComponent.ClimbOffLadder
	bool ClimbOffLadder();                                                                                                   // [0x23ac010] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PrisonerMovementComponent.Climb
	bool Climb();                                                                                                            // [0x23abfe0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PrisonerMovementComponent.CanClimbWindow
	bool CanClimbWindow();                                                                                                   // [0x23abfb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.CanClimbOntoLadder
	bool CanClimbOntoLadder();                                                                                               // [0x23abf80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerMovementComponent.CanClimb
	bool CanClimb();                                                                                                         // [0x23abf50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.PrisonerMovementSettings
/// Size: 0x0320 (0x000030 - 0x000350)
class UPrisonerMovementSettings : public UDataAsset
{ 
public:
	FPrisonerMovementSettings_Ground                   Ground;                                                     // 0x0030   (0x016C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x019C   (0x0004)  MISSED
	FPrisonerMovementSettings_Air                      Air;                                                        // 0x01A0   (0x0140)  
	FPrisonerMovementSettings_Water                    Water;                                                      // 0x02E0   (0x0054)  
	FFloatInterval                                     RotationRateMultiplierVsPerformanceRatio;                   // 0x0334   (0x0008)  
	FFloatInterval                                     ClimbingSpeedMultiplierVsPerformanceRatio;                  // 0x033C   (0x0008)  
	FFloatInterval                                     WindowClimbingSpeedMultiplierVsPerformanceRatio;            // 0x0344   (0x0008)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x034C   (0x0004)  MISSED
};

/// Class /Script/ConZ.PrisonerMusicPlayerComponent
/// Size: 0x0090 (0x0000C0 - 0x000150)
class UPrisonerMusicPlayerComponent : public UCharacterActionComponent
{ 
public:
	FName                                              _musicRootFolder;                                           // 0x00C0   (0x0008)  
	float                                              _volumeChangeRate;                                          // 0x00C8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00CC   (0x0004)  MISSED
	int64_t                                            _fileSizeLimitInMB;                                         // 0x00D0   (0x0008)  
	UAkAudioEvent*                                     _turnOnAudioEvent;                                          // 0x00D8   (0x0008)  
	UAkAudioEvent*                                     _turnOffAudioEvent;                                         // 0x00E0   (0x0008)  
	URuntimeAudioImporterLibrary*                      _importerLibrary;                                           // 0x00E8   (0x0008)  
	UAudioComponent*                                   _audioComponent;                                            // 0x00F0   (0x0008)  
	URadioComponent*                                   _radioComponent;                                            // 0x00F8   (0x0008)  
	TWeakObjectPtr<UImportedSoundWave*>                _playingSoundWave;                                          // 0x0100   (0x0008)  
	unsigned char                                      UnknownData01_6[0x48];                                      // 0x0108   (0x0048)  MISSED


	/// Functions
	// Function /Script/ConZ.PrisonerMusicPlayerComponent.OnResult
	void OnResult(URuntimeAudioImporterLibrary* RuntimeAudioImporterObjectRef, UImportedSoundWave* SoundWaveRef, ETranscodingStatus Status); // [0x23b0f40] Final|Native|Private 
	// Function /Script/ConZ.PrisonerMusicPlayerComponent.OnRadioTrackStarted
	void OnRadioTrackStarted();                                                                                              // [0x23b0ee0] Final|Native|Private 
	// Function /Script/ConZ.PrisonerMusicPlayerComponent.OnAudioPlaybackFinished
	void OnAudioPlaybackFinished();                                                                                          // [0x23b0ec0] Final|Native|Private 
};

/// Class /Script/ConZ.PrisonerNameChangeRequest
/// Size: 0x0020 (0x000028 - 0x000048)
class UPrisonerNameChangeRequest : public UPlayerRpcChannelServerRequest
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0028   (0x0020)  MISSED
};

/// Class /Script/ConZ.PrisonerNameChangeResponse
/// Size: 0x0010 (0x000028 - 0x000038)
class UPrisonerNameChangeResponse : public UPlayerRpcChannelServerResponse
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0028   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerPhotoModeAnimInstance
/// Size: 0x00A0 (0x0002C0 - 0x000360)
class UPrisonerPhotoModeAnimInstance : public UAnimInstance
{ 
public:
	float                                              PoseBlendTime;                                              // 0x02B8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x02BC   (0x0004)  MISSED
	TArray<UAnimSequence*>                             _unarmedPoses;                                              // 0x02C0   (0x0010)  
	TArray<UAnimSequence*>                             _riflePoses;                                                // 0x02D0   (0x0010)  
	TArray<UAnimSequence*>                             _handgunPoses;                                              // 0x02E0   (0x0010)  
	TArray<UAnimSequence*>                             _meleePoses;                                                // 0x02F0   (0x0010)  
	TArray<UAnimSequence*>                             _lowerBodyPoses;                                            // 0x0300   (0x0010)  
	TArray<UAnimSequence*>                             _facialExpressions;                                         // 0x0310   (0x0010)  
	EPrisonerPhotoModePoseGroup                        _poseGroup;                                                 // 0x0320   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0321   (0x0003)  MISSED
	float                                              _spineCurvature;                                            // 0x0324   (0x0004)  
	float                                              _spineRotation;                                             // 0x0328   (0x0004)  
	int32_t                                            _upperBodyPoseIndex;                                        // 0x032C   (0x0004)  
	int32_t                                            _lowerBodyPoseIndex;                                        // 0x0330   (0x0004)  
	int32_t                                            _lastUpperBodyPoseIndex;                                    // 0x0334   (0x0004)  
	int32_t                                            _lastLowerBodyPoseIndex;                                    // 0x0338   (0x0004)  
	int32_t                                            _facialExpressionIndex;                                     // 0x033C   (0x0004)  
	int32_t                                            _lastFacialExpressionIndex;                                 // 0x0340   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0344   (0x0004)  MISSED
	UAnimSequenceBase*                                 _correctionPose;                                            // 0x0348   (0x0008)  
	float                                              _upperBodyPoseBlendAlpha;                                   // 0x0350   (0x0004)  
	float                                              _lowerBodyPoseBlendAlpha;                                   // 0x0354   (0x0004)  
	float                                              _facialExpressionBlendAlpha;                                // 0x0358   (0x0004)  
	bool                                               _isFemale;                                                  // 0x035C   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x035D   (0x0003)  MISSED
};

/// Class /Script/ConZ.PrisonerPrisonWalletComponent
/// Size: 0x0030 (0x0000C0 - 0x0000F0)
class UPrisonerPrisonWalletComponent : public UCharacterActionComponent
{ 
public:
	TArray<UClass*>                                    _deluxeItems;                                               // 0x00C0   (0x0010)  
	TArray<UClass*>                                    _milestoneEventItems;                                       // 0x00D0   (0x0010)  
	EPrisonWalletChoiceType                            _milestoneItemChoiceType;                                   // 0x00E0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x00E1   (0x0003)  MISSED
	int32_t                                            _lastMilestone;                                             // 0x00E4   (0x0004)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x00E8   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerResponseIdle
/// Size: 0x0070 (0x000028 - 0x000098)
class UPrisonerResponseIdle : public UObject
{ 
public:
	TArray<UAnimMontage*>                              Montages;                                                   // 0x0028   (0x0010)  
	float                                              PreMontageDelay;                                            // 0x0038   (0x0004)  
	float                                              PostMontageDelay;                                           // 0x003C   (0x0004)  
	float                                              CooldownDuration;                                           // 0x0040   (0x0004)  
	bool                                               CanBeUsedWhenItemIsInHands;                                 // 0x0044   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0045   (0x0003)  MISSED
	TSet<EPrisonerAnimationSet>                        CombatibleAnimationsSets;                                   // 0x0048   (0x0050)  
};

/// Class /Script/ConZ.PrisonerResponseIdle_StaminaInRange
/// Size: 0x0010 (0x000098 - 0x0000A8)
class UPrisonerResponseIdle_StaminaInRange : public UPrisonerResponseIdle
{ 
public:
	FFloatRange                                        StaminaRatioRange;                                          // 0x0098   (0x0010)  
};

/// Class /Script/ConZ.PrisonerResponseIdle_BodyConditionOrSymptomPresence
/// Size: 0x0018 (0x000098 - 0x0000B0)
class UPrisonerResponseIdle_BodyConditionOrSymptomPresence : public UPrisonerResponseIdle
{ 
public:
	UClass*                                            BodyConditionOrSymptom;                                     // 0x0098   (0x0008)  
	FInt32Range                                        SeverityLevels;                                             // 0x00A0   (0x0010)  
};

/// Class /Script/ConZ.PrisonerResponseIdle_NeedToUrinate
/// Size: 0x0000 (0x000098 - 0x000098)
class UPrisonerResponseIdle_NeedToUrinate : public UPrisonerResponseIdle
{ 
public:
};

/// Class /Script/ConZ.PrisonerResponseIdle_NeedToDefecate
/// Size: 0x0000 (0x000098 - 0x000098)
class UPrisonerResponseIdle_NeedToDefecate : public UPrisonerResponseIdle
{ 
public:
};

/// Class /Script/ConZ.PrisonerRestingComponent
/// Size: 0x0060 (0x0000C0 - 0x000120)
class UPrisonerRestingComponent : public UCharacterActionComponent
{ 
public:
	FPrisonerRestingData                               _restingData;                                               // 0x00C0   (0x0018)  
	FPrisonerRestingDataAutonomous                     _restingDataAutonomous;                                     // 0x00D8   (0x001C)  
	unsigned char                                      UnknownData00_6[0x2C];                                      // 0x00F4   (0x002C)  MISSED


	/// Functions
	// Function /Script/ConZ.PrisonerRestingComponent.OnRep_RestingDataAutonomous
	void OnRep_RestingDataAutonomous();                                                                                      // [0x23b0f20] Final|Native|Private 
	// Function /Script/ConZ.PrisonerRestingComponent.OnRep_RestingData
	void OnRep_RestingData();                                                                                                // [0x23b0f00] Final|Native|Private 
};

/// Class /Script/ConZ.TeleportUserData
/// Size: 0x0000 (0x000028 - 0x000028)
class UTeleportUserData : public UObject
{ 
public:
};

/// Class /Script/ConZ.PrisonerTeleportUserData
/// Size: 0x0008 (0x000028 - 0x000030)
class UPrisonerTeleportUserData : public UTeleportUserData
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerShotsFiredTrackerComponent
/// Size: 0x0010 (0x0000B0 - 0x0000C0)
class UPrisonerShotsFiredTrackerComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x4];                                       // 0x00B0   (0x0004)  MISSED
	int32_t                                            _repNumShotsFired;                                          // 0x00B4   (0x0004)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x00B8   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.PrisonerShotsFiredTrackerComponent.OnRep_NumShotsFired
	void OnRep_NumShotsFired();                                                                                              // [0x23b4850] Final|Native|Private 
	// Function /Script/ConZ.PrisonerShotsFiredTrackerComponent.Client_SetWidgetVisibilityAndReset
	void Client_SetWidgetVisibilityAndReset(bool Visibility);                                                                // [0x23b4380] Net|NetReliableNative|Event|Public|NetClient 
};

/// Class /Script/ConZ.PrisonerSkillComponent
/// Size: 0x01B0 (0x0000B0 - 0x000260)
class UPrisonerSkillComponent : public UActorComponent
{ 
public:
	TArray<FPrisonerInitialSkillInfo>                  InitialSkills;                                              // 0x00B0   (0x0010)  
	float                                              TickFrequency;                                              // 0x00C0   (0x0004)  
	unsigned char                                      UnknownData00_5[0xC];                                       // 0x00C4   (0x000C)  MISSED
	TArray<USkill*>                                    _skills;                                                    // 0x00D0   (0x0010)  
	TArray<USkillAction*>                              _actions;                                                   // 0x00E0   (0x0010)  
	unsigned char                                      UnknownData01_5[0xA8];                                      // 0x00F0   (0x00A8)  MISSED
	USkillClasses*                                     _skillClasses;                                              // 0x0198   (0x0008)  
	TArray<AItem*>                                     _lastSurroundingItems;                                      // 0x01A0   (0x0010)  
	unsigned char                                      UnknownData02_5[0x88];                                      // 0x01B0   (0x0088)  MISSED
	TArray<FSkillRecord>                               _replicatedSkills;                                          // 0x0238   (0x0010)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x0248   (0x0004)  MISSED
	uint32_t                                           _replicatedNoiseLevel;                                      // 0x024C   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x0250   (0x0004)  MISSED
	float                                              _skillReplicationPeriod;                                    // 0x0254   (0x0004)  
	unsigned char                                      UnknownData05_6[0x8];                                       // 0x0258   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.PrisonerSkillComponent.UpdateIsInFocusModeOnServer
	void UpdateIsInFocusModeOnServer(bool isInFocus);                                                                        // [0x23b4380] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.PrisonerSkillComponent.ShowWatchingWarningOnClient
	void ShowWatchingWarningOnClient();                                                                                      // [0x23b4e20] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.PrisonerSkillComponent.SetSkillStaminaConsumptionOnServer
	void SetSkillStaminaConsumptionOnServer(USkill* Skill, float Consumption);                                               // [0x23b4d50] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.PrisonerSkillComponent.Server_UpdateNearbyFoliageCoverage
	void Server_UpdateNearbyFoliageCoverage(char nearbyFoliageCoveragePackedData);                                           // [0x23b4cd0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.PrisonerSkillComponent.Server_UpdateDetectablePrisoners
	void Server_UpdateDetectablePrisoners(TArray<APrisoner*> deltaToAdd, TArray<APrisoner*> deltaToRemove);                  // [0x23b4bd0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.PrisonerSkillComponent.Server_IncreaseSkillExperiencePoints
	void Server_IncreaseSkillExperiencePoints(ESkillReplicationID skillReplicationID, float Points);                         // [0x23b4b00] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.PrisonerSkillComponent.SendVisiblePrisoners
	void SendVisiblePrisoners();                                                                                             // [0x23b4ae0] Final|Native|Public  
	// Function /Script/ConZ.PrisonerSkillComponent.RequestNearbyFoliageUpdateOnClient
	void RequestNearbyFoliageUpdateOnClient();                                                                               // [0x23b4ac0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.PrisonerSkillComponent.OnRep_Skills
	void OnRep_Skills();                                                                                                     // [0x23b4870] Final|Native|Private 
	// Function /Script/ConZ.PrisonerSkillComponent.HighlightNearbyItems
	void HighlightNearbyItems();                                                                                             // [0x23b45c0] Final|Native|Public  
	// Function /Script/ConZ.PrisonerSkillComponent.HighlightItemOnClient
	void HighlightItemOnClient(AItem* Item);                                                                                 // [0x23b4530] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/ConZ.PrisonerSkillComponent.GetSkills
	TArray<USkill*> GetSkills();                                                                                             // [0x23b44a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.PrisonerSkillComponent.ForceSkillsReplicationOnServer
	void ForceSkillsReplicationOnServer();                                                                                   // [0x2315190] Net|NetReliableNative|Event|Public|NetServer 
};

/// Class /Script/ConZ.PrisonerSkillComponentUIController
/// Size: 0x0028 (0x000028 - 0x000050)
class UPrisonerSkillComponentUIController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0028   (0x0028)  MISSED
};

/// Class /Script/ConZ.PrisonerSkillsUIDataImpl
/// Size: 0x0010 (0x000028 - 0x000038)
class UPrisonerSkillsUIDataImpl : public UPrisonerSkillsUIData
{ 
public:
	TArray<UPrisonerSkillUIData*>                      SkillsUIData;                                               // 0x0028   (0x0010)  
};

/// Class /Script/ConZ.PrisonerSoundComponent
/// Size: 0x01C0 (0x0000D8 - 0x000298)
class UPrisonerSoundComponent : public UCharacterSoundComponent
{ 
public:
	float                                              MinBreathingRateToPostPeriodicInhaleExhaleAudioEvents;      // 0x00D8   (0x0004)  
	float                                              MaxDistanceToListenerToPostPeriodicInhaleExhaleAudioEvents; // 0x00DC   (0x0004)  
	UAkAudioEvent*                                     PeriodicInhaleAudioEvent;                                   // 0x00E0   (0x0008)  
	UAkAudioEvent*                                     PeriodicExhaleAudioEvent;                                   // 0x00E8   (0x0008)  
	UAkAudioEvent*                                     HoldBreathInhaleAudioEvent;                                 // 0x00F0   (0x0008)  
	UAkAudioEvent*                                     HoldBreathExhaleAudioEvent;                                 // 0x00F8   (0x0008)  
	UAkAudioEvent*                                     HoldBreathBreathlessExhaleAudioEvent;                       // 0x0100   (0x0008)  
	float                                              MinHeartRateToPostHeartbeatAudioEvent;                      // 0x0108   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x010C   (0x0004)  MISSED
	UAkAudioEvent*                                     HeartbeatAudioEvent;                                        // 0x0110   (0x0008)  
	UAkAudioEvent*                                     FootstepsAudioEvent;                                        // 0x0118   (0x0008)  
	UAkAudioEvent*                                     FootstepsEnhancerAudioEvent;                                // 0x0120   (0x0008)  
	float                                              MovingThroughFoliageGateDuration;                           // 0x0128   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x012C   (0x0004)  MISSED
	UAkAudioEvent*                                     StartGenericMovingThroughFoliageAudioEvent;                 // 0x0130   (0x0008)  
	UAkAudioEvent*                                     StopGenericMovingThroughFoliageAudioEvent;                  // 0x0138   (0x0008)  
	UAkAudioEvent*                                     GenericOneShotMovingThroughFoliageAudioEvent;               // 0x0140   (0x0008)  
	UAkAudioEvent*                                     GearNoiseAudioEvent;                                        // 0x0148   (0x0008)  
	UAkAudioEvent*                                     GearNoiseAudioEventWhenInWater;                             // 0x0150   (0x0008)  
	float                                              ItemMotionNoiseTimeToLive;                                  // 0x0158   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x015C   (0x0004)  MISSED
	UAkAudioEvent*                                     StartGenericEatItemAudioEvent;                              // 0x0160   (0x0008)  
	UAkAudioEvent*                                     StopGenericEatItemAudioEvent;                               // 0x0168   (0x0008)  
	UAkAudioEvent*                                     StartGenericDrinkItemAudioEvent;                            // 0x0170   (0x0008)  
	UAkAudioEvent*                                     StopGenericDrinkItemAudioEvent;                             // 0x0178   (0x0008)  
	UAkAudioEvent*                                     StartGenericDrinkWaterAudioEvent;                           // 0x0180   (0x0008)  
	UAkAudioEvent*                                     StopGenericDrinkWaterAudioEvent;                            // 0x0188   (0x0008)  
	UAkAudioEvent*                                     StartGenericExamineObjectAudioEvent;                        // 0x0190   (0x0008)  
	UAkAudioEvent*                                     StopGenericExamineObjectAudioEvent;                         // 0x0198   (0x0008)  
	UAkAudioEvent*                                     StartGenericCraftAudioEvent;                                // 0x01A0   (0x0008)  
	UAkAudioEvent*                                     StopGenericCraftAudioEvent;                                 // 0x01A8   (0x0008)  
	UAkAudioEvent*                                     StartGenericUncraftAudioEvent;                              // 0x01B0   (0x0008)  
	UAkAudioEvent*                                     StopGenericUncraftAudioEvent;                               // 0x01B8   (0x0008)  
	UAkAudioEvent*                                     StartGenericVehicleRepairAudioEvent;                        // 0x01C0   (0x0008)  
	UAkAudioEvent*                                     StopGenericVehicleRepairAudioEvent;                         // 0x01C8   (0x0008)  
	UAkAudioEvent*                                     StartWashClothAudioEvent;                                   // 0x01D0   (0x0008)  
	UAkAudioEvent*                                     StopWashClothAudioEvent;                                    // 0x01D8   (0x0008)  
	UAkAudioEvent*                                     StartInGameAudioEvent;                                      // 0x01E0   (0x0008)  
	UAkAudioEvent*                                     StopInGameAudioEvent;                                       // 0x01E8   (0x0008)  
	UAkAudioEvent*                                     CalmStateAudioEvent;                                        // 0x01F0   (0x0008)  
	UAkAudioEvent*                                     IntenseStateAudioEvent;                                     // 0x01F8   (0x0008)  
	UAkAudioEvent*                                     CombatStateAudioEvent;                                      // 0x0200   (0x0008)  
	USoundCue*                                         OutOfBoundsSound;                                           // 0x0208   (0x0008)  
	UAkAudioEvent*                                     ChipExplosionSound;                                         // 0x0210   (0x0008)  
	unsigned char                                      UnknownData03_5[0x48];                                      // 0x0218   (0x0048)  MISSED
	TArray<FActiveMovingThroughFoliageSounds>          _activeMovingThroughFoliageSounds;                          // 0x0260   (0x0010)  
	unsigned char                                      UnknownData04_5[0x1C];                                      // 0x0270   (0x001C)  MISSED
	int32_t                                            _maxNumberOfFootstepsToPlayFootstepEnhancerSound;           // 0x028C   (0x0004)  
	int32_t                                            _minNumberOfFootstepsToPlayFootstepEnhancerSound;           // 0x0290   (0x0004)  
	unsigned char                                      UnknownData05_6[0x4];                                       // 0x0294   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.PrisonerSoundComponent.UpdateMovingThroughFoliageSounds
	bool UpdateMovingThroughFoliageSounds(int32_t PlayingID, EMotionIntensity motionIntensity);                              // [0x23b4f00] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PrisonerSoundComponent.StopMovingThroughFoliageSounds
	bool StopMovingThroughFoliageSounds(int32_t PlayingID);                                                                  // [0x23b4e60] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PrisonerSoundComponent.StopAllMovingThroughFoliageSounds
	void StopAllMovingThroughFoliageSounds();                                                                                // [0x23b4e40] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PrisonerSoundComponent.PlayMovingThroughFoliageSounds
	int32_t PlayMovingThroughFoliageSounds(UAkAudioEvent* StartAudioEvent, UAkAudioEvent* StopAudioEvent, EMotionIntensity motionIntensity); // [0x23b49b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PrisonerSoundComponent.PlayGearSounds
	void PlayGearSounds(EMotionIntensity motionIntensity);                                                                   // [0x23b4930] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PrisonerSoundComponent.PlayFootstepSounds
	void PlayFootstepSounds(TEnumAsByte<EPhysicalSurface> inPhysicalSurface);                                                // [0x23b48b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.PrisonerSoundComponent.OnOutOfBoundsSoundPercentChanged
	void OnOutOfBoundsSoundPercentChanged(USoundWave* PlayingSoundWave, float PlaybackPercent);                              // [0x23b4780] Final|Native|Public  
	// Function /Script/ConZ.PrisonerSoundComponent.OnBorderCrossingStateChanged
	void OnBorderCrossingStateChanged(APrisoner* Prisoner, EPrisonerBorderCrossingPenalty penalty);                          // [0x23b45e0] Final|Native|Public  
};

/// Class /Script/ConZ.PrisonerStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UPrisonerStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.PrisonerSubview
/// Size: 0x0000 (0x000028 - 0x000028)
class UPrisonerSubview : public UInterface
{ 
public:
};

/// Class /Script/ConZ.PrisonerThirdPersonAerialSubviewComponent
/// Size: 0x05B0 (0x000200 - 0x0007B0)
class UPrisonerThirdPersonAerialSubviewComponent : public USceneComponent
{ 
public:
	float                                              FieldOfView;                                                // 0x0200   (0x0004)  
	bool                                               UseFieldOfViewForLOD;                                       // 0x0204   (0x0001)  
	bool                                               ConstrainAspectRatio;                                       // 0x0205   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0206   (0x0002)  MISSED
	float                                              AspectRatio;                                                // 0x0208   (0x0004)  
	float                                              MinViewYaw;                                                 // 0x020C   (0x0004)  
	float                                              MaxViewYaw;                                                 // 0x0210   (0x0004)  
	float                                              MinViewPitch;                                               // 0x0214   (0x0004)  
	float                                              MaxViewPitch;                                               // 0x0218   (0x0004)  
	float                                              PostProcessBlendWeight;                                     // 0x021C   (0x0004)  
	FPostProcessSettings                               PostProcessSettings;                                        // 0x0220   (0x0560)  
	float                                              BlendInDuration;                                            // 0x0780   (0x0004)  
	float                                              BlendOutDuration;                                           // 0x0784   (0x0004)  
	float                                              BaseOrbitDistance;                                          // 0x0788   (0x0004)  
	float                                              SpeedOrbitDistanceIncreaseFactor;                           // 0x078C   (0x0004)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x0790   (0x0020)  MISSED
};

/// Class /Script/ConZ.PrisonerThirdPersonSubviewComponent
/// Size: 0x0670 (0x000290 - 0x000900)
class UPrisonerThirdPersonSubviewComponent : public USpringArmComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0290   (0x0008)  MISSED
	EPrisonerThirdPersonSubview                        SubviewID;                                                  // 0x0298   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0299   (0x0003)  MISSED
	float                                              FieldOfView;                                                // 0x029C   (0x0004)  
	bool                                               UseFieldOfViewForLOD;                                       // 0x02A0   (0x0001)  
	bool                                               ConstrainAspectRatio;                                       // 0x02A1   (0x0001)  
	unsigned char                                      UnknownData02_5[0x2];                                       // 0x02A2   (0x0002)  MISSED
	float                                              AspectRatio;                                                // 0x02A4   (0x0004)  
	float                                              MinViewYaw;                                                 // 0x02A8   (0x0004)  
	float                                              MaxViewYaw;                                                 // 0x02AC   (0x0004)  
	float                                              MinViewPitch;                                               // 0x02B0   (0x0004)  
	float                                              MaxViewPitch;                                               // 0x02B4   (0x0004)  
	float                                              LeanOffsetLeft;                                             // 0x02B8   (0x0004)  
	float                                              LeanOffsetRight;                                            // 0x02BC   (0x0004)  
	FVector                                            GlobalOffset;                                               // 0x02C0   (0x000C)  
	bool                                               MirrorAroundXZPlane;                                        // 0x02CC   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x02CD   (0x0003)  MISSED
	FVector                                            MaxLocalOffsetWhenColliding;                                // 0x02D0   (0x000C)  
	bool                                               ShouldConstrainTraceOriginToOwnerCapsule;                   // 0x02DC   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x02DD   (0x0003)  MISSED
	float                                              OwnerCapsuleContrainBuffer;                                 // 0x02E0   (0x0004)  
	FVector                                            TraceOriginGlobalOffset;                                    // 0x02E4   (0x000C)  
	FVector                                            TraceOriginRelativeOffset;                                  // 0x02F0   (0x000C)  
	float                                              LocalOffsetCurvesBlendSpeed;                                // 0x02FC   (0x0004)  
	FLocalOffsetCurves                                 LocalOffsetCurves;                                          // 0x0300   (0x0040)  
	FName                                              AnimationOffsetTZCurveName;                                 // 0x0340   (0x0008)  
	float                                              PostProcessBlendWeight;                                     // 0x0348   (0x0004)  
	unsigned char                                      UnknownData05_5[0x4];                                       // 0x034C   (0x0004)  MISSED
	FPostProcessSettings                               PostProcessSettings;                                        // 0x0350   (0x0560)  
	float                                              BlendInDuration;                                            // 0x08B0   (0x0004)  
	float                                              BlendOutDuration;                                           // 0x08B4   (0x0004)  
	bool                                               ShouldScaleProbeWithFOV;                                    // 0x08B8   (0x0001)  
	unsigned char                                      UnknownData06_5[0x1B];                                      // 0x08B9   (0x001B)  MISSED
	FVector                                            _clippingPreventionOffset;                                  // 0x08D4   (0x000C)  
	float                                              _clippingPreventionSweepLength;                             // 0x08E0   (0x0004)  
	float                                              _clippingPreventionAmount;                                  // 0x08E4   (0x0004)  
	FVector                                            _clippingPreventionTraceOffset;                             // 0x08E8   (0x000C)  
	float                                              _minFactorForPrisonerHiding;                                // 0x08F4   (0x0004)  
	unsigned char                                      UnknownData07_6[0x8];                                       // 0x08F8   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerThirdPersonViewComponent
/// Size: 0x0130 (0x0000D0 - 0x000200)
class UPrisonerThirdPersonViewComponent : public UPrisonerViewComponent
{ 
public:
	TArray<EPrisonerThirdPersonSubview>                SubviewBlendingPriorities;                                  // 0x00D0   (0x0010)  
	TArray<FPrisonerThirdPersonSubviewBlendOverride>   SubviewBlendOverrides;                                      // 0x00E0   (0x0010)  
	unsigned char                                      UnknownData00_6[0x110];                                     // 0x00F0   (0x0110)  MISSED
};

/// Class /Script/ConZ.PrisonerThrowComponent
/// Size: 0x0010 (0x0000C0 - 0x0000D0)
class UPrisonerThrowComponent : public UCharacterActionComponent
{ 
public:
	EThrowingState                                     _throwingState;                                             // 0x00C0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x00C1   (0x0003)  MISSED
	TWeakObjectPtr<AItem*>                             _itemToThrow;                                               // 0x00C4   (0x0008)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x00CC   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.PrisonerThrowComponent.OnRep_ThrowState
	void OnRep_ThrowState();                                                                                                 // [0x23b4890] Final|Native|Private 
};

/// Class /Script/ConZ.PrisonerTradingComponent
/// Size: 0x0018 (0x0000B0 - 0x0000C8)
class UPrisonerTradingComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x00B0   (0x0018)  MISSED
};

/// Class /Script/ConZ.PrisonerTreatmentUIController
/// Size: 0x0488 (0x000028 - 0x0004B0)
class UPrisonerTreatmentUIController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x488];                                     // 0x0028   (0x0488)  MISSED
};

/// Class /Script/ConZ.PrisonerUIDataImpl
/// Size: 0x0040 (0x000808 - 0x000848)
class UPrisonerUIDataImpl : public UPrisonerUIData
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0808   (0x0030)  MISSED
	UPrisonerSkillsUIData*                             SkillsUIData;                                               // 0x0838   (0x0008)  
	UPrisonerBodySimulationUIData*                     BodySimulationUIData;                                       // 0x0840   (0x0008)  
};

/// Class /Script/ConZ.PrisonerUIDataRequest
/// Size: 0x0008 (0x000028 - 0x000030)
class UPrisonerUIDataRequest : public UPlayerRpcChannelServerRequest
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerUIDataResponse
/// Size: 0x0008 (0x000028 - 0x000030)
class UPrisonerUIDataResponse : public UPlayerRpcChannelServerResponse
{ 
public:
	UPrisonerUIData*                                   _payload;                                                   // 0x0028   (0x0008)  
};

/// Class /Script/ConZ.PrisonerUIDebugDataRequest
/// Size: 0x0000 (0x000028 - 0x000028)
class UPrisonerUIDebugDataRequest : public UPlayerRpcChannelServerRequest
{ 
public:
};

/// Class /Script/ConZ.PrisonerUIDebugDataResponse
/// Size: 0x0008 (0x000028 - 0x000030)
class UPrisonerUIDebugDataResponse : public UPlayerRpcChannelServerResponse
{ 
public:
	UPrisonerUIDebugData*                              _payload;                                                   // 0x0028   (0x0008)  
};

/// Class /Script/ConZ.PrisonerUIStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UPrisonerUIStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.PrisonerUITooltipCache
/// Size: 0x0190 (0x000028 - 0x0001B8)
class UPrisonerUITooltipCache : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x190];                                     // 0x0028   (0x0190)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_ForcePush
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerVehicleAction_ForcePush : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_ForcePushDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerVehicleAction_ForcePushDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_ForceUnmount
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerVehicleAction_ForceUnmount : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerVehicleAction_ForceUnmountDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerVehicleAction_ForceUnmountDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_InstallAttachment
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerVehicleAction_InstallAttachment : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_InstallAttachmentDescription
/// Size: 0x0048 (0x000038 - 0x000080)
class UPrisonerVehicleAction_InstallAttachmentDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x48];                                      // 0x0038   (0x0048)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_Mount
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerVehicleAction_Mount : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_MountDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerVehicleAction_MountDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_OpenOrCloseDoor
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerVehicleAction_OpenOrCloseDoor : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_OpenOrCloseDoorDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerVehicleAction_OpenOrCloseDoorDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_QuickInstallAttachment
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerVehicleAction_QuickInstallAttachment : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_QuickInstallAttachmentDescription
/// Size: 0x0028 (0x000038 - 0x000060)
class UPrisonerVehicleAction_QuickInstallAttachmentDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0038   (0x0028)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_QuickRemoveAttachment
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerVehicleAction_QuickRemoveAttachment : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_QuickRemoveAttachmentDescription
/// Size: 0x0028 (0x000038 - 0x000060)
class UPrisonerVehicleAction_QuickRemoveAttachmentDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0038   (0x0028)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_QuickRepairAttachment
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerVehicleAction_QuickRepairAttachment : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_QuickRepairAttachmentDescription
/// Size: 0x0028 (0x000038 - 0x000060)
class UPrisonerVehicleAction_QuickRepairAttachmentDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0038   (0x0028)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_RemoveAttachment
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerVehicleAction_RemoveAttachment : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_RemoveAttachmentDescription
/// Size: 0x0040 (0x000038 - 0x000078)
class UPrisonerVehicleAction_RemoveAttachmentDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x40];                                      // 0x0038   (0x0040)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_RepairAttachment
/// Size: 0x0008 (0x000110 - 0x000118)
class UPrisonerVehicleAction_RepairAttachment : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0110   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_RepairAttachmentDescription
/// Size: 0x0038 (0x000038 - 0x000070)
class UPrisonerVehicleAction_RepairAttachmentDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0038   (0x0038)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_SetupCarJack
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerVehicleAction_SetupCarJack : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_SetupCarJackDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerVehicleAction_SetupCarJackDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_SwitchMountSlot
/// Size: 0x0000 (0x000110 - 0x000110)
class UPrisonerVehicleAction_SwitchMountSlot : public UPrisonerAction
{ 
public:
};

/// Class /Script/ConZ.PrisonerVehicleAction_SwitchMountSlotDescription
/// Size: 0x0008 (0x000038 - 0x000040)
class UPrisonerVehicleAction_SwitchMountSlotDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_Unmount
/// Size: 0x0010 (0x000110 - 0x000120)
class UPrisonerVehicleAction_Unmount : public UPrisonerAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0110   (0x0010)  MISSED
};

/// Class /Script/ConZ.PrisonerVehicleAction_UnmountDescription
/// Size: 0x0010 (0x000038 - 0x000048)
class UPrisonerVehicleAction_UnmountDescription : public UPrisonerActionDescription
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/ConZ.Projectile
/// Size: 0x0228 (0x000220 - 0x000448)
class AProjectile : public AActor
{ 
public:
	UStaticMeshComponent*                              StaticMesh;                                                 // 0x0220   (0x0008)  
	bool                                               RotationFollowsVelocity;                                    // 0x0228   (0x0001)  
	bool                                               AddImpulseOnHit;                                            // 0x0229   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x022A   (0x0002)  MISSED
	float                                              ImpulseMultiplier;                                          // 0x022C   (0x0004)  
	float                                              MaxImpulse;                                                 // 0x0230   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0234   (0x0004)  MISSED
	UProjectileImpactEffects*                          ImpactEffects;                                              // 0x0238   (0x0008)  
	FProjectileData                                    ProjectileData;                                             // 0x0240   (0x0060)  
	float                                              MeshScaleStartLocal;                                        // 0x02A0   (0x0004)  
	float                                              MeshScaleRangeLocal;                                        // 0x02A4   (0x0004)  
	float                                              MeshScaleMinLocal;                                          // 0x02A8   (0x0004)  
	float                                              MeshScaleMaxLocal;                                          // 0x02AC   (0x0004)  
	float                                              MeshScaleStart;                                             // 0x02B0   (0x0004)  
	float                                              MeshScaleRange;                                             // 0x02B4   (0x0004)  
	float                                              MeshScaleMin;                                               // 0x02B8   (0x0004)  
	float                                              MeshScaleMax;                                               // 0x02BC   (0x0004)  
	float                                              TraceScaleMultiplier;                                       // 0x02C0   (0x0004)  
	float                                              GravityScale;                                               // 0x02C4   (0x0004)  
	float                                              Sharpness;                                                  // 0x02C8   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x02CC   (0x0004)  MISSED
	UAkAudioEvent*                                     FlyByAudioEvent;                                            // 0x02D0   (0x0008)  
	FName                                              ColorMaterialParameterName;                                 // 0x02D8   (0x0008)  
	FLinearColor                                       InitialColor;                                               // 0x02E0   (0x0010)  
	FLinearColor                                       FinalColor;                                                 // 0x02F0   (0x0010)  
	int32_t                                            MaxHitCount;                                                // 0x0300   (0x0004)  
	float                                              NoiseLoudnessOnHit;                                         // 0x0304   (0x0004)  
	bool                                               IgnoreCallingWeaponsFiringEffects;                          // 0x0308   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x0309   (0x0003)  MISSED
	float                                              ExperienceMultiplier;                                       // 0x030C   (0x0004)  
	bool                                               ShouldForceStopWhenNoVelocity;                              // 0x0310   (0x0001)  
	bool                                               CanEverCollide;                                             // 0x0311   (0x0001)  
	unsigned char                                      UnknownData04_5[0x6];                                       // 0x0312   (0x0006)  MISSED
	UNiagaraSystem*                                    TrailNiagaraSystem;                                         // 0x0318   (0x0008)  
	UParticleSystem*                                   WaterSplashParticleSystem;                                  // 0x0320   (0x0008)  
	unsigned char                                      UnknownData05_5[0x18];                                      // 0x0328   (0x0018)  MISSED
	float                                              _lifeSpanAfterStopping;                                     // 0x0340   (0x0004)  
	bool                                               _useFixedTimestep;                                          // 0x0344   (0x0001)  
	unsigned char                                      UnknownData06_5[0x3];                                       // 0x0345   (0x0003)  MISSED
	float                                              _fixedTimestep;                                             // 0x0348   (0x0004)  
	unsigned char                                      UnknownData07_5[0x18];                                      // 0x034C   (0x0018)  MISSED
	int32_t                                            _zeroRange;                                                 // 0x0364   (0x0004)  
	float                                              _windage;                                                   // 0x0368   (0x0004)  
	float                                              _distanceTraveled;                                          // 0x036C   (0x0004)  
	float                                              _meshScaleFactor;                                           // 0x0370   (0x0004)  
	unsigned char                                      UnknownData08_5[0x20];                                      // 0x0374   (0x0020)  MISSED
	float                                              _offsetFromBarrel;                                          // 0x0394   (0x0004)  
	unsigned char                                      UnknownData09_5[0x4];                                       // 0x0398   (0x0004)  MISSED
	int32_t                                            _randomSeed;                                                // 0x039C   (0x0004)  
	unsigned char                                      UnknownData10_5[0x60];                                      // 0x03A0   (0x0060)  MISSED
	UNiagaraComponent*                                 _trailNiagaraComponent;                                     // 0x0400   (0x0008)  
	bool                                               _doNotForceInitialReplication;                              // 0x0408   (0x0001)  
	unsigned char                                      UnknownData11_5[0x3];                                       // 0x0409   (0x0003)  MISSED
	float                                              _muzzleVelocity;                                            // 0x040C   (0x0004)  
	bool                                               _createdOnServer;                                           // 0x0410   (0x0001)  
	unsigned char                                      UnknownData12_5[0x3];                                       // 0x0411   (0x0003)  MISSED
	float                                              _halfAngle;                                                 // 0x0414   (0x0004)  
	unsigned char                                      UnknownData13_5[0x20];                                      // 0x0418   (0x0020)  MISSED
	EWeaponFiringMode                                  _weaponFiringModeWhenShot;                                  // 0x0438   (0x0001)  
	unsigned char                                      UnknownData14_5[0x7];                                       // 0x0439   (0x0007)  MISSED
	FFiredShotDescriptionRep                           _firedShotDescriptionRep;                                   // 0x0440   (0x0004)  
	unsigned char                                      UnknownData15_6[0x4];                                       // 0x0444   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.Projectile.OnStop
	void OnStop(FHitResult& HitResult);                                                                                      // [0x23b9990] Native|Protected|HasOutParms 
};

/// Class /Script/ConZ.AmmunitionArrowSpawningParams
/// Size: 0x0010 (0x000028 - 0x000038)
class UAmmunitionArrowSpawningParams : public UObject
{ 
public:
	UClass*                                            AmmunitionArrowClass;                                       // 0x0028   (0x0008)  
	float                                              ItemsHealth;                                                // 0x0030   (0x0004)  
	bool                                               IsPartOfEvent;                                              // 0x0034   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0035   (0x0003)  MISSED
};

/// Class /Script/ConZ.ProjectileArrow
/// Size: 0x0040 (0x000448 - 0x000488)
class AProjectileArrow : public AProjectile
{ 
public:
	USceneComponent*                                   _tempSceneComponent;                                        // 0x0448   (0x0008)  
	USceneComponent*                                   _relativeRotationSceneComponent;                            // 0x0450   (0x0008)  
	FProjectileArrowData                               _projectileArrowData;                                       // 0x0458   (0x0020)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0478   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.ProjectileArrow.UpdateParameters
	void UpdateParameters();                                                                                                 // [0x2333f00] Native|Event|Public|BlueprintEvent 
};

/// Class /Script/ConZ.ProjectileExplosive
/// Size: 0x0040 (0x000448 - 0x000488)
class AProjectileExplosive : public AProjectile
{ 
public:
	float                                              _selfDestructTime;                                          // 0x0448   (0x0004)  
	float                                              _explosionDamage;                                           // 0x044C   (0x0004)  
	float                                              _explosionInnerRadius;                                      // 0x0450   (0x0004)  
	float                                              _explosionOuterRadius;                                      // 0x0454   (0x0004)  
	float                                              _explosionFalloff;                                          // 0x0458   (0x0004)  
	float                                              _explosionForce;                                            // 0x045C   (0x0004)  
	float                                              _hearingDamageRadius;                                       // 0x0460   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0464   (0x0004)  MISSED
	UParticleSystem*                                   _explosionParticle;                                         // 0x0468   (0x0008)  
	UAkAudioEvent*                                     _explosionAudioEvent;                                       // 0x0470   (0x0008)  
	UClass*                                            _explosionCameraShakeClass;                                 // 0x0478   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0480   (0x0008)  MISSED
};

/// Class /Script/ConZ.ExplosiveAmmunitionArrowSpawningParams
/// Size: 0x0008 (0x000038 - 0x000040)
class UExplosiveAmmunitionArrowSpawningParams : public UAmmunitionArrowSpawningParams
{ 
public:
	TEnumAsByte<EPhysicalSurface>                      HitPhysicalSurface;                                         // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0039   (0x0007)  MISSED
};

/// Class /Script/ConZ.ProjectileExplosiveArrow
/// Size: 0x0000 (0x000488 - 0x000488)
class AProjectileExplosiveArrow : public AProjectileArrow
{ 
public:
};

/// Class /Script/ConZ.ProjectileFlare
/// Size: 0x0060 (0x000448 - 0x0004A8)
class AProjectileFlare : public AProjectile
{ 
public:
	UParticleSystemComponent*                          _particleSystemComponent;                                   // 0x0448   (0x0008)  
	UPointLightComponent*                              _pointLightComponent;                                       // 0x0450   (0x0008)  
	UAkComponent*                                      _akFlareComponent;                                          // 0x0458   (0x0008)  
	bool                                               _hasParachute;                                              // 0x0460   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0461   (0x0003)  MISSED
	float                                              _parachuteGravityScale;                                     // 0x0464   (0x0004)  
	float                                              _parachuteEffectiveBallisticCoefficient;                    // 0x0468   (0x0004)  
	FVector                                            _parachuteParticlesScale;                                   // 0x046C   (0x000C)  
	float                                              _parachuteParticlesScaleSpeed;                              // 0x0478   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x047C   (0x0004)  MISSED
	UAkAudioEvent*                                     _burnStart;                                                 // 0x0480   (0x0008)  
	UAkAudioEvent*                                     _burnEnd;                                                   // 0x0488   (0x0008)  
	float                                              _burnTime;                                                  // 0x0490   (0x0004)  
	unsigned char                                      UnknownData02_6[0x14];                                      // 0x0494   (0x0014)  MISSED
};

/// Class /Script/ConZ.ProjectileGrenade
/// Size: 0x0000 (0x000488 - 0x000488)
class AProjectileGrenade : public AProjectileExplosive
{ 
public:
};

/// Class /Script/ConZ.ProjectileImpactEffects
/// Size: 0x0440 (0x000030 - 0x000470)
class UProjectileImpactEffects : public UDataAsset
{ 
public:
	float                                              MinDecalSize;                                               // 0x0030   (0x0004)  
	float                                              MaxDecalSize;                                               // 0x0034   (0x0004)  
	float                                              MinDecalLifetime;                                           // 0x0038   (0x0004)  
	float                                              MaxDecalLifetime;                                           // 0x003C   (0x0004)  
	float                                              DecalFadeFactor;                                            // 0x0040   (0x0004)  
	float                                              ParticleEffectsInitialScale;                                // 0x0044   (0x0004)  
	float                                              ParticleEffectsScaleDistanceStart;                          // 0x0048   (0x0004)  
	float                                              ParticleEffectsScaleDistanceRange;                          // 0x004C   (0x0004)  
	float                                              ParticleEffectsScaleByDistanceFactor;                       // 0x0050   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0054   (0x0004)  MISSED
	UParticleSystem*                                   BulletPenetrationExitParticlesDaytime;                      // 0x0058   (0x0008)  
	UParticleSystem*                                   BulletPenetrationExitParticlesNighttime;                    // 0x0060   (0x0008)  
	UMaterial*                                         DayTimePenetrationDecal;                                    // 0x0068   (0x0008)  
	UMaterial*                                         NightTimePenetrationDecal;                                  // 0x0070   (0x0008)  
	UAkAudioEvent*                                     AudioEvent;                                                 // 0x0078   (0x0008)  
	FImpactEffectData                                  Default;                                                    // 0x0080   (0x0018)  
	FImpactEffectData                                  grass;                                                      // 0x0098   (0x0018)  
	FImpactEffectData                                  ForrestGroundCoastal;                                       // 0x00B0   (0x0018)  
	FImpactEffectData                                  ForrestGroundContinental;                                   // 0x00C8   (0x0018)  
	FImpactEffectData                                  Rock;                                                       // 0x00E0   (0x0018)  
	FImpactEffectData                                  Stone;                                                      // 0x00F8   (0x0018)  
	FImpactEffectData                                  Gravel;                                                     // 0x0110   (0x0018)  
	FImpactEffectData                                  GravelBeach;                                                // 0x0128   (0x0018)  
	FImpactEffectData                                  Pebbles;                                                    // 0x0140   (0x0018)  
	FImpactEffectData                                  Snow;                                                       // 0x0158   (0x0018)  
	FImpactEffectData                                  Ice;                                                        // 0x0170   (0x0018)  
	FImpactEffectData                                  Sand;                                                       // 0x0188   (0x0018)  
	FImpactEffectData                                  Asphalt;                                                    // 0x01A0   (0x0018)  
	FImpactEffectData                                  Dirt;                                                       // 0x01B8   (0x0018)  
	FImpactEffectData                                  Water;                                                      // 0x01D0   (0x0018)  
	FImpactEffectData                                  WaterOcean;                                                 // 0x01E8   (0x0018)  
	FImpactEffectData                                  Cloth;                                                      // 0x0200   (0x0018)  
	FImpactEffectData                                  Metal;                                                      // 0x0218   (0x0018)  
	FImpactEffectData                                  Aluminium;                                                  // 0x0230   (0x0018)  
	FImpactEffectData                                  Concrete;                                                   // 0x0248   (0x0018)  
	FImpactEffectData                                  Brick;                                                      // 0x0260   (0x0018)  
	FImpactEffectData                                  Wood;                                                       // 0x0278   (0x0018)  
	FImpactEffectData                                  Plastic;                                                    // 0x0290   (0x0018)  
	FImpactEffectData                                  Rubber;                                                     // 0x02A8   (0x0018)  
	FImpactEffectData                                  Glass;                                                      // 0x02C0   (0x0018)  
	FImpactEffectData                                  Folliage;                                                   // 0x02D8   (0x0018)  
	FImpactEffectData                                  Bark;                                                       // 0x02F0   (0x0018)  
	FImpactEffectData                                  Flesh;                                                      // 0x0308   (0x0018)  
	FImpactEffectData                                  RoofTile;                                                   // 0x0320   (0x0018)  
	FImpactEffectData                                  CeramicsTiles;                                              // 0x0338   (0x0018)  
	FImpactEffectData                                  Scrap;                                                      // 0x0350   (0x0018)  
	FImpactEffectData                                  Trunk;                                                      // 0x0368   (0x0018)  
	FImpactEffectData                                  Leaves;                                                     // 0x0380   (0x0018)  
	FImpactEffectData                                  Cardboard;                                                  // 0x0398   (0x0018)  
	FImpactEffectData                                  Plaster;                                                    // 0x03B0   (0x0018)  
	FImpactEffectData                                  Kevlar;                                                     // 0x03C8   (0x0018)  
	FImpactEffectData                                  ForceField;                                                 // 0x03E0   (0x0018)  
	FImpactEffectData                                  NoEffect;                                                   // 0x03F8   (0x0018)  
	FImpactEffectData                                  WhiteGravel;                                                // 0x0410   (0x0018)  
	FImpactEffectData                                  Mud;                                                        // 0x0428   (0x0018)  
	FImpactEffectData                                  RiverSand;                                                  // 0x0440   (0x0018)  
	FImpactEffectData                                  GrassContinental;                                           // 0x0458   (0x0018)  
};

/// Class /Script/ConZ.ProjectileRocket
/// Size: 0x0030 (0x000488 - 0x0004B8)
class AProjectileRocket : public AProjectileExplosive
{ 
public:
	float                                              _alternateMashDelay;                                        // 0x0488   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x048C   (0x0004)  MISSED
	UStaticMesh*                                       _alternateMash;                                             // 0x0490   (0x0008)  
	float                                              _propulsionDelay;                                           // 0x0498   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x049C   (0x0004)  MISSED
	UParticleSystem*                                   _propulsionParticleSystem;                                  // 0x04A0   (0x0008)  
	unsigned char                                      UnknownData02_6[0x10];                                      // 0x04A8   (0x0010)  MISSED
};

/// Class /Script/ConZ.ProjectileShotgun
/// Size: 0x0010 (0x000448 - 0x000458)
class AProjectileShotgun : public AProjectile
{ 
public:
	UClass*                                            projectileClass;                                            // 0x0448   (0x0008)  
	int32_t                                            ShotsCount;                                                 // 0x0450   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0454   (0x0004)  MISSED
};

/// Class /Script/ConZ.ProjectileStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UProjectileStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.QuartalPieProgressBar
/// Size: 0x0018 (0x000260 - 0x000278)
class UQuartalPieProgressBar : public UUserWidget
{ 
public:
	TArray<FSlateBrush>                                ProgressIcons;                                              // 0x0260   (0x0010)  
	UImage*                                            _displayedImage;                                            // 0x0270   (0x0008)  


	/// Functions
	// Function /Script/ConZ.QuartalPieProgressBar.SetProgressIndex
	void SetProgressIndex(int32_t progressIndex);                                                                            // [0x23be310] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.QuickAccessBarWidget
/// Size: 0x0070 (0x000260 - 0x0002D0)
class UQuickAccessBarWidget : public UUserWidget
{ 
public:
	TArray<UQuickAccessItemWidget*>                    _quickAccessItemContainers;                                 // 0x0260   (0x0010)  
	UHorizontalBox*                                    _horizontalBox;                                             // 0x0270   (0x0008)  
	UQuickAccessItemWidget*                            UI_QuickAccessItemWidget;                                   // 0x0278   (0x0008)  
	UQuickAccessItemWidget*                            UI_QuickAccessItemWidget;                                   // 0x0280   (0x0008)  
	UQuickAccessItemWidget*                            UI_QuickAccessItemWidget;                                   // 0x0288   (0x0008)  
	UQuickAccessItemWidget*                            UI_QuickAccessItemWidget;                                   // 0x0290   (0x0008)  
	UQuickAccessItemWidget*                            UI_QuickAccessItemWidget;                                   // 0x0298   (0x0008)  
	UQuickAccessItemWidget*                            UI_QuickAccessItemWidget;                                   // 0x02A0   (0x0008)  
	UQuickAccessItemWidget*                            UI_QuickAccessItemWidget;                                   // 0x02A8   (0x0008)  
	UQuickAccessItemWidget*                            UI_QuickAccessItemWidget;                                   // 0x02B0   (0x0008)  
	UQuickAccessItemWidget*                            UI_QuickAccessItemWidget;                                   // 0x02B8   (0x0008)  
	UQuickAccessItemWidget*                            UI_QuickAccessItemWidget;                                   // 0x02C0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x02C8   (0x0008)  MISSED
};

/// Class /Script/ConZ.QuickAccessItemSwitcher3
/// Size: 0x0078 (0x000260 - 0x0002D8)
class UQuickAccessItemSwitcher3 : public UInventoryContainerWidget2
{ 
public:
	int32_t                                            Index;                                                      // 0x0260   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0264   (0x0004)  MISSED
	UTextBlock*                                        _nameText;                                                  // 0x0268   (0x0008)  
	UInventorySlotUserWidget*                          _slotWidget;                                                // 0x0270   (0x0008)  
	UTextBlock*                                        IndexText;                                                  // 0x0278   (0x0008)  
	UItemWidget2*                                      _itemWidget;                                                // 0x0280   (0x0008)  
	UCheckBox*                                         _throwingModeCheckbox;                                      // 0x0288   (0x0008)  
	unsigned char                                      UnknownData01_5[0x18];                                      // 0x0290   (0x0018)  MISSED
	FText                                              _throwingModeCaption;                                       // 0x02A8   (0x0018)  
	FText                                              _throwingModeDescription;                                   // 0x02C0   (0x0018)  


	/// Functions
	// Function /Script/ConZ.QuickAccessItemSwitcher3.ThrowingModePressed
	void ThrowingModePressed(bool IsChecked);                                                                                // [0x23be3c0] Final|Native|Public  
	// Function /Script/ConZ.QuickAccessItemSwitcher3.SetItemOpacity
	void SetItemOpacity(float Value, bool Invalidate);                                                                       // [0x23be230] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.QuickAccessItemWidget
/// Size: 0x0178 (0x000260 - 0x0003D8)
class UQuickAccessItemWidget : public UUserWidget
{ 
public:
	UImage*                                            _imageWidget;                                               // 0x0260   (0x0008)  
	unsigned char                                      UnknownData00_5[0x18];                                      // 0x0268   (0x0018)  MISSED
	float                                              DefaultWidth;                                               // 0x0280   (0x0004)  
	float                                              DefaultHeight;                                              // 0x0284   (0x0004)  
	FVector2D                                          DefaultPosition;                                            // 0x0288   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0290   (0x0008)  MISSED
	UImage*                                            _additionalIcon;                                            // 0x0298   (0x0008)  
	UTextBlock*                                        _additionalText;                                            // 0x02A0   (0x0008)  
	unsigned char                                      UnknownData02_5[0x80];                                      // 0x02A8   (0x0080)  MISSED
	USizeBox*                                          _lowerLeftBox;                                              // 0x0328   (0x0008)  
	USizeBox*                                          _additionalIconSizeBox;                                     // 0x0330   (0x0008)  
	unsigned char                                      UnknownData03_5[0x20];                                      // 0x0338   (0x0020)  MISSED
	FLinearColor                                       TextColor;                                                  // 0x0358   (0x0010)  
	FText                                              _itemSlotNumber;                                            // 0x0368   (0x0018)  
	FLinearColor                                       _alarmColor;                                                // 0x0380   (0x0010)  
	UTextBlock*                                        TextBlockSlotNumber;                                        // 0x0390   (0x0008)  
	USizeBox*                                          SizeBox;                                                    // 0x0398   (0x0008)  
	UWidgetAnimation*                                  LowerLeftBoxFadeIn;                                         // 0x03A0   (0x0008)  
	UWidgetAnimation*                                  LowerLeftBoxFadeOut;                                        // 0x03A8   (0x0008)  
	UWidgetAnimation*                                  BlinkingBackground;                                         // 0x03B0   (0x0008)  
	UWidgetAnimation*                                  AdditionalIconFadeIn;                                       // 0x03B8   (0x0008)  
	UWidgetAnimation*                                  AdditionalIconFadeOut;                                      // 0x03C0   (0x0008)  
	UWidgetAnimation*                                  ShowLowerLeftBoxAnimation;                                  // 0x03C8   (0x0008)  
	UWidgetAnimation*                                  ShowAdditionalIconAnimation;                                // 0x03D0   (0x0008)  


	/// Functions
	// Function /Script/ConZ.QuickAccessItemWidget.OnItemDestroyed
	void OnItemDestroyed(AActor* itemActor);                                                                                 // [0x23bdec0] Final|Native|Public  
	// Function /Script/ConZ.QuickAccessItemWidget.OnImageWidgetMouseButtonDown
	FEventReply OnImageWidgetMouseButtonDown(FGeometry inGeometry, FPointerEvent& InMouseEvent);                             // [0x23bdcf0] Final|Native|Public|HasOutParms 
};

/// Class /Script/ConZ.QuickAccessManager
/// Size: 0x00F8 (0x000028 - 0x000120)
class UQuickAccessManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0xF8];                                      // 0x0028   (0x00F8)  MISSED
};

/// Class /Script/ConZ.Quiver
/// Size: 0x13B0 (0x0009C0 - 0x001D70)
class AQuiver : public AClothesItem
{ 
public:
	FName                                              ArrowsBoneName;                                             // 0x09C0   (0x0008)  
	TArray<UStaticMeshComponent*>                      _arrowMeshComponentsArray2;                                 // 0x09C8   (0x0010)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x09D8   (0x0004)  MISSED
	float                                              _containerDepth;                                            // 0x09DC   (0x0004)  
	unsigned char                                      UnknownData01_6[0x1390];                                    // 0x09E0   (0x1390)  MISSED
};

/// Class /Script/ConZ.Rabbit2
/// Size: 0x0000 (0x000990 - 0x000990)
class ARabbit2 : public AAnimal2
{ 
public:
};

/// Class /Script/ConZ.SimpleAnimalAIController
/// Size: 0x0098 (0x000328 - 0x0003C0)
class ASimpleAnimalAIController : public AAIController
{ 
public:
	float                                              WanderRadius;                                               // 0x0328   (0x0004)  
	float                                              RunAwayTime;                                                // 0x032C   (0x0004)  
	float                                              MinActionTime;                                              // 0x0330   (0x0004)  
	float                                              MaxActionTime;                                              // 0x0334   (0x0004)  
	float                                              WalkSpeed;                                                  // 0x0338   (0x0004)  
	float                                              RunSpeed;                                                   // 0x033C   (0x0004)  
	float                                              FleeSegmentDistance;                                        // 0x0340   (0x0004)  
	float                                              AlertStartupTime;                                           // 0x0344   (0x0004)  
	float                                              MinMoveDistance;                                            // 0x0348   (0x0004)  
	float                                              DoNotDespawnTime;                                           // 0x034C   (0x0004)  
	unsigned char                                      UnknownData00_6[0x70];                                      // 0x0350   (0x0070)  MISSED


	/// Functions
	// Function /Script/ConZ.SimpleAnimalAIController.UpdatePerception
	void UpdatePerception(TArray<AActor*>& actorsPercepted);                                                                 // [0x23d05b0] Native|Public|HasOutParms 
	// Function /Script/ConZ.SimpleAnimalAIController.StartAlert
	void StartAlert();                                                                                                       // [0x23d0570] Final|Native|Public  
	// Function /Script/ConZ.SimpleAnimalAIController.OnTakeDamageHandler
	void OnTakeDamageHandler(AActor* damageActor, float Damage, FVector HitLocation, APawn* eventInstigator);                // [0x23d03d0] Final|Native|Public|HasDefaults 
};

/// Class /Script/ConZ.Rabbit2AIController
/// Size: 0x0010 (0x0003C0 - 0x0003D0)
class ARabbit2AIController : public ASimpleAnimalAIController
{ 
public:
	float                                              MoveSegment;                                                // 0x03C0   (0x0004)  
	float                                              MovementPauseMinTime;                                       // 0x03C4   (0x0004)  
	float                                              MovementPauseMaxTime;                                       // 0x03C8   (0x0004)  
	float                                              AngleOffset;                                                // 0x03CC   (0x0004)  


	/// Functions
	// Function /Script/ConZ.Rabbit2AIController.Wander
	void Wander();                                                                                                           // [0x23be450] Final|Native|Private 
};

/// Class /Script/ConZ.RackItem
/// Size: 0x0020 (0x000A30 - 0x000A50)
class ARackItem : public AChestItem
{ 
public:
	UStaticMesh*                                       _lockStaticMesh;                                            // 0x0A28   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0A30   (0x0020)  MISSED
};

/// Class /Script/ConZ.RadiationManager
/// Size: 0x00D8 (0x000220 - 0x0002F8)
class ARadiationManager : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0220   (0x0018)  MISSED
	TArray<FRadiationSourceDescription>                _levelRadiationSources;                                     // 0x0238   (0x0010)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0248   (0x0004)  MISSED
	float                                              _radiationDispersionRate;                                   // 0x024C   (0x0004)  
	unsigned char                                      UnknownData02_6[0xA8];                                      // 0x0250   (0x00A8)  MISSED
};

/// Class /Script/ConZ.RadioComponent
/// Size: 0x0040 (0x0003E0 - 0x000420)
class URadioComponent : public UAkComponent
{ 
public:
	float                                              _volume;                                                    // 0x03E0   (0x0004)  
	int32_t                                            _currentStationIndex;                                       // 0x03E4   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x03E8   (0x0004)  MISSED
	bool                                               _isHiFi;                                                    // 0x03EC   (0x0001)  
	bool                                               _isReachableFromSkyWhenMounted;                             // 0x03ED   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x03EE   (0x0002)  MISSED
	float                                              _attenuationScale;                                          // 0x03F0   (0x0004)  
	bool                                               _turnedOn;                                                  // 0x03F4   (0x0001)  
	unsigned char                                      UnknownData02_6[0x2B];                                      // 0x03F5   (0x002B)  MISSED


	/// Functions
	// Function /Script/ConZ.RadioComponent.PlayTrackFromRadioStation
	void PlayTrackFromRadioStation();                                                                                        // [0x23be1e0] Final|Native|Private 
	// Function /Script/ConZ.RadioComponent.OnTrackStarted
	void OnTrackStarted();                                                                                                   // [0x23be1c0] Final|Native|Private 
	// Function /Script/ConZ.RadioComponent.OnTrackEnded
	void OnTrackEnded();                                                                                                     // [0x23be1a0] Final|Native|Private 
	// Function /Script/ConZ.RadioComponent.OnRep_Volume
	void OnRep_Volume();                                                                                                     // [0x23be090] Final|Native|Private 
	// Function /Script/ConZ.RadioComponent.OnRep_TurnedOn
	void OnRep_TurnedOn();                                                                                                   // [0x23be070] Final|Native|Private 
	// Function /Script/ConZ.RadioComponent.OnRep_StationIndex
	void OnRep_StationIndex();                                                                                               // [0x23be050] Final|Native|Private 
};

/// Class /Script/ConZ.RadioItem
/// Size: 0x0010 (0x000910 - 0x000920)
class ARadioItem : public AItem
{ 
public:
	URadioComponent*                                   _radioComponent;                                            // 0x0910   (0x0008)  
	UBasicGameResourceSlotItemComponent*               _resourceSlotComponent;                                     // 0x0918   (0x0008)  


	/// Functions
	// Function /Script/ConZ.RadioItem.OnComponentDeactivated
	void OnComponentDeactivated(UActorComponent* Component);                                                                 // [0x23bdc60] Final|Native|Private 
	// Function /Script/ConZ.RadioItem.OnComponentActivated
	void OnComponentActivated(UActorComponent* Component, bool wasReset);                                                    // [0x23bdb90] Final|Native|Private 
};

/// Class /Script/ConZ.RadioTrack
/// Size: 0x0018 (0x000030 - 0x000048)
class URadioTrack : public UDataAsset
{ 
public:
	UAkAudioEvent*                                     Audio;                                                      // 0x0030   (0x0008)  
	float                                              Duration;                                                   // 0x0038   (0x0004)  
	FName                                              TrackName;                                                  // 0x003C   (0x0008)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Class /Script/ConZ.RadioCategory
/// Size: 0x0018 (0x000028 - 0x000040)
class URadioCategory : public UObject
{ 
public:
	TArray<URadioTrack*>                               Tracks;                                                     // 0x0028   (0x0010)  
	int32_t                                            _index;                                                     // 0x0038   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x003C   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.RadioCategory.ProvideNextRadioTrack
	URadioTrack* ProvideNextRadioTrack();                                                                                    // [0x23be200] Native|Event|Public|BlueprintEvent 
};

/// Class /Script/ConZ.RadioCategoryShuffle
/// Size: 0x0018 (0x000040 - 0x000058)
class URadioCategoryShuffle : public URadioCategory
{ 
public:
	bool                                               _canTracksRepeat;                                           // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0041   (0x0007)  MISSED
	TArray<URadioTrack*>                               _tracksAlreadyPlayed;                                       // 0x0048   (0x0010)  
};

/// Class /Script/ConZ.RadioProgram
/// Size: 0x0028 (0x000028 - 0x000050)
class URadioProgram : public UObject
{ 
public:
	TArray<UClass*>                                    CategoryClasses;                                            // 0x0028   (0x0010)  
	TArray<URadioCategory*>                            Categories;                                                 // 0x0038   (0x0010)  
	int32_t                                            _categoryIndex;                                             // 0x0048   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x004C   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.RadioProgram.ProvideNextRadioCategory
	URadioCategory* ProvideNextRadioCategory();                                                                              // [0x23be200] Native|Event|Public|BlueprintEvent 
};

/// Class /Script/ConZ.RadioStation
/// Size: 0x0078 (0x000220 - 0x000298)
class ARadioStation : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0220   (0x0030)  MISSED
	FName                                              _stationName;                                               // 0x0250   (0x0008)  
	TArray<FRadioProgramData>                          _programsData;                                              // 0x0258   (0x0010)  
	int32_t                                            _maxTracksToQueue;                                          // 0x0268   (0x0004)  
	int32_t                                            _currentIndex;                                              // 0x026C   (0x0004)  
	TArray<URadioTrack*>                               _playlist;                                                  // 0x0270   (0x0010)  
	float                                              _elapsedTime;                                               // 0x0280   (0x0004)  
	unsigned char                                      UnknownData01_6[0x14];                                      // 0x0284   (0x0014)  MISSED


	/// Functions
	// Function /Script/ConZ.RadioStation.StartTrack
	void StartTrack();                                                                                                       // [0x23be3a0] Final|Native|Private 
	// Function /Script/ConZ.RadioStation.OnTrackEnded
	void OnTrackEnded();                                                                                                     // [0x23be180] Final|Native|Private 
	// Function /Script/ConZ.RadioStation.OnRep_Playlist
	void OnRep_Playlist();                                                                                                   // [0x23bdf90] Final|Native|Private 
	// Function /Script/ConZ.RadioStation.Multicast_SendNextTrack
	void Multicast_SendNextTrack(URadioTrack* Track);                                                                        // [0x22cad10] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/ConZ.RainCollectionManager
/// Size: 0x0088 (0x0000B0 - 0x000138)
class URainCollectionManager : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x88];                                      // 0x00B0   (0x0088)  MISSED
};

/// Class /Script/ConZ.RainCollectorComponent
/// Size: 0x0030 (0x0000C8 - 0x0000F8)
class URainCollectorComponent : public UItemComponent
{ 
public:
	FDbIntegerId                                       _collectorID;                                               // 0x00C8   (0x0008)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00D0   (0x0004)  MISSED
	float                                              _fillRate;                                                  // 0x00D4   (0x0004)  
	float                                              _maxAmount;                                                 // 0x00D8   (0x0004)  
	unsigned char                                      UnknownData01_5[0xC];                                       // 0x00DC   (0x000C)  MISSED
	UAkAudioEvent*                                     _collectingStartSound;                                      // 0x00E8   (0x0008)  
	UAkAudioEvent*                                     _collectingStopSound;                                       // 0x00F0   (0x0008)  


	/// Functions
	// Function /Script/ConZ.RainCollectorComponent.OnResourceAmountChanged
	void OnResourceAmountChanged(UBasicGameResourceContainerComponent* containerComponent, float newAmount);                 // [0x23be0b0] Final|Native|Private 
	// Function /Script/ConZ.RainCollectorComponent.OnRep_CollectorID
	void OnRep_CollectorID();                                                                                                // [0x23bdf70] Final|Native|Private|Const 
};

/// Class /Script/ConZ.RangedResourceConsumerComponent
/// Size: 0x0028 (0x0000C8 - 0x0000F0)
class URangedResourceConsumerComponent : public UItemComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x00C8   (0x0018)  MISSED
	UClass*                                            _repResourceType;                                           // 0x00E0   (0x0008)  
	float                                              _repResourceAmount;                                         // 0x00E8   (0x0004)  
	float                                              _repRequiredResourceAmount;                                 // 0x00EC   (0x0004)  


	/// Functions
	// Function /Script/ConZ.RangedResourceConsumerComponent.OnRep_ResourceType
	void OnRep_ResourceType();                                                                                               // [0x23be010] Final|Native|Private 
	// Function /Script/ConZ.RangedResourceConsumerComponent.OnRep_ResourceAmount
	void OnRep_ResourceAmount();                                                                                             // [0x23bdfd0] Final|Native|Private 
	// Function /Script/ConZ.RangedResourceConsumerComponent.OnRep_RequiredResourceAmount
	void OnRep_RequiredResourceAmount();                                                                                     // [0x23bdfb0] Final|Native|Private 
};

/// Class /Script/ConZ.RangedResourceConsumerComponentMultipleProviders
/// Size: 0x0000 (0x0000F0 - 0x0000F0)
class URangedResourceConsumerComponentMultipleProviders : public URangedResourceConsumerComponent
{ 
public:
};

/// Class /Script/ConZ.RangedResourceConsumerComponentSingleProvider
/// Size: 0x0000 (0x0000F0 - 0x0000F0)
class URangedResourceConsumerComponentSingleProvider : public URangedResourceConsumerComponent
{ 
public:
};

/// Class /Script/ConZ.RangedResourceConsumerEntityComponentSave
/// Size: 0x0048 (0x000028 - 0x000070)
class URangedResourceConsumerEntityComponentSave : public UObject
{ 
public:
	UClass*                                            ResourceType;                                               // 0x0028   (0x0008)  
	float                                              ResourceAmount;                                             // 0x0030   (0x0004)  
	float                                              RequiredResourceAmount;                                     // 0x0034   (0x0004)  
	bool                                               ResourceUsageEnabled;                                       // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0039   (0x0007)  MISSED
	FEntityComponentId                                 ResourceSupplierId;                                         // 0x0040   (0x0010)  
	TArray<FEntityComponentId>                         RegisteredProviders;                                        // 0x0050   (0x0010)  
	TArray<FConnectionSaveData>                        Connections;                                                // 0x0060   (0x0010)  
};

/// Class /Script/ConZ.RangedResourceConsumerEntityComponentSetup
/// Size: 0x0020 (0x000048 - 0x000068)
class URangedResourceConsumerEntityComponentSetup : public UEntityComponentSetup
{ 
public:
	UClass*                                            ResourceType;                                               // 0x0048   (0x0008)  
	float                                              ResourceAmount;                                             // 0x0050   (0x0004)  
	float                                              RequiredResourceAmount;                                     // 0x0054   (0x0004)  
	bool                                               AutoFindResourceSupplier;                                   // 0x0058   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0059   (0x0003)  MISSED
	FName                                              ResourceSupplierName;                                       // 0x005C   (0x0008)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0064   (0x0004)  MISSED
};

/// Class /Script/ConZ.RangedResourceConsumerEntityComponentSetupMultipleProviders
/// Size: 0x0008 (0x000068 - 0x000070)
class URangedResourceConsumerEntityComponentSetupMultipleProviders : public URangedResourceConsumerEntityComponentSetup
{ 
public:
	bool                                               AutoConnect;                                                // 0x0068   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0069   (0x0007)  MISSED
};

/// Class /Script/ConZ.RangedResourceConsumerEntityComponentStateSingleProvider
/// Size: 0x0000 (0x000070 - 0x000070)
class URangedResourceConsumerEntityComponentStateSingleProvider : public URangedResourceConsumerEntityComponentSave
{ 
public:
};

/// Class /Script/ConZ.RangedResourceConsumerEntityComponentSetupSingleProvider
/// Size: 0x0000 (0x000068 - 0x000068)
class URangedResourceConsumerEntityComponentSetupSingleProvider : public URangedResourceConsumerEntityComponentSetup
{ 
public:
};

/// Class /Script/ConZ.RangedResourceProviderComponent
/// Size: 0x0050 (0x0000C8 - 0x000118)
class URangedResourceProviderComponent : public UItemComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x00C8   (0x0030)  MISSED
	UClass*                                            _repResourceType;                                           // 0x00F8   (0x0008)  
	float                                              _repResourceAmount;                                         // 0x0100   (0x0004)  
	float                                              _repAvailableResourceAmount;                                // 0x0104   (0x0004)  
	UClass*                                            _influenceAreaVisualizerClass;                              // 0x0108   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0110   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.RangedResourceProviderComponent.OnRep_ResourceType
	void OnRep_ResourceType();                                                                                               // [0x23be030] Final|Native|Private 
	// Function /Script/ConZ.RangedResourceProviderComponent.OnRep_ResourceAmount
	void OnRep_ResourceAmount();                                                                                             // [0x23bdff0] Final|Native|Private 
	// Function /Script/ConZ.RangedResourceProviderComponent.OnRep_AvailableResourceAmount
	void OnRep_AvailableResourceAmount();                                                                                    // [0x23bdf50] Final|Native|Private 
};

/// Class /Script/ConZ.RangedResourceProviderComponentContinousAmount
/// Size: 0x0000 (0x000118 - 0x000118)
class URangedResourceProviderComponentContinousAmount : public URangedResourceProviderComponent
{ 
public:
};

/// Class /Script/ConZ.RangedResourceProviderEntityComponentSave
/// Size: 0x0038 (0x000028 - 0x000060)
class URangedResourceProviderEntityComponentSave : public UObject
{ 
public:
	UClass*                                            ResourceType;                                               // 0x0028   (0x0008)  
	float                                              ResourceAmount;                                             // 0x0030   (0x0004)  
	float                                              AvailableResourceAmount;                                    // 0x0034   (0x0004)  
	bool                                               ResourceUsageEnabled;                                       // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0039   (0x0007)  MISSED
	FEntityComponentId                                 ResourceSupplierId;                                         // 0x0040   (0x0010)  
	TArray<FConnectionSaveData>                        Connections;                                                // 0x0050   (0x0010)  
};

/// Class /Script/ConZ.RangedResourceProviderEntityComponentSetup
/// Size: 0x0020 (0x000048 - 0x000068)
class URangedResourceProviderEntityComponentSetup : public UEntityComponentSetup
{ 
public:
	UClass*                                            ResourceType;                                               // 0x0048   (0x0008)  
	float                                              ResourceAmount;                                             // 0x0050   (0x0004)  
	bool                                               AutoFindResourceSupplier;                                   // 0x0054   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0055   (0x0003)  MISSED
	FName                                              ResourceSupplierName;                                       // 0x0058   (0x0008)  
	bool                                               MirrorResourceSupplierResources;                            // 0x0060   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0061   (0x0007)  MISSED
};

/// Class /Script/ConZ.RangedResourceProviderEntityComponentContinousAmountSave
/// Size: 0x0000 (0x000060 - 0x000060)
class URangedResourceProviderEntityComponentContinousAmountSave : public URangedResourceProviderEntityComponentSave
{ 
public:
};

/// Class /Script/ConZ.RangedResourceProviderEntityComponentContinousAmountSetup
/// Size: 0x0000 (0x000068 - 0x000068)
class URangedResourceProviderEntityComponentContinousAmountSetup : public URangedResourceProviderEntityComponentSetup
{ 
public:
};

/// Class /Script/ConZ.Razor
/// Size: 0x0120 (0x0007B0 - 0x0008D0)
class ARazor : public AConZCharacter
{ 
public:
	unsigned char                                      UnknownData00_2[0x68];                                      // 0x07B0   (0x0068)  MISSED
	USphereComponent*                                  _razorWeakSpotComponent;                                    // 0x0818   (0x0008)  
	UNavigationInvokerComponent*                       _navigationInvokerComponent;                                // 0x0820   (0x0008)  
	UHitReactComponent*                                _hitReactComponent;                                         // 0x0828   (0x0008)  
	URazorCommonData*                                  _razorCommonData;                                           // 0x0830   (0x0008)  
	unsigned char                                      UnknownData01_5[0x19];                                      // 0x0838   (0x0019)  MISSED
	bool                                               _isAlive;                                                   // 0x0851   (0x0001)  
	unsigned char                                      UnknownData02_5[0x6];                                       // 0x0852   (0x0006)  MISSED
	bool                                               _isSearched;                                                // 0x0858   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x0859   (0x0003)  MISSED
	TWeakObjectPtr<APawn*>                             _targetPawn;                                                // 0x085C   (0x0008)  
	bool                                               _shouldAdjustUpperBodyPitchToTargetPawn;                    // 0x0864   (0x0001)  
	unsigned char                                      UnknownData04_5[0x7];                                       // 0x0865   (0x0007)  MISSED
	bool                                               _isVentilationAnimationFallingSimulationActive;             // 0x086C   (0x0001)  
	unsigned char                                      UnknownData05_5[0x37];                                      // 0x086D   (0x0037)  MISSED
	ERazorStance                                       _razorStance;                                               // 0x08A4   (0x0001)  
	ERazorSleepingStage                                _razorSleepingStage;                                        // 0x08A5   (0x0001)  
	unsigned char                                      UnknownData06_6[0x2A];                                      // 0x08A6   (0x002A)  MISSED


	/// Functions
	// Function /Script/ConZ.Razor.OnRep_RazorStance
	void OnRep_RazorStance(ERazorStance oldStance);                                                                          // [0x23c0740] Final|Native|Private 
	// Function /Script/ConZ.Razor.OnRep_IsVentilationAnimationFallingSimulationActive
	void OnRep_IsVentilationAnimationFallingSimulationActive();                                                              // [0x23c0720] Final|Native|Private 
	// Function /Script/ConZ.Razor.NetMulticast_PlayTurnMontage
	void NetMulticast_PlayTurnMontage(ERazorTurnMontage turnMontage, float angle);                                           // [0x23c0650] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.Razor.NetMulticast_PlayMontage
	void NetMulticast_PlayMontage(ERazorMontageType montageType, int32_t Index);                                             // [0x23c0580] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.Razor.NetMulticast_PlayGroupAttackMontage
	void NetMulticast_PlayGroupAttackMontage(int32_t attackMontageIndex);                                                    // [0x23c04f0] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.Razor.NetMulticast_PlayBasicAttackMontage
	void NetMulticast_PlayBasicAttackMontage(int32_t attackMontageIndex);                                                    // [0x23c0460] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.Razor.NetMulticast_OnKilled
	void NetMulticast_OnKilled(ERazorDeathType deathType, EHitDirectionType directionType);                                  // [0x23c0390] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/ConZ.RazorAIController
/// Size: 0x0330 (0x000328 - 0x000658)
class ARazorAIController : public AAIController
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0328   (0x0018)  MISSED
	UAISenseConfig_Sight*                              _currentSightSenseConfig;                                   // 0x0340   (0x0008)  
	UAISenseConfig_Hearing*                            _currentHearingSenseConfig;                                 // 0x0348   (0x0008)  
	UAISenseConfig_Sight*                              _sightSenseConfigSleeping;                                  // 0x0350   (0x0008)  
	UAISenseConfig_Hearing*                            _hearingSenseConfigSleeping;                                // 0x0358   (0x0008)  
	UAISenseConfig_Sight*                              _sightSenseConfigAlerted;                                   // 0x0360   (0x0008)  
	UAISenseConfig_Hearing*                            _hearingSenseConfigAlerted;                                 // 0x0368   (0x0008)  
	UAISenseConfig_Sight*                              _sightSenseConfigCombat;                                    // 0x0370   (0x0008)  
	UAISenseConfig_Hearing*                            _hearingSenseConfigCombat;                                  // 0x0378   (0x0008)  
	float                                              _timeToForgetKnownCharacter;                                // 0x0380   (0x0004)  
	bool                                               _shouldConsiderSightStimuli;                                // 0x0384   (0x0001)  
	bool                                               _shouldConsiderHearingStimuli;                              // 0x0385   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x0386   (0x0002)  MISSED
	TMap<FName, float>                                 _noiseAccumulationMultiplierPerNoiseTag;                    // 0x0388   (0x0050)  
	UGrappleActionParameters*                          _grappleActionParameters;                                   // 0x03D8   (0x0008)  
	unsigned char                                      UnknownData02_5[0x38];                                      // 0x03E0   (0x0038)  MISSED
	float                                              _cooldownBetweenSwitchingTargets;                           // 0x0418   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x041C   (0x0004)  MISSED
	float                                              _timeUntilRecentDamageDrop;                                 // 0x0420   (0x0004)  
	float                                              _recentDamageDropRatePerSecond;                             // 0x0424   (0x0004)  
	float                                              _recentDamageThresholdToConsider;                           // 0x0428   (0x0004)  
	unsigned char                                      UnknownData04_5[0x14];                                      // 0x042C   (0x0014)  MISSED
	float                                              _wakeUpNoiseThreshold;                                      // 0x0440   (0x0010)  
	float                                              _sleepingAccumulatedNoiseDropRate;                          // 0x0450   (0x0004)  
	unsigned char                                      UnknownData05_5[0x4];                                       // 0x0454   (0x0004)  MISSED
	float                                              _playerDistanceForInstantWakeUp;                            // 0x0458   (0x0004)  
	unsigned char                                      UnknownData06_5[0xC];                                       // 0x045C   (0x000C)  MISSED
	float                                              _sleepingStateRecentWakingResetTimer;                       // 0x0468   (0x0004)  
	unsigned char                                      UnknownData07_5[0x8];                                       // 0x046C   (0x0008)  MISSED
	FFloatRange                                        _alertedStateDurationRange;                                 // 0x0474   (0x0010)  
	unsigned char                                      UnknownData08_5[0x8];                                       // 0x0484   (0x0008)  MISSED
	float                                              _alertedNoiseThresholdToBecomeAggressive;                   // 0x048C   (0x0004)  
	float                                              _alertedStateAccumulatedNoiseDropRate;                      // 0x0490   (0x0004)  
	unsigned char                                      UnknownData09_5[0x4];                                       // 0x0494   (0x0004)  MISSED
	float                                              _alertedRandomPointSearchRadius;                            // 0x0498   (0x0004)  
	unsigned char                                      UnknownData10_5[0x4];                                       // 0x049C   (0x0004)  MISSED
	FFloatRange                                        _alertedAggressiveStateTimeOnInterestPoint;                 // 0x04A0   (0x0010)  
	FFloatInterval                                     _alertedAggressiveStateDurationRange;                       // 0x04B0   (0x0008)  
	unsigned char                                      UnknownData11_5[0x4];                                       // 0x04B8   (0x0004)  MISSED
	float                                              _targetFocusDistance;                                       // 0x04BC   (0x0004)  
	float                                              _distanceToTargetToConsiderForGroupAttack;                  // 0x04C0   (0x0004)  
	float                                              _chanceToChangeActiveTargetDuringGroupAttack;               // 0x04C4   (0x0004)  
	unsigned char                                      UnknownData12_5[0x10];                                      // 0x04C8   (0x0010)  MISSED
	float                                              _combatAcceptanceRadius;                                    // 0x04D8   (0x0004)  
	FFloatRange                                        _combatPauseBetweenAttacksRange;                            // 0x04DC   (0x0010)  
	FFloatRange                                        _combatPauseBetweenMovementsRange;                          // 0x04EC   (0x0010)  
	float                                              _combatStandingStillTimeToTriggerMovementDelay;             // 0x04FC   (0x0004)  
	unsigned char                                      UnknownData13_5[0x14];                                      // 0x0500   (0x0014)  MISSED
	int32_t                                            _minRequiredConsecutiveAttackToTriggerIntimidation;         // 0x0514   (0x0004)  
	unsigned char                                      UnknownData14_5[0x4];                                       // 0x0518   (0x0004)  MISSED
	float                                              _resetIntimidationAttackCounterTime;                        // 0x051C   (0x0004)  
	float                                              _chanceToTriggerIntimidation;                               // 0x0520   (0x0004)  
	float                                              _mountAttackInitiateDistance;                               // 0x0524   (0x0004)  
	float                                              _mountAttackMinDistance;                                    // 0x0528   (0x0004)  
	float                                              _mountAttackAttemptDistance;                                // 0x052C   (0x0004)  
	float                                              _mountAttackAttemptForceTime;                               // 0x0530   (0x0004)  
	unsigned char                                      UnknownData15_5[0x4];                                       // 0x0534   (0x0004)  MISSED
	float                                              _mountAttackOverrideForwardSpeed;                           // 0x0538   (0x0004)  
	float                                              _mountAttackJumpApexHeight;                                 // 0x053C   (0x0004)  
	unsigned char                                      UnknownData16_5[0x8];                                       // 0x0540   (0x0008)  MISSED
	float                                              _mountAttackCooldown;                                       // 0x0548   (0x0004)  
	unsigned char                                      UnknownData17_5[0x4];                                       // 0x054C   (0x0004)  MISSED
	float                                              _distanceFromPlayerForMountAttackToBeValid;                 // 0x0550   (0x0004)  
	float                                              _heightDifferenceFromPlayerForMountAttackToBeValid;         // 0x0554   (0x0004)  
	float                                              _mountAttackDamageInterval;                                 // 0x0558   (0x0004)  
	unsigned char                                      UnknownData18_5[0x4];                                       // 0x055C   (0x0004)  MISSED
	TArray<FName>                                      _mountAttackTargetDamageBoneNames;                          // 0x0560   (0x0010)  
	float                                              _damagePerMountAttack;                                      // 0x0570   (0x0004)  
	unsigned char                                      UnknownData19_5[0x4];                                       // 0x0574   (0x0004)  MISSED
	float                                              _mountAttackDamageTakenLimit;                               // 0x0578   (0x0004)  
	unsigned char                                      UnknownData20_5[0x4];                                       // 0x057C   (0x0004)  MISSED
	float                                              _minDistanceFromPlayerToIntimidateAfterFailedMountAttack;   // 0x0580   (0x0004)  
	unsigned char                                      UnknownData21_5[0x4];                                       // 0x0584   (0x0004)  MISSED
	float                                              _targetOutsideOfBunkerTimeBeforeDespawn;                    // 0x0588   (0x0004)  
	unsigned char                                      UnknownData22_5[0x18];                                      // 0x058C   (0x0018)  MISSED
	FFloatRange                                        _ventilationDespawnMovementDelayRange;                      // 0x05A4   (0x0010)  
	unsigned char                                      UnknownData23_5[0x4];                                       // 0x05B4   (0x0004)  MISSED
	float                                              _timeNotSeenByPlayersToDespawn;                             // 0x05B8   (0x0004)  
	unsigned char                                      UnknownData24_5[0x4];                                       // 0x05BC   (0x0004)  MISSED
	float                                              _noiseLoudnessToInterruptVentilationDespawn;                // 0x05C0   (0x0004)  
	float                                              _minAngleCosRequiredToTurn;                                 // 0x05C4   (0x0004)  
	float                                              _genericAcceptanceRadius;                                   // 0x05C8   (0x0004)  
	float                                              _timeToBeConsideredStuck;                                   // 0x05CC   (0x0004)  
	float                                              _costOfJumpingInPathLength;                                 // 0x05D0   (0x0004)  
	float                                              _distanceForDestinationToBeConsideredChanged;               // 0x05D4   (0x0004)  
	unsigned char                                      UnknownData25_6[0x80];                                      // 0x05D8   (0x0080)  MISSED


	/// Functions
	// Function /Script/ConZ.RazorAIController.SensingComponent_OnActorSensed
	void SensingComponent_OnActorSensed(TArray<AActor*>& actorsPercepted);                                                   // [0x23c07c0] Final|Native|Private|HasOutParms 
};

/// Class /Script/ConZ.RazorAnimInstance
/// Size: 0x00E0 (0x0002C0 - 0x0003A0)
class URazorAnimInstance : public UAnimInstance
{ 
public:
	bool                                               _isInRagdoll;                                               // 0x02C0   (0x0001)  
	ERazorStance                                       _razorStance;                                               // 0x02C1   (0x0001)  
	ERazorSleepingStage                                _sleepingStage;                                             // 0x02C2   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x02C3   (0x0001)  MISSED
	FVector                                            _acceleration;                                              // 0x02C4   (0x000C)  
	bool                                               _wantsToMove;                                               // 0x02D0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x02D1   (0x0003)  MISSED
	FVector                                            _velocity;                                                  // 0x02D4   (0x000C)  
	float                                              _speed;                                                     // 0x02E0   (0x0004)  
	float                                              _speedXY;                                                   // 0x02E4   (0x0004)  
	float                                              _walkStoppingDistance;                                      // 0x02E8   (0x0004)  
	float                                              _walkStoppingTime;                                          // 0x02EC   (0x0004)  
	bool                                               _isFalling;                                                 // 0x02F0   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x02F1   (0x0003)  MISSED
	float                                              _fallingPlayRate;                                           // 0x02F4   (0x0004)  
	bool                                               _isJumping;                                                 // 0x02F8   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x02F9   (0x0003)  MISSED
	float                                              _jumpApex;                                                  // 0x02FC   (0x0004)  
	float                                              _jumpDuration;                                              // 0x0300   (0x0004)  
	float                                              _speedInWalkAnimation;                                      // 0x0304   (0x0004)  
	float                                              _speedInJogAnimation;                                       // 0x0308   (0x0004)  
	float                                              _speedInRunAnimation;                                       // 0x030C   (0x0004)  
	float                                              _ventilationSpawnFallingAnimPlayRate;                       // 0x0310   (0x0004)  
	float                                              _moveStartAnimationPlayRate;                                // 0x0314   (0x0004)  
	float                                              _moveLoopAnimationPlayRate;                                 // 0x0318   (0x0004)  
	float                                              _moveStopAnimationStartTime;                                // 0x031C   (0x0004)  
	float                                              _moveStopAnimationPlayRate;                                 // 0x0320   (0x0004)  
	FVector2D                                          _moveDirectionRelativeToForwardVector;                      // 0x0324   (0x0008)  
	bool                                               _shouldUseCurvedRunAnimation;                               // 0x032C   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x032D   (0x0003)  MISSED
	float                                              _distanceToActivateCurvedRunAnimation;                      // 0x0330   (0x0004)  
	unsigned char                                      UnknownData05_5[0x4];                                       // 0x0334   (0x0004)  MISSED
	UAnimSequenceBase*                                 _walkStopAnimation;                                         // 0x0338   (0x0008)  
	UAnimSequenceBase*                                 _jogStopAnimation;                                          // 0x0340   (0x0008)  
	UAnimSequenceBase*                                 _runStopAnimation;                                          // 0x0348   (0x0008)  
	UAnimSequenceBase*                                 _runCurveStopAnimation;                                     // 0x0350   (0x0008)  
	UAnimSequence*                                     _grappledIdleAnimation;                                     // 0x0358   (0x0008)  
	bool                                               _shouldUseGrappleAnimation;                                 // 0x0360   (0x0001)  
	unsigned char                                      UnknownData06_5[0x3];                                       // 0x0361   (0x0003)  MISSED
	float                                              _minUpperBodyBlendWeight;                                   // 0x0364   (0x0004)  
	float                                              _upperBodyBlendMaxSpeedXY;                                  // 0x0368   (0x0004)  
	float                                              _upperBodyBlendWeight;                                      // 0x036C   (0x0004)  
	float                                              _upperBodyPitch;                                            // 0x0370   (0x0004)  
	float                                              _meshRootMaxOffset;                                         // 0x0374   (0x0004)  
	float                                              _meshRootMaxOffsetFP;                                       // 0x0378   (0x0004)  
	float                                              _meshRootMaxOffsetWall;                                     // 0x037C   (0x0004)  
	float                                              _minDistanceToApplyMeshRootOffset;                          // 0x0380   (0x0004)  
	unsigned char                                      UnknownData07_5[0x4];                                       // 0x0384   (0x0004)  MISSED
	float                                              _rootOffsetChangeRatePerSecond;                             // 0x0388   (0x0004)  
	FVector                                            _meshRootCurrentOffset;                                     // 0x038C   (0x000C)  
	unsigned char                                      UnknownData08_6[0x8];                                       // 0x0398   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.RazorAnimInstance.AnimNotify_RFootDown
	void AnimNotify_RFootDown();                                                                                             // [0x23850c0] Native|Event|Protected|BlueprintEvent 
	// Function /Script/ConZ.RazorAnimInstance.AnimNotify_LFootDown
	void AnimNotify_LFootDown();                                                                                             // [0x23850a0] Native|Event|Protected|BlueprintEvent 
};

/// Class /Script/ConZ.RazorCommonData
/// Size: 0x0250 (0x000030 - 0x000280)
class URazorCommonData : public UDataAsset
{ 
public:
	float                                              MaxHealth;                                                  // 0x0030   (0x0004)  
	float                                              ProjectileDamageMultiplierPerBodyPart;                      // 0x0034   (0x0030)  
	float                                              MeleeDamageMultiplierPerBodyPart;                           // 0x0064   (0x0030)  
	float                                              ExplosionDamageMultiplier;                                  // 0x0094   (0x0004)  
	float                                              ExplosionDamageThresholdToTriggerHitReact;                  // 0x0098   (0x0004)  
	float                                              WeakSpotDamageMultiplier;                                   // 0x009C   (0x0004)  
	float                                              RagdollHitImpulseStrengthPerUnitDamage;                     // 0x00A0   (0x0004)  
	float                                              HeadMaxAccumulatedDamageBeforeHitReact;                     // 0x00A4   (0x0004)  
	float                                              BodyMaxAccumulatedDamageBeforeSmallHitReact;                // 0x00A8   (0x0004)  
	float                                              BodyMaxAccumulatedDamageBeforeLargeHitReact;                // 0x00AC   (0x0004)  
	float                                              WeakSpotMaxAccumulatedDamageBeforeHitReact;                 // 0x00B0   (0x0004)  
	float                                              WeakSpotHeavyHitReactMinSpeed;                              // 0x00B4   (0x0004)  
	float                                              TimeNeededForAccumulatedDamageToStartDropping;              // 0x00B8   (0x0004)  
	float                                              TimeNeededToFullyDropAccumulatedDamage;                     // 0x00BC   (0x0004)  
	float                                              DefaultAccumulatedDamageMultiplier;                         // 0x00C0   (0x0004)  
	float                                              MeleeAccumulatedDamageMultiplier;                           // 0x00C4   (0x0004)  
	float                                              CorpseSearchDuration;                                       // 0x00C8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00CC   (0x0004)  MISSED
	FRazorTurnMontageDescription                       TurnMontageDescriptions;                                    // 0x00D0   (0x0050)  
	TArray<UAnimMontage*>                              SuddenWakeUpMontages;                                       // 0x0120   (0x0010)  
	TArray<UAnimMontage*>                              NormalWakeUpMontages;                                       // 0x0130   (0x0010)  
	UAnimMontage*                                      EnterCombatMontage;                                         // 0x0140   (0x0008)  
	TArray<FRazorAttackMontageDescription>             BasicAttackAnimations;                                      // 0x0148   (0x0010)  
	TArray<FRazorAttackMontageDescription>             GroupAttackAnimations;                                      // 0x0158   (0x0010)  
	UAnimMontage*                                      MountAttackJumpMontage;                                     // 0x0168   (0x0008)  
	UAnimMontage*                                      MountAttackFailedMontage;                                   // 0x0170   (0x0008)  
	UAnimMontage*                                      MountAttackFailedToTallObstacleMontage;                     // 0x0178   (0x0008)  
	UAnimMontage*                                      MountAttackFailedToShortObstacleMontage;                    // 0x0180   (0x0008)  
	float                                              MountAttackFailMoveDistance;                                // 0x0188   (0x0004)  
	float                                              MountAttackObstacleHeightThreshold;                         // 0x018C   (0x0004)  
	UAnimMontage*                                      VentilationSpawnAttackMontage;                              // 0x0190   (0x0008)  
	UAnimMontage*                                      VentilationSpawnAttackMontageEnd;                           // 0x0198   (0x0008)  
	TArray<FRazorDeathAnimationData>                   WeakSpotDeathMontages;                                      // 0x01A0   (0x0010)  
	TArray<FRazorDeathAnimationData>                   MeleeDeathFrontMontage;                                     // 0x01B0   (0x0010)  
	TArray<FRazorDeathAnimationData>                   MeleeDeathBackMontage;                                      // 0x01C0   (0x0010)  
	TArray<FRazorDeathAnimationData>                   ProjectileDeathFrontMontage;                                // 0x01D0   (0x0010)  
	TArray<FRazorDeathAnimationData>                   ProjectileDeathBackMontage;                                 // 0x01E0   (0x0010)  
	TArray<FRazorUpperBodyPitchRangeData>              UpperBodyPitchRanges;                                       // 0x01F0   (0x0010)  
	float                                              UpperBodyPitchChangeRate;                                   // 0x0200   (0x0004)  
	float                                              MaxUpperBodyPitchChangeDistance;                            // 0x0204   (0x0004)  
	TArray<UAnimMontage*>                              MountAttackInitiateChargeMontages;                          // 0x0208   (0x0010)  
	TArray<UAnimMontage*>                              IntimidationMontages;                                       // 0x0218   (0x0010)  
	UCurveVector*                                      RazorPositionDuringVentilationAttackCurve;                  // 0x0228   (0x0008)  
	UAkAudioEvent*                                     IdleSleepingAudioEvent;                                     // 0x0230   (0x0008)  
	UAkAudioEvent*                                     IdleAlertedAudioEvent;                                      // 0x0238   (0x0008)  
	UAkAudioEvent*                                     IdleAlertedAggressiveAudioEvent;                            // 0x0240   (0x0008)  
	UAkAudioEvent*                                     IdleCombatAudioEvent;                                       // 0x0248   (0x0008)  
	UAkAudioEvent*                                     DeathAudioEvent;                                            // 0x0250   (0x0008)  
	UAkAudioEvent*                                     FootstepAudioEvent;                                         // 0x0258   (0x0008)  
	UAkAudioEvent*                                     StartSearchAudioEvent;                                      // 0x0260   (0x0008)  
	UAkAudioEvent*                                     StopSearchAudioEvent;                                       // 0x0268   (0x0008)  
	FGameplayTag                                       HitReactTypeStanding;                                       // 0x0270   (0x0008)  
	FGameplayTag                                       HitReactTypeWeakSpot;                                       // 0x0278   (0x0008)  
};

/// Class /Script/ConZ.RazorMovementComponent
/// Size: 0x0080 (0x000C10 - 0x000C90)
class URazorMovementComponent : public UConZCharacterMovementComponent
{ 
public:
	float                                              _walkSpeedPerRazorStance;                                   // 0x0C10   (0x0018)  
	float                                              _walkAccelerationPerRazorStance;                            // 0x0C28   (0x0018)  
	float                                              _walkDecelerationPerRazorStance;                            // 0x0C40   (0x0018)  
	float                                              _yawRotationSpeedPerRazorStance;                            // 0x0C58   (0x0018)  
	float                                              _combatCloseChargeSpeedDistance;                            // 0x0C70   (0x0004)  
	float                                              _combatCloseChargeSpeed;                                    // 0x0C74   (0x0004)  
	float                                              _combatCloseChargeAcceleration;                             // 0x0C78   (0x0004)  
	float                                              _combatCloseChargeDeceleration;                             // 0x0C7C   (0x0004)  
	float                                              _hitReactStateWalkSpeedMultiplier;                          // 0x0C80   (0x0004)  
	float                                              _hitReactSlowdownDuration;                                  // 0x0C84   (0x0004)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0C88   (0x0008)  MISSED
};

/// Class /Script/ConZ.RazorSpawnPoint
/// Size: 0x00B0 (0x000220 - 0x0002D0)
class ARazorSpawnPoint : public AActor
{ 
public:
	UStaticMeshComponent*                              _staticMeshComponent;                                       // 0x0220   (0x0008)  
	UStaticMeshComponent*                              _grateStaticMeshComponent;                                  // 0x0228   (0x0008)  
	UMovableAudioSpline*                               _movableAudioSpline;                                        // 0x0230   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0238   (0x0008)  MISSED
	FTransform                                         _exitTransform;                                             // 0x0240   (0x0030)  
	FVector                                            _grateLaunchPosition;                                       // 0x0270   (0x000C)  
	FVector                                            _grateLaunchDirectionVectorRelative;                        // 0x027C   (0x000C)  
	float                                              _grateLaunchMinVelocity;                                    // 0x0288   (0x0004)  
	float                                              _grateLaunchMaxVelocity;                                    // 0x028C   (0x0004)  
	float                                              _grateLaunchvelocityHalfAnglePitch;                         // 0x0290   (0x0004)  
	float                                              _grateLaunchvelocityHalfAngleYaw;                           // 0x0294   (0x0004)  
	UNiagaraSystem*                                    _burstOpenParticles;                                        // 0x0298   (0x0008)  
	FName                                              _particleAttachPointName;                                   // 0x02A0   (0x0008)  
	UAkAudioEvent*                                     _beginPlayAudioEvent;                                       // 0x02A8   (0x0008)  
	UAkAudioEvent*                                     _stopAudioEvent;                                            // 0x02B0   (0x0008)  
	UAkAudioEvent*                                     _commotionAudioEvent;                                       // 0x02B8   (0x0008)  
	UAkAudioEvent*                                     _burstOpenAudioEvent;                                       // 0x02C0   (0x0008)  
	bool                                               _isOpened;                                                  // 0x02C8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x02C9   (0x0007)  MISSED


	/// Functions
	// Function /Script/ConZ.RazorSpawnPoint.NetMulticast_PlaySoundNearLocation
	void NetMulticast_PlaySoundNearLocation(FVector Location, FVector destinationLocation);                                  // [0x23c59b0] Final|Net|Native|Event|NetMulticast|Private|HasDefaults 
	// Function /Script/ConZ.RazorSpawnPoint.NetMulticast_PlaySoundFromRandomPoint
	void NetMulticast_PlaySoundFromRandomPoint();                                                                            // [0x12357a0] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.RazorSpawnPoint.NetMulticast_PlaySoundFromNearestEnd
	void NetMulticast_PlaySoundFromNearestEnd(FVector Location, FVector destinationLocation);                                // [0x23c58c0] Final|Net|Native|Event|NetMulticast|Private|HasDefaults 
	// Function /Script/ConZ.RazorSpawnPoint.NetMulticast_PlayCommotionAudioEvent
	void NetMulticast_PlayCommotionAudioEvent();                                                                             // [0x22700a0] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.RazorSpawnPoint.NetMulticast_PlayBurstOpenEffects
	void NetMulticast_PlayBurstOpenEffects();                                                                                // [0x226ff90] Final|Net|Native|Event|NetMulticast|Private 
};

/// Class /Script/ConZ.RecastNavMesh_Brenner
/// Size: 0x0000 (0x0004D8 - 0x0004D8)
class ARecastNavMesh_Brenner : public ARecastNavMesh
{ 
public:
};

/// Class /Script/ConZ.RecastNavMesh_Humanoids
/// Size: 0x0000 (0x0004D8 - 0x0004D8)
class ARecastNavMesh_Humanoids : public ARecastNavMesh
{ 
public:
};

/// Class /Script/ConZ.RecastNavMesh_LargeAnimals
/// Size: 0x0000 (0x0004D8 - 0x0004D8)
class ARecastNavMesh_LargeAnimals : public ARecastNavMesh
{ 
public:
};

/// Class /Script/ConZ.RecastNavMesh_Sentries
/// Size: 0x0000 (0x0004D8 - 0x0004D8)
class ARecastNavMesh_Sentries : public ARecastNavMesh
{ 
public:
};

/// Class /Script/ConZ.RecastNavMesh_SmallAnimals
/// Size: 0x0000 (0x0004D8 - 0x0004D8)
class ARecastNavMesh_SmallAnimals : public ARecastNavMesh
{ 
public:
};

/// Class /Script/ConZ.RefrigeratorItem
/// Size: 0x0000 (0x000A30 - 0x000A30)
class ARefrigeratorItem : public AChestItem
{ 
public:
};

/// Class /Script/ConZ.RegularDoorStatic
/// Size: 0x0010 (0x0004E0 - 0x0004F0)
class ARegularDoorStatic : public ADoor
{ 
public:
	FRotator                                           _openRotation;                                              // 0x04D8   (0x000C)  
	FRotator                                           _closedRotation;                                            // 0x04E4   (0x000C)  
};

/// Class /Script/ConZ.RemoteKeyItemState
/// Size: 0x0000 (0x000100 - 0x000100)
class URemoteKeyItemState : public UItemState
{ 
public:
};

/// Class /Script/ConZ.RemoteKeyItem
/// Size: 0x0030 (0x000910 - 0x000940)
class ARemoteKeyItem : public AItem
{ 
public:
	UBasicGameResourceSlotItemComponent*               _resourceSlotComponent;                                     // 0x0910   (0x0008)  
	float                                              _triggerRadius;                                             // 0x0918   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x091C   (0x0004)  MISSED
	UAkAudioEvent*                                     _triggerAudioEvent;                                         // 0x0920   (0x0008)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x0928   (0x0010)  MISSED
	bool                                               _isPaired;                                                  // 0x0938   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0939   (0x0007)  MISSED
};

/// Class /Script/ConZ.RemoteSensorItemState
/// Size: 0x0000 (0x000100 - 0x000100)
class URemoteSensorItemState : public UItemState
{ 
public:
};

/// Class /Script/ConZ.RemoteSensorItem
/// Size: 0x0040 (0x000910 - 0x000950)
class ARemoteSensorItem : public AItem
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0910   (0x0018)  MISSED
	UBasicGameResourceSlotItemComponent*               _resourceSlotComponent;                                     // 0x0928   (0x0008)  
	int32_t                                            _maxPairedDevices;                                          // 0x0930   (0x0004)  
	bool                                               _hasAvailableSlots;                                         // 0x0934   (0x0001)  
	unsigned char                                      UnknownData01_6[0x1B];                                      // 0x0935   (0x001B)  MISSED
};

/// Class /Script/ConZ.RemoteSensorRegistry
/// Size: 0x0020 (0x000028 - 0x000048)
class URemoteSensorRegistry : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0028   (0x0020)  MISSED
};

/// Class /Script/ConZ.WeaponActionUnloadAmmoSequence
/// Size: 0x0028 (0x000028 - 0x000050)
class UWeaponActionUnloadAmmoSequence : public UWeaponAction
{ 
public:
	FBodyWeaponAnimation                               Animations;                                                 // 0x0028   (0x0010)  
	bool                                               CanBeInterrupted;                                           // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x17];                                      // 0x0039   (0x0017)  MISSED


	/// Functions
	// Function /Script/ConZ.WeaponActionUnloadAmmoSequence.SetNextMontageSectionFromPrevious
	void SetNextMontageSectionFromPrevious(FName previousSection, FName NextSection);                                        // [0x24134f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponActionUnloadAmmoSequence.SetNextMontageSection
	void SetNextMontageSection(FName NextSection);                                                                           // [0x2413120] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponActionUnloadAmmoSequence.OnMontageEnded
	void OnMontageEnded(UAnimMontage* Montage, bool interrupted);                                                            // [0x2412bb0] Native|Protected     
	// Function /Script/ConZ.WeaponActionUnloadAmmoSequence.OnMontageBlendingOutStarted
	void OnMontageBlendingOutStarted(UAnimMontage* Montage, bool interrupted);                                               // [0x2412ae0] Native|Protected     
	// Function /Script/ConZ.WeaponActionUnloadAmmoSequence.GetAmmoCount
	int32_t GetAmmoCount();                                                                                                  // [0x24124c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponActionUnloadAmmoSequence.GetActiveAnimationWeapon
	UAnimMontage* GetActiveAnimationWeapon();                                                                                // [0x2412400] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponActionUnloadAmmoSequence.GetActiveAnimationBody
	UAnimMontage* GetActiveAnimationBody();                                                                                  // [0x2412340] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponActionUnloadAmmoSequence.Execute
	float Execute(int32_t AmmoCount);                                                                                        // [0x24121e0] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.WeaponActionUnloadAmmoSequence.End
	void End(bool Regular);                                                                                                  // [0x2411fb0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/ConZ.WeaponActionUnloadAmmoSequence.CanInterrupt
	bool CanInterrupt();                                                                                                     // [0x11312d0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.WeaponActionUnloadAmmoSequence.CanExecute
	bool CanExecute();                                                                                                       // [0x2411d30] Native|Event|Public|BlueprintEvent|Const 
};

/// Class /Script/ConZ.RemoveCartridge
/// Size: 0x0008 (0x000050 - 0x000058)
class URemoveCartridge : public UWeaponActionUnloadAmmoSequence
{ 
public:
	FName                                              MontageEndSectionName;                                      // 0x0050   (0x0008)  
};

/// Class /Script/ConZ.RemoveMagazineInsertCartridge
/// Size: 0x0000 (0x000090 - 0x000090)
class URemoveMagazineInsertCartridge : public UWeaponActionReloadSequence
{ 
public:
};

/// Class /Script/ConZ.RemoveMagazineInsertMagazine
/// Size: 0x0000 (0x000090 - 0x000090)
class URemoveMagazineInsertMagazine : public UWeaponActionReloadSequence
{ 
public:
};

/// Class /Script/ConZ.RemoveMagazineInsertMagazineInsertCartridge
/// Size: 0x0010 (0x000090 - 0x0000A0)
class URemoveMagazineInsertMagazineInsertCartridge : public UWeaponActionReloadSequence
{ 
public:
	FName                                              MontageEndSectionName;                                      // 0x0090   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0098   (0x0008)  MISSED
};

/// Class /Script/ConZ.RemoveMagazineRemoveCartridge
/// Size: 0x0008 (0x000050 - 0x000058)
class URemoveMagazineRemoveCartridge : public UWeaponActionUnloadAmmoSequence
{ 
public:
	FName                                              MontageEndSectionName;                                      // 0x0050   (0x0008)  
};

/// Class /Script/ConZ.RepairableItemTag
/// Size: 0x0038 (0x000030 - 0x000068)
class URepairableItemTag : public UBaseItemTag
{ 
public:
	FRepairableParams                                  Params;                                                     // 0x0030   (0x0038)  
};

/// Class /Script/ConZ.RepairStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class URepairStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.RepairToolItemTag
/// Size: 0x0058 (0x000030 - 0x000088)
class URepairToolItemTag : public UBaseItemTag
{ 
public:
	FRepairToolItemParams                              Params;                                                     // 0x0030   (0x0058)  
};

/// Class /Script/ConZ.ReplenishableResourceComponent
/// Size: 0x0060 (0x000620 - 0x000680)
class UReplenishableResourceComponent : public UReplenishableResourceBaseComponent
{ 
public:
	FFillItemWithReplenishableResourceInteractionData  _replenishableResourceFillItemInteractionData;              // 0x0620   (0x0040)  
	float                                              QuantityPerDrink;                                           // 0x0660   (0x0004)  
	float                                              Salinity;                                                   // 0x0664   (0x0004)  
	UAkAudioEvent*                                     StartDrinkingAudioEvent;                                    // 0x0668   (0x0008)  
	UAkAudioEvent*                                     StopDrinkingAudioEvent;                                     // 0x0670   (0x0008)  
	float                                              QuantityPerWash;                                            // 0x0678   (0x0004)  
	float                                              WashDuration;                                               // 0x067C   (0x0004)  
};

/// Class /Script/ConZ.ReplenishableResourceManager
/// Size: 0x0180 (0x0000B0 - 0x000230)
class UReplenishableResourceManager : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x178];                                     // 0x00B0   (0x0178)  MISSED
	int32_t                                            _maxNumReplenishableResourceReplenishmentsPerTick;          // 0x0228   (0x0004)  
	float                                              _playerProximityToReplenish;                                // 0x022C   (0x0004)  


	/// Functions
	// Function /Script/ConZ.ReplenishableResourceManager.NetMulticast_SetReplenishableResourceAmount
	void NetMulticast_SetReplenishableResourceAmount(int32_t dataVersion, FPackedLocation ID, float Value);                  // [0x23c5e80] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.ReplenishableResourceManager.NetMulticast_ReserveReplenishableResourceSlot
	void NetMulticast_ReserveReplenishableResourceSlot(int32_t dataVersion, FPackedLocation ID, int32_t SlotIndex);          // [0x23c5d70] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.ReplenishableResourceManager.NetMulticast_ReleaseReplenishableResourceSlot
	void NetMulticast_ReleaseReplenishableResourceSlot(int32_t dataVersion, FPackedLocation ID, int32_t SlotIndex);          // [0x23c5aa0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.ReplenishableResourceManager.NetMulticast_DestroyReplenishableResource
	void NetMulticast_DestroyReplenishableResource(int32_t dataVersion, FPackedLocation ID);                                 // [0x23c5570] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.ReplenishableResourceManager.NetMulticast_CreateReplenishableResource
	void NetMulticast_CreateReplenishableResource(int32_t dataVersion, FReplenishableResourceDescription Description);       // [0x23c53f0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/ConZ.ReplicatedEffectsActor
/// Size: 0x0008 (0x000220 - 0x000228)
class AReplicatedEffectsActor : public AActor
{ 
public:
	float                                              _lifeSpan;                                                  // 0x0220   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0224   (0x0004)  MISSED
};

/// Class /Script/ConZ.ReplicatedExplosionEffectsActor
/// Size: 0x00A8 (0x000228 - 0x0002D0)
class AReplicatedExplosionEffectsActor : public AReplicatedEffectsActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0228   (0x0008)  MISSED
	FTransform                                         _explosionParticlesTransform;                               // 0x0230   (0x0030)  
	UParticleSystem*                                   _defaultParticleSystem;                                     // 0x0260   (0x0008)  
	TMap<TEnumAsByte, UParticleSystem*>                _onImpactExplosionEffectsOverrides;                         // 0x0268   (0x0050)  
	UAkAudioEvent*                                     _explosionSound;                                            // 0x02B8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x02C0   (0x0010)  MISSED
};

/// Class /Script/ConZ.ReportingManager
/// Size: 0x05B0 (0x000220 - 0x0007D0)
class AReportingManager : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x168];                                     // 0x0220   (0x0168)  MISSED
	FMulticastInlineDelegate                           PrisonerWhistled;                                           // 0x0388   (0x0010)  
	unsigned char                                      UnknownData01_6[0x438];                                     // 0x0398   (0x0438)  MISSED
};

/// Class /Script/ConZ.RequestMinigameToolsRequest
/// Size: 0x0018 (0x000028 - 0x000040)
class URequestMinigameToolsRequest : public UPlayerRpcChannelServerRequest
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0028   (0x0018)  MISSED
};

/// Class /Script/ConZ.RequestMinigameToolsResponse
/// Size: 0x0010 (0x000028 - 0x000038)
class URequestMinigameToolsResponse : public UPlayerRpcChannelServerResponse
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0028   (0x0010)  MISSED
};

/// Class /Script/ConZ.ResistanceSkill
/// Size: 0x0000 (0x0000C8 - 0x0000C8)
class UResistanceSkill : public UConstitutionSkill
{ 
public:
};

/// Class /Script/ConZ.ResourceIndicatorWidget
/// Size: 0x0010 (0x000260 - 0x000270)
class UResourceIndicatorWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0260   (0x0010)  MISSED
};

/// Class /Script/ConZ.BaseResourceLightAnimator
/// Size: 0x0138 (0x000028 - 0x000160)
class UBaseResourceLightAnimator : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	float                                              _perlinNoiseTraversalSpeed;                                 // 0x0030   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _resourceRatioToBaseLightModifierCurve;                     // 0x0038   (0x0088)  
	FRuntimeFloatCurve                                 _resourceRatioToRandomLightModifierBumpCurve;               // 0x00C0   (0x0088)  
	unsigned char                                      UnknownData02_6[0x18];                                      // 0x0148   (0x0018)  MISSED
};

/// Class /Script/ConZ.ResourceSpotLightAnimator
/// Size: 0x0018 (0x000160 - 0x000178)
class UResourceSpotLightAnimator : public UBaseResourceLightAnimator
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0160   (0x0018)  MISSED
};

/// Class /Script/ConZ.ResourcePointLightAnimator
/// Size: 0x0010 (0x000160 - 0x000170)
class UResourcePointLightAnimator : public UBaseResourceLightAnimator
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0160   (0x0010)  MISSED
};

/// Class /Script/ConZ.ResourceLockingManager
/// Size: 0x00F0 (0x0000B0 - 0x0001A0)
class UResourceLockingManager : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0xF0];                                      // 0x00B0   (0x00F0)  MISSED
};

/// Class /Script/ConZ.RespawnSettings
/// Size: 0x0088 (0x000030 - 0x0000B8)
class URespawnSettings : public UDataAsset
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0030   (0x0018)  MISSED
	FRespawnParameters                                 parameters;                                                 // 0x0048   (0x006C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x00B4   (0x0004)  MISSED
};

/// Class /Script/ConZ.RestAssetData
/// Size: 0x0020 (0x000030 - 0x000050)
class URestAssetData : public UInteractionAssetData
{ 
public:
	EPrisonerRestingMode                               RestingMode;                                                // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	UAnimSequenceBase*                                 RestingAnimation;                                           // 0x0038   (0x0008)  
	TArray<FVector>                                    AdditionalEndRestLocations;                                 // 0x0040   (0x0010)  
};

/// Class /Script/ConZ.RestorableMeshInstancesManager
/// Size: 0x02A0 (0x0000B0 - 0x000350)
class URestorableMeshInstancesManager : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x110];                                     // 0x00B0   (0x0110)  MISSED
	float                                              _actorsProcessingDelayOnStreamingLevelLoad;                 // 0x01C0   (0x0004)  
	float                                              _processingBudgetPerTick;                                   // 0x01C4   (0x0004)  
	unsigned char                                      UnknownData01_5[0x168];                                     // 0x01C8   (0x0168)  MISSED
	float                                              _generateMeshInstancesToRestoreUpdateInterval;              // 0x0330   (0x0004)  
	unsigned char                                      UnknownData02_5[0x14];                                      // 0x0334   (0x0014)  MISSED
	float                                              _minDistanceToPlayerPawnToRestoreMeshInstance;              // 0x0348   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x034C   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.RestorableMeshInstancesManager.NetMulticast_RestoreRemovedMeshInstance
	void NetMulticast_RestoreRemovedMeshInstance(int32_t dataVersion, FRestorableMeshInstanceId InstanceId);                 // [0x23c9b00] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.RestorableMeshInstancesManager.NetMulticast_RemoveMeshInstance
	void NetMulticast_RemoveMeshInstance(int32_t dataVersion, UInstancedStaticMeshComponent* Component, FRestorableMeshInstanceId InstanceId, FTransform InstanceTransform); // [0x23c9930] Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults 
};

/// Class /Script/ConZ.RewardItemWidget
/// Size: 0x0010 (0x000260 - 0x000270)
class URewardItemWidget : public UUserWidget
{ 
public:
	UImage*                                            _bulletImage;                                               // 0x0260   (0x0008)  
	UTextBlock*                                        _rewardItemText;                                            // 0x0268   (0x0008)  
};

/// Class /Script/ConZ.RichTextInlineTextDecorator
/// Size: 0x0000 (0x000028 - 0x000028)
class URichTextInlineTextDecorator : public URichTextBlockDecorator
{ 
public:
};

/// Class /Script/ConZ.RiflesSkill
/// Size: 0x0000 (0x000218 - 0x000218)
class URiflesSkill : public URangedWeaponsSkill
{ 
public:
};

/// Class /Script/ConZ.RunningSkill
/// Size: 0x0070 (0x0000C8 - 0x000138)
class URunningSkill : public UConstitutionSkill
{ 
public:
	FRunningSkillExperienceAwards                      NoSkillExperienceAwards;                                    // 0x00C8   (0x0008)  
	FRunningSkillExperienceAwards                      BasicSkillExperienceAwards;                                 // 0x00D0   (0x0008)  
	FRunningSkillExperienceAwards                      MediumSkillExperienceAwards;                                // 0x00D8   (0x0008)  
	FRunningSkillExperienceAwards                      AdvancedSkillExperienceAwards;                              // 0x00E0   (0x0008)  
	FRunningSkillExperienceAwards                      AboveAdvancedSkillExperienceAwards;                         // 0x00E8   (0x0008)  
	FRunningSkillParametersPerSkillLevel               NoSkillParameters;                                          // 0x00F0   (0x0010)  
	FRunningSkillParametersPerSkillLevel               BasicSkillParameters;                                       // 0x0100   (0x0010)  
	FRunningSkillParametersPerSkillLevel               MediumSkillParameters;                                      // 0x0110   (0x0010)  
	FRunningSkillParametersPerSkillLevel               AdvancedSkillParameters;                                    // 0x0120   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0130   (0x0008)  MISSED
};

/// Class /Script/ConZ.PrisonerSkillUIData_Running
/// Size: 0x0008 (0x000050 - 0x000058)
class UPrisonerSkillUIData_Running : public UPrisonerSkillUIData
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0050   (0x0008)  MISSED
};

/// Class /Script/ConZ.ScopeableItemComponentState
/// Size: 0x0008 (0x000040 - 0x000048)
class UScopeableItemComponentState : public UItemComponentStateBase
{ 
public:
	int32_t                                            CurrentZoomLevel;                                           // 0x0040   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Class /Script/ConZ.ScopeableItemComponent
/// Size: 0x0058 (0x0000C8 - 0x000120)
class UScopeableItemComponent : public UItemComponent
{ 
public:
	TArray<FScopeZoomLevelSettings>                    _zoomLevelSettings;                                         // 0x00C8   (0x0010)  
	UTexture2D*                                        _scopingOverlayTexture;                                     // 0x00D8   (0x0008)  
	float                                              _scopingStartDelay;                                         // 0x00E0   (0x0004)  
	float                                              _scopingStopDelay;                                          // 0x00E4   (0x0004)  
	UAnimMontage*                                      _montageStandingFP;                                         // 0x00E8   (0x0008)  
	UAnimMontage*                                      _montageCrouchingFP;                                        // 0x00F0   (0x0008)  
	UAnimMontage*                                      _montageProneFP;                                            // 0x00F8   (0x0008)  
	UAnimMontage*                                      _montageStandingTP;                                         // 0x0100   (0x0008)  
	UAnimMontage*                                      _montageCrouchingTP;                                        // 0x0108   (0x0008)  
	UAnimMontage*                                      _montageProneTP;                                            // 0x0110   (0x0008)  
	int32_t                                            _currentZoomLevel;                                          // 0x0118   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x011C   (0x0004)  MISSED
};

/// Class /Script/ConZ.ScreenSpaceHealthWidget
/// Size: 0x0000 (0x000260 - 0x000260)
class UScreenSpaceHealthWidget : public UUserWidget
{ 
public:
};

/// Class /Script/ConZ.ScrollingSizeBox
/// Size: 0x0060 (0x000260 - 0x0002C0)
class UScrollingSizeBox : public UUserWidget
{ 
public:
	USizeBox*                                          _mainSizeBox;                                               // 0x0260   (0x0008)  
	UNamedSlot*                                        _customContentSlot;                                         // 0x0268   (0x0008)  
	bool                                               _overrideWidth;                                             // 0x0270   (0x0001)  
	bool                                               _overrideHeight;                                            // 0x0271   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0272   (0x0002)  MISSED
	float                                              _width;                                                     // 0x0274   (0x0004)  
	float                                              _height;                                                    // 0x0278   (0x0004)  
	float                                              _speed;                                                     // 0x027C   (0x0004)  
	float                                              _startHaltDuration;                                         // 0x0280   (0x0004)  
	float                                              _startAccelerationDuration;                                 // 0x0284   (0x0004)  
	float                                              _endHaltDuration;                                           // 0x0288   (0x0004)  
	float                                              _endRetardationDuration;                                    // 0x028C   (0x0004)  
	bool                                               _isCultureDependantScrolling;                               // 0x0290   (0x0001)  
	EScrollingSizeBoxDirection                         _direction;                                                 // 0x0291   (0x0001)  
	EScrollingSizeBoxLoopingType                       _loopingType;                                               // 0x0292   (0x0001)  
	EScrollingSizeBoxDynamic                           _dynamic;                                                   // 0x0293   (0x0001)  
	EScrollingSizeBoxScrollDemand                      _scrollDemand;                                              // 0x0294   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2B];                                      // 0x0295   (0x002B)  MISSED
};

/// Class /Script/ConZ.SearchBox
/// Size: 0x0080 (0x000260 - 0x0002E0)
class USearchBox : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x40];                                      // 0x0260   (0x0040)  MISSED
	bool                                               PreviewSelectedState;                                       // 0x02A0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x02A1   (0x0007)  MISSED
	UEditableText*                                     _editBox;                                                   // 0x02A8   (0x0008)  
	UWidgetSwitcher*                                   _backgroundSwitcher;                                        // 0x02B0   (0x0008)  
	UClearSearchButton*                                _clearSearchButton;                                         // 0x02B8   (0x0008)  
	unsigned char                                      UnknownData02_6[0x20];                                      // 0x02C0   (0x0020)  MISSED


	/// Functions
	// Function /Script/ConZ.SearchBox.TextChanged
	void TextChanged(FText& Text);                                                                                           // [0x23c9be0] Final|Native|Private|HasOutParms 
};

/// Class /Script/ConZ.SearchItemDataAsset
/// Size: 0x0048 (0x000030 - 0x000078)
class USearchItemDataAsset : public UDataAsset
{ 
public:
	FText                                              Caption;                                                    // 0x0030   (0x0018)  
	float                                              Duration;                                                   // 0x0048   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x004C   (0x0004)  MISSED
	TArray<FSearchPerItemData>                         SearchData;                                                 // 0x0050   (0x0010)  
	UAkAudioEvent*                                     StartSearchAudioEvent;                                      // 0x0060   (0x0008)  
	UAkAudioEvent*                                     StopSearchAudioEvent;                                       // 0x0068   (0x0008)  
	ENoiseLevel                                        noiseLevel;                                                 // 0x0070   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0071   (0x0007)  MISSED
};

/// Class /Script/ConZ.SearchForItemsAssetData
/// Size: 0x0008 (0x000030 - 0x000038)
class USearchForItemsAssetData : public UInteractionAssetData
{ 
public:
	USearchItemDataAsset*                              SearchAsset;                                                // 0x0030   (0x0008)  
};

/// Class /Script/ConZ.SearchGroundObjective
/// Size: 0x0020 (0x000320 - 0x000340)
class ASearchGroundObjective : public AObjective
{ 
public:
	TArray<UClass*>                                    _itemToSearch;                                              // 0x0320   (0x0010)  
	int32_t                                            _itemAmount;                                                // 0x0330   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x0334   (0x000C)  MISSED
};

/// Class /Script/ConZ.SedentaryNPCAnimInstance
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class USedentaryNPCAnimInstance : public UAnimInstance
{ 
public:
	FRotator                                           _headTurningRotator;                                        // 0x02C0   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x02CC   (0x0004)  MISSED
};

/// Class /Script/ConZ.SedentaryNPCBackgroundInteraction
/// Size: 0x0078 (0x000028 - 0x0000A0)
class USedentaryNPCBackgroundInteraction : public UObject
{ 
public:
	EBackgroundInteractionType                         _backgroundInteractionType;                                 // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	int32_t                                            _priority;                                                  // 0x002C   (0x0004)  
	float                                              _cooldownTime;                                              // 0x0030   (0x0004)  
	bool                                               _canEverTick;                                               // 0x0034   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0035   (0x0003)  MISSED
	FFloatRange                                        _newBackgroundInteractionInterval;                          // 0x0038   (0x0010)  
	unsigned char                                      UnknownData02_5[0x10];                                      // 0x0048   (0x0010)  MISSED
	TArray<FSedentaryNPCHeadAnimationAndAudio>         _animationVariationsBegin;                                  // 0x0058   (0x0010)  
	TArray<FSedentaryNPCHeadAnimationAndAudio>         _animationVariationsTick;                                   // 0x0068   (0x0010)  
	TArray<FSedentaryNPCHeadAnimationAndAudio>         _animationVariationsEnd;                                    // 0x0078   (0x0010)  
	TArray<FSedentaryNPCHeadAnimationAndAudio>         _animationVariationsOneShot;                                // 0x0088   (0x0010)  
	UAkAudioEvent*                                     _stopOwningPawnAudioEvent;                                  // 0x0098   (0x0008)  


	/// Functions
	// Function /Script/ConZ.SedentaryNPCBackgroundInteraction.NetMulticast_PlayBackgroundInteraction
	void NetMulticast_PlayBackgroundInteraction(int32_t animationAudioPairIndex, EBackgroundInteractionPlayType playType);   // [0x23c9860] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/ConZ.SedentaryNPCHeadAnimInstance
/// Size: 0x0140 (0x0002C0 - 0x000400)
class USedentaryNPCHeadAnimInstance : public UAnimInstance
{ 
public:
	TArray<FName>                                      _updateableBones;                                           // 0x02C0   (0x0010)  
	TMap<FName, FTransform>                            _bonesWithUpdateableTransforms;                             // 0x02D0   (0x0050)  
	UAnimSequenceBase*                                 _faceIdleAnimation;                                         // 0x0320   (0x0008)  
	FName                                              _headBoneName;                                              // 0x0328   (0x0008)  
	FRotator                                           _headFollowingRotation;                                     // 0x0330   (0x000C)  
	unsigned char                                      UnknownData00_5[0x44];                                      // 0x033C   (0x0044)  MISSED
	FVector                                            _animationHeadScale;                                        // 0x0380   (0x000C)  
	unsigned char                                      UnknownData01_5[0x20];                                      // 0x038C   (0x0020)  MISSED
	float                                              _eyesYawCurveValue;                                         // 0x03AC   (0x0004)  
	float                                              _eyesPitchCurveValue;                                       // 0x03B0   (0x0004)  
	unsigned char                                      UnknownData02_5[0x44];                                      // 0x03B4   (0x0044)  MISSED
	float                                              _blinkCurveValue;                                           // 0x03F8   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x03FC   (0x0004)  MISSED
};

/// Class /Script/ConZ.SelectionOverlayWidget
/// Size: 0x0080 (0x000260 - 0x0002E0)
class USelectionOverlayWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x48];                                      // 0x0260   (0x0048)  MISSED
	UImage*                                            _solidShown;                                                // 0x02A8   (0x0008)  
	UImage*                                            _gradientShown;                                             // 0x02B0   (0x0008)  
	UImage*                                            _solidSelected;                                             // 0x02B8   (0x0008)  
	UImage*                                            _gradientSelected;                                          // 0x02C0   (0x0008)  
	FDataTableRowHandle                                _highlightColorRef;                                         // 0x02C8   (0x0010)  
	float                                              _solidWidth;                                                // 0x02D8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x02DC   (0x0004)  MISSED
};

/// Class /Script/ConZ.Sentry2
/// Size: 0x0580 (0x0007B0 - 0x000D30)
class ASentry2 : public AConZCharacter
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x07B0   (0x0050)  MISSED
	FName                                              _pelvisBoneName;                                            // 0x0800   (0x0008)  
	FName                                              _eyesViewPointSocketName;                                   // 0x0808   (0x0008)  
	FName                                              _longRangeWeaponSocketName;                                 // 0x0810   (0x0008)  
	TArray<FName>                                      _longRangeWeaponMuzzleFlashBoneNames;                       // 0x0818   (0x0010)  
	FName                                              _longRangeWeaponBoneName;                                   // 0x0828   (0x0008)  
	FName                                              _mediumRangeWeaponSocketName;                               // 0x0830   (0x0008)  
	TArray<FName>                                      _mediumRangeWeaponMuzzleFlashBoneNames;                     // 0x0838   (0x0010)  
	FName                                              _mediumRangeWeaponBoneName;                                 // 0x0848   (0x0008)  
	FName                                              _highPrecisionWeaponSocketName;                             // 0x0850   (0x0008)  
	FName                                              _highPrecisionWeaponBoneName;                               // 0x0858   (0x0008)  
	TArray<FName>                                      _grenadeLauncherSocketNames;                                // 0x0860   (0x0010)  
	FName                                              _highPrecisionWeaponChargingSocket;                         // 0x0870   (0x0008)  
	FName                                              _meleeAttackFailureGrenadeDropSocket;                       // 0x0878   (0x0008)  
	float                                              _sensorHeightOffset;                                        // 0x0880   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0884   (0x0004)  MISSED
	TArray<FName>                                      _damageParticlesSockets;                                    // 0x0888   (0x0010)  
	UAkAudioEvent*                                     _fireBulletAudioEvent;                                      // 0x0898   (0x0008)  
	UAkAudioEvent*                                     _startHighFireRateAttack;                                   // 0x08A0   (0x0008)  
	UAkAudioEvent*                                     _endHighFireRateAttack;                                     // 0x08A8   (0x0008)  
	UAkAudioEvent*                                     _reloadAudioEvent;                                          // 0x08B0   (0x0008)  
	UAkAudioEvent*                                     _highPrecisionWeaponFireShotAudioEvent;                     // 0x08B8   (0x0008)  
	UAkAudioEvent*                                     _grenadeLaunchAudioEffect;                                  // 0x08C0   (0x0008)  
	UAkAudioEvent*                                     _tearGasGrenadeLaunchAudioEffect;                           // 0x08C8   (0x0008)  
	UAkAudioEvent*                                     _stunGrenadeLaunchAudioEffect;                              // 0x08D0   (0x0008)  
	UAkAudioEvent*                                     _deathAudioEvent;                                           // 0x08D8   (0x0008)  
	UAkAudioEvent*                                     _freezeWarningAudioEvent;                                   // 0x08E0   (0x0008)  
	UAkAudioEvent*                                     _dropWeaponsRaiseHandsAudioEvent;                           // 0x08E8   (0x0008)  
	UAkAudioEvent*                                     _walkAwayAudioEvent;                                        // 0x08F0   (0x0008)  
	UAkAudioEvent*                                     _beginCombatAudioEvent;                                     // 0x08F8   (0x0008)  
	UAkAudioEvent*                                     _startSearchCorpseAudioEvent;                               // 0x0900   (0x0008)  
	UAkAudioEvent*                                     _stopSearchCorpseAudioEvent;                                // 0x0908   (0x0008)  
	UAkAudioEvent*                                     _upperBodyRotationAudioEvent;                               // 0x0910   (0x0008)  
	UAnimMontage*                                      _normalAttackMontage;                                       // 0x0918   (0x0008)  
	UAnimMontage*                                      _mediumRangeAttackMontage;                                  // 0x0920   (0x0008)  
	UAnimMontage*                                      _reloadMontageLongRangeWeapon;                              // 0x0928   (0x0008)  
	UAnimMontage*                                      _reloadMontageMediumRangeWeapon;                            // 0x0930   (0x0008)  
	UAnimMontage*                                      _deathMontage;                                              // 0x0938   (0x0008)  
	TArray<FSentryMeleeAttackDescription>              _meleeMontageDescriptions;                                  // 0x0940   (0x0010)  
	UAnimMontage*                                      _highprecisionAttackMontage;                                // 0x0950   (0x0008)  
	UAnimMontage*                                      _enemySpottedMontage;                                       // 0x0958   (0x0008)  
	bool                                               _hasUpperBodyRotation;                                      // 0x0960   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0961   (0x0003)  MISSED
	float                                              _upperBodyRotationMaxYawDegrees;                            // 0x0964   (0x0004)  
	float                                              _upperBodyRotationHighPrecisionAttackMaxYawDegrees;         // 0x0968   (0x0004)  
	float                                              _upperBodyRotationFactor;                                   // 0x096C   (0x0004)  
	float                                              _upperBodyNetSmoothUpdateRotationTime;                      // 0x0970   (0x0004)  
	float                                              _upperBodyRotationAngularVelocitySoundThreshold;            // 0x0974   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x0978   (0x0004)  MISSED
	FVector                                            _upperBodyFocusLocation;                                    // 0x097C   (0x000C)  
	unsigned char                                      UnknownData04_5[0x9];                                       // 0x0988   (0x0009)  MISSED
	bool                                               _hasHighFireRateAttackAnimation;                            // 0x0991   (0x0001)  
	unsigned char                                      UnknownData05_5[0x2];                                       // 0x0992   (0x0002)  MISSED
	float                                              _gunsLerpFactor;                                            // 0x0994   (0x0004)  
	UClass*                                            _projectileClass;                                           // 0x0998   (0x0008)  
	float                                              _maxLongRangeWeaponHalfAngle;                               // 0x09A0   (0x0004)  
	unsigned char                                      UnknownData06_5[0xC];                                       // 0x09A4   (0x000C)  MISSED
	float                                              _mediumGunsLerpFactor;                                      // 0x09B0   (0x0004)  
	unsigned char                                      UnknownData07_5[0x4];                                       // 0x09B4   (0x0004)  MISSED
	UClass*                                            _mediumRangeProjectileClass;                                // 0x09B8   (0x0008)  
	float                                              _maxMediumRangeWeaponHalfAngle;                             // 0x09C0   (0x0004)  
	unsigned char                                      UnknownData08_5[0x14];                                      // 0x09C4   (0x0014)  MISSED
	UClass*                                            _highPrecisonWeaponProjectileClass;                         // 0x09D8   (0x0008)  
	float                                              _maxHighPrecisionWeaponHalfAngle;                           // 0x09E0   (0x0004)  
	unsigned char                                      UnknownData09_5[0xC];                                       // 0x09E4   (0x000C)  MISSED
	UClass*                                            _grenadeProjectileClass;                                    // 0x09F0   (0x0008)  
	UClass*                                            _tearGasGrenadeItemClass;                                   // 0x09F8   (0x0008)  
	UClass*                                            _stunGrenadeItemClass;                                      // 0x0A00   (0x0008)  
	UClass*                                            _meleeAttackFailureGrenadeItemClass;                        // 0x0A08   (0x0008)  
	float                                              _stunGreandeExplosionDelayAfterReachingGround;              // 0x0A10   (0x0004)  
	float                                              _itemGreandeDirectionRandomizationAngle;                    // 0x0A14   (0x0004)  
	unsigned char                                      UnknownData10_5[0x10];                                      // 0x0A18   (0x0010)  MISSED
	USentryMovementComponent*                          _sentryMovementComponent;                                   // 0x0A28   (0x0008)  
	UHitReactComponent*                                _hitReactComponent;                                         // 0x0A30   (0x0008)  
	FGameplayTag                                       _hitReactTag;                                               // 0x0A38   (0x0008)  
	bool                                               _isAlive;                                                   // 0x0A40   (0x0001)  
	unsigned char                                      UnknownData11_5[0x3];                                       // 0x0A41   (0x0003)  MISSED
	float                                              _maxHealth;                                                 // 0x0A44   (0x0004)  
	unsigned char                                      UnknownData12_5[0x8];                                       // 0x0A48   (0x0008)  MISSED
	float                                              _healthStateThresholds;                                     // 0x0A50   (0x0018)  
	float                                              _armorDamageReductionExplosion;                             // 0x0A68   (0x0004)  
	float                                              _armorDamageReductionCollision;                             // 0x0A6C   (0x0004)  
	float                                              _exlosionDamageHitReactThreshold;                           // 0x0A70   (0x0004)  
	bool                                               _isStunnedDuringHitReact;                                   // 0x0A74   (0x0001)  
	unsigned char                                      UnknownData13_5[0x3];                                       // 0x0A75   (0x0003)  MISSED
	float                                              _longRangeWeaponFireRate;                                   // 0x0A78   (0x0004)  
	float                                              _longRangeWeaponFireRateVariation;                          // 0x0A7C   (0x0004)  
	float                                              _longRangeWeaponHalfAngleDegrees;                           // 0x0A80   (0x0004)  
	int32_t                                            _maxAmmunitionLongRangeWeapon;                              // 0x0A84   (0x0004)  
	unsigned char                                      UnknownData14_5[0x4];                                       // 0x0A88   (0x0004)  MISSED
	int32_t                                            _maxAmmunitionMediumRangeWeapon;                            // 0x0A8C   (0x0004)  
	unsigned char                                      UnknownData15_5[0x4];                                       // 0x0A90   (0x0004)  MISSED
	float                                              _longRangeWeaponSpreadHalfAngle;                            // 0x0A94   (0x0004)  
	float                                              _mediumRangeWeaponFireRate;                                 // 0x0A98   (0x0004)  
	float                                              _mediumRangeWeaponHalfAngleDegrees;                         // 0x0A9C   (0x0004)  
	float                                              _meleeAttackRate;                                           // 0x0AA0   (0x0004)  
	unsigned char                                      UnknownData16_5[0x8];                                       // 0x0AA4   (0x0008)  MISSED
	FVector                                            _weaponOverrideAimLocationRep;                              // 0x0AAC   (0x000C)  
	unsigned char                                      UnknownData17_5[0x28];                                      // 0x0AB8   (0x0028)  MISSED
	TArray<FSentryPatrolPoint>                         _patrolPoints;                                              // 0x0AE0   (0x0010)  
	UParticleSystem*                                   _muzzlePS;                                                  // 0x0AF0   (0x0008)  
	TArray<UParticleSystemComponent*>                  _muzzlePSCs;                                                // 0x0AF8   (0x0010)  
	UParticleSystem*                                   _highPrecisionWeaponMuzzlePS;                               // 0x0B08   (0x0008)  
	UParticleSystemComponent*                          _highPrecisionWeaponMuzzlePSC;                              // 0x0B10   (0x0008)  
	float                                              _muzzleEffectsScaleDistanceStart;                           // 0x0B18   (0x0004)  
	float                                              _muzzleEffectsScaleDistanceRange;                           // 0x0B1C   (0x0004)  
	float                                              _muzzleEffectsScaleByDistanceFactor;                        // 0x0B20   (0x0004)  
	unsigned char                                      UnknownData18_5[0x4];                                       // 0x0B24   (0x0004)  MISSED
	UNiagaraSystem*                                    _highPrecisionWeaponChargingPS;                             // 0x0B28   (0x0008)  
	UNiagaraComponent*                                 _highPrecisionWeaponChargingPSC;                            // 0x0B30   (0x0008)  
	UNiagaraSystem*                                    _mediumRangeWeaponPS;                                       // 0x0B38   (0x0008)  
	UNiagaraComponent*                                 _mediumRangeWeaponPSC;                                      // 0x0B40   (0x0008)  
	unsigned char                                      UnknownData19_5[0x38];                                      // 0x0B48   (0x0038)  MISSED
	FName                                              _lightMaterialSlotName;                                     // 0x0B80   (0x0008)  
	TArray<FName>                                      _additionalLightsMaterialSlotNames;                         // 0x0B88   (0x0010)  
	FColor                                             _normalLightColor;                                          // 0x0B98   (0x0004)  
	FColor                                             _alertedLightColor;                                         // 0x0B9C   (0x0004)  
	FColor                                             _combatLightColor;                                          // 0x0BA0   (0x0004)  
	unsigned char                                      UnknownData20_5[0x4];                                       // 0x0BA4   (0x0004)  MISSED
	FName                                              _emissionColorParameterName;                                // 0x0BA8   (0x0008)  
	float                                              _spottingPercentage;                                        // 0x0BB0   (0x0004)  
	FInt32Range                                        _damageEffectsNumPerHealthStateData;                        // 0x0BB4   (0x0060)  
	unsigned char                                      UnknownData21_5[0x4];                                       // 0x0C14   (0x0004)  MISSED
	TArray<FSentryDamageEffectData>                    _damageParticleEffectsPSData;                               // 0x0C18   (0x0010)  
	unsigned char                                      UnknownData22_5[0x50];                                      // 0x0C28   (0x0050)  MISSED
	float                                              _damageParticleIntensityPerHealthState;                     // 0x0C78   (0x0018)  
	float                                              _stompShakeEffectRadius;                                    // 0x0C90   (0x0004)  
	float                                              _stompShakeMaxEffectRadius;                                 // 0x0C94   (0x0004)  
	float                                              _stompShakeEffectFalloffExponent;                           // 0x0C98   (0x0004)  
	unsigned char                                      UnknownData23_5[0x4];                                       // 0x0C9C   (0x0004)  MISSED
	UClass*                                            _stompCameraShake;                                          // 0x0CA0   (0x0008)  
	UStaticMeshComponent*                              _laserMeshComponent;                                        // 0x0CA8   (0x0008)  
	bool                                               _canEverDrawLaser;                                          // 0x0CB0   (0x0001)  
	unsigned char                                      UnknownData24_5[0x3];                                       // 0x0CB1   (0x0003)  MISSED
	float                                              _walkSpeedMultiplier;                                       // 0x0CB4   (0x0004)  
	float                                              _walkSpeedMultiplierMin;                                    // 0x0CB8   (0x0004)  
	float                                              _walkSpeedMultiplierMax;                                    // 0x0CBC   (0x0004)  
	unsigned char                                      UnknownData25_5[0x4];                                       // 0x0CC0   (0x0004)  MISSED
	float                                              _corpseSearchDuration;                                      // 0x0CC4   (0x0004)  
	unsigned char                                      UnknownData26_5[0x1];                                       // 0x0CC8   (0x0001)  MISSED
	char                                               _packedGeneralData;                                         // 0x0CC9   (0x0001)  
	uint16_t                                           _packedCombatData;                                          // 0x0CCA   (0x0002)  
	unsigned char                                      UnknownData27_5[0xC];                                       // 0x0CCC   (0x000C)  MISSED
	float                                              _autoSaveInterval;                                          // 0x0CD8   (0x0004)  
	unsigned char                                      UnknownData28_5[0x4];                                       // 0x0CDC   (0x0004)  MISSED
	bool                                               _shouldSaveAndLoadSentry;                                   // 0x0CE0   (0x0001)  
	unsigned char                                      UnknownData29_5[0x1F];                                      // 0x0CE1   (0x001F)  MISSED
	TWeakObjectPtr<APawn*>                             _foe;                                                       // 0x0D00   (0x0008)  
	unsigned char                                      UnknownData30_6[0x28];                                      // 0x0D08   (0x0028)  MISSED


	/// Functions
	// Function /Script/ConZ.Sentry2.OnRep_SpottingPercentage
	void OnRep_SpottingPercentage();                                                                                         // [0x23cbb90] Final|Native|Private 
	// Function /Script/ConZ.Sentry2.OnRep_PackedGeneralData
	void OnRep_PackedGeneralData();                                                                                          // [0x23cbb70] Final|Native|Private 
	// Function /Script/ConZ.Sentry2.OnRep_PackedCombatData
	void OnRep_PackedCombatData();                                                                                           // [0x23cbb50] Final|Native|Private 
	// Function /Script/ConZ.Sentry2.NetMulticast_StopShotEffectsLongRangeWeapon
	void NetMulticast_StopShotEffectsLongRangeWeapon();                                                                      // [0x224f460] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Sentry2.NetMulticast_StartHighSpreadAttackEffects
	void NetMulticast_StartHighSpreadAttackEffects();                                                                        // [0x23cbb30] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Sentry2.NetMulticast_ReloadMediumRangeWeapon
	void NetMulticast_ReloadMediumRangeWeapon();                                                                             // [0x23cbb10] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.Sentry2.NetMulticast_ReloadLongRangeWeapon
	void NetMulticast_ReloadLongRangeWeapon();                                                                               // [0x23cbaf0] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.Sentry2.NetMulticast_PlayWalkAwaySound
	void NetMulticast_PlayWalkAwaySound();                                                                                   // [0x23cbad0] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.Sentry2.NetMulticast_PlayTearGasGrenadeLaunchEffects
	void NetMulticast_PlayTearGasGrenadeLaunchEffects();                                                                     // [0x2288700] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.Sentry2.NetMulticast_PlayStunGrenadeLaunchEffects
	void NetMulticast_PlayStunGrenadeLaunchEffects();                                                                        // [0x2264d70] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.Sentry2.NetMulticast_PlayMeleeAttackMontage
	void NetMulticast_PlayMeleeAttackMontage(int32_t kickIndex);                                                             // [0x23cba40] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Sentry2.NetMulticast_PlayHighPrecisionAttackMontage
	void NetMulticast_PlayHighPrecisionAttackMontage();                                                                      // [0x2365450] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Sentry2.NetMulticast_PlayGrenadeLaunchEffects
	void NetMulticast_PlayGrenadeLaunchEffects();                                                                            // [0x235eb50] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.Sentry2.NetMulticast_PlayFreezeWarningSound
	void NetMulticast_PlayFreezeWarningSound();                                                                              // [0x23cba20] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.Sentry2.NetMulticast_PlayEnemySpottedMontage
	void NetMulticast_PlayEnemySpottedMontage();                                                                             // [0x224ee90] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.Sentry2.NetMulticast_PlayDropWeaponsRaiseHandsSound
	void NetMulticast_PlayDropWeaponsRaiseHandsSound();                                                                      // [0x2353010] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.Sentry2.NetMulticast_PlayBeginCombatSound
	void NetMulticast_PlayBeginCombatSound();                                                                                // [0x23cba00] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.Sentry2.NetMulticast_OnSentryDeath
	void NetMulticast_OnSentryDeath();                                                                                       // [0x23658b0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Sentry2.NetMulticast_HandleHit
	void NetMulticast_HandleHit(EHitDirectionType hitDirectionType);                                                         // [0x224ef80] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.Sentry2.NetMulticast_FireShotEffectsMediumRangeWeapon
	void NetMulticast_FireShotEffectsMediumRangeWeapon();                                                                    // [0x23cb9e0] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.Sentry2.NetMulticast_FireShotEffectsLongRangeWeapon
	void NetMulticast_FireShotEffectsLongRangeWeapon();                                                                      // [0x2363660] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.Sentry2.NetMulticast_FireShotEffectsHighSpread
	void NetMulticast_FireShotEffectsHighSpread();                                                                           // [0x235f010] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.Sentry2.NetMulticast_EndHighSpreadAttackEffects
	void NetMulticast_EndHighSpreadAttackEffects();                                                                          // [0x235e7f0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.Sentry2.GetFlamethrowerComponent
	UFlamethrowerComponent* GetFlamethrowerComponent();                                                                      // [0x23cb8d0] Final|Native|Private|Const 
};

/// Class /Script/ConZ.SentryAIController2
/// Size: 0x0430 (0x000328 - 0x000758)
class ASentryAIController2 : public AAIController
{ 
public:
	unsigned char                                      UnknownData00_2[0xA8];                                      // 0x0328   (0x00A8)  MISSED
	bool                                               _canHear;                                                   // 0x03D0   (0x0001)  
	bool                                               _canSee;                                                    // 0x03D1   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x03D2   (0x0006)  MISSED
	UAISenseConfig_Sight*                              _currentSightSenseConfig;                                   // 0x03D8   (0x0008)  
	UAISenseConfig_Hearing*                            _currentHearingSenseConfig;                                 // 0x03E0   (0x0008)  
	UAISenseConfig_Sight*                              _sightSenseConfigPatrolling;                                // 0x03E8   (0x0008)  
	UAISenseConfig_Sight*                              _sightSenseConfigAlerted;                                   // 0x03F0   (0x0008)  
	UAISenseConfig_Sight*                              _sightSenseConfigCombat;                                    // 0x03F8   (0x0008)  
	UAISenseConfig_Hearing*                            _hearingSenseConfigPatrolling;                              // 0x0400   (0x0008)  
	UAISenseConfig_Hearing*                            _hearingSenseConfigAlerted;                                 // 0x0408   (0x0008)  
	UAISenseConfig_Hearing*                            _hearingSenseConfigCombat;                                  // 0x0410   (0x0008)  
	float                                              _spottingTimeDecayMultiplier;                               // 0x0418   (0x0004)  
	float                                              _forgetKnownEnemyTime;                                      // 0x041C   (0x0004)  
	int32_t                                            _noiseStimuliBeforeInstantlyLocatingCharacter;              // 0x0420   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0424   (0x0004)  MISSED
	TArray<FName>                                      _specialNoiseTags;                                          // 0x0428   (0x0010)  
	float                                              _timeUntilNoiseStimuliCounterReset;                         // 0x0438   (0x0004)  
	unsigned char                                      UnknownData03_5[0xC];                                       // 0x043C   (0x000C)  MISSED
	float                                              _threatLevelAccumulationMultiplier;                         // 0x0448   (0x0004)  
	float                                              _onHearNoiseThreatLevelIncrease;                            // 0x044C   (0x0004)  
	float                                              _onDamageTakeThreatLevelIncrease;                           // 0x0450   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x0454   (0x0004)  MISSED
	float                                              _switchTargetCharacterTime;                                 // 0x0458   (0x0004)  
	FDetectionDelayTimerData                           _detectionDelayTimerData;                                   // 0x045C   (0x0010)  
	float                                              _distanceWhenConsideredCharacterEnteredHotZone;             // 0x046C   (0x0004)  
	float                                              _maxDistanceWhenTemporaryPointIsConsideredTooClose;         // 0x0470   (0x0004)  
	int32_t                                            _temporaryPatrolPointVisitsUntilDeleted;                    // 0x0474   (0x0004)  
	unsigned char                                      UnknownData05_5[0x4];                                       // 0x0478   (0x0004)  MISSED
	float                                              _checkSurroundingsTime;                                     // 0x047C   (0x0004)  
	unsigned char                                      UnknownData06_5[0x4];                                       // 0x0480   (0x0004)  MISSED
	bool                                               _shouldRotateDuringCheck;                                   // 0x0484   (0x0001)  
	unsigned char                                      UnknownData07_5[0x3];                                       // 0x0485   (0x0003)  MISSED
	float                                              _checkSurroundingsAngle;                                    // 0x0488   (0x0004)  
	unsigned char                                      UnknownData08_5[0xC];                                       // 0x048C   (0x000C)  MISSED
	float                                              _investigatingLocationOverallTime;                          // 0x0498   (0x0004)  
	unsigned char                                      UnknownData09_5[0x4];                                       // 0x049C   (0x0004)  MISSED
	float                                              _investigatingLocationTime;                                 // 0x04A0   (0x0004)  
	unsigned char                                      UnknownData10_5[0x4];                                       // 0x04A4   (0x0004)  MISSED
	float                                              _investigatingBuildingTime;                                 // 0x04A8   (0x0004)  
	unsigned char                                      UnknownData11_5[0x24];                                      // 0x04AC   (0x0024)  MISSED
	float                                              _guardLocationTime;                                         // 0x04D0   (0x0004)  
	unsigned char                                      UnknownData12_5[0x4];                                       // 0x04D4   (0x0004)  MISSED
	float                                              _guardLocationSwitchFocusTime;                              // 0x04D8   (0x0004)  
	unsigned char                                      UnknownData13_5[0x24];                                      // 0x04DC   (0x0024)  MISSED
	float                                              _enemySpottedWarningTime;                                   // 0x0500   (0x0004)  
	unsigned char                                      UnknownData14_5[0x4];                                       // 0x0504   (0x0004)  MISSED
	float                                              _maxTolerance;                                              // 0x0508   (0x0004)  
	unsigned char                                      UnknownData15_5[0x4];                                       // 0x050C   (0x0004)  MISSED
	float                                              _enemySpottedOutOfSightTimeLimit;                           // 0x0510   (0x0004)  
	unsigned char                                      UnknownData16_5[0x8];                                       // 0x0514   (0x0008)  MISSED
	float                                              _distanceWhenConsideredCharacterLeavingHotZone;             // 0x051C   (0x0004)  
	float                                              _freezeCheckTime;                                           // 0x0520   (0x0004)  
	float                                              _freezeCheckToleranceDrainMultiplier;                       // 0x0524   (0x0004)  
	int32_t                                            _numberOfWarningShots;                                      // 0x0528   (0x0004)  
	unsigned char                                      UnknownData17_5[0x4];                                       // 0x052C   (0x0004)  MISSED
	float                                              _raiseHandsCheckTime;                                       // 0x0530   (0x0004)  
	float                                              _raiseHandsCheckToleranceDrainMultiplier;                   // 0x0534   (0x0004)  
	float                                              _walkAwayCheckToleranceDrainMultiplier;                     // 0x0538   (0x0004)  
	float                                              _movingToHotZoneToleranceDrainMultiplier;                   // 0x053C   (0x0004)  
	float                                              _minMovingToHotZoneRange;                                   // 0x0540   (0x0004)  
	float                                              _otherToleranceDrainMultiplier;                             // 0x0544   (0x0004)  
	float                                              _minimumAlertedTime;                                        // 0x0548   (0x0004)  
	unsigned char                                      UnknownData18_5[0x4];                                       // 0x054C   (0x0004)  MISSED
	float                                              _observeEnemyMovementTime;                                  // 0x0550   (0x0004)  
	unsigned char                                      UnknownData19_5[0x4];                                       // 0x0554   (0x0004)  MISSED
	float                                              _observeEnemyMovementThreatLevelIncreasePerStateEntry;      // 0x0558   (0x0004)  
	float                                              _observeEnemyMovementOpenFireThreshold;                     // 0x055C   (0x0004)  
	unsigned char                                      UnknownData20_5[0xC];                                       // 0x0560   (0x000C)  MISSED
	float                                              _beginShootingTime;                                         // 0x056C   (0x0004)  
	unsigned char                                      UnknownData21_5[0x8];                                       // 0x0570   (0x0008)  MISSED
	TArray<FSentryCombatBehaviorMode>                  _sentryCombatBehaviorModes;                                 // 0x0578   (0x0010)  
	unsigned char                                      UnknownData22_5[0x4];                                       // 0x0588   (0x0004)  MISSED
	float                                              _combatBehaviorModeIncreaseTime;                            // 0x058C   (0x0004)  
	unsigned char                                      UnknownData23_5[0x4];                                       // 0x0590   (0x0004)  MISSED
	float                                              _combatBehaviorModeTimeIncreasePerDamageTaken;              // 0x0594   (0x0004)  
	float                                              _combatBehaviorModeDecreaseTime;                            // 0x0598   (0x0004)  
	unsigned char                                      UnknownData24_5[0x4];                                       // 0x059C   (0x0004)  MISSED
	float                                              _combatSwitchVariationTimeMin;                              // 0x05A0   (0x0004)  
	float                                              _combatSwitchVariationTimeMax;                              // 0x05A4   (0x0004)  
	unsigned char                                      UnknownData25_5[0x8];                                       // 0x05A8   (0x0008)  MISSED
	float                                              _combatModeOnEnterCombatSwitchVariationTimeElapsedTimePercentage; // 0x05B0   (0x0004)  
	float                                              _maxFireRateTime;                                           // 0x05B4   (0x0004)  
	unsigned char                                      UnknownData26_5[0x4];                                       // 0x05B8   (0x0004)  MISSED
	float                                              _fireRateAccumulationSpeed;                                 // 0x05BC   (0x0004)  
	float                                              _startingHighFireRate;                                      // 0x05C0   (0x0004)  
	float                                              _highFireRateSpreadMultiplier;                              // 0x05C4   (0x0004)  
	float                                              _highFireRateInitialAttackDelay;                            // 0x05C8   (0x0004)  
	unsigned char                                      UnknownData27_5[0x4];                                       // 0x05CC   (0x0004)  MISSED
	float                                              _highPrecisionShotAimTime;                                  // 0x05D0   (0x0004)  
	float                                              _highPrecisionShotCooldownTime;                             // 0x05D4   (0x0004)  
	float                                              _grenadeLaunchMinDistance;                                  // 0x05D8   (0x0004)  
	float                                              _grenadeLaunchPredictionVariationMin;                       // 0x05DC   (0x0004)  
	float                                              _grenadeLaunchPredictionVariationMax;                       // 0x05E0   (0x0004)  
	float                                              _grenadeLaunchAimTime;                                      // 0x05E4   (0x0004)  
	int32_t                                            _grenadeLaunchAmountMax;                                    // 0x05E8   (0x0004)  
	unsigned char                                      UnknownData28_5[0x4];                                       // 0x05EC   (0x0004)  MISSED
	float                                              _grenadeLaunchPauseBetweenShotsTime;                        // 0x05F0   (0x0004)  
	unsigned char                                      UnknownData29_5[0x4];                                       // 0x05F4   (0x0004)  MISSED
	float                                              _grenadeLaunchCooldownTime;                                 // 0x05F8   (0x0004)  
	unsigned char                                      UnknownData30_5[0x4];                                       // 0x05FC   (0x0004)  MISSED
	FFloatRange                                        _attackModeExitRanges;                                      // 0x0600   (0x0030)  
	float                                              _attackModeEntryRanges;                                     // 0x0630   (0x000C)  
	float                                              _combatMoveCloserDistance;                                  // 0x063C   (0x0004)  
	float                                              _combatDistance;                                            // 0x0640   (0x0004)  
	unsigned char                                      UnknownData31_5[0x10];                                      // 0x0644   (0x0010)  MISSED
	int32_t                                            _consecutiveMeleeAttacksNeededToDropGrenade;                // 0x0654   (0x0004)  
	unsigned char                                      UnknownData32_5[0x4];                                       // 0x0658   (0x0004)  MISSED
	float                                              _combatNoSightTime;                                         // 0x065C   (0x0004)  
	float                                              _searchForEnemyAfterLostStimulusTime;                       // 0x0660   (0x0004)  
	float                                              _combatLostSightInvestigateLocationTime;                    // 0x0664   (0x0004)  
	unsigned char                                      UnknownData33_5[0x4];                                       // 0x0668   (0x0004)  MISSED
	float                                              _distanceFromActorWhenInvestigationLocationIsChanged;       // 0x066C   (0x0004)  
	float                                              _relocatingAngle;                                           // 0x0670   (0x0004)  
	float                                              _relocatingRadius;                                          // 0x0674   (0x0004)  
	float                                              _destroyingVehicleGiveUpTime;                               // 0x0678   (0x0004)  
	unsigned char                                      UnknownData34_5[0x20];                                      // 0x067C   (0x0020)  MISSED
	float                                              _maximumOperatingRadius;                                    // 0x069C   (0x0004)  
	unsigned char                                      UnknownData35_5[0xC];                                       // 0x06A0   (0x000C)  MISSED
	float                                              _movingAwayHalfAngleDegrees;                                // 0x06AC   (0x0004)  
	float                                              _movingTowardsHalfAngleDegrees;                             // 0x06B0   (0x0004)  
	float                                              _acceptanceRadius;                                          // 0x06B4   (0x0004)  
	unsigned char                                      UnknownData36_5[0x10];                                      // 0x06B8   (0x0010)  MISSED
	float                                              _timeToBeConsideredStuck;                                   // 0x06C8   (0x0004)  
	unsigned char                                      UnknownData37_5[0x8];                                       // 0x06CC   (0x0008)  MISSED
	float                                              _rotationAngleCosToStartWalking;                            // 0x06D4   (0x0004)  
	unsigned char                                      UnknownData38_6[0x80];                                      // 0x06D8   (0x0080)  MISSED


	/// Functions
	// Function /Script/ConZ.SentryAIController2.SensingComponent_OnSensePawn
	void SensingComponent_OnSensePawn(TArray<AActor*>& actorsPercepted);                                                     // [0x23cbbb0] Final|Native|Private|HasOutParms 
};

/// Class /Script/ConZ.SentryAnimInstance2
/// Size: 0x0140 (0x0002C0 - 0x000400)
class USentryAnimInstance2 : public UAnimInstance
{ 
public:
	bool                                               ShouldUseLUWalkStopAnimation;                               // 0x02B8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x02B9   (0x0003)  MISSED
	float                                              stoppingDistance;                                           // 0x02BC   (0x0004)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x02C0   (0x0010)  MISSED
	FInPlaceTurningData                                _turnInPlaceData;                                           // 0x02D0   (0x002C)  
	unsigned char                                      UnknownData02_5[0x10];                                      // 0x02FC   (0x0010)  MISSED
	float                                              _stoppingDistance;                                          // 0x030C   (0x0004)  
	float                                              _upperBodyRotationLerpFactor;                               // 0x0310   (0x0004)  
	float                                              _grenadeLauncherUpperFlapMaxPitch;                          // 0x0314   (0x0004)  
	float                                              _grenadeLauncherLowerFlapMaxPitch;                          // 0x0318   (0x0004)  
	float                                              _grenadeLauncherFlapsTimeToOpenFlaps;                       // 0x031C   (0x0004)  
	int32_t                                            _glitchingVaritionsNum;                                     // 0x0320   (0x0004)  
	float                                              _glitchingUpdateTimeMin;                                    // 0x0324   (0x0004)  
	float                                              _glitchingUpdateTimeMax;                                    // 0x0328   (0x0004)  
	float                                              _chanceToGlitchPerHealthState;                              // 0x032C   (0x0018)  
	int32_t                                            _miningunBonesNum;                                          // 0x0344   (0x0004)  
	float                                              _minigunRotationSpeed;                                      // 0x0348   (0x0004)  
	float                                              _minigunRotationAcceleration;                               // 0x034C   (0x0004)  
	float                                              _minigunRotationDeceleration;                               // 0x0350   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x0354   (0x0004)  MISSED
	bool                                               _isSentryCompletelyInitialized;                             // 0x0358   (0x0001)  
	bool                                               _wantsToMove;                                               // 0x0359   (0x0001)  
	bool                                               _previousWantsToMove;                                       // 0x035A   (0x0001)  
	ESentryMovementPace2                               _movementPace;                                              // 0x035B   (0x0001)  
	float                                              _actualCourseAngle;                                         // 0x035C   (0x0004)  
	float                                              _desiredCourseAngle;                                        // 0x0360   (0x0004)  
	float                                              _desiredCoursePitchAngle;                                   // 0x0364   (0x0004)  
	float                                              _angularVelocity;                                           // 0x0368   (0x0004)  
	FVector                                            _velocity;                                                  // 0x036C   (0x000C)  
	float                                              _speed;                                                     // 0x0378   (0x0004)  
	float                                              _walkSpeedMultiplier;                                       // 0x037C   (0x0004)  
	FVector                                            _forwardVector;                                             // 0x0380   (0x000C)  
	bool                                               _isFalling;                                                 // 0x038C   (0x0001)  
	bool                                               _isDead;                                                    // 0x038D   (0x0001)  
	ESentryStance                                      _sentryStance;                                              // 0x038E   (0x0001)  
	ESentryHealthState                                 _sentryHealthState;                                         // 0x038F   (0x0001)  
	ESentryCombatVariation                             _combatVariation;                                           // 0x0390   (0x0001)  
	bool                                               _shouldAimLongRangeWeapon;                                  // 0x0391   (0x0001)  
	unsigned char                                      UnknownData04_5[0x2];                                       // 0x0392   (0x0002)  MISSED
	FVector                                            _longRangeGunLookAtLocation;                                // 0x0394   (0x000C)  
	bool                                               _shouldAimMediumRangeWeapon;                                // 0x03A0   (0x0001)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x03A1   (0x0003)  MISSED
	FVector                                            _mediumRangeGunLookAtLocation;                              // 0x03A4   (0x000C)  
	bool                                               _shouldAimHighPrecisionWeapon;                              // 0x03B0   (0x0001)  
	unsigned char                                      UnknownData06_5[0x3];                                       // 0x03B1   (0x0003)  MISSED
	FVector                                            _highPrecisionGunLookAtLocation;                            // 0x03B4   (0x000C)  
	bool                                               _hasUpperBodyFocusLocation;                                 // 0x03C0   (0x0001)  
	unsigned char                                      UnknownData07_5[0x3];                                       // 0x03C1   (0x0003)  MISSED
	float                                              _upperBodyFocusRotationYaw;                                 // 0x03C4   (0x0004)  
	float                                              _grenadeLauncherUpperFlapCurrentPitch;                      // 0x03C8   (0x0004)  
	float                                              _grenadeLauncherLowerFlapCurrentPitch;                      // 0x03CC   (0x0004)  
	bool                                               _isFiring;                                                  // 0x03D0   (0x0001)  
	unsigned char                                      UnknownData08_5[0x7];                                       // 0x03D1   (0x0007)  MISSED
	TArray<FSentryGlitchingPartInfo>                   _partGlitchingInfo;                                         // 0x03D8   (0x0010)  
	TArray<float>                                      _minigunRotationAngles;                                     // 0x03E8   (0x0010)  
	unsigned char                                      UnknownData09_6[0x8];                                       // 0x03F8   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.SentryAnimInstance2.GetTurnInPlaceElapsedTimeRight
	float GetTurnInPlaceElapsedTimeRight();                                                                                  // [0x23cb9c0] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.SentryAnimInstance2.GetTurnInPlaceElapsedTimeLeft
	float GetTurnInPlaceElapsedTimeLeft();                                                                                   // [0x23cb9a0] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.SentryAnimInstance2.GetTurnInPlaceDirectionBlendAlpha
	float GetTurnInPlaceDirectionBlendAlpha();                                                                               // [0x23cb950] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.SentryAnimInstance2.GetTurnInPlaceBlendAlpha
	float GetTurnInPlaceBlendAlpha();                                                                                        // [0x23cb900] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.SentryAnimInstance2.FindTimeAtStoppingDistance
	float FindTimeAtStoppingDistance(UAnimSequenceBase* AnimSequence, float stoppingDistance);                               // [0x23cb800] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/ConZ.SentryAnimInstance2.AnimNotify_SentryPlayLongRangeWeaponMuzzleFlash
	void AnimNotify_SentryPlayLongRangeWeaponMuzzleFlash();                                                                  // [0x23cb7e0] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.SentryAnimInstance2.AnimNotify_SentryJump
	void AnimNotify_SentryJump();                                                                                            // [0xb92f40] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.SentryAnimInstance2.AnimNotify_SentryHighPrecisionWeaponStartCharging
	void AnimNotify_SentryHighPrecisionWeaponStartCharging();                                                                // [0x23cb7c0] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.SentryAnimInstance2.AnimNotify_SentryHighPrecisionAttackFired
	void AnimNotify_SentryHighPrecisionAttackFired();                                                                        // [0x23cb7a0] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.SentryAnimInstance2.AnimNotify_RFootDown
	void AnimNotify_RFootDown();                                                                                             // [0x23cb780] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.SentryAnimInstance2.AnimNotify_LFootDown
	void AnimNotify_LFootDown();                                                                                             // [0x23cb780] Native|Event|Public|BlueprintEvent 
};

/// Class /Script/ConZ.SentryFirstPersonViewComponent
/// Size: 0x0000 (0x0000D0 - 0x0000D0)
class USentryFirstPersonViewComponent : public UPrisonerViewComponent
{ 
public:
};

/// Class /Script/ConZ.SentryGuardVolume2
/// Size: 0x0050 (0x000258 - 0x0002A8)
class ASentryGuardVolume2 : public AVolume
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0258   (0x0020)  MISSED
	TArray<FVector>                                    _hotZonesLocalLocations;                                    // 0x0278   (0x0010)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x0288   (0x0010)  MISSED
	TArray<ABuilding*>                                 _hotZonesBuildings;                                         // 0x0298   (0x0010)  
};

/// Class /Script/ConZ.SentryMovementComponent
/// Size: 0x0030 (0x000C10 - 0x000C40)
class USentryMovementComponent : public UConZCharacterMovementComponent
{ 
public:
	UCurveFloat*                                       MaxRotationRateCurve;                                       // 0x0C08   (0x0008)  
	float                                              RotationInterpolationSpeed;                                 // 0x0C10   (0x0004)  
	bool                                               CorrectServerReceivedZ;                                     // 0x0C14   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2B];                                      // 0x0C15   (0x002B)  MISSED
};

/// Class /Script/ConZ.SentrySpawner2
/// Size: 0x0078 (0x000220 - 0x000298)
class ASentrySpawner2 : public AActor
{ 
public:
	float                                              ActivationDistance;                                         // 0x0220   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0224   (0x0004)  MISSED
	UClass*                                            SentryClass;                                                // 0x0228   (0x0008)  
	TArray<FSentryPatrolPoint>                         PatrolPoints;                                               // 0x0230   (0x0010)  
	UBillboardComponent*                               Sprite;                                                     // 0x0240   (0x0008)  
	float                                              SentryOperatingRange;                                       // 0x0248   (0x0004)  
	bool                                               ForceUndergroundSentry;                                     // 0x024C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x27];                                      // 0x024D   (0x0027)  MISSED
	bool                                               _shouldSaveAndLoadSentry;                                   // 0x0274   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0275   (0x0003)  MISSED
	float                                              _autoSaveTime;                                              // 0x0278   (0x0004)  
	unsigned char                                      UnknownData03_6[0x1C];                                      // 0x027C   (0x001C)  MISSED
};

/// Class /Script/ConZ.SentryThirdPersonViewComponent
/// Size: 0x0030 (0x0000D0 - 0x000100)
class USentryThirdPersonViewComponent : public UPrisonerViewComponent
{ 
public:
	FName                                              StandingSubviewName;                                        // 0x00D0   (0x0008)  
	FName                                              StandingAimingSubviewName;                                  // 0x00D8   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x00E0   (0x0020)  MISSED
};

/// Class /Script/ConZ.SerializationStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class USerializationStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.ServerAnalyticsManager
/// Size: 0x0010 (0x000220 - 0x000230)
class AServerAnalyticsManager : public AActor
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0220   (0x0010)  MISSED
};

/// Class /Script/ConZ.ServerBrowser
/// Size: 0x0228 (0x000260 - 0x000488)
class UServerBrowser : public UBaseMenu
{ 
public:
	unsigned char                                      UnknownData00_2[0x70];                                      // 0x0260   (0x0070)  MISSED
	UVerticalBox*                                      PasswordPopup;                                              // 0x02D0   (0x0008)  
	UEditableTextBox*                                  PasswordPopupTextBox;                                       // 0x02D8   (0x0008)  
	UVerticalBox*                                      MenuVerticalBox;                                            // 0x02E0   (0x0008)  
	UConZStandardButton*                               Back;                                                       // 0x02E8   (0x0008)  
	UEditableTextBox*                                  DirectConnectTextBox;                                       // 0x02F0   (0x0008)  
	UVerticalBox*                                      MainVerticalBox;                                            // 0x02F8   (0x0008)  
	UConZStandardButton*                               PasswordPopupCancelButton;                                  // 0x0300   (0x0008)  
	UConZStandardButton*                               PasswordPopupOkButton;                                      // 0x0308   (0x0008)  
	UConZStandardButton*                               Refresh;                                                    // 0x0310   (0x0008)  
	UEditableTextBox*                                  SearchBox;                                                  // 0x0318   (0x0008)  
	UOverlay*                                          ServersCategoryOverlay;                                     // 0x0320   (0x0008)  
	USortByButton*                                     SortByFriends;                                              // 0x0328   (0x0008)  
	USortByButton*                                     SortByHost;                                                 // 0x0330   (0x0008)  
	USortByButton*                                     SortByMode;                                                 // 0x0338   (0x0008)  
	USortByButton*                                     SortByPassword;                                             // 0x0340   (0x0008)  
	USortByButton*                                     SortByPing;                                                 // 0x0348   (0x0008)  
	USortByButton*                                     SortByPlayers;                                              // 0x0350   (0x0008)  
	USortByButton*                                     SortByTime;                                                 // 0x0358   (0x0008)  
	USortByButton*                                     SortByVersion;                                              // 0x0360   (0x0008)  
	UCursedScrollBar*                                  UI_ScrollBar;                                               // 0x0368   (0x0008)  
	UCarousel*                                         ServersCategorySwitch2;                                     // 0x0370   (0x0008)  
	UCircularThrobber*                                 CircularThrobber;                                           // 0x0378   (0x0008)  
	UVerticalBox*                                      _messageBoxPanel;                                           // 0x0380   (0x0008)  
	UServerInfoWidget*                                 SelectedServer;                                             // 0x0388   (0x0008)  
	unsigned char                                      UnknownData01_5[0x28];                                      // 0x0390   (0x0028)  MISSED
	UConZStandardButton*                               _lastButton;                                                // 0x03B8   (0x0008)  
	UWidget*                                           _lastWidget;                                                // 0x03C0   (0x0008)  
	UVerticalBox*                                      _serverList;                                                // 0x03C8   (0x0008)  
	UConZStandardButton*                               _connectButton;                                             // 0x03D0   (0x0008)  
	unsigned char                                      UnknownData02_5[0x68];                                      // 0x03D8   (0x0068)  MISSED
	UClass*                                            _serverInfoWidgetClass;                                     // 0x0440   (0x0008)  
	unsigned char                                      UnknownData03_6[0x40];                                      // 0x0448   (0x0040)  MISSED


	/// Functions
	// Function /Script/ConZ.ServerBrowser.UpdateList
	void UpdateList();                                                                                                       // [0x23d0590] Final|Native|Private 
	// Function /Script/ConZ.ServerBrowser.OnSearchBoxTextChanged
	void OnSearchBoxTextChanged(FText& Text);                                                                                // [0x23d0300] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.ServerBrowser.OnPasswordPopupTextBoxTextCommitted
	void OnPasswordPopupTextBoxTextCommitted(FText& Text, TEnumAsByte<ETextCommit> CommitMethod);                            // [0x23d01e0] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.ServerBrowser.OnDirectConnectTextBoxTextCommitted
	void OnDirectConnectTextBoxTextCommitted(FText& Text, TEnumAsByte<ETextCommit> CommitMethod);                            // [0x23d00c0] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.ServerBrowser.OnDirectConnectTextBoxTextChanged
	void OnDirectConnectTextBoxTextChanged(FText& Text);                                                                     // [0x23cfff0] Final|Native|Private|HasOutParms 
};

/// Class /Script/ConZ.ServerInfoWidget
/// Size: 0x0148 (0x000260 - 0x0003A8)
class UServerInfoWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x48];                                      // 0x0260   (0x0048)  MISSED
	FServerInfo                                        _serverInfo;                                                // 0x02A8   (0x0050)  
	int32_t                                            FontSize;                                                   // 0x02F8   (0x0004)  
	unsigned char                                      UnknownData01_5[0xC];                                       // 0x02FC   (0x000C)  MISSED
	UAkAudioEvent*                                     ClickSound;                                                 // 0x0308   (0x0008)  
	UButton*                                           DeleteServerButton;                                         // 0x0310   (0x0008)  
	UButton*                                           Button;                                                     // 0x0318   (0x0008)  
	UTextBlock*                                        NameText;                                                   // 0x0320   (0x0008)  
	UTextBlock*                                        PingText;                                                   // 0x0328   (0x0008)  
	UTextBlock*                                        PlayersText;                                                // 0x0330   (0x0008)  
	UTextBlock*                                        PasswordText;                                               // 0x0338   (0x0008)  
	UTextBlock*                                        TimeText;                                                   // 0x0340   (0x0008)  
	UTextBlock*                                        ModeText;                                                   // 0x0348   (0x0008)  
	UTextBlock*                                        VersionText;                                                // 0x0350   (0x0008)  
	UTextBlock*                                        FriendsText;                                                // 0x0358   (0x0008)  
	UThrobber*                                         Throbber;                                                   // 0x0360   (0x0008)  
	UImage*                                            Image;                                                      // 0x0368   (0x0008)  
	UImage*                                            Image;                                                      // 0x0370   (0x0008)  
	UImage*                                            Image;                                                      // 0x0378   (0x0008)  
	UImage*                                            Image;                                                      // 0x0380   (0x0008)  
	UImage*                                            Image;                                                      // 0x0388   (0x0008)  
	UImage*                                            Image;                                                      // 0x0390   (0x0008)  
	UImage*                                            Image;                                                      // 0x0398   (0x0008)  
	UImage*                                            Image;                                                      // 0x03A0   (0x0008)  


	/// Functions
	// Function /Script/ConZ.ServerInfoWidget.OnDeleteClicked
	void OnDeleteClicked();                                                                                                  // [0x23cffd0] Final|Native|Private 
	// Function /Script/ConZ.ServerInfoWidget.OnClickedButton
	void OnClickedButton();                                                                                                  // [0x23cffb0] Final|Native|Private 
};

/// Class /Script/ConZ.ServerPriceCache
/// Size: 0x0200 (0x000028 - 0x000228)
class UServerPriceCache : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x200];                                     // 0x0028   (0x0200)  MISSED
};

/// Class /Script/ConZ.ServerSettingsMenu
/// Size: 0x0008 (0x000628 - 0x000630)
class UServerSettingsMenu : public UConZSettingsMenu
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0628   (0x0008)  MISSED
};

/// Class /Script/ConZ.ServerSettingsUIController
/// Size: 0x00A0 (0x0001D8 - 0x000278)
class UServerSettingsUIController : public UConZSettingsUIController
{ 
public:
	unsigned char                                      UnknownData00_1[0xA0];                                      // 0x01D8   (0x00A0)  MISSED
};

/// Class /Script/ConZ.Shark
/// Size: 0x0040 (0x000810 - 0x000850)
class AShark : public ALargeAquaticAnimal
{ 
public:
	UParticleSystem*                                   _sharkBiteBloodPS;                                          // 0x0810   (0x0008)  
	UParticleSystemComponent*                          _sharkBiteBloodPSC;                                         // 0x0818   (0x0008)  
	float                                              _biteParticlesScale;                                        // 0x0820   (0x0004)  
	FName                                              _spawnBiteAttackParticlesSocketName;                        // 0x0824   (0x0008)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x082C   (0x0004)  MISSED
	UParticleSystem*                                   _onDeathPS;                                                 // 0x0830   (0x0008)  
	UParticleSystemComponent*                          _onDeathPSC;                                                // 0x0838   (0x0008)  
	FName                                              _onDeathParticlesSocketName;                                // 0x0840   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0848   (0x0008)  MISSED
};

/// Class /Script/ConZ.SharkAIController
/// Size: 0x01C8 (0x000328 - 0x0004F0)
class ASharkAIController : public AAIController
{ 
public:
	float                                              _sharkTurningSpeed;                                         // 0x0328   (0x0004)  
	float                                              _minDistanceToMovementTarget;                               // 0x032C   (0x0004)  
	float                                              _boundsInflation;                                           // 0x0330   (0x0004)  
	FVector                                            _randomMovementExtent;                                      // 0x0334   (0x000C)  
	float                                              _findPathBypassMultiplier;                                  // 0x0340   (0x0004)  
	int32_t                                            _maxMovementAttemptsAllowed;                                // 0x0344   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0348   (0x0004)  MISSED
	float                                              _maxTimePerDestinationMultiplier;                           // 0x034C   (0x0004)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0350   (0x0008)  MISSED
	float                                              _minDistanceBetweenTargetGeneratedPath;                     // 0x0358   (0x0004)  
	float                                              _surfaceOffset;                                             // 0x035C   (0x0004)  
	float                                              _movementRecoveryTurningSpeed;                              // 0x0360   (0x0004)  
	float                                              _movementRecoveryAcceleration;                              // 0x0364   (0x0004)  
	float                                              _movementRecoveryDeceleration;                              // 0x0368   (0x0004)  
	float                                              _aboveWaterRecoveryTurningSpeed;                            // 0x036C   (0x0004)  
	float                                              _moveToTargetUpdatePeriod;                                  // 0x0370   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0374   (0x0004)  MISSED
	float                                              _minVictimDepth;                                            // 0x0378   (0x0004)  
	float                                              _beginPursuitTimeMin;                                       // 0x037C   (0x0004)  
	float                                              _beginPursuitTimeMax;                                       // 0x0380   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x0384   (0x0004)  MISSED
	float                                              _aggressiveBehaviorChance;                                  // 0x0388   (0x0004)  
	float                                              _aggressiveBehaviorChanceWhenTargetBleeding;                // 0x038C   (0x0004)  
	float                                              _distanceToAdjustAttackAngle;                               // 0x0390   (0x0004)  
	float                                              _desiredAttackAngleDegrees;                                 // 0x0394   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x0398   (0x0004)  MISSED
	float                                              _desiredAttackAngleTime;                                    // 0x039C   (0x0004)  
	float                                              _returnToWanderingTime;                                     // 0x03A0   (0x0004)  
	unsigned char                                      UnknownData05_5[0x4];                                       // 0x03A4   (0x0004)  MISSED
	float                                              _dealDamageTime;                                            // 0x03A8   (0x0004)  
	unsigned char                                      UnknownData06_5[0x4];                                       // 0x03AC   (0x0004)  MISSED
	float                                              _damagePerInterval;                                         // 0x03B0   (0x0004)  
	unsigned char                                      UnknownData07_5[0x4];                                       // 0x03B4   (0x0004)  MISSED
	int32_t                                            _numOfIntervals;                                            // 0x03B8   (0x0004)  
	unsigned char                                      UnknownData08_5[0x4];                                       // 0x03BC   (0x0004)  MISSED
	float                                              _startMovingAfterBiteTime;                                  // 0x03C0   (0x0004)  
	unsigned char                                      UnknownData09_5[0xC];                                       // 0x03C4   (0x000C)  MISSED
	float                                              _changeDirectionChance;                                     // 0x03D0   (0x0004)  
	float                                              _circlingAngleDegrees;                                      // 0x03D4   (0x0004)  
	float                                              _circlingDistanceMin;                                       // 0x03D8   (0x0004)  
	float                                              _circlingDistanceMax;                                       // 0x03DC   (0x0004)  
	float                                              _circlingAggressionCheckInterval;                           // 0x03E0   (0x0004)  
	unsigned char                                      UnknownData10_5[0x4];                                       // 0x03E4   (0x0004)  MISSED
	float                                              _minDamageToReact;                                          // 0x03E8   (0x0004)  
	float                                              _fleeingDuration;                                           // 0x03EC   (0x0004)  
	unsigned char                                      UnknownData11_5[0x50];                                      // 0x03F0   (0x0050)  MISSED
	float                                              _maxTimeAboveWater;                                         // 0x0440   (0x0004)  
	unsigned char                                      UnknownData12_5[0x4];                                       // 0x0444   (0x0004)  MISSED
	float                                              _minDistanceToNextPrimaryTarget;                            // 0x0448   (0x0004)  
	float                                              _changePrimaryTargetTime;                                   // 0x044C   (0x0004)  
	unsigned char                                      UnknownData13_5[0x10];                                      // 0x0450   (0x0010)  MISSED
	TMap<ESharkState, FFishStateParameters>            _behaviorMap;                                               // 0x0460   (0x0050)  
	unsigned char                                      UnknownData14_5[0x38];                                      // 0x04B0   (0x0038)  MISSED
	UGrappleActionParameters*                          _grappleActionParameter;                                    // 0x04E8   (0x0008)  


	/// Functions
	// Function /Script/ConZ.SharkAIController.SetReadyForNextPrimaryTarget
	void SetReadyForNextPrimaryTarget();                                                                                     // [0x23d0550] Final|Native|Private 
};

/// Class /Script/ConZ.SharkAnimInstance
/// Size: 0x00A0 (0x0002C0 - 0x000360)
class USharkAnimInstance : public UAnimInstance
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x02C0   (0x0008)  MISSED
	FName                                              _mouthTargetName;                                           // 0x02C8   (0x0008)  
	float                                              _mouthMorphValueChangePerSecond;                            // 0x02D0   (0x0004)  
	FName                                              _teethTargetName;                                           // 0x02D4   (0x0008)  
	float                                              _teethMorphValueChangePerSecond;                            // 0x02DC   (0x0004)  
	FName                                              _eyesTargetName;                                            // 0x02E0   (0x0008)  
	float                                              _eyesMorphValueChangePerSecond;                             // 0x02E8   (0x0004)  
	FVector                                            _velocity;                                                  // 0x02EC   (0x000C)  
	float                                              _angularVelocityYaw;                                        // 0x02F8   (0x0004)  
	float                                              _angularVelocityPitch;                                      // 0x02FC   (0x0004)  
	EFishBehavior                                      _behaviorMode;                                              // 0x0300   (0x0001)  
	bool                                               _isAlive;                                                   // 0x0301   (0x0001)  
	unsigned char                                      UnknownData01_6[0x5E];                                      // 0x0302   (0x005E)  MISSED


	/// Functions
	// Function /Script/ConZ.SharkAnimInstance.IsAlive
	bool IsAlive();                                                                                                          // [0x23cff80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.SharpMeleeWeaponItemTag
/// Size: 0x0000 (0x000030 - 0x000030)
class USharpMeleeWeaponItemTag : public UBaseItemTag
{ 
public:
};

/// Class /Script/ConZ.ShelterItemState
/// Size: 0x0010 (0x000100 - 0x000110)
class UShelterItemState : public UItemState
{ 
public:
	FDbIntegerId                                       ShelterId;                                                  // 0x0100   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0108   (0x0008)  MISSED
};

/// Class /Script/ConZ.ShelterItem
/// Size: 0x0010 (0x000910 - 0x000920)
class AShelterItem : public AItem
{ 
public:
	bool                                               _canBeAddedToInventory;                                     // 0x0910   (0x0001)  
	unsigned char                                      UnknownData00_6[0xF];                                       // 0x0911   (0x000F)  MISSED
};

/// Class /Script/ConZ.ShotsFiredTrackerWidget
/// Size: 0x0008 (0x000260 - 0x000268)
class UShotsFiredTrackerWidget : public UUserWidget
{ 
public:
	UTextBlock*                                        _widgetText;                                                // 0x0260   (0x0008)  
};

/// Class /Script/ConZ.SilentAlarmTrapItem
/// Size: 0x0030 (0x000A60 - 0x000A90)
class ASilentAlarmTrapItem : public ATrapItem
{ 
public:
	UAkAudioEvent*                                     _triggerSound;                                              // 0x0A60   (0x0008)  
	float                                              _detonationDelay;                                           // 0x0A68   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0A6C   (0x0004)  MISSED
	UNameableItemComponent*                            _nameableItemComponent;                                     // 0x0A70   (0x0008)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x0A78   (0x0018)  MISSED


	/// Functions
	// Function /Script/ConZ.SilentAlarmTrapItem.Detonate
	void Detonate();                                                                                                         // [0x23cff60] Final|Native|Private 
};

/// Class /Script/ConZ.SimpleTextDropdownEntry
/// Size: 0x0048 (0x000260 - 0x0002A8)
class USimpleTextDropdownEntry : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0260   (0x0010)  MISSED
	UImage*                                            _background;                                                // 0x0270   (0x0008)  
	UTextBlock*                                        _label;                                                     // 0x0278   (0x0008)  
	FLinearColor                                       _black;                                                     // 0x0280   (0x0010)  
	FLinearColor                                       _white;                                                     // 0x0290   (0x0010)  
	int32_t                                            _singleIndentationValue;                                    // 0x02A0   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x02A4   (0x0004)  MISSED
};

/// Class /Script/ConZ.SimpleTextDropdownEntryWithCheckBox
/// Size: 0x0018 (0x0002A8 - 0x0002C0)
class USimpleTextDropdownEntryWithCheckBox : public USimpleTextDropdownEntry
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x02A8   (0x0010)  MISSED
	USquareCheckbox*                                   _checkBox;                                                  // 0x02B8   (0x0008)  
};

/// Class /Script/ConZ.SingletonStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class USingletonStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.SkeletalWeaponAttachment
/// Size: 0x0010 (0x000940 - 0x000950)
class ASkeletalWeaponAttachment : public AWeaponAttachment
{ 
public:
	USkeletalMeshComponent*                            _skeletalMesh;                                              // 0x0940   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0948   (0x0008)  MISSED
};

/// Class /Script/ConZ.SkillClasses
/// Size: 0x0010 (0x000028 - 0x000038)
class USkillClasses : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0028   (0x0010)  MISSED
};

/// Class /Script/ConZ.SkillEventHandler
/// Size: 0x0008 (0x000028 - 0x000030)
class USkillEventHandler : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.SkillLevelCraftingCondition
/// Size: 0x0010 (0x000028 - 0x000038)
class USkillLevelCraftingCondition : public UCraftingCondition
{ 
public:
	UClass*                                            Skill;                                                      // 0x0028   (0x0008)  
	ESkillLevel                                        MinSkillLevel;                                              // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Class /Script/ConZ.SkydivingHUD
/// Size: 0x0000 (0x000260 - 0x000260)
class USkydivingHUD : public UUserWidget
{ 
public:
};

/// Class /Script/ConZ.SliderWithLabelAndNumber
/// Size: 0x0710 (0x000DB8 - 0x0014C8)
class USliderWithLabelAndNumber : public UConZSlider
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0DB8   (0x0018)  MISSED
	UTextBlock*                                        _name;                                                      // 0x0DD0   (0x0008)  
	UTextBlock*                                        _valueDisplay;                                              // 0x0DD8   (0x0008)  
	UImage*                                            _focusBackgroundImage;                                      // 0x0DE0   (0x0008)  
	FSliderWithLabelAndNumberStyle                     _selectedAndFocusedSWNANStyle;                              // 0x0DE8   (0x0158)  
	FSliderWithLabelAndNumberStyle                     _selectedAndUnfocusedSWNANStyle;                            // 0x0F40   (0x0158)  
	FSliderWithLabelAndNumberStyle                     _unselectedSWNANStyle;                                      // 0x1098   (0x0158)  
	FSliderWithLabelAndNumberStyle                     _highlightedSWNANStyle;                                     // 0x11F0   (0x0158)  
	FSliderWithLabelAndNumberStyle                     _disabledSWNANStyle;                                        // 0x1348   (0x0158)  
	FText                                              _label;                                                     // 0x14A0   (0x0018)  
	int32_t                                            _decimalPlacesShown;                                        // 0x14B8   (0x0004)  
	int32_t                                            _decimalPlacesShifted;                                      // 0x14BC   (0x0004)  
	bool                                               _showAsPercentage;                                          // 0x14C0   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x14C1   (0x0007)  MISSED
};

/// Class /Script/ConZ.SlidingDoorStatic
/// Size: 0x0010 (0x0004E0 - 0x0004F0)
class ASlidingDoorStatic : public ADoor
{ 
public:
	USceneComponent*                                   ClosedPositionComponent;                                    // 0x04D8   (0x0008)  
	USceneComponent*                                   OpenPositionComponent;                                      // 0x04E0   (0x0008)  
	bool                                               _shouldAllowRotation;                                       // 0x04E8   (0x0001)  
	bool                                               _shouldAllowScaling;                                        // 0x04E9   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x04EA   (0x0006)  MISSED
};

/// Class /Script/ConZ.SmokableItemComponent
/// Size: 0x00E8 (0x000198 - 0x000280)
class USmokableItemComponent : public UIgnitableItemComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0198   (0x0010)  MISSED
	TArray<FSmokableSubstance>                         _smokableSubstances;                                        // 0x01A8   (0x0010)  
	float                                              _exhaustionRecoveryAmount;                                  // 0x01B8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x01BC   (0x0004)  MISSED
	UTexture2D*                                        _burningIcon;                                               // 0x01C0   (0x0008)  
	float                                              _minEmissivity;                                             // 0x01C8   (0x0004)  
	float                                              _maxEmissivity;                                             // 0x01CC   (0x0004)  
	UMaterialInterface*                                _burningMaterial;                                           // 0x01D0   (0x0008)  
	float                                              _timeBetweenExhalation;                                     // 0x01D8   (0x0004)  
	FName                                              _itemInHandsSocketName;                                     // 0x01DC   (0x0008)  
	FName                                              _itemEquippedSocketName;                                    // 0x01E4   (0x0008)  
	unsigned char                                      UnknownData02_5[0x14];                                      // 0x01EC   (0x0014)  MISSED
	FTransform                                         _offsetWhenEquipped;                                        // 0x0200   (0x0030)  
	unsigned char                                      UnknownData03_6[0x50];                                      // 0x0230   (0x0050)  MISSED
};

/// Class /Script/ConZ.SmokableTag
/// Size: 0x0000 (0x000030 - 0x000030)
class USmokableTag : public UBaseItemTag
{ 
public:
};

/// Class /Script/ConZ.SmokeGrenadeItem
/// Size: 0x0030 (0x0009E0 - 0x000A10)
class ASmokeGrenadeItem : public AGrenadeItem
{ 
public:
	UParticleSystem*                                   _smokeParticle;                                             // 0x09D8   (0x0008)  
	UAkAudioEvent*                                     _smokeStartedAudioEvent;                                    // 0x09E0   (0x0008)  
	UAkAudioEvent*                                     _smokeStoppedAudioEvent;                                    // 0x09E8   (0x0008)  
	float                                              _smokeSoundDuration;                                        // 0x09F0   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x09F4   (0x0004)  MISSED
	UAkComponent*                                      _smokeAudioComponent;                                       // 0x09F8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0A00   (0x0010)  MISSED
};

/// Class /Script/ConZ.SnipingSkill
/// Size: 0x0118 (0x0000B0 - 0x0001C8)
class USnipingSkill : public UIntelligenceSkill
{ 
public:
	float                                              _distanceLimit;                                             // 0x00B0   (0x0004)  
	unsigned char                                      UnknownData00_5[0xC];                                       // 0x00B4   (0x000C)  MISSED
	FSnipingSkillExperienceAwards                      NoSkillExperienceAwards;                                    // 0x00C0   (0x0034)  
	FSnipingSkillExperienceAwards                      BasicSkillExperienceAwards;                                 // 0x00F4   (0x0034)  
	FSnipingSkillExperienceAwards                      MediumSkillExperienceAwards;                                // 0x0128   (0x0034)  
	FSnipingSkillExperienceAwards                      AdvancedSkillExperienceAwards;                              // 0x015C   (0x0034)  
	FSnipingSkillExperienceAwards                      AboveAdvancedSkillExperienceAwards;                         // 0x0190   (0x0034)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x01C4   (0x0004)  MISSED
};

/// Class /Script/ConZ.SortByButton
/// Size: 0x0058 (0x000260 - 0x0002B8)
class USortByButton : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UButton*                                           Button;                                                     // 0x0278   (0x0008)  
	USizeBox*                                          SizeBox;                                                    // 0x0280   (0x0008)  
	UTextBlock*                                        TextBlock;                                                  // 0x0288   (0x0008)  
	float                                              Size;                                                       // 0x0290   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0294   (0x0004)  MISSED
	FText                                              Text;                                                       // 0x0298   (0x0018)  
	TEnumAsByte<ESortByType>                           Type;                                                       // 0x02B0   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x02B1   (0x0007)  MISSED


	/// Functions
	// Function /Script/ConZ.SortByButton.SetType
	void SetType(TEnumAsByte<ESortByType> sortType);                                                                         // [0x23d55d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.SortByButton.OnTheButtonClicked
	void OnTheButtonClicked();                                                                                               // [0x23d5330] Final|Native|Public  
};

/// Class /Script/ConZ.SoundEmitter
/// Size: 0x0008 (0x000220 - 0x000228)
class ASoundEmitter : public AActor
{ 
public:
	UAkAudioEvent*                                     AudioEvent;                                                 // 0x0220   (0x0008)  
};

/// Class /Script/ConZ.SoundNotification
/// Size: 0x0000 (0x000030 - 0x000030)
class USoundNotification : public UConZNotification
{ 
public:
};

/// Class /Script/ConZ.SoundNotificationDescription
/// Size: 0x0018 (0x000040 - 0x000058)
class USoundNotificationDescription : public UNotificationDescription
{ 
public:
	UAkAudioEvent*                                     AudioEvent;                                                 // 0x0040   (0x0008)  
	AActor*                                            Actor;                                                      // 0x0048   (0x0008)  
	bool                                               stopWhenAttachedToDestroyed;                                // 0x0050   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0051   (0x0007)  MISSED
};

/// Class /Script/ConZ.SoundReducingItemTag
/// Size: 0x0000 (0x000030 - 0x000030)
class USoundReducingItemTag : public UBaseItemTag
{ 
public:
};

/// Class /Script/ConZ.Spline
/// Size: 0x0010 (0x000220 - 0x000230)
class ASpline : public AActor
{ 
public:
	USceneComponent*                                   SceneComponent;                                             // 0x0220   (0x0008)  
	USplineComponent*                                  SplineComponent;                                            // 0x0228   (0x0008)  
};

/// Class /Script/ConZ.SoundSpline
/// Size: 0x0058 (0x000230 - 0x000288)
class ASoundSpline : public ASpline
{ 
public:
	float                                              MinCameraLocationDeltaForUpdate;                            // 0x0230   (0x0004)  
	float                                              WorldStreamedCheckInterval;                                 // 0x0234   (0x0004)  
	float                                              MaxCameraDistance;                                          // 0x0238   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x023C   (0x0004)  MISSED
	UAkAudioEvent*                                     AudioEvent;                                                 // 0x0240   (0x0008)  
	UAkAudioEvent*                                     InsideSplineAudioEvent;                                     // 0x0248   (0x0008)  
	UAkAudioEvent*                                     OutsideSplineAudioEvent;                                    // 0x0250   (0x0008)  
	unsigned char                                      UnknownData01_6[0x30];                                      // 0x0258   (0x0030)  MISSED
};

/// Class /Script/ConZ.SpawnChoiceWidget
/// Size: 0x0080 (0x000260 - 0x0002E0)
class USpawnChoiceWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0260   (0x0010)  MISSED
	UImage*                                            _progressBar;                                               // 0x0270   (0x0008)  
	UMaterialInstanceDynamic*                          _progressMaterial;                                          // 0x0278   (0x0008)  
	UButton*                                           _choiceButton;                                              // 0x0280   (0x0008)  
	UTextBlock*                                        _optionText;                                                // 0x0288   (0x0008)  
	UTextBlock*                                        _prohibitedText;                                            // 0x0290   (0x0008)  
	UTextBlock*                                        _priceText;                                                 // 0x0298   (0x0008)  
	UImage*                                            SelectionArrow;                                             // 0x02A0   (0x0008)  
	UBorder*                                           Border;                                                     // 0x02A8   (0x0008)  
	float                                              _borderFill;                                                // 0x02B0   (0x0004)  
	int32_t                                            _price;                                                     // 0x02B4   (0x0004)  
	ECurrencyType                                      _priceCurrency;                                             // 0x02B8   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x02B9   (0x0007)  MISSED
	FText                                              _optionTextBlockText;                                       // 0x02C0   (0x0018)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x02D8   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.SpawnChoiceWidget.Update
	void Update();                                                                                                           // [0x23d5650] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.SpawnChoiceWidget.OnChoiceButtonClicked
	void OnChoiceButtonClicked();                                                                                            // [0x23d5310] Final|Native|Private 
};

/// Class /Script/ConZ.SpawnDecalWhenParticleCollides
/// Size: 0x0010 (0x000028 - 0x000038)
class USpawnDecalWhenParticleCollides : public UParticleModuleEventSendToGame
{ 
public:
	TArray<FParticleCollisionDecalData>                Decals;                                                     // 0x0028   (0x0010)  
};

/// Class /Script/ConZ.SpawnMenuWidget
/// Size: 0x00E0 (0x000260 - 0x000340)
class USpawnMenuWidget : public UUserWidget
{ 
public:
	USpawnChoiceWidget*                                _randomLocationButton;                                      // 0x0260   (0x0008)  
	USpawnChoiceWidget*                                _sectorLocationButton;                                      // 0x0268   (0x0008)  
	USpawnChoiceWidget*                                _shelterLocationButton;                                     // 0x0270   (0x0008)  
	USpawnChoiceWidget*                                _squadLocationButton;                                       // 0x0278   (0x0008)  
	UVerticalBox*                                      _locationOptions;                                           // 0x0280   (0x0008)  
	UBorder*                                           _respawnDisabledLabel;                                      // 0x0288   (0x0008)  
	UBorder*                                           _combatLabel;                                               // 0x0290   (0x0008)  
	UBorder*                                           _noAvailableLabel;                                          // 0x0298   (0x0008)  
	UBorder*                                           _limitExceededLabel;                                        // 0x02A0   (0x0008)  
	UOverlay*                                          _deathTitlePanel;                                           // 0x02A8   (0x0008)  
	UOverlay*                                          _comaTitlePanel;                                            // 0x02B0   (0x0008)  
	UOverlay*                                          _timerPanel;                                                // 0x02B8   (0x0008)  
	UTextBlock*                                        _timerLabel;                                                // 0x02C0   (0x0008)  
	UTextBlock*                                        _timer;                                                     // 0x02C8   (0x0008)  
	UOverlay*                                          _wakeUpPanel;                                               // 0x02D0   (0x0008)  
	UButton*                                           _wakeUpButton;                                              // 0x02D8   (0x0008)  
	UTextBlock*                                        _healthCriticalLabel;                                       // 0x02E0   (0x0008)  
	USpawnSectorSelectorWidget*                        _spawnSectorSelector;                                       // 0x02E8   (0x0008)  
	FText                                              _suddenDeathText;                                           // 0x02F0   (0x0018)  
	FText                                              _permadeathText;                                            // 0x0308   (0x0018)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0320   (0x0020)  MISSED


	/// Functions
	// Function /Script/ConZ.SpawnMenuWidget.SelectLocation
	void SelectLocation(USpawnChoiceWidget* Button);                                                                         // [0x23d5540] Final|Native|Public  
	// Function /Script/ConZ.SpawnMenuWidget.Prisoner_GetHealthRatio
	float Prisoner_GetHealthRatio(APrisoner* Prisoner);                                                                      // [0x23d54a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.SpawnMenuWidget.Prisoner_GetComaDuration
	float Prisoner_GetComaDuration(APrisoner* Prisoner);                                                                     // [0x23d5400] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.SpawnMenuWidget.Prisoner_Die
	void Prisoner_Die(APrisoner* Prisoner);                                                                                  // [0x23d5370] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/ConZ.SpawnMenuWidget.OnWakeUpButtonClicked
	void OnWakeUpButtonClicked();                                                                                            // [0x23d5350] Final|Native|Private 
	// Function /Script/ConZ.SpawnMenuWidget.GetTotalPriceText
	FText GetTotalPriceText();                                                                                               // [0x23d5250] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.SpawnMenuWidget.GetSectorSelectorVisibility
	ESlateVisibility GetSectorSelectorVisibility();                                                                          // [0x23d5220] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.SpawnMenuWidget.GetSectorId
	FSectorId GetSectorId(int32_t X, int32_t Y);                                                                             // [0x23d5150] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.SpawnMenuWidget.GetRespawnDisabledLabelText
	FText GetRespawnDisabledLabelText();                                                                                     // [0x23d50b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.SpawnMenuWidget.GetRemainingCurrencyTextColorAndOpacity
	FSlateColor GetRemainingCurrencyTextColorAndOpacity();                                                                   // [0x23d5040] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.SpawnMenuWidget.GetRemainingCurrencyText
	FText GetRemainingCurrencyText();                                                                                        // [0x23d4fa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.SpawnMenuWidget.GetCurrentCurrencyTextColorAndOpacity
	FSlateColor GetCurrentCurrencyTextColorAndOpacity();                                                                     // [0x23d4f00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.SpawnMenuWidget.GetCurrentCurrencyText
	FText GetCurrentCurrencyText();                                                                                          // [0x23d4e60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.SpawnScreen
/// Size: 0x0068 (0x000260 - 0x0002C8)
class USpawnScreen : public UUserWidget
{ 
public:
	UButton*                                           _mainMenuButton;                                            // 0x0260   (0x0008)  
	UButton*                                           _respawnButton;                                             // 0x0268   (0x0008)  
	UButton*                                           _scoreBoardButton;                                          // 0x0270   (0x0008)  
	UVerticalBox*                                      _messageBoxPanel;                                           // 0x0278   (0x0008)  
	UOverlay*                                          _screen;                                                    // 0x0280   (0x0008)  
	UOverlay*                                          _scoreboard;                                                // 0x0288   (0x0008)  
	UGameEventLoadoutMenuWidget*                       _gameEventLoadoutMenuWidget;                                // 0x0290   (0x0008)  
	USpawnMenuWidget*                                  _spawnMenuWidget;                                           // 0x0298   (0x0008)  
	UBorder*                                           _blackout;                                                  // 0x02A0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x02A8   (0x0020)  MISSED


	/// Functions
	// Function /Script/ConZ.SpawnScreen.UpdateInfo
	void UpdateInfo();                                                                                                       // [0x23d9a20] Final|Native|Public  
	// Function /Script/ConZ.SpawnScreen.OnSpawnAccept
	void OnSpawnAccept();                                                                                                    // [0x23d9560] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.SpawnScreen.OnScoreBoardButtonClicked
	void OnScoreBoardButtonClicked();                                                                                        // [0x23d9540] Final|Native|Private 
	// Function /Script/ConZ.SpawnScreen.OnExitToMainMenuClicked
	void OnExitToMainMenuClicked();                                                                                          // [0x23d9360] Final|Native|Private 
	// Function /Script/ConZ.SpawnScreen.GetWaitTimeText
	FText GetWaitTimeText();                                                                                                 // [0x23d8f00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.SpawnScreen.GetWaitTimeInSeconds
	int32_t GetWaitTimeInSeconds();                                                                                          // [0x23d8ed0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.SpawnScreen.GetRespawnButtonVisibility
	ESlateVisibility GetRespawnButtonVisibility();                                                                           // [0x23d8ea0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.SpawnScreen.GetPenaltyCountdownVisibility
	ESlateVisibility GetPenaltyCountdownVisibility();                                                                        // [0x23d8e70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.SpawnScreen.GetOtherButtonVisibility
	ESlateVisibility GetOtherButtonVisibility();                                                                             // [0x23d8e40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.SpawnScreen.CanSpawn
	bool CanSpawn();                                                                                                         // [0x23d8dc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.SpawnSectorSelectorWidget
/// Size: 0x0010 (0x000260 - 0x000270)
class USpawnSectorSelectorWidget : public UUserWidget
{ 
public:
	UImage*                                            _selectorImage;                                             // 0x0260   (0x0008)  
	UImage*                                            _deathImage;                                                // 0x0268   (0x0008)  


	/// Functions
	// Function /Script/ConZ.SpawnSectorSelectorWidget.SelectSector
	void SelectSector(UButton* Button);                                                                                      // [0x23d98f0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.SphereMotionTriggerComponent
/// Size: 0x0020 (0x000520 - 0x000540)
class USphereMotionTriggerComponent : public UMotionTriggerComponent
{ 
public:
	USphereComponent*                                  SphereCollisionComponent;                                   // 0x0518   (0x0008)  
	UStaticMeshComponent*                              VisualizationMeshComponent;                                 // 0x0520   (0x0008)  
	float                                              _triggerRadius;                                             // 0x0528   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x052C   (0x0004)  MISSED
	UStaticMesh*                                       _visualizationMesh;                                         // 0x0530   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0538   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.SphereMotionTriggerComponent.SphereComponent_OnComponentEndOverlap
	void SphereComponent_OnComponentEndOverlap(UPrimitiveComponent* activatedComp, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // [0x2267be0] Final|Native|Private 
	// Function /Script/ConZ.SphereMotionTriggerComponent.SphereComponent_OnComponentBeginOverlap
	void SphereComponent_OnComponentBeginOverlap(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x22679c0] Final|Native|Private|HasOutParms 
};

/// Class /Script/ConZ.SplineSnagGeneratedActor
/// Size: 0x0000 (0x000220 - 0x000220)
class ASplineSnagGeneratedActor : public AActor
{ 
public:
};

/// Class /Script/ConZ.SplineZone
/// Size: 0x0008 (0x000230 - 0x000238)
class ASplineZone : public ASpline
{ 
public:
	UZoneConfigurationDataAsset*                       configuration;                                              // 0x0230   (0x0008)  
};

/// Class /Script/ConZ.SprayPaintItemTag
/// Size: 0x0020 (0x000030 - 0x000050)
class USprayPaintItemTag : public UBaseItemTag
{ 
public:
	FText                                              Name;                                                       // 0x0030   (0x0018)  
	FColor                                             Color;                                                      // 0x0048   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x004C   (0x0004)  MISSED
};

/// Class /Script/ConZ.SquadEditor
/// Size: 0x00E8 (0x000260 - 0x000348)
class USquadEditor : public UUserWidget
{ 
public:
	UClass*                                            _dropdownMenuTextureSelectionWidgetClass;                   // 0x0260   (0x0008)  
	UClass*                                            _dropdownMenuColorSelectionWidgetClass;                     // 0x0268   (0x0008)  
	UUniformGridPanel*                                 BackgroundGrid;                                             // 0x0270   (0x0008)  
	UUniformGridPanel*                                 SymbolGrid;                                                 // 0x0278   (0x0008)  
	UUniformGridPanel*                                 ColorGrid;                                                  // 0x0280   (0x0008)  
	UDropdownMenuTextureSelectionWidget*               BackgroundSelector;                                         // 0x0288   (0x0008)  
	UDropdownMenuWidget*                               BackgroundDropdownMenu;                                     // 0x0290   (0x0008)  
	UDropdownMenuTextureSelectionWidget*               SymbolSelector;                                             // 0x0298   (0x0008)  
	UDropdownMenuWidget*                               SymbolDropdownMenu;                                         // 0x02A0   (0x0008)  
	UDropdownMenuColorSelectionWidget*                 BackgroundPrimaryColorSelector;                             // 0x02A8   (0x0008)  
	UDropdownMenuColorSelectionWidget*                 BackgroundSecondaryColorSelector;                           // 0x02B0   (0x0008)  
	UDropdownMenuColorSelectionWidget*                 BackgroundTertiaryColorSelector;                            // 0x02B8   (0x0008)  
	UDropdownMenuWidget*                               ColorDropdownMenu;                                          // 0x02C0   (0x0008)  
	UDropdownMenuColorSelectionWidget*                 SymbolPrimaryColorSelector;                                 // 0x02C8   (0x0008)  
	UDropdownMenuColorSelectionWidget*                 SymbolSecondaryColorSelector;                               // 0x02D0   (0x0008)  
	UDropdownMenuColorSelectionWidget*                 SymbolTertiaryColorSelector;                                // 0x02D8   (0x0008)  
	USquadEmblemWidget*                                UI_SquadEmblem;                                             // 0x02E0   (0x0008)  
	UEditableTextBox*                                  NameTextBox;                                                // 0x02E8   (0x0008)  
	UMultiLineEditableText*                            MessageTextBox;                                             // 0x02F0   (0x0008)  
	UMultiLineEditableText*                            InformationTextBox;                                         // 0x02F8   (0x0008)  
	UVerticalBox*                                      InformationBox;                                             // 0x0300   (0x0008)  
	UVerticalBox*                                      MessageBoxBox;                                              // 0x0308   (0x0008)  
	UVerticalBox*                                      EmblemBox;                                                  // 0x0310   (0x0008)  
	UButton*                                           AcceptButton;                                               // 0x0318   (0x0008)  
	UButton*                                           CancelButton;                                               // 0x0320   (0x0008)  
	UImage*                                            Image;                                                      // 0x0328   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0330   (0x0018)  MISSED


	/// Functions
	// Function /Script/ConZ.SquadEditor.OnTextCommittedNameTextBox
	void OnTextCommittedNameTextBox(FText& Text, TEnumAsByte<ETextCommit> CommitMethod);                                     // [0x23d97b0] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.SquadEditor.OnTextChangedMessageTextBox
	void OnTextChangedMessageTextBox(FText& Text);                                                                           // [0x23d96e0] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.SquadEditor.OnTextChangedInformationTextBox
	void OnTextChangedInformationTextBox(FText& Text);                                                                       // [0x23d9610] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.SquadEditor.OnSymbolClicked
	void OnSymbolClicked(UDropdownMenuSelectionWidget* Widget);                                                              // [0x23d9580] Final|Native|Private 
	// Function /Script/ConZ.SquadEditor.OnReleasedCancelButton
	void OnReleasedCancelButton();                                                                                           // [0x23d94c0] Final|Native|Private 
	// Function /Script/ConZ.SquadEditor.OnReleasedAcceptButton
	void OnReleasedAcceptButton();                                                                                           // [0x23d94a0] Final|Native|Private 
	// Function /Script/ConZ.SquadEditor.OnEmblemUpdate
	void OnEmblemUpdate(UDropdownMenuSelectionWidget* Widget);                                                               // [0x23d92b0] Final|Native|Private 
	// Function /Script/ConZ.SquadEditor.OnColorClicked
	void OnColorClicked(UDropdownMenuSelectionWidget* Widget);                                                               // [0x23d91e0] Final|Native|Private 
	// Function /Script/ConZ.SquadEditor.OnBackgroundClicked
	void OnBackgroundClicked(UDropdownMenuSelectionWidget* Widget);                                                          // [0x23d9110] Final|Native|Private 
};

/// Class /Script/ConZ.SquadEmblemWidget
/// Size: 0x0020 (0x000260 - 0x000280)
class USquadEmblemWidget : public UUserWidget
{ 
public:
	UImage*                                            _symbol;                                                    // 0x0260   (0x0008)  
	UImage*                                            _background;                                                // 0x0268   (0x0008)  
	UMaterialInterface*                                _material;                                                  // 0x0270   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0278   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.SquadEmblemWidget.SetEmblemData
	void SetEmblemData(FConZSquadEmblem& Value);                                                                             // [0x23d9980] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.SquadEmblemWidget.GetEmblemData
	FConZSquadEmblem GetEmblemData();                                                                                        // [0x23d8e10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.SquadLeftPanel
/// Size: 0x0158 (0x000260 - 0x0003B8)
class USquadLeftPanel : public UTabMenuPanel
{ 
public:
	unsigned char                                      UnknownData00_2[0xD8];                                      // 0x0260   (0x00D8)  MISSED
	UTextBlock*                                        SquadName;                                                  // 0x0338   (0x0008)  
	UTextBlock*                                        SquadMessage;                                               // 0x0340   (0x0008)  
	UTextBlock*                                        MemberCount;                                                // 0x0348   (0x0008)  
	USquadEmblemWidget*                                SquadEmblem;                                                // 0x0350   (0x0008)  
	UBorder*                                           EmblemBox;                                                  // 0x0358   (0x0008)  
	USizeBox*                                          MessageBoxPanel;                                            // 0x0360   (0x0008)  
	UVerticalBox*                                      MembersList;                                                // 0x0368   (0x0008)  
	UButton*                                           EditButton;                                                 // 0x0370   (0x0008)  
	UButton*                                           LeaveButton;                                                // 0x0378   (0x0008)  
	UButton*                                           CreateButton;                                               // 0x0380   (0x0008)  
	UScrollBox*                                        MemberListBox;                                              // 0x0388   (0x0008)  
	UClass*                                            _genericTooltipClass;                                       // 0x0390   (0x0008)  
	UClass*                                            _squadMemberPanelClass;                                     // 0x0398   (0x0008)  
	USquadRightPanel*                                  _squadRightPanel;                                           // 0x03A0   (0x0008)  
	UTabMenuReborn*                                    _tabMenuReborn;                                             // 0x03A8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x03B0   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.SquadLeftPanel.OnReleasedLeaveButton
	void OnReleasedLeaveButton();                                                                                            // [0x23d9520] Final|Native|Public  
	// Function /Script/ConZ.SquadLeftPanel.OnReleasedEditButton
	void OnReleasedEditButton();                                                                                             // [0x23d9500] Final|Native|Public  
	// Function /Script/ConZ.SquadLeftPanel.OnReleasedCreateButton
	void OnReleasedCreateButton();                                                                                           // [0x23d94e0] Final|Native|Public  
};

/// Class /Script/ConZ.SquadListing
/// Size: 0x0080 (0x000260 - 0x0002E0)
class USquadListing : public UUserWidget
{ 
public:
	UTextBlock*                                        SquadName;                                                  // 0x0260   (0x0008)  
	UTextBlock*                                        squadRank;                                                  // 0x0268   (0x0008)  
	UTextBlock*                                        SquadScore;                                                 // 0x0270   (0x0008)  
	UImage*                                            Highlight;                                                  // 0x0278   (0x0008)  
	UHorizontalBox*                                    ContentBox;                                                 // 0x0280   (0x0008)  
	UHorizontalBox*                                    SeparatorBox;                                               // 0x0288   (0x0008)  
	UClass*                                            _squadTooltipClass;                                         // 0x0290   (0x0008)  
	unsigned char                                      UnknownData00_6[0x48];                                      // 0x0298   (0x0048)  MISSED
};

/// Class /Script/ConZ.SquadMemberPanel
/// Size: 0x00D0 (0x000260 - 0x000330)
class USquadMemberPanel : public UUserWidget
{ 
public:
	UTextBlock*                                        PlayerName;                                                 // 0x0260   (0x0008)  
	UTextBlock*                                        FameText;                                                   // 0x0268   (0x0008)  
	UTextBlock*                                        FPText;                                                     // 0x0270   (0x0008)  
	UImage*                                            RankIcon;                                                   // 0x0278   (0x0008)  
	UButton*                                           HoverButton;                                                // 0x0280   (0x0008)  
	UButton*                                           MakeLeaderButton;                                           // 0x0288   (0x0008)  
	UButton*                                           PromoteButton;                                              // 0x0290   (0x0008)  
	UButton*                                           DemoteButton;                                               // 0x0298   (0x0008)  
	UButton*                                           KickButton;                                                 // 0x02A0   (0x0008)  
	UHorizontalBox*                                    CommandBox;                                                 // 0x02A8   (0x0008)  
	UHorizontalBox*                                    FamePointBox;                                               // 0x02B0   (0x0008)  
	TMap<EConZSquadMemberRank, UTexture2D*>            _memberTextures;                                            // 0x02B8   (0x0050)  
	unsigned char                                      UnknownData00_6[0x28];                                      // 0x0308   (0x0028)  MISSED


	/// Functions
	// Function /Script/ConZ.SquadMemberPanel.OnReleasePromoteButton
	void OnReleasePromoteButton();                                                                                           // [0x23d9480] Final|Native|Private 
	// Function /Script/ConZ.SquadMemberPanel.OnReleaseMakeLeaderButton
	void OnReleaseMakeLeaderButton();                                                                                        // [0x23d9460] Final|Native|Private 
	// Function /Script/ConZ.SquadMemberPanel.OnReleaseKickButton
	void OnReleaseKickButton();                                                                                              // [0x23d9440] Final|Native|Private 
	// Function /Script/ConZ.SquadMemberPanel.OnReleaseDemoteButton
	void OnReleaseDemoteButton();                                                                                            // [0x23d9420] Final|Native|Private 
	// Function /Script/ConZ.SquadMemberPanel.OnButtonUnhovered
	void OnButtonUnhovered();                                                                                                // [0x23d91c0] Final|Native|Private 
	// Function /Script/ConZ.SquadMemberPanel.OnButtonHovered
	void OnButtonHovered();                                                                                                  // [0x23d91a0] Final|Native|Private 
};

/// Class /Script/ConZ.SquadRightPanel
/// Size: 0x00A8 (0x000260 - 0x000308)
class USquadRightPanel : public UTabMenuPanel
{ 
public:
	unsigned char                                      UnknownData00_2[0x88];                                      // 0x0260   (0x0088)  MISSED
	UVerticalBox*                                      RankingBox;                                                 // 0x02E8   (0x0008)  
	UClass*                                            _squadListingClass;                                         // 0x02F0   (0x0008)  
	USquadLeftPanel*                                   _squadLeftPanel;                                            // 0x02F8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0300   (0x0008)  MISSED
};

/// Class /Script/ConZ.SquadTooltip
/// Size: 0x0018 (0x000260 - 0x000278)
class USquadTooltip : public UUserWidget
{ 
public:
	UTextBlock*                                        SquadName;                                                  // 0x0260   (0x0008)  
	UTextBlock*                                        SquadInformation;                                           // 0x0268   (0x0008)  
	USquadEmblemWidget*                                SquadEmblem;                                                // 0x0270   (0x0008)  
};

/// Class /Script/ConZ.SquareCheckbox
/// Size: 0x0020 (0x000260 - 0x000280)
class USquareCheckbox : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0260   (0x0010)  MISSED
	UWidgetAnimation*                                  _selectAnimation;                                           // 0x0270   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0278   (0x0008)  MISSED
};

/// Class /Script/ConZ.StartLocation
/// Size: 0x0008 (0x000250 - 0x000258)
class AStartLocation : public APlayerStart
{ 
public:
	char                                               TypeFlags;                                                  // 0x0250   (0x0001)  
	bool                                               IsDisabled;                                                 // 0x0251   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0252   (0x0006)  MISSED
};

/// Class /Script/ConZ.StartLocationManager
/// Size: 0x0010 (0x000220 - 0x000230)
class AStartLocationManager : public AActor
{ 
public:
	TArray<FStartLocationDescription>                  _startLocationDescriptions;                                 // 0x0220   (0x0010)  
};

/// Class /Script/ConZ.StaticDoorReplicator
/// Size: 0x0060 (0x0000B0 - 0x000110)
class UStaticDoorReplicator : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x60];                                      // 0x00B0   (0x0060)  MISSED
};

/// Class /Script/ConZ.StaticRadioItem
/// Size: 0x0000 (0x000920 - 0x000920)
class AStaticRadioItem : public ARadioItem
{ 
public:
};

/// Class /Script/ConZ.StatisticsDetailsWidget
/// Size: 0x0130 (0x000260 - 0x000390)
class UStatisticsDetailsWidget : public UUserWidget
{ 
public:
	UStatisticsSubcategoryTab*                         _generalSubcategoryTab;                                     // 0x0260   (0x0008)  
	UStatisticsSubcategoryTab*                         _foodSubcategoryTab;                                        // 0x0268   (0x0008)  
	UStatisticsSubcategoryTab*                         _huntingSubcategoryTab;                                     // 0x0270   (0x0008)  
	UStatisticsSubcategoryTab*                         _fishingSubcategoryTab;                                     // 0x0278   (0x0008)  
	UStatisticsSubcategoryTab*                         _travelSubcategoryTab;                                      // 0x0280   (0x0008)  
	UStatisticsSubcategoryTab*                         _metabolismSubcategoryTab;                                  // 0x0288   (0x0008)  
	UStatisticsSubcategoryTab*                         _craftingSubcategoryTab;                                    // 0x0290   (0x0008)  
	UStatisticsSubcategoryTab*                         _combatSubcategoryTab;                                      // 0x0298   (0x0008)  
	UStatisticsSubcategoryTab*                         _eventsSubcategoryTab;                                      // 0x02A0   (0x0008)  
	UWidgetSwitcher*                                   _subcategorySwitcher;                                       // 0x02A8   (0x0008)  
	unsigned char                                      UnknownData00_5[0x98];                                      // 0x02B0   (0x0098)  MISSED
	UStatisticsListWidget*                             _generalStatisticsList;                                     // 0x0348   (0x0008)  
	UStatisticsListWidget*                             _foodStatisticsList;                                        // 0x0350   (0x0008)  
	UStatisticsListWidget*                             _huntingStatisticsList;                                     // 0x0358   (0x0008)  
	UStatisticsListWidget*                             _fishingStatisticsList;                                     // 0x0360   (0x0008)  
	UStatisticsListWidget*                             _travelStatisticsList;                                      // 0x0368   (0x0008)  
	UStatisticsListWidget*                             _metabolismStatisticsList;                                  // 0x0370   (0x0008)  
	UStatisticsListWidget*                             _craftingStatisticsList;                                    // 0x0378   (0x0008)  
	UStatisticsListWidget*                             _combatStatisticsList;                                      // 0x0380   (0x0008)  
	UStatisticsListWidget*                             _eventsStatisticsList;                                      // 0x0388   (0x0008)  


	/// Functions
	// Function /Script/ConZ.StatisticsDetailsWidget.OnTravelSubcategoryButtonClicked
	void OnTravelSubcategoryButtonClicked();                                                                                 // [0x23d98d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.StatisticsDetailsWidget.OnMetabolismSubcategoryButtonClicked
	void OnMetabolismSubcategoryButtonClicked();                                                                             // [0x23d9400] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.StatisticsDetailsWidget.OnHuntingSubcategoryButtonClicked
	void OnHuntingSubcategoryButtonClicked();                                                                                // [0x23d93e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.StatisticsDetailsWidget.OnGeneralSubcategoryButtonClicked
	void OnGeneralSubcategoryButtonClicked();                                                                                // [0x23d93c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.StatisticsDetailsWidget.OnFoodSubcategoryButtonClicked
	void OnFoodSubcategoryButtonClicked();                                                                                   // [0x23d93a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.StatisticsDetailsWidget.OnFishingSubcategoryButtonClicked
	void OnFishingSubcategoryButtonClicked();                                                                                // [0x23d9380] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.StatisticsDetailsWidget.OnEventsSubcategoryButtonClicked
	void OnEventsSubcategoryButtonClicked();                                                                                 // [0x23d9340] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.StatisticsDetailsWidget.OnCraftingSubcategoryButtonClicked
	void OnCraftingSubcategoryButtonClicked();                                                                               // [0x23d9290] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.StatisticsDetailsWidget.OnCombatSubcategoryButtonClicked
	void OnCombatSubcategoryButtonClicked();                                                                                 // [0x23d9270] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.StatisticsListRow
/// Size: 0x0018 (0x000260 - 0x000278)
class UStatisticsListRow : public UUserWidget
{ 
public:
	UTextBlock*                                        _statNameTextBox;                                           // 0x0260   (0x0008)  
	UTextBlock*                                        _statValueTextBox;                                          // 0x0268   (0x0008)  
	UTextBlock*                                        _statUnitTextBox;                                           // 0x0270   (0x0008)  
};

/// Class /Script/ConZ.StatisticsListWidget
/// Size: 0x0028 (0x000260 - 0x000288)
class UStatisticsListWidget : public UUserWidget
{ 
public:
	FText                                              _subcategoryName;                                           // 0x0260   (0x0018)  
	UTextBlock*                                        _subcategoryTextBox;                                        // 0x0278   (0x0008)  
	UScrollBox*                                        _scrollBox;                                                 // 0x0280   (0x0008)  
};

/// Class /Script/ConZ.StatisticsPanelWidget
/// Size: 0x0010 (0x000260 - 0x000270)
class UStatisticsPanelWidget : public UBaseMenu
{ 
public:
	UStatisticsDetailsWidget*                          _survivalDetailsWidget;                                     // 0x0260   (0x0008)  
	UConZStandardButton*                               _backButton;                                                // 0x0268   (0x0008)  


	/// Functions
	// Function /Script/ConZ.StatisticsPanelWidget.CloseMenu
	void CloseMenu();                                                                                                        // [0x23d8df0] Final|Native|Protected 
};

/// Class /Script/ConZ.StatisticsSubcategoryTab
/// Size: 0x0040 (0x000260 - 0x0002A0)
class UStatisticsSubcategoryTab : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UTexture2D*                                        _subcategoryIcon;                                           // 0x0278   (0x0008)  
	UImage*                                            _tabSelectionImage;                                         // 0x0280   (0x0008)  
	UImage*                                            _subcategoryImage;                                          // 0x0288   (0x0008)  
	UTexture2D*                                        _selectedTabTexture;                                        // 0x0290   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0298   (0x0008)  MISSED
};

/// Class /Script/ConZ.StealthSkill
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UStealthSkill : public UDexteritySkill
{ 
public:
	FStealthSkillExperienceAwards                      NoSkillExperienceAwards;                                    // 0x00B0   (0x0008)  
	FStealthSkillExperienceAwards                      BasicSkillExperienceAwards;                                 // 0x00B8   (0x0008)  
	FStealthSkillExperienceAwards                      MediumSkillExperienceAwards;                                // 0x00C0   (0x0008)  
	FStealthSkillExperienceAwards                      AdvancedSkillExperienceAwards;                              // 0x00C8   (0x0008)  
	FStealthSkillExperienceAwards                      AboveAdvancedSkillExperienceAwards;                         // 0x00D0   (0x0008)  
};

/// Class /Script/ConZ.SubtitleWidget
/// Size: 0x0010 (0x000260 - 0x000270)
class USubtitleWidget : public UUserWidget
{ 
public:
	UTextBlock*                                        _subtitle;                                                  // 0x0260   (0x0008)  
	UOverlay*                                          _subtitleOverlay;                                           // 0x0268   (0x0008)  
};

/// Class /Script/ConZ.SurfaceHardnessData
/// Size: 0x0058 (0x000030 - 0x000088)
class USurfaceHardnessData : public UDataAsset
{ 
public:
	float                                              DefaultSurfaceHardness;                                     // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	TMap<TEnumAsByte, float>                           SurfaceHardnessMap;                                         // 0x0038   (0x0050)  
};

/// Class /Script/ConZ.SurvivalSkill
/// Size: 0x0008 (0x0000B0 - 0x0000B8)
class USurvivalSkill : public UIntelligenceSkill
{ 
public:
	FCompassSkillParametersPerSkillLevel               NoSkillParameters;                                          // 0x00B0   (0x0001)  
	FCompassSkillParametersPerSkillLevel               BasicSkillParameters;                                       // 0x00B1   (0x0001)  
	FCompassSkillParametersPerSkillLevel               MediumSkillParameters;                                      // 0x00B2   (0x0001)  
	FCompassSkillParametersPerSkillLevel               AdvancedSkillParameters;                                    // 0x00B3   (0x0001)  
	FCompassSkillParametersPerSkillLevel               AboveAdvancedSkillParameters;                               // 0x00B4   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x00B5   (0x0003)  MISSED
};

/// Class /Script/ConZ.SurvivalStatsHandler
/// Size: 0x0078 (0x000220 - 0x000298)
class ASurvivalStatsHandler : public AActor
{ 
public:
	unsigned char                                      UnknownData00_1[0x78];                                      // 0x0220   (0x0078)  MISSED
};

/// Class /Script/ConZ.SwimmingSkill
/// Size: 0x0000 (0x0000C8 - 0x0000C8)
class USwimmingSkill : public UConstitutionSkill
{ 
public:
};

/// Class /Script/ConZ.SwingItemComponent
/// Size: 0x0270 (0x0000C8 - 0x000338)
class USwingItemComponent : public UItemComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x00C8   (0x0018)  MISSED
	FRuntimeFloatCurve                                 _swingSpeedLevelVsInputSpeed;                               // 0x00E0   (0x0088)  
	FRuntimeFloatCurve                                 _prisonerActionDifficultyVsSwingSpeedLevel;                 // 0x0168   (0x0088)  
	EPrisonerMovementPace                              _maxAllowedPrisonerMovementPaceWhenInHands;                 // 0x01F0   (0x0001)  
	bool                                               _shouldCoolDownPrisonerWhileSwinging;                       // 0x01F1   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x01F2   (0x0006)  MISSED
	FRuntimeFloatCurve                                 _bodyTemperatureCoolingRatesVsSwingSpeedLevel;              // 0x01F8   (0x0088)  
	UAnimMontage*                                      _itemSwingAnimMontage;                                      // 0x0280   (0x0008)  
	UAnimMontage*                                      _prisonerSwingAnimMontage;                                  // 0x0288   (0x0008)  
	FName                                              _prisonerSwingAnimMontageStartSectionName;                  // 0x0290   (0x0008)  
	FName                                              _prisonerSwingAnimMontageLoopSectionName;                   // 0x0298   (0x0008)  
	FName                                              _prisonerSwingAnimMontageEndSectionName;                    // 0x02A0   (0x0008)  
	float                                              _prisonerSwingAnimMontageInterpolationSpeed;                // 0x02A8   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x02AC   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _animMontagePlayRateVsSwingSpeedLevel;                      // 0x02B0   (0x0088)  


	/// Functions
	// Function /Script/ConZ.SwingItemComponent.Server_SetSwingSpeedLevel
	void Server_SetSwingSpeedLevel(int32_t Value, bool shouldPlaySwingMontageEndSection);                                    // [0x23dd740] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.SwingItemComponent.NetMulticast_SetSwingSpeedLevel
	void NetMulticast_SetSwingSpeedLevel(int32_t Value, bool shouldPlaySwingMontageEndSection);                              // [0x23dd650] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/ConZ.Switch
/// Size: 0x0048 (0x000220 - 0x000268)
class ASwitch : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x28];                                      // 0x0220   (0x0028)  MISSED
	UStaticMeshComponent*                              Mesh;                                                       // 0x0248   (0x0008)  
	FText                                              _interactionText;                                           // 0x0250   (0x0018)  
};

/// Class /Script/ConZ.SwitchboardComponent
/// Size: 0x0118 (0x0000B0 - 0x0001C8)
class USwitchboardComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x100];                                     // 0x00B0   (0x0100)  MISSED
	TArray<uint16_t>                                   _repSwitchStates;                                           // 0x01B0   (0x0010)  
	bool                                               _shouldControlParentMeshEmissiveColor;                      // 0x01C0   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x01C1   (0x0007)  MISSED


	/// Functions
	// Function /Script/ConZ.SwitchboardComponent.OnRep_SwitchStates
	void OnRep_SwitchStates();                                                                                               // [0x23dd720] Final|Native|Private 
	// Function /Script/ConZ.SwitchboardComponent.Multicast_SyncSwitchOverrides
	void Multicast_SyncSwitchOverrides(TArray<uint16_t> overrideIndices);                                                    // [0x23395e0] Net|NetReliableNative|Event|NetMulticast|Protected 
};

/// Class /Script/ConZ.SwitchboardMinigame
/// Size: 0x00C0 (0x0002F8 - 0x0003B8)
class ASwitchboardMinigame : public AMinigame
{ 
public:
	USwitchboardComponent*                             _switchboardComponent;                                      // 0x02F8   (0x0008)  
	UGaugeClusterComponent*                            _gaugeClusterComponent;                                     // 0x0300   (0x0008)  
	FComponentReference                                _schematicMeshRef;                                          // 0x0308   (0x0028)  
	float                                              _safetyDuration;                                            // 0x0330   (0x0004)  
	float                                              _switchUseTimeRestriction;                                  // 0x0334   (0x0004)  
	FVector                                            _zoomStartLocation;                                         // 0x0338   (0x000C)  
	FVector                                            _zoomEndLocation;                                           // 0x0344   (0x000C)  
	UCurveFloat*                                       _zoomCurve;                                                 // 0x0350   (0x0008)  
	UCurveFloat*                                       _fadeCurve;                                                 // 0x0358   (0x0008)  
	FComponentReference                                _fuseBurnedParticlesRef;                                    // 0x0360   (0x0028)  
	float                                              _durationToShutOff;                                         // 0x0388   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x038C   (0x0004)  MISSED
	UStaticMeshComponent*                              _fuseMeshComponent;                                         // 0x0390   (0x0008)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x0398   (0x0020)  MISSED
};

/// Class /Script/ConZ.SwitchboardMinigameConfiguration
/// Size: 0x00C8 (0x000048 - 0x000110)
class USwitchboardMinigameConfiguration : public UMinigameConfiguration
{ 
public:
	unsigned char                                      UnknownData00_1[0xC8];                                      // 0x0048   (0x00C8)  MISSED
};

/// Class /Script/ConZ.SwitchboardSwitchAssetData
/// Size: 0x0088 (0x000028 - 0x0000B0)
class USwitchboardSwitchAssetData : public UAssetUserData
{ 
public:
	FGameplayTag                                       ActivationTag;                                              // 0x0028   (0x0008)  
	FTransform                                         OffRelativeTransform;                                       // 0x0030   (0x0030)  
	FTransform                                         OnRelativeTransform;                                        // 0x0060   (0x0030)  
	float                                              TransitionDuration;                                         // 0x0090   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0094   (0x0004)  MISSED
	UAkAudioEvent*                                     ToggleAudio;                                                // 0x0098   (0x0008)  
	TArray<FSwitchMaterialEmissiveColorProperties>     EmissiveControlProperties;                                  // 0x00A0   (0x0010)  
};

/// Class /Script/ConZ.TabButton
/// Size: 0x09F8 (0x000260 - 0x000C58)
class UTabButton : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x60];                                      // 0x0260   (0x0060)  MISSED
	bool                                               PreviewSelectedState;                                       // 0x02C0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x02C1   (0x0007)  MISSED
	UButton*                                           _button;                                                    // 0x02C8   (0x0008)  
	UTextBlock*                                        _text;                                                      // 0x02D0   (0x0008)  
	USizeBox*                                          _sizeBox;                                                   // 0x02D8   (0x0008)  
	FText                                              _initialTitle;                                              // 0x02E0   (0x0018)  
	FTabButtonStyle                                    _selectedButtonStyle;                                       // 0x02F8   (0x0288)  
	FTabButtonStyle                                    _selectedUnfocusedButtonStyle;                              // 0x0580   (0x0288)  
	FTabButtonStyle                                    _deselectedButtonStyle;                                     // 0x0808   (0x0288)  
	FTabTextStyle                                      _selectedTextStyle;                                         // 0x0A90   (0x0098)  
	FTabTextStyle                                      _selectedUnfocusedTextStyle;                                // 0x0B28   (0x0098)  
	FTabTextStyle                                      _deselectedTextStyle;                                       // 0x0BC0   (0x0098)  


	/// Functions
	// Function /Script/ConZ.TabButton.OnClick
	void OnClick();                                                                                                          // [0x22a1e30] Final|Native|Private 
};

/// Class /Script/ConZ.TabButtonAlertable
/// Size: 0x0080 (0x000C58 - 0x000CD8)
class UTabButtonAlertable : public UTabButton
{ 
public:
	FDataTableRowHandle                                _alertedTextColorHandle;                                    // 0x0C58   (0x0010)  
	FDataTableRowHandle                                _alertedBackgroundColorHandle;                              // 0x0C68   (0x0010)  
	float                                              _blinkSpeed;                                                // 0x0C78   (0x0004)  
	unsigned char                                      UnknownData00_6[0x5C];                                      // 0x0C7C   (0x005C)  MISSED
};

/// Class /Script/ConZ.TabButtonInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UTabButtonInterface : public UConZButton
{ 
public:
};

/// Class /Script/ConZ.TabContainer
/// Size: 0x0058 (0x000260 - 0x0002B8)
class UTabContainer : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0260   (0x0030)  MISSED
	UNamedSlot*                                        _containerContent;                                          // 0x0290   (0x0008)  
	EUINavigation                                      _previous;                                                  // 0x0298   (0x0001)  
	EUINavigation                                      _next;                                                      // 0x0299   (0x0001)  
	EUINavigation                                      _in;                                                        // 0x029A   (0x0001)  
	bool                                               _canWrap;                                                   // 0x029B   (0x0001)  
	unsigned char                                      UnknownData01_6[0x1C];                                      // 0x029C   (0x001C)  MISSED
};

/// Class /Script/ConZ.TabElement
/// Size: 0x0050 (0x000260 - 0x0002B0)
class UTabElement : public UUserWidget
{ 
public:
	UWidget*                                           CategoryNameWidget;                                         // 0x0260   (0x0008)  
	char                                               MaxIndex;                                                   // 0x0268   (0x0001)  
	char                                               Index;                                                      // 0x0269   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x026A   (0x0002)  MISSED
	FVector2D                                          _initialPosition;                                           // 0x026C   (0x0008)  
	FVector2D                                          _oldPosition;                                               // 0x0274   (0x0008)  
	FVector2D                                          _newPosition;                                               // 0x027C   (0x0008)  
	FVector2D                                          _initialSize;                                               // 0x0284   (0x0008)  
	FVector2D                                          _oldSize;                                                   // 0x028C   (0x0008)  
	FVector2D                                          _newSize;                                                   // 0x0294   (0x0008)  
	float                                              _oldAlpha;                                                  // 0x029C   (0x0004)  
	float                                              _newAlpha;                                                  // 0x02A0   (0x0004)  
	float                                              _interpolationTime;                                         // 0x02A4   (0x0004)  
	float                                              _interpolationDuration;                                     // 0x02A8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x02AC   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.TabElement.Update
	void Update(bool Up, FVector2D Offset);                                                                                  // [0x23dd810] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/ConZ.TabElement.GetNextIndex
	int32_t GetNextIndex(bool Up);                                                                                           // [0x23dd5b0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.TabGroup
/// Size: 0x0058 (0x000260 - 0x0002B8)
class UTabGroup : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0260   (0x0030)  MISSED
	UPanelWidget*                                      _tabPanel;                                                  // 0x0290   (0x0008)  
	EUINavigation                                      _previous;                                                  // 0x0298   (0x0001)  
	EUINavigation                                      _next;                                                      // 0x0299   (0x0001)  
	EUINavigation                                      _in;                                                        // 0x029A   (0x0001)  
	bool                                               _canWrap;                                                   // 0x029B   (0x0001)  
	TEnumAsByte<EHorizontalAlignment>                  _tabHorizontalAlignment;                                    // 0x029C   (0x0001)  
	TEnumAsByte<EVerticalAlignment>                    _tabVerticalAlignment;                                      // 0x029D   (0x0001)  
	unsigned char                                      UnknownData01_6[0x1A];                                      // 0x029E   (0x001A)  MISSED
};

/// Class /Script/ConZ.TabMenuReborn
/// Size: 0x01D0 (0x000260 - 0x000430)
class UTabMenuReborn : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0260   (0x0008)  MISSED
	UHorizontalBox*                                    _tabContainer;                                              // 0x0268   (0x0008)  
	UWidgetSwitcher*                                   _centralSwitcher;                                           // 0x0270   (0x0008)  
	UWidgetSwitcher*                                   _leftSwitcher;                                              // 0x0278   (0x0008)  
	UWidgetSwitcher*                                   _rightSwitcher;                                             // 0x0280   (0x0008)  
	UVerticalBox*                                      _messageBoxPanel;                                           // 0x0288   (0x0008)  
	UVerticalBox*                                      _messageBoxWithEditableTextPanel;                           // 0x0290   (0x0008)  
	USquadEditor*                                      _squadEditor;                                               // 0x0298   (0x0008)  
	UMessageBox*                                       _messageBox;                                                // 0x02A0   (0x0008)  
	UMessageBoxWithEditableText*                       _messageBoxWithEditableText;                                // 0x02A8   (0x0008)  
	unsigned char                                      UnknownData01_5[0x20];                                      // 0x02B0   (0x0020)  MISSED
	UClass*                                            _tabClass;                                                  // 0x02D0   (0x0008)  
	TArray<FTabMenuTabData>                            _tabData;                                                   // 0x02D8   (0x0010)  
	unsigned char                                      UnknownData02_6[0x148];                                     // 0x02E8   (0x0148)  MISSED
};

/// Class /Script/ConZ.TabModeTab
/// Size: 0x0170 (0x000260 - 0x0003D0)
class UTabModeTab : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	USizeBox*                                          _mainSizeBox;                                               // 0x0278   (0x0008)  
	UImage*                                            _backgroundImage;                                           // 0x0280   (0x0008)  
	UTextBlock*                                        _titleText;                                                 // 0x0288   (0x0008)  
	UTextBlock*                                        _hotkeyText;                                                // 0x0290   (0x0008)  
	FSlateBrush                                        _backgroundTextureActive;                                   // 0x0298   (0x0088)  
	FSlateBrush                                        _backgroundTextureInactive;                                 // 0x0320   (0x0088)  
	FLinearColor                                       _inactiveUnalertedColor;                                    // 0x03A8   (0x0010)  
	FLinearColor                                       _inactiveAlertedColor;                                      // 0x03B8   (0x0010)  
	float                                              _alertBlinkTime;                                            // 0x03C8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x03CC   (0x0004)  MISSED
};

/// Class /Script/ConZ.TacticsSkill
/// Size: 0x00B0 (0x0000B0 - 0x000160)
class UTacticsSkill : public UIntelligenceSkill
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x00B0   (0x0050)  MISSED
	float                                              _updateTime;                                                // 0x0100   (0x0004)  
	float                                              _serverUpdateTime;                                          // 0x0104   (0x0004)  
	float                                              _noSkillDetectionRange;                                     // 0x0108   (0x0004)  
	float                                              _basicDetectionRange;                                       // 0x010C   (0x0004)  
	float                                              _mediumDetectionRange;                                      // 0x0110   (0x0004)  
	float                                              _advancedDetectionRange;                                    // 0x0114   (0x0004)  
	float                                              _aboveAdvancedDetectionRange;                               // 0x0118   (0x0004)  
	float                                              _noSkillDetectionTime;                                      // 0x011C   (0x0004)  
	float                                              _basicDetectionTime;                                        // 0x0120   (0x0004)  
	float                                              _mediumDetectionTime;                                       // 0x0124   (0x0004)  
	float                                              _advancedDetectionTime;                                     // 0x0128   (0x0004)  
	float                                              _aboveAdvancedDetectionTime;                                // 0x012C   (0x0004)  
	float                                              _fadeOutTime;                                               // 0x0130   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0134   (0x0004)  MISSED
	UCurveFloat*                                       _detectionTimeDistanceScale;                                // 0x0138   (0x0008)  
	float                                              _noSkillExperiencePerSecond;                                // 0x0140   (0x0004)  
	float                                              _basicExperiencePerSecond;                                  // 0x0144   (0x0004)  
	float                                              _mediumExperiencePerSecond;                                 // 0x0148   (0x0004)  
	float                                              _advancedExperiencePerSecond;                               // 0x014C   (0x0004)  
	float                                              _tacticsDetectionCurveCoefficient1;                         // 0x0150   (0x0004)  
	float                                              _tacticsDetectionCurveCoefficient2;                         // 0x0154   (0x0004)  
	float                                              _tacticsDetectionCurveCoefficient3;                         // 0x0158   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x015C   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.TacticsSkill.ShouldDetectPrisoner
	bool ShouldDetectPrisoner(APrisoner* Prisoner);                                                                          // [0x23e1590] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.TacticsSkill.IsPrisonerDetected
	bool IsPrisonerDetected(APrisoner* Prisoner);                                                                            // [0x23e0f10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.HandsCorrectionsData
/// Size: 0x0208 (0x000030 - 0x000238)
class UHandsCorrectionsData : public UDataAsset
{ 
public:
	FHandsPoseCorrections                              Corrections;                                                // 0x0030   (0x0100)  
	FHandsPoseCorrections                              FirstPersonCorrections;                                     // 0x0130   (0x0100)  
	bool                                               OverrideFingersOnlyInProne;                                 // 0x0230   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0231   (0x0007)  MISSED
};

/// Class /Script/ConZ.ItemFirstPersonAnimationsDataAsset
/// Size: 0x0068 (0x000030 - 0x000098)
class UItemFirstPersonAnimationsDataAsset : public UDataAsset
{ 
public:
	FItemFirstPersonUpperBodyAnimationsData            UpperBody;                                                  // 0x0030   (0x0050)  
	UBlendSpace*                                       AimOffsetStanding;                                          // 0x0080   (0x0008)  
	UBlendSpace*                                       AimOffsetCrouching;                                         // 0x0088   (0x0008)  
	UBlendSpace*                                       AimOffsetProne;                                             // 0x0090   (0x0008)  
};

/// Class /Script/ConZ.TakeInHandsAssetData
/// Size: 0x0118 (0x000030 - 0x000148)
class UTakeInHandsAssetData : public UInteractionAssetData
{ 
public:
	UClass*                                            AttachmentSocketMountType;                                  // 0x0030   (0x0008)  
	FName                                              GripSocketName;                                             // 0x0038   (0x0008)  
	FName                                              SupportingHandIKSocketName;                                 // 0x0040   (0x0008)  
	UAnimMontage*                                      TakeInHandsMontage;                                         // 0x0048   (0x0008)  
	UAnimMontage*                                      RemoveFromHandsMontage;                                     // 0x0050   (0x0008)  
	UMeleeSkillAnimationsPreset*                       MeleeSkillAnimationsPreset;                                 // 0x0058   (0x0008)  
	UHandsCorrectionsData*                             HandsCorrectionssData;                                      // 0x0060   (0x0008)  
	UItemFirstPersonAnimationsDataAsset*               FirstPersonAnimationsData;                                  // 0x0068   (0x0008)  
	EPrisonerMovementPace                              MaxPace;                                                    // 0x0070   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0071   (0x0003)  MISSED
	float                                              MovementSpeedModifier;                                      // 0x0074   (0x0004)  
	float                                              SwimmingMovementSpeedModifier;                              // 0x0078   (0x0004)  
	float                                              DivingMovementSpeedModifier;                                // 0x007C   (0x0004)  
	float                                              BuoyancyMultiplier;                                         // 0x0080   (0x0004)  
	bool                                               ShouldDropWhenEnteringCombatMode;                           // 0x0084   (0x0001)  
	bool                                               ShouldActionConstrainStance;                                // 0x0085   (0x0001)  
	bool                                               ShouldActionConstrainMove;                                  // 0x0086   (0x0001)  
	bool                                               ShouldActionConstrainTurn;                                  // 0x0087   (0x0001)  
	bool                                               ShouldActionForceStance;                                    // 0x0088   (0x0001)  
	EPrisonerStance                                    ActionStance;                                               // 0x0089   (0x0001)  
	EStanceChangeFlag                                  ActionStanceFlag;                                           // 0x008A   (0x0001)  
	bool                                               IsCarried;                                                  // 0x008B   (0x0001)  
	EPrisonerStance                                    StanceWhileCarrying;                                        // 0x008C   (0x0001)  
	EStanceChangeFlag                                  CarryStanceFlag;                                            // 0x008D   (0x0001)  
	bool                                               ShouldDropWhenEnteringCombatModeWhileCarrying;              // 0x008E   (0x0001)  
	EPrisonerMovementPace                              MaxPaceWhileCarrying;                                       // 0x008F   (0x0001)  
	UAnimSequenceBase*                                 CarryItemIdleAnimationFP;                                   // 0x0090   (0x0008)  
	UAnimSequenceBase*                                 CarryItemIdleAnimationTP;                                   // 0x0098   (0x0008)  
	UAnimMontage*                                      PlayerLongThrowMontage;                                     // 0x00A0   (0x0008)  
	UAnimMontage*                                      PlayerLongThrowLoopMontage;                                 // 0x00A8   (0x0008)  
	UAnimMontage*                                      PlayerShortThrowMontage;                                    // 0x00B0   (0x0008)  
	UAnimMontage*                                      PlayerThrowbackMontage;                                     // 0x00B8   (0x0008)  
	UAnimMontage*                                      ThrowingItemToWeaponMontage;                                // 0x00C0   (0x0008)  
	UAnimMontage*                                      WeaponToThrowingItemMontage;                                // 0x00C8   (0x0008)  
	TMap<EThrowingAnimationType, FThrowingAnimationSet> ThrowingAnimationSets;                                     // 0x00D0   (0x0050)  
	float                                              MaxObstructedDepenetrationDepth;                            // 0x0120   (0x0004)  
	float                                              MaxObstructedDepenetrationDepthProne;                       // 0x0124   (0x0004)  
	UAnimSequenceBase*                                 LeftObstructedIdleAnimationFP;                              // 0x0128   (0x0008)  
	UAnimSequenceBase*                                 RightObstructedIdleAnimationFP;                             // 0x0130   (0x0008)  
	UAnimSequenceBase*                                 ObstructedIdleAnimationTP;                                  // 0x0138   (0x0008)  
	UAnimSequenceBase*                                 ObstructedIdleAnimationProneTP;                             // 0x0140   (0x0008)  
};

/// Class /Script/ConZ.TargetObjective
/// Size: 0x00D0 (0x000330 - 0x000400)
class ATargetObjective : public ARequirementObjective
{ 
public:
	TMap<TWeakObjectPtr, FObjectiveItem>               _targetClasses;                                             // 0x0330   (0x0050)  
	bool                                               _specificTarget;                                            // 0x0380   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0381   (0x0007)  MISSED
	TMap<TWeakObjectPtr, FObjectiveItem>               _targetMeshes;                                              // 0x0388   (0x0050)  
	TArray<TWeakObjectPtr>                             _targetItems;                                               // 0x03D8   (0x0010)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x03E8   (0x0018)  MISSED
};

/// Class /Script/ConZ.TeamDeathmatchParticipantStats
/// Size: 0x0000 (0x000048 - 0x000048)
class UTeamDeathmatchParticipantStats : public UGameEventParticipantStats
{ 
public:
};

/// Class /Script/ConZ.TeamDeathmatchGameEvent
/// Size: 0x0020 (0x000560 - 0x000580)
class ATeamDeathmatchGameEvent : public AGameEventBase
{ 
public:
	FTeamDeathmatchParameters                          _teamDeathmatchParameters;                                  // 0x0560   (0x0014)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x0574   (0x000C)  MISSED


	/// Functions
	// Function /Script/ConZ.TeamDeathmatchGameEvent.SetTeamDeathmatchParameters
	void SetTeamDeathmatchParameters(FTeamDeathmatchParameters& Params);                                                     // [0x23e14f0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.TeamDeathmatchGameEvent.RestrictGameEventArea
	void RestrictGameEventArea();                                                                                            // [0x22bd9b0] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.TeamDeathmatchGameEvent.GetTeamDeathmatchParameters
	FTeamDeathmatchParameters GetTeamDeathmatchParameters();                                                                 // [0x22bd890] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.TeamDeathmatchLocationMarker
/// Size: 0x0028 (0x000418 - 0x000440)
class ATeamDeathmatchLocationMarker : public AGameEventLocationMarker
{ 
public:
	FTeamDeathmatchParameters                          TeamDeathmatchParameters;                                   // 0x0418   (0x0014)  
	FVector                                            FocusOffset;                                                // 0x042C   (0x000C)  
	float                                              MinimalRadius;                                              // 0x0438   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x043C   (0x0004)  MISSED
};

/// Class /Script/ConZ.TeamInvitationWidget
/// Size: 0x0030 (0x000260 - 0x000290)
class UTeamInvitationWidget : public UUserWidget
{ 
public:
	FText                                              InvitationText;                                             // 0x0260   (0x0018)  
	APrisoner*                                         invitor;                                                    // 0x0278   (0x0008)  
	APrisoner*                                         invited;                                                    // 0x0280   (0x0008)  
	bool                                               InvitedPlayerHasFlag;                                       // 0x0288   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0289   (0x0007)  MISSED


	/// Functions
	// Function /Script/ConZ.TeamInvitationWidget.StartTimer
	void StartTimer(float Timeout);                                                                                          // [0x2859740] Event|Public|BlueprintEvent 
};

/// Class /Script/ConZ.TearGasGrenadeItem
/// Size: 0x0030 (0x000A10 - 0x000A40)
class ATearGasGrenadeItem : public ASmokeGrenadeItem
{ 
public:
	float                                              _gasInfluenceMaxRadius;                                     // 0x0A08   (0x0004)  
	float                                              _gasInfluenceFullRadiusTime;                                // 0x0A0C   (0x0004)  
	float                                              _gasInfluenceDurationTime;                                  // 0x0A10   (0x0004)  
	unsigned char                                      UnknownData00_6[0x2C];                                      // 0x0A14   (0x002C)  MISSED
};

/// Class /Script/ConZ.TeleportComponent
/// Size: 0x0040 (0x0000B0 - 0x0000F0)
class UTeleportComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00B0   (0x0008)  MISSED
	FTeleportRepData                                   _repData;                                                   // 0x00B8   (0x0030)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x00E8   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.TeleportComponent.Server_ReportClientReadyToFinishTeleport
	void Server_ReportClientReadyToFinishTeleport(char RequestID);                                                           // [0x23e1470] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.TeleportComponent.OnRep_Data
	void OnRep_Data();                                                                                                       // [0x23e0fb0] Native|Protected     
};

/// Class /Script/ConZ.TeleportComponentOwner
/// Size: 0x0000 (0x000028 - 0x000028)
class UTeleportComponentOwner : public UInterface
{ 
public:
};

/// Class /Script/ConZ.TeleportSubject
/// Size: 0x0000 (0x000028 - 0x000028)
class UTeleportSubject : public UInterface
{ 
public:
};

/// Class /Script/ConZ.TempPlayerStart
/// Size: 0x0000 (0x000250 - 0x000250)
class ATempPlayerStart : public APlayerStart
{ 
public:
};

/// Class /Script/ConZ.TextBoxWithLabel
/// Size: 0x1778 (0x000260 - 0x0019D8)
class UTextBoxWithLabel : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x68];                                      // 0x0260   (0x0068)  MISSED
	UTextBlock*                                        _name;                                                      // 0x02C8   (0x0008)  
	UEditableTextBox*                                  _inputTextBox;                                              // 0x02D0   (0x0008)  
	UImage*                                            _focusBackgroundImage;                                      // 0x02D8   (0x0008)  
	UImage*                                            _showPasswordOff;                                           // 0x02E0   (0x0008)  
	UImage*                                            _showPasswordOn;                                            // 0x02E8   (0x0008)  
	UOverlay*                                          _showPasswordIconOverlay;                                   // 0x02F0   (0x0008)  
	FText                                              _label;                                                     // 0x02F8   (0x0018)  
	FTextBoxWithLabelStyle                             _selectedAndFocusedTWLStyle;                                // 0x0310   (0x0158)  
	FTextBoxWithLabelStyle                             _selectedAndUnfocusedTWLStyle;                              // 0x0468   (0x0158)  
	FTextBoxWithLabelStyle                             _unselectedTWLStyle;                                        // 0x05C0   (0x0158)  
	FTextBoxWithLabelStyle                             _highlightedTWLStyle;                                       // 0x0718   (0x0158)  
	FTextBoxWithLabelStyle                             _disabledTWLStyle;                                          // 0x0870   (0x0158)  
	FEditableTextBoxStyle                              _correctInputTextBoxStyle;                                  // 0x09C8   (0x07F8)  
	FEditableTextBoxStyle                              _incorrectInputTextBoxStyle;                                // 0x11C0   (0x07F8)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x19B8   (0x0020)  MISSED


	/// Functions
	// Function /Script/ConZ.TextBoxWithLabel.OnTextChanged
	void OnTextChanged(FText& Text);                                                                                         // [0x23e13a0] Native|Protected|HasOutParms 
	// Function /Script/ConZ.TextBoxWithLabel.OnShowPasswordToggle
	FEventReply OnShowPasswordToggle(FGeometry MyGeometry, FPointerEvent& MouseEvent);                                       // [0x23e0fd0] Native|Protected|HasOutParms 
};

/// Class /Script/ConZ.TextInputWidget
/// Size: 0x00C0 (0x000260 - 0x000320)
class UTextInputWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UButton*                                           MainButton;                                                 // 0x0278   (0x0008)  
	UEditableTextBox*                                  TextBox;                                                    // 0x0280   (0x0008)  
	UTextBlock*                                        TextBlock;                                                  // 0x0288   (0x0008)  
	USizeBox*                                          TitleSizeBox;                                               // 0x0290   (0x0008)  
	USizeBox*                                          InputSizeBox;                                               // 0x0298   (0x0008)  
	UImage*                                            InputImage;                                                 // 0x02A0   (0x0008)  
	UImage*                                            Image;                                                      // 0x02A8   (0x0008)  
	UImage*                                            Image;                                                      // 0x02B0   (0x0008)  
	int32_t                                            InputFontSize;                                              // 0x02B8   (0x0004)  
	int32_t                                            TitleFontSize;                                              // 0x02BC   (0x0004)  
	int32_t                                            TitleFontSizeHighlighted;                                   // 0x02C0   (0x0004)  
	float                                              TitleWidth;                                                 // 0x02C4   (0x0004)  
	float                                              InputWidth;                                                 // 0x02C8   (0x0004)  
	float                                              Height;                                                     // 0x02CC   (0x0004)  
	FText                                              Title;                                                      // 0x02D0   (0x0018)  
	FText                                              DefaultValue;                                               // 0x02E8   (0x0018)  
	float                                              InputPadding;                                               // 0x0300   (0x0004)  
	TEnumAsByte<EHorizontalAlignment>                  ValueJustification;                                         // 0x0304   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0305   (0x0003)  MISSED
	FLinearColor                                       InputBackgroundColor;                                       // 0x0308   (0x0010)  
	TEnumAsByte<ETextInputType>                        InputType;                                                  // 0x0318   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0319   (0x0007)  MISSED


	/// Functions
	// Function /Script/ConZ.TextInputWidget.OnTextBoxTextCommitted
	void OnTextBoxTextCommitted(FText& Text, TEnumAsByte<ETextCommit> CommitMethod);                                         // [0x23e1270] Native|Public|HasOutParms 
	// Function /Script/ConZ.TextInputWidget.OnTextBoxTextChanged
	void OnTextBoxTextChanged(FText& Text);                                                                                  // [0x23e11a0] Native|Public|HasOutParms 
	// Function /Script/ConZ.TextInputWidget.GetValueInt
	int32_t GetValueInt();                                                                                                   // [0x23e0ee0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.TextInputWidget.GetValue
	FText GetValue();                                                                                                        // [0x23e0e40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.TextOnlyTooltip
/// Size: 0x0020 (0x000260 - 0x000280)
class UTextOnlyTooltip : public UUserWidget
{ 
public:
	FText                                              Text;                                                       // 0x0260   (0x0018)  
	UTextBlock*                                        _textBlock;                                                 // 0x0278   (0x0008)  
};

/// Class /Script/ConZ.TextStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UTextStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.Texture2DStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UTexture2DStatics : public UObject
{ 
public:
};

/// Class /Script/ConZ.ThermalSensorComponent
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UThermalSensorComponent : public UActorComponent
{ 
public:
	float                                              _temperature;                                               // 0x00B0   (0x0004)  
	float                                              _emissivity;                                                // 0x00B4   (0x0004)  
	float                                              _radius;                                                    // 0x00B8   (0x0004)  
	float                                              _mass;                                                      // 0x00BC   (0x0004)  
	float                                              _specificHeatCapacity;                                      // 0x00C0   (0x0004)  
	float                                              _thermalConductivity;                                       // 0x00C4   (0x0004)  
	unsigned char                                      UnknownData00_5[0x20];                                      // 0x00C8   (0x0020)  MISSED
	char                                               _packedTemperature;                                         // 0x00E8   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x00E9   (0x0007)  MISSED
	bool                                               _temperatureReplicationEnabled;                             // 0x00F0   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x00F1   (0x0003)  MISSED
	float                                              _packTemperatureOffset;                                     // 0x00F4   (0x0004)  
	float                                              _packTemperatureScale;                                      // 0x00F8   (0x0004)  
	float                                              _packTemperatureGamma;                                      // 0x00FC   (0x0004)  


	/// Functions
	// Function /Script/ConZ.ThermalSensorComponent.OnRep_Temperature
	void OnRep_Temperature();                                                                                                // [0x23e62a0] Final|Native|Private 
};

/// Class /Script/ConZ.Thermometer
/// Size: 0x0010 (0x000910 - 0x000920)
class AThermometer : public AItem
{ 
public:
	UThermalSensorComponent*                           _thermalSensorComponent;                                    // 0x0910   (0x0008)  
	int32_t                                            _thermometerFluidMaterialId;                                // 0x0918   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x091C   (0x0004)  MISSED
};

/// Class /Script/ConZ.ThieverySkill
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UThieverySkill : public UDexteritySkill
{ 
public:
	UCurveFloat*                                       _lockpickingDurationModifierCurve;                          // 0x00B0   (0x0008)  
	UCurveFloat*                                       _lockpickingStartAngleModifierCurve;                        // 0x00B8   (0x0008)  
	UCurveFloat*                                       _lockpickingAngleModifierCurve;                             // 0x00C0   (0x0008)  
	UCurveFloat*                                       _lockpickingDurabilityModifierCurve;                        // 0x00C8   (0x0008)  
	UCurveFloat*                                       _dialPadDurationModifierCurve;                              // 0x00D0   (0x0008)  
	UCurveFloat*                                       _voltageMatchingDurationModifierCurve;                      // 0x00D8   (0x0008)  
};

/// Class /Script/ConZ.ThrowableItemTag
/// Size: 0x0038 (0x000030 - 0x000068)
class UThrowableItemTag : public UBaseItemTag
{ 
public:
	FMeleeWeaponDesc                                   WeaponDesc;                                                 // 0x0030   (0x0038)  
};

/// Class /Script/ConZ.ThrowingComponent
/// Size: 0x1400 (0x0001D0 - 0x0015D0)
class UThrowingComponent : public UProjectileMovementComponent
{ 
public:
	EItemThrowingBehavior                              ItemThrowingBehavior;                                       // 0x01D0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x01D1   (0x0003)  MISSED
	float                                              Dispersion;                                                 // 0x01D4   (0x0004)  
	float                                              PierceMaxDensity;                                           // 0x01D8   (0x0004)  
	float                                              ThrowEnergyMultiplier;                                      // 0x01DC   (0x0004)  
	FRotator                                           InitialRotation;                                            // 0x01E0   (0x000C)  
	FRotator                                           UpdatedRotation;                                            // 0x01EC   (0x000C)  
	FRotator                                           MinRandomImpactRotation;                                    // 0x01F8   (0x000C)  
	FRotator                                           MaxRandomImpactRotation;                                    // 0x0204   (0x000C)  
	float                                              PenetrationDepth;                                           // 0x0210   (0x0004)  
	bool                                               IsFloatable;                                                // 0x0214   (0x0001)  
	EPrisonerStance                                    MinStance;                                                  // 0x0215   (0x0001)  
	unsigned char                                      UnknownData01_5[0x13AA];                                    // 0x0216   (0x13AA)  MISSED
	UParticleSystem*                                   _splashParticleSystem;                                      // 0x15C0   (0x0008)  
	UAkAudioEvent*                                     _splashAudioEvent;                                          // 0x15C8   (0x0008)  


	/// Functions
	// Function /Script/ConZ.ThrowingComponent.OnProjectileStopped
	void OnProjectileStopped(FHitResult& ImpactResult);                                                                      // [0x23e61b0] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.ThrowingComponent.OnProjectileBounced
	void OnProjectileBounced(FHitResult& ImpactResult, FVector& ImpactVelocity);                                             // [0x23e6090] Final|Native|Private|HasOutParms|HasDefaults 
	// Function /Script/ConZ.ThrowingComponent.Multicast_PierceHitObject
	void Multicast_PierceHitObject(FVector ImpactVelocity, FHitResult ZeroBasedImpactResult);                                // [0x23e5d90] Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults 
};

/// Class /Script/ConZ.ThrowingQuickAccessItemWidget
/// Size: 0x0058 (0x000260 - 0x0002B8)
class UThrowingQuickAccessItemWidget : public UUserWidget
{ 
public:
	char                                               MaxWidth;                                                   // 0x0260   (0x0001)  
	char                                               MaxHeight;                                                  // 0x0261   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0262   (0x0006)  MISSED
	UImage*                                            _imageWidget;                                               // 0x0268   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0270   (0x0008)  MISSED
	float                                              DefaultWidth;                                               // 0x0278   (0x0004)  
	float                                              DefaultHeight;                                              // 0x027C   (0x0004)  
	FVector2D                                          DefaultPosition;                                            // 0x0280   (0x0008)  
	UWidget*                                           _itemWidget;                                                // 0x0288   (0x0008)  
	USizeBox*                                          SizeBox;                                                    // 0x0290   (0x0008)  
	UImage*                                            _additionalIcon;                                            // 0x0298   (0x0008)  
	UTextBlock*                                        _additionalText;                                            // 0x02A0   (0x0008)  
	UTextBlock*                                        TextBlockItemSlotNumber;                                    // 0x02A8   (0x0008)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x02B0   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.ThrowingQuickAccessItemWidget.OnImageWidgetMouseButtonDown
	FEventReply OnImageWidgetMouseButtonDown(FGeometry MyGeometry, FPointerEvent& MouseEvent);                               // [0x23e5ec0] Final|Native|Private|HasOutParms 
};

/// Class /Script/ConZ.TimeControllableLight
/// Size: 0x0018 (0x000230 - 0x000248)
class ATimeControllableLight : public ALight
{ 
public:
	bool                                               _shouldExistOnDedicatedServer;                              // 0x0230   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0231   (0x0007)  MISSED
	UCurveFloat*                                       _intensityVsTimeOfDayCurve;                                 // 0x0238   (0x0008)  
	UPointLightComponent*                              _pointLightComponent;                                       // 0x0240   (0x0008)  


	/// Functions
	// Function /Script/ConZ.TimeControllableLight.OnTimeOfDayChanged
	void OnTimeOfDayChanged(AWeatherController2* sender);                                                                    // [0x23e62c0] Final|Native|Public  
};

/// Class /Script/ConZ.TimeControllableSpotLight
/// Size: 0x0018 (0x000230 - 0x000248)
class ATimeControllableSpotLight : public ALight
{ 
public:
	bool                                               _shouldExistOnDedicatedServer;                              // 0x0230   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0231   (0x0007)  MISSED
	UCurveFloat*                                       _intensityVsTimeOfDayCurve;                                 // 0x0238   (0x0008)  
	USpotLightComponent*                               _pointLightComponent;                                       // 0x0240   (0x0008)  


	/// Functions
	// Function /Script/ConZ.TimeControllableSpotLight.OnTimeOfDayChanged
	void OnTimeOfDayChanged(AWeatherController2* sender);                                                                    // [0x23e62c0] Final|Native|Public  
};

/// Class /Script/ConZ.TimedGiftSpawner
/// Size: 0x0068 (0x000220 - 0x000288)
class ATimedGiftSpawner : public AActor
{ 
public:
	int64_t                                            _giftSpawnTime;                                             // 0x0220   (0x0008)  
	TArray<TWeakObjectPtr>                             _possibleGifts;                                             // 0x0228   (0x0010)  
	TWeakObjectPtr<UClass*>                            _referenceItem;                                             // 0x0238   (0x0028)  
	float                                              _giftOffsetFromReferenceItem;                               // 0x0260   (0x0004)  
	unsigned char                                      UnknownData00_6[0x24];                                      // 0x0264   (0x0024)  MISSED
};

/// Class /Script/ConZ.TriggerComponentState
/// Size: 0x0000 (0x000028 - 0x000028)
class UTriggerComponentState : public UObject
{ 
public:
};

/// Class /Script/ConZ.TimedTriggerComponentState
/// Size: 0x0008 (0x000028 - 0x000030)
class UTimedTriggerComponentState : public UTriggerComponentState
{ 
public:
	float                                              CountdownRemainingTime;                                     // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Class /Script/ConZ.TimedTriggerComponent
/// Size: 0x0030 (0x0004D0 - 0x000500)
class UTimedTriggerComponent : public UTriggerComponent
{ 
public:
	float                                              _countdownDuration;                                         // 0x04D0   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x04D4   (0x0004)  MISSED
	UAkAudioEvent*                                     _countdownStartAudioEvent;                                  // 0x04D8   (0x0008)  
	UAkAudioEvent*                                     _countdownStopAudioEvent;                                   // 0x04E0   (0x0008)  
	float                                              _countdownRemainingTime;                                    // 0x04E8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x14];                                      // 0x04EC   (0x0014)  MISSED


	/// Functions
	// Function /Script/ConZ.TimedTriggerComponent.OnCountdownTimer
	void OnCountdownTimer();                                                                                                 // [0x23e5ea0] Final|Native|Private 
};

/// Class /Script/ConZ.TireToSurfaceAudioData
/// Size: 0x0228 (0x000030 - 0x000258)
class UTireToSurfaceAudioData : public UDataAsset
{ 
public:
	float                                              _maxSoundRange;                                             // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	UAkAudioEvent*                                     _movementStarted;                                           // 0x0038   (0x0008)  
	UAkAudioEvent*                                     _movementStopped;                                           // 0x0040   (0x0008)  
	UAkAudioEvent*                                     _noSurface;                                                 // 0x0048   (0x0008)  
	TArray<FTireSurfaceAudioEntry>                     _soundGroups;                                               // 0x0050   (0x0010)  
	unsigned char                                      UnknownData01_6[0x1F8];                                     // 0x0060   (0x01F8)  MISSED
};

/// Class /Script/ConZ.ToggleCamouflageAction
/// Size: 0x0008 (0x0000A0 - 0x0000A8)
class UToggleCamouflageAction : public USkillAction
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00A0   (0x0008)  MISSED
};

/// Class /Script/ConZ.TooltipBase
/// Size: 0x0038 (0x000260 - 0x000298)
class UTooltipBase : public UUserWidget
{ 
public:
	UImage*                                            BackgroundImage;                                            // 0x0260   (0x0008)  
	UImage*                                            ItemImage;                                                  // 0x0268   (0x0008)  
	UVerticalBox*                                      ItemImageBox;                                               // 0x0270   (0x0008)  
	UTextBlock*                                        NameText;                                                   // 0x0278   (0x0008)  
	UTextBlock*                                        DescriptionText;                                            // 0x0280   (0x0008)  
	UProgressBar*                                      ProgressBar;                                                // 0x0288   (0x0008)  
	AItem*                                             _item;                                                      // 0x0290   (0x0008)  


	/// Functions
	// Function /Script/ConZ.TooltipBase.InitFromItem
	void InitFromItem(AItem* Item);                                                                                          // [0x23e5cd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.TooltipBase.InitFromCaptionAndDescription
	void InitFromCaptionAndDescription(FText& Caption, FText& Description);                                                  // [0x23e5b60] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/ConZ.Tournament
/// Size: 0x0050 (0x000220 - 0x000270)
class ATournament : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0220   (0x0010)  MISSED
	UAkAudioEvent*                                     StartAnnouncement;                                          // 0x0230   (0x0008)  
	UAkAudioEvent*                                     SuddenDeathAnnouncement;                                    // 0x0238   (0x0008)  
	UAkAudioEvent*                                     EndAnnouncement;                                            // 0x0240   (0x0008)  
	bool                                               _inProgress;                                                // 0x0248   (0x0001)  
	bool                                               _inSuddenDeath;                                             // 0x0249   (0x0001)  
	bool                                               _hasEnded;                                                  // 0x024A   (0x0001)  
	unsigned char                                      UnknownData01_5[0x5];                                       // 0x024B   (0x0005)  MISSED
	TArray<FTournamentStats>                           _stats;                                                     // 0x0250   (0x0010)  
	UTournamentScoreboardWidget*                       _scoreboardWidget;                                          // 0x0260   (0x0008)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0268   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.Tournament.OnRep_Stats
	void OnRep_Stats();                                                                                                      // [0x23e6280] Final|Native|Private 
	// Function /Script/ConZ.Tournament.Multicast_PlayAnnouncement
	void Multicast_PlayAnnouncement(UAkAudioEvent* AudioEvent);                                                              // [0x22cad10] Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable 
	// Function /Script/ConZ.Tournament.IsInSuddenDeath
	bool IsInSuddenDeath();                                                                                                  // [0xaa7aa0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Tournament.IsInProgress
	bool IsInProgress();                                                                                                     // [0x23e5d60] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Tournament.HasEnded
	bool HasEnded();                                                                                                         // [0x23e5b30] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Tournament.GetStatsOrderedByDeath
	void GetStatsOrderedByDeath(TArray<FTournamentStats>& stats);                                                            // [0x23e5a50] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Tournament.GetStats
	TArray<FTournamentStats> GetStats();                                                                                     // [0x23e5940] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.Tournament.GetScoreboardWidget
	UTournamentScoreboardWidget* GetScoreboardWidget();                                                                      // [0x22e3ff0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.TournamentScoreboardRowWidget
/// Size: 0x0028 (0x000260 - 0x000288)
class UTournamentScoreboardRowWidget : public UUserWidget
{ 
public:
	UTextBlock*                                        _rankText;                                                  // 0x0260   (0x0008)  
	UTextBlock*                                        _playerNameText;                                            // 0x0268   (0x0008)  
	UTextBlock*                                        _famePointsText;                                            // 0x0270   (0x0008)  
	UTextBlock*                                        _killsText;                                                 // 0x0278   (0x0008)  
	UImage*                                            _deathIcon;                                                 // 0x0280   (0x0008)  
};

/// Class /Script/ConZ.TournamentScoreboardWidget
/// Size: 0x0018 (0x000260 - 0x000278)
class UTournamentScoreboardWidget : public UUserWidget
{ 
public:
	UTextBlock*                                        _instruction;                                               // 0x0260   (0x0008)  
	UVerticalBox*                                      _table;                                                     // 0x0268   (0x0008)  
	UClass*                                            _rowClass;                                                  // 0x0270   (0x0008)  
};

/// Class /Script/ConZ.TrackingMarker2
/// Size: 0x0068 (0x000220 - 0x000288)
class ATrackingMarker2 : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0220   (0x0008)  MISSED
	USceneComponent*                                   SceneComponent;                                             // 0x0228   (0x0008)  
	UArrowComponent*                                   DirectionArrow;                                             // 0x0230   (0x0008)  
	UDecalComponent*                                   ConeDecal;                                                  // 0x0238   (0x0008)  
	UParticleSystemComponent*                          Particles;                                                  // 0x0240   (0x0008)  
	float                                              TickFrequency;                                              // 0x0248   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x024C   (0x0004)  MISSED
	UClass*                                            AnimalClass;                                                // 0x0250   (0x0008)  
	float                                              Duration;                                                   // 0x0258   (0x0004)  
	FVector                                            Direction;                                                  // 0x025C   (0x000C)  
	float                                              health;                                                     // 0x0268   (0x0004)  
	EBleedingSeverity                                  BleedingSeverity;                                           // 0x026C   (0x0001)  
	bool                                               ShowBleedingInfo;                                           // 0x026D   (0x0001)  
	bool                                               ShowWoundInfo;                                              // 0x026E   (0x0001)  
	bool                                               ShowBasicWoundInfo;                                         // 0x026F   (0x0001)  
	float                                              MaxSevereBleedTime;                                         // 0x0270   (0x0004)  
	float                                              MaxHeavyBleedTime;                                          // 0x0274   (0x0004)  
	float                                              MaxModerateBleedTime;                                       // 0x0278   (0x0004)  
	float                                              MaxLightBleedTime;                                          // 0x027C   (0x0004)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0280   (0x0008)  MISSED
};

/// Class /Script/ConZ.Tradeable
/// Size: 0x0000 (0x000028 - 0x000028)
class UTradeable : public UInterface
{ 
public:
};

/// Class /Script/ConZ.NPCInteractionBoxComponent
/// Size: 0x0000 (0x000480 - 0x000480)
class UNPCInteractionBoxComponent : public UBoxComponent
{ 
public:
};

/// Class /Script/ConZ.TradeOutpostBuilding
/// Size: 0x0070 (0x000328 - 0x000398)
class ATradeOutpostBuilding : public ABuilding
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0328   (0x0030)  MISSED
	float                                              _sedentaryNPCRelevancyDistance;                             // 0x0358   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x035C   (0x0004)  MISSED
	TArray<FSedentaryNPCMarker>                        _sedentaryNPCMarkers;                                       // 0x0360   (0x0010)  
	TArray<ASedentaryNPC*>                             _spawnedSedentaryNPCs;                                      // 0x0370   (0x0010)  
	unsigned char                                      UnknownData02_6[0x18];                                      // 0x0380   (0x0018)  MISSED
};

/// Class /Script/ConZ.TradeOutpostManager
/// Size: 0x0040 (0x000220 - 0x000260)
class ATradeOutpostManager : public AActor
{ 
public:
	UBillboardComponent*                               _sprite;                                                    // 0x0220   (0x0008)  
	UTradingOutpostDescriptionDataAsset*               _outpostDescription;                                        // 0x0228   (0x0008)  
	ETradeOutpostProsperityLevel                       _startingProsperityLevel;                                   // 0x0230   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0231   (0x0007)  MISSED
	TArray<ATradePost*>                                _assignedTradePosts;                                        // 0x0238   (0x0010)  
	TArray<ATradeOutpostBuilding*>                     _otherAssignedTradeOutpostBuildings;                        // 0x0248   (0x0010)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0258   (0x0008)  MISSED
};

/// Class /Script/ConZ.VehicleSpawnBoxComponent
/// Size: 0x0000 (0x000480 - 0x000480)
class UVehicleSpawnBoxComponent : public UBoxComponent
{ 
public:
};

/// Class /Script/ConZ.TradePost
/// Size: 0x00B8 (0x000398 - 0x000450)
class ATradePost : public ATradeOutpostBuilding
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0398   (0x0018)  MISSED
	TArray<FTraderMarker>                              _traderMarkers;                                             // 0x03B0   (0x0010)  
	TArray<FTraderLocationMarker>                      _locationMarkers;                                           // 0x03C0   (0x0010)  
	TArray<ATrader*>                                   _spawnedTraders;                                            // 0x03D0   (0x0010)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x03E0   (0x0010)  MISSED
	TMap<FDbIntegerId, FSpawnedDepotsHelperStruct>     _spawnedDepots;                                             // 0x03F0   (0x0050)  
	unsigned char                                      UnknownData02_6[0x10];                                      // 0x0440   (0x0010)  MISSED
};

/// Class /Script/ConZ.TraderBuyPanel
/// Size: 0x0218 (0x000260 - 0x000478)
class UTraderBuyPanel : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UClass*                                            _traderItemButtonClass;                                     // 0x0278   (0x0008)  
	UTabContainer*                                     _cashOrCreditRadioBtn;                                      // 0x0280   (0x0008)  
	UWidgetSwitcher*                                   _subpanelSwitcher;                                          // 0x0288   (0x0008)  
	UPanelWidget*                                      _catResults;                                                // 0x0290   (0x0008)  
	UWrapBox*                                          _itemsOfChosenCategory;                                     // 0x0298   (0x0008)  
	UTraderItemButton*                                 _chosenItem;                                                // 0x02A0   (0x0008)  
	UWrapBox*                                          _relatedItems;                                              // 0x02A8   (0x0008)  
	USearchBox*                                        _itemSearchBox;                                             // 0x02B0   (0x0008)  
	UTraderDropdownMenu*                               _itemCategoryDropdown;                                      // 0x02B8   (0x0008)  
	UTraderDropdownMenu*                               _itemSortingDropdown;                                       // 0x02C0   (0x0008)  
	UTextBlock*                                        _categoryTitle;                                             // 0x02C8   (0x0008)  
	UTraderFilterFamePointsButton*                     _btnFilterSufficientFP;                                     // 0x02D0   (0x0008)  
	UTraderFilterFamePointsButton*                     _btnFilterInsufficientFP;                                   // 0x02D8   (0x0008)  
	UTextBlock*                                        _warningMessage;                                            // 0x02E0   (0x0008)  
	UTextBlock*                                        _headerBannerPrisonerCashOnHand;                            // 0x02E8   (0x0008)  
	UTextBlock*                                        _headerBannerPrisonerCashInBank;                            // 0x02F0   (0x0008)  
	UTextBlock*                                        _prisonerCashOnHand;                                        // 0x02F8   (0x0008)  
	UTextBlock*                                        _prisonerCashInBank;                                        // 0x0300   (0x0008)  
	UTextBlock*                                        _prisonerGoldInBank;                                        // 0x0308   (0x0008)  
	UTextBlock*                                        _prisonerFamePoints;                                        // 0x0310   (0x0008)  
	UTextBlock*                                        _buyTotal;                                                  // 0x0318   (0x0008)  
	UTextBlock*                                        _buyTotalGold;                                              // 0x0320   (0x0008)  
	UWidgetSwitcher*                                   _exitBackSwitcher;                                          // 0x0328   (0x0008)  
	UButton*                                           _btnExit;                                                   // 0x0330   (0x0008)  
	UButton*                                           _btnBack;                                                   // 0x0338   (0x0008)  
	UWidgetSwitcher*                                   _cartBuySwitcher;                                           // 0x0340   (0x0008)  
	UButton*                                           _btnCart;                                                   // 0x0348   (0x0008)  
	UButton*                                           _btnBuy;                                                    // 0x0350   (0x0008)  
	UAkAudioEvent*                                     _soundExitOnClick;                                          // 0x0358   (0x0008)  
	UAkAudioEvent*                                     _soundBackOnClick;                                          // 0x0360   (0x0008)  
	UAkAudioEvent*                                     _soundCartOnClick;                                          // 0x0368   (0x0008)  
	UAkAudioEvent*                                     _soundButtonOnHover;                                        // 0x0370   (0x0008)  
	int32_t                                            _cashOrCreditFontSizeUnselected;                            // 0x0378   (0x0004)  
	int32_t                                            _cashOrCreditFontSizeSelected;                              // 0x037C   (0x0004)  
	unsigned char                                      UnknownData01_5[0x70];                                      // 0x0380   (0x0070)  MISSED
	FSlateColor                                        _buyTotalZeroColor;                                         // 0x03F0   (0x0028)  
	FSlateColor                                        _buyTotalNonZeroColor;                                      // 0x0418   (0x0028)  
	FSlateColor                                        _noOwnedCardInInventoryColor;                               // 0x0440   (0x0028)  
	TArray<FSlateBrush>                                _sortTypeBrushes;                                           // 0x0468   (0x0010)  


	/// Functions
	// Function /Script/ConZ.TraderBuyPanel.OnExitButtonClicked
	void OnExitButtonClicked();                                                                                              // [0x23ebca0] Final|Native|Private 
	// Function /Script/ConZ.TraderBuyPanel.OnCartButtonClicked
	void OnCartButtonClicked();                                                                                              // [0x23ebbf0] Final|Native|Private 
	// Function /Script/ConZ.TraderBuyPanel.OnBuyButtonClicked
	void OnBuyButtonClicked();                                                                                               // [0x23ebbb0] Final|Native|Private 
	// Function /Script/ConZ.TraderBuyPanel.OnBackButtonClicked
	void OnBackButtonClicked();                                                                                              // [0x23ebb90] Final|Native|Private 
	// Function /Script/ConZ.TraderBuyPanel.OnAnyButtonHovered
	void OnAnyButtonHovered();                                                                                               // [0x23ebb50] Final|Native|Private 
};

/// Class /Script/ConZ.TraderBuyUIController
/// Size: 0x0198 (0x000028 - 0x0001C0)
class UTraderBuyUIController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x198];                                     // 0x0028   (0x0198)  MISSED
};

/// Class /Script/ConZ.TraderForPlayerAndDepotItemRequest
/// Size: 0x0008 (0x000028 - 0x000030)
class UTraderForPlayerAndDepotItemRequest : public UPlayerRpcChannelServerRequest
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.TraderForPlayerAndDepotItemResponse
/// Size: 0x0008 (0x000028 - 0x000030)
class UTraderForPlayerAndDepotItemResponse : public UPlayerRpcChannelServerResponse
{ 
public:
	ATrader*                                           _payload;                                                   // 0x0028   (0x0008)  
};

/// Class /Script/ConZ.TraderDepotPanel
/// Size: 0x0040 (0x000260 - 0x0002A0)
class UTraderDepotPanel : public UUserWidget
{ 
public:
	UTextBlock*                                        _prisonerCashOnHand;                                        // 0x0260   (0x0008)  
	UTextBlock*                                        _prisonerCashInBank;                                        // 0x0268   (0x0008)  
	UTextBlock*                                        _prisonerGoldInBank;                                        // 0x0270   (0x0008)  
	UButton*                                           _btnExit;                                                   // 0x0278   (0x0008)  
	UItemInventoryDepotWidget2*                        _inventoryDepotWidget2;                                     // 0x0280   (0x0008)  
	UAkAudioEvent*                                     _soundExitOnClick;                                          // 0x0288   (0x0008)  
	UAkAudioEvent*                                     _soundButtonOnHover;                                        // 0x0290   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0298   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.TraderDepotPanel.OnExitClicked
	void OnExitClicked();                                                                                                    // [0x23ebcc0] Final|Native|Private 
	// Function /Script/ConZ.TraderDepotPanel.OnAnyButtonHover
	void OnAnyButtonHover();                                                                                                 // [0x23ebb30] Final|Native|Private 
};

/// Class /Script/ConZ.TraderDropdownMenu
/// Size: 0x0078 (0x000260 - 0x0002D8)
class UTraderDropdownMenu : public UUserWidget
{ 
public:
	bool                                               PreviewSelectedState;                                       // 0x0260   (0x0001)  
	unsigned char                                      UnknownData00_5[0x37];                                      // 0x0261   (0x0037)  MISSED
	UWidgetSwitcher*                                   _backgroundSwitcher;                                        // 0x0298   (0x0008)  
	UComboBoxStringWithIndexing*                       _comboBox;                                                  // 0x02A0   (0x0008)  
	UImage*                                            _dropdownIcon;                                              // 0x02A8   (0x0008)  
	TArray<FTraderDropdownMenuEntry>                   _comboBoxEntries;                                           // 0x02B0   (0x0010)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x02C0   (0x0018)  MISSED


	/// Functions
	// Function /Script/ConZ.TraderDropdownMenu.OnComboBoXSelectionChanged
	void OnComboBoXSelectionChanged(int32_t SelectedIndex);                                                                  // [0x23ebc10] Final|Native|Private 
};

/// Class /Script/ConZ.TraderFilterFamePointsButton
/// Size: 0x0168 (0x000260 - 0x0003C8)
class UTraderFilterFamePointsButton : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x0260   (0x0050)  MISSED
	UImage*                                            _lockImage;                                                 // 0x02B0   (0x0008)  
	FSlateBrush                                        _selectedLookBrush;                                         // 0x02B8   (0x0088)  
	FSlateBrush                                        _deselectedLookBrush;                                       // 0x0340   (0x0088)  
};

/// Class /Script/ConZ.TraderItemButton
/// Size: 0x01E0 (0x000260 - 0x000440)
class UTraderItemButton : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x68];                                      // 0x0260   (0x0068)  MISSED
	UButton*                                           _button;                                                    // 0x02C8   (0x0008)  
	UImage*                                            _icon;                                                      // 0x02D0   (0x0008)  
	UOverlay*                                          _priceOverlay;                                              // 0x02D8   (0x0008)  
	UTextBlock*                                        _title;                                                     // 0x02E0   (0x0008)  
	UOverlay*                                          _tradeDataOverlay;                                          // 0x02E8   (0x0008)  
	UTextBlock*                                        _price;                                                     // 0x02F0   (0x0008)  
	UTextBlock*                                        _quantity;                                                  // 0x02F8   (0x0008)  
	UTextBlock*                                        _quantityFadeout;                                           // 0x0300   (0x0008)  
	UImage*                                            _quantityBackground;                                        // 0x0308   (0x0008)  
	UImage*                                            _quantityBackgroundFadeout;                                 // 0x0310   (0x0008)  
	UOverlay*                                          _lockedOverlay;                                             // 0x0318   (0x0008)  
	UWidgetSwitcher*                                   _lockedWidgetSwitcher;                                      // 0x0320   (0x0008)  
	UTextBlock*                                        _requiredFamePointsText;                                    // 0x0328   (0x0008)  
	UWidgetAnimation*                                  _changeQuantity;                                            // 0x0330   (0x0008)  
	unsigned char                                      UnknownData01_5[0xE8];                                      // 0x0338   (0x00E8)  MISSED
	UTexture2D*                                        _iconBlankTexture;                                          // 0x0420   (0x0008)  
	UAkAudioEvent*                                     _soundOnHover;                                              // 0x0428   (0x0008)  
	UAkAudioEvent*                                     _soundOnClick;                                              // 0x0430   (0x0008)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0438   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.TraderItemButton.OnClick
	void OnClick();                                                                                                          // [0x22c6330] Final|Native|Private 
};

/// Class /Script/ConZ.TraderItemCategoryButton
/// Size: 0x00D0 (0x000260 - 0x000330)
class UTraderItemCategoryButton : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UButton*                                           _button;                                                    // 0x0278   (0x0008)  
	UImage*                                            _icon;                                                      // 0x0280   (0x0008)  
	UTextBlock*                                        _title;                                                     // 0x0288   (0x0008)  
	UOverlay*                                          _lockedOverlay;                                             // 0x0290   (0x0008)  
	UWidgetSwitcher*                                   _lockedWidgetSwitcher;                                      // 0x0298   (0x0008)  
	UTextBlock*                                        _requiredFamePointsText;                                    // 0x02A0   (0x0008)  
	FText                                              _titleValue;                                                // 0x02A8   (0x0018)  
	TWeakObjectPtr<UTexture*>                          _iconTexture;                                               // 0x02C0   (0x0028)  
	UTexture2D*                                        _iconBlankTexture;                                          // 0x02E8   (0x0008)  
	FVector2D                                          _iconSize;                                                  // 0x02F0   (0x0008)  
	FGameplayTagContainer                              _tradeCategories;                                           // 0x02F8   (0x0020)  
	UPanelWidget*                                      _panelToOpenOnClick;                                        // 0x0318   (0x0008)  
	UAkAudioEvent*                                     _soundOnHover;                                              // 0x0320   (0x0008)  
	UAkAudioEvent*                                     _soundOnClick;                                              // 0x0328   (0x0008)  


	/// Functions
	// Function /Script/ConZ.TraderItemCategoryButton.UpdateIconTexture
	void UpdateIconTexture();                                                                                                // [0x23ebd20] Final|Native|Protected 
	// Function /Script/ConZ.TraderItemCategoryButton.OnClick
	void OnClick();                                                                                                          // [0x22c6330] Native|Protected     
};

/// Class /Script/ConZ.TraderMainPanel
/// Size: 0x0038 (0x000260 - 0x000298)
class UTraderMainPanel : public UTabMenuPanel
{ 
public:
	UTabContainer*                                     _tabRow;                                                    // 0x0260   (0x0008)  
	UWidgetSwitcher*                                   _panelSwitcher;                                             // 0x0268   (0x0008)  
	UTraderBuyPanel*                                   _buyPanel;                                                  // 0x0270   (0x0008)  
	UTraderSellPanel*                                  _sellPanel;                                                 // 0x0278   (0x0008)  
	UTraderDepotPanel*                                 _depotPanel;                                                // 0x0280   (0x0008)  
	UPanelWidget*                                      _loadingScreen;                                             // 0x0288   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0290   (0x0008)  MISSED
};

/// Class /Script/ConZ.TraderMainUIController
/// Size: 0x0058 (0x000028 - 0x000080)
class UTraderMainUIController : public UObject
{ 
public:
	UTraderBuyUIController*                            TraderBuyUIController;                                      // 0x0028   (0x0008)  
	UTraderSellUIController*                           TraderSellUIController;                                     // 0x0030   (0x0008)  
	unsigned char                                      UnknownData00_6[0x48];                                      // 0x0038   (0x0048)  MISSED
};

/// Class /Script/ConZ.TraderManagingComponent
/// Size: 0x0058 (0x0000B0 - 0x000108)
class UTraderManagingComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x00B0   (0x0020)  MISSED
	float                                              _pawnRelevancyRange;                                        // 0x00D0   (0x0004)  
	float                                              _tradeOutpostsUpdateTime;                                   // 0x00D4   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x00D8   (0x0004)  MISSED
	float                                              _outpostEconomyResetTimeHours;                              // 0x00DC   (0x0004)  
	float                                              _outpostPriceDeltasRandomizationTimeHours;                  // 0x00E0   (0x0004)  
	float                                              _tradeableRotationTimeIngameHoursMin;                       // 0x00E4   (0x0004)  
	float                                              _tradeableRotationTimeIngameHoursMax;                       // 0x00E8   (0x0004)  
	float                                              _tradeableRotationTimeOfDayMin;                             // 0x00EC   (0x0004)  
	float                                              _tradeableRotationTimeOfDayMax;                             // 0x00F0   (0x0004)  
	unsigned char                                      UnknownData02_6[0x14];                                      // 0x00F4   (0x0014)  MISSED
};

/// Class /Script/ConZ.TraderPersonalityDataAsset
/// Size: 0x0038 (0x000030 - 0x000068)
class UTraderPersonalityDataAsset : public UDataAsset
{ 
public:
	FGuid                                              TraderPersistentId;                                         // 0x0030   (0x0010)  
	FString                                            HumanReadableTraderName;                                    // 0x0040   (0x0010)  
	ETraderType                                        TraderType;                                                 // 0x0050   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0051   (0x0007)  MISSED
	TArray<FTraderMarkerTradeableOverrideStruct>       PurchasableTradeablesClassesOverride;                       // 0x0058   (0x0010)  
};

/// Class /Script/ConZ.TraderSellListEntry
/// Size: 0x00A8 (0x000260 - 0x000308)
class UTraderSellListEntry : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0260   (0x0018)  MISSED
	UImage*                                            _entryIcon;                                                 // 0x0278   (0x0008)  
	UTextBlock*                                        _entryCaption;                                              // 0x0280   (0x0008)  
	UTextBlock*                                        _entryPrice;                                                // 0x0288   (0x0008)  
	UButton*                                           _btnCancel;                                                 // 0x0290   (0x0008)  
	unsigned char                                      UnknownData01_5[0x68];                                      // 0x0298   (0x0068)  MISSED
	UTexture2D*                                        _missingTextureIcon;                                        // 0x0300   (0x0008)  


	/// Functions
	// Function /Script/ConZ.TraderSellListEntry.OnCancelClicked
	void OnCancelClicked();                                                                                                  // [0x23ebbd0] Final|Native|Private 
};

/// Class /Script/ConZ.TraderSellPanel
/// Size: 0x00E8 (0x000260 - 0x000348)
class UTraderSellPanel : public UUserWidget
{ 
public:
	UTabContainer*                                     _cashOrCreditRadioBtn;                                      // 0x0260   (0x0008)  
	UVerticalBox*                                      _sellList;                                                  // 0x0268   (0x0008)  
	UTextBlock*                                        _headerBannerPrisonerCashOnHand;                            // 0x0270   (0x0008)  
	UTextBlock*                                        _headerBannerPrisonerCashInBank;                            // 0x0278   (0x0008)  
	UTextBlock*                                        _prisonerCashOnHand;                                        // 0x0280   (0x0008)  
	UTextBlock*                                        _prisonerCashInBank;                                        // 0x0288   (0x0008)  
	UTextBlock*                                        _prisonerGoldInBank;                                        // 0x0290   (0x0008)  
	UTextBlock*                                        _prisonerFamePoints;                                        // 0x0298   (0x0008)  
	UTextBlock*                                        _traderFunds;                                               // 0x02A0   (0x0008)  
	UTextBlock*                                        _saleTotal;                                                 // 0x02A8   (0x0008)  
	UTextBlock*                                        _warningMessage;                                            // 0x02B0   (0x0008)  
	UButton*                                           _btnExit;                                                   // 0x02B8   (0x0008)  
	UButton*                                           _btnSell;                                                   // 0x02C0   (0x0008)  
	UVerticalBox*                                      _messageBoxPanel;                                           // 0x02C8   (0x0008)  
	UClass*                                            _sellListEntryWidgetClass;                                  // 0x02D0   (0x0008)  
	unsigned char                                      UnknownData00_5[0x20];                                      // 0x02D8   (0x0020)  MISSED
	FText                                              _partialPriceSellText;                                      // 0x02F8   (0x0018)  
	FText                                              _worthlessPriceSellText;                                    // 0x0310   (0x0018)  
	float                                              _sellWarningPopupTextWidth;                                 // 0x0328   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x032C   (0x0004)  MISSED
	UAkAudioEvent*                                     _soundOnButtonHovered;                                      // 0x0330   (0x0008)  
	UAkAudioEvent*                                     _soundExitOnClick;                                          // 0x0338   (0x0008)  
	int32_t                                            _cashOrCreditFontSizeUnselected;                            // 0x0340   (0x0004)  
	int32_t                                            _cashOrCreditFontSizeSelected;                              // 0x0344   (0x0004)  


	/// Functions
	// Function /Script/ConZ.TraderSellPanel.OnSellClicked
	void OnSellClicked();                                                                                                    // [0x23ebd00] Final|Native|Private 
	// Function /Script/ConZ.TraderSellPanel.OnExitClicked
	void OnExitClicked();                                                                                                    // [0x23ebce0] Final|Native|Private 
	// Function /Script/ConZ.TraderSellPanel.OnAnyButtonHovered
	void OnAnyButtonHovered();                                                                                               // [0x23ebb70] Final|Native|Private 
};

/// Class /Script/ConZ.TraderSellUIController
/// Size: 0x0060 (0x000028 - 0x000088)
class UTraderSellUIController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x60];                                      // 0x0028   (0x0060)  MISSED
};

/// Class /Script/ConZ.EconomyManagerResponseData
/// Size: 0x0028 (0x000028 - 0x000050)
class UEconomyManagerResponseData : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	ADepotItem*                                        _assignedDepotItem;                                         // 0x0030   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0038   (0x0008)  MISSED
	TArray<FTradeablesResponseData>                    _tradeables;                                                // 0x0040   (0x0010)  
};

/// Class /Script/ConZ.TradeStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UTradeStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.TradingOutpostDescriptionDataAsset
/// Size: 0x0010 (0x000030 - 0x000040)
class UTradingOutpostDescriptionDataAsset : public UDataAsset
{ 
public:
	FGuid                                              TradeOutpostPersistentId;                                   // 0x0030   (0x0010)  
};

/// Class /Script/ConZ.TrapData
/// Size: 0x0020 (0x000030 - 0x000050)
class UTrapData : public UDataAsset
{ 
public:
	UClass*                                            SphereMotionTriggerComponentClass;                          // 0x0030   (0x0008)  
	UClass*                                            BoxMotionTriggerComponentClass;                             // 0x0038   (0x0008)  
	UClass*                                            LaserTriggerComponentClass;                                 // 0x0040   (0x0008)  
	UClass*                                            TimedTriggerComponentClass;                                 // 0x0048   (0x0008)  
};

/// Class /Script/ConZ.TrapItemUserData
/// Size: 0x0010 (0x000028 - 0x000038)
class UTrapItemUserData : public UVirtualizedItemUserData
{ 
public:
	FDbIntegerId                                       OwnerUserProfileId;                                         // 0x0028   (0x0008)  
	bool                                               IsOwnerUserProfileIdDirty;                                  // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Class /Script/ConZ.TrapItemState
/// Size: 0x0050 (0x000100 - 0x000150)
class UTrapItemState : public UItemState
{ 
public:
	bool                                               IsArmed;                                                    // 0x0100   (0x0001)  
	bool                                               CanBeTriggered;                                             // 0x0101   (0x0001)  
	ETrapTriggerType                                   CurrentTrigger;                                             // 0x0102   (0x0001)  
	unsigned char                                      UnknownData00_5[0x5];                                       // 0x0103   (0x0005)  MISSED
	FDbIntegerId                                       LastTriggerOwner;                                           // 0x0108   (0x0008)  
	FDbIntegerId                                       LastArmerId;                                                // 0x0110   (0x0008)  
	float                                              Quality;                                                    // 0x0118   (0x0004)  
	bool                                               WasTriggered;                                               // 0x011C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x011D   (0x0003)  MISSED
	int32_t                                            NumRemainingDefuseAttempts;                                 // 0x0120   (0x0004)  
	float                                              OwnerlessElapsedTime;                                       // 0x0124   (0x0004)  
	bool                                               PendingDestroy;                                             // 0x0128   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0129   (0x0007)  MISSED
	UTriggerComponentState*                            Trigger;                                                    // 0x0130   (0x0008)  
	TArray<char>                                       TriggerData;                                                // 0x0138   (0x0010)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x0148   (0x0008)  MISSED
};

/// Class /Script/ConZ.TrapRefuelItemTag
/// Size: 0x0008 (0x000030 - 0x000038)
class UTrapRefuelItemTag : public UBaseItemTag
{ 
public:
	int32_t                                            UsesOnRefuel;                                               // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Class /Script/ConZ.TrashCarouselWidget
/// Size: 0x02E8 (0x000260 - 0x000548)
class UTrashCarouselWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0260   (0x0030)  MISSED
	FSlateBrush                                        _leftArrowIcon;                                             // 0x0290   (0x0088)  
	FSlateBrush                                        _rightArrowIcon;                                            // 0x0318   (0x0088)  
	FSlateBrush                                        _disabledLeftArrowIcon;                                     // 0x03A0   (0x0088)  
	FSlateBrush                                        _disabledRightArrowIcon;                                    // 0x0428   (0x0088)  
	UTextBlock*                                        _selectionDisplay;                                          // 0x04B0   (0x0008)  
	UButton*                                           _leftArrow;                                                 // 0x04B8   (0x0008)  
	UButton*                                           _rightArrow;                                                // 0x04C0   (0x0008)  
	FSlateFontInfo                                     _font;                                                      // 0x04C8   (0x0058)  
	TArray<FString>                                    _possibleValues;                                            // 0x0520   (0x0010)  
	TArray<FText>                                      _carouselValues;                                            // 0x0530   (0x0010)  
	bool                                               _canWrap;                                                   // 0x0540   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0541   (0x0007)  MISSED


	/// Functions
	// Function /Script/ConZ.TrashCarouselWidget.OnValueChanged
	void OnValueChanged(int32_t NewValue);                                                                                   // [0x23efd10] Final|Native|Private 
	// Function /Script/ConZ.TrashCarouselWidget.ClickRight
	void ClickRight();                                                                                                       // [0x23ef1b0] Final|Native|Public  
	// Function /Script/ConZ.TrashCarouselWidget.ClickLeft
	void ClickLeft();                                                                                                        // [0x23ef190] Final|Native|Public  
};

/// Class /Script/ConZ.TrashNamedCarouselWidget
/// Size: 0x0158 (0x000260 - 0x0003B8)
class UTrashNamedCarouselWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0260   (0x0030)  MISSED
	FMulticastInlineDelegate                           ValueChangedTemp_DONOTUSE;                                  // 0x0290   (0x0010)  
	UTextBlock*                                        _name;                                                      // 0x02A0   (0x0008)  
	UTrashCarouselWidget*                              _carousel;                                                  // 0x02A8   (0x0008)  
	USelectionOverlayWidget*                           _focusBackground;                                           // 0x02B0   (0x0008)  
	FString                                            _label;                                                     // 0x02B8   (0x0010)  
	FText                                              _mainLabel;                                                 // 0x02C8   (0x0018)  
	FSlateFontInfo                                     _defaultFont;                                               // 0x02E0   (0x0058)  
	unsigned char                                      UnknownData01_5[0x58];                                      // 0x0338   (0x0058)  MISSED
	TArray<FString>                                    _possibleValues;                                            // 0x0390   (0x0010)  
	TArray<FText>                                      _carouselValues;                                            // 0x03A0   (0x0010)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x03B0   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.TrashNamedCarouselWidget.SetValue
	void SetValue(int32_t Value);                                                                                            // [0x23f0360] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.TrashNamedCarouselWidget.SetName
	void SetName(FText Name);                                                                                                // [0x23f01a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.TrashNamedCarouselWidget.OnValueChanged
	void OnValueChanged(int32_t NewValue);                                                                                   // [0x23efda0] Final|Native|Private 
	// Function /Script/ConZ.TrashNamedCarouselWidget.GetValue
	int32_t GetValue();                                                                                                      // [0x23ef870] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.TrashNamedSliderWidget
/// Size: 0x0188 (0x000260 - 0x0003E8)
class UTrashNamedSliderWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0260   (0x0030)  MISSED
	FMulticastInlineDelegate                           ValueChangedTemp_DONOTUSE;                                  // 0x0290   (0x0010)  
	UScrollingSizeBox*                                 _nameBox;                                                   // 0x02A0   (0x0008)  
	UTextBlock*                                        _name;                                                      // 0x02A8   (0x0008)  
	USizeBox*                                          _valueDisplayBox;                                           // 0x02B0   (0x0008)  
	UTextBlock*                                        _valueDisplay;                                              // 0x02B8   (0x0008)  
	UTrashSliderWidget*                                _slider;                                                    // 0x02C0   (0x0008)  
	USelectionOverlayWidget*                           _focusBackground;                                           // 0x02C8   (0x0008)  
	FString                                            _label;                                                     // 0x02D0   (0x0010)  
	FText                                              _mainLabel;                                                 // 0x02E0   (0x0018)  
	FSlateFontInfo                                     _defaultFont;                                               // 0x02F8   (0x0058)  
	unsigned char                                      UnknownData01_5[0x58];                                      // 0x0350   (0x0058)  MISSED
	float                                              _stepSpeedTreshold;                                         // 0x03A8   (0x0004)  
	float                                              _valueDisplayWidth;                                         // 0x03AC   (0x0004)  
	float                                              _minValue;                                                  // 0x03B0   (0x0004)  
	float                                              _maxValue;                                                  // 0x03B4   (0x0004)  
	int32_t                                            _stepCount;                                                 // 0x03B8   (0x0004)  
	int32_t                                            _decimalPlacesShown;                                        // 0x03BC   (0x0004)  
	unsigned char                                      UnknownData02_5[0x1C];                                      // 0x03C0   (0x001C)  MISSED
	float                                              _nameBoxWidth;                                              // 0x03DC   (0x0004)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x03E0   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.TrashNamedSliderWidget.SetValue
	void SetValue(float Value);                                                                                              // [0x23f03f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.TrashNamedSliderWidget.SetName
	void SetName(FText Name);                                                                                                // [0x23f0280] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.TrashNamedSliderWidget.SetLimits
	void SetLimits(float MinValue, float MaxValue, int32_t stepCount);                                                       // [0x23f0090] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.TrashNamedSliderWidget.OnValueChanged
	void OnValueChanged(float NewValue);                                                                                     // [0x23efe30] Final|Native|Private 
	// Function /Script/ConZ.TrashNamedSliderWidget.GetValue
	float GetValue();                                                                                                        // [0x23ef8a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.TrashNamedSliderWidget.GetMinValue
	float GetMinValue();                                                                                                     // [0x23ef7b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.TrashNamedSliderWidget.GetMaxValue
	float GetMaxValue();                                                                                                     // [0x23ef780] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.TrashSliderWidget
/// Size: 0x04C0 (0x000260 - 0x000720)
class UTrashSliderWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0260   (0x0030)  MISSED
	FMulticastInlineDelegate                           ValueChangedTemp_DONOTUSE;                                  // 0x0290   (0x0010)  
	FSlateBrush                                        _emptySlider;                                               // 0x02A0   (0x0088)  
	FSlateBrush                                        _filledSlider;                                              // 0x0328   (0x0088)  
	FSlateBrush                                        _selectedSlider;                                            // 0x03B0   (0x0088)  
	unsigned char                                      UnknownData01_5[0x110];                                     // 0x0438   (0x0110)  MISSED
	FSlateBrush                                        _normalThumb;                                               // 0x0548   (0x0088)  
	FSlateBrush                                        _selectedThumb;                                             // 0x05D0   (0x0088)  
	unsigned char                                      UnknownData02_5[0x88];                                      // 0x0658   (0x0088)  MISSED
	USlider*                                           _slider;                                                    // 0x06E0   (0x0008)  
	UProgressBar*                                      _progressBar;                                               // 0x06E8   (0x0008)  
	FDataTableRowHandle                                _selectedColor;                                             // 0x06F0   (0x0010)  
	FDataTableRowHandle                                _disabledColor;                                             // 0x0700   (0x0010)  
	float                                              _minValue;                                                  // 0x0710   (0x0004)  
	float                                              _maxValue;                                                  // 0x0714   (0x0004)  
	int32_t                                            _stepCount;                                                 // 0x0718   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x071C   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.TrashSliderWidget.SetValue
	void SetValue(float Value);                                                                                              // [0x23f0470] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.TrashSliderWidget.OnValueChanged
	void OnValueChanged(float NewValue);                                                                                     // [0x23efeb0] Final|Native|Private 
	// Function /Script/ConZ.TrashSliderWidget.GetValue
	float GetValue();                                                                                                        // [0x23ef8d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.TriggerFailurePenalty
/// Size: 0x0000 (0x000030 - 0x000030)
class UTriggerFailurePenalty : public UFailurePenalty
{ 
public:
};

/// Class /Script/ConZ.TriggerItemTag
/// Size: 0x0008 (0x000030 - 0x000038)
class UTriggerItemTag : public UBaseItemTag
{ 
public:
	ETrapTriggerType                                   TriggerType;                                                // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Class /Script/ConZ.UIStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UUIStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.UnarmedCombatInputRedirector
/// Size: 0x0038 (0x000028 - 0x000060)
class UUnarmedCombatInputRedirector : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0028   (0x0038)  MISSED
};

/// Class /Script/ConZ.UnderwaterPostProcessVolume
/// Size: 0x0000 (0x0007D0 - 0x0007D0)
class AUnderwaterPostProcessVolume : public APostProcessVolume
{ 
public:
};

/// Class /Script/ConZ.UpdateableNotification
/// Size: 0x0000 (0x000030 - 0x000030)
class UUpdateableNotification : public UBasicNotification
{ 
public:
};

/// Class /Script/ConZ.UpdateableNotificationDescription
/// Size: 0x0018 (0x000078 - 0x000090)
class UUpdateableNotificationDescription : public UBasicNotificationDescription
{ 
public:
	FString                                            NotificationName;                                           // 0x0078   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0088   (0x0008)  MISSED
};

/// Class /Script/ConZ.UseItemObjective
/// Size: 0x0058 (0x000320 - 0x000378)
class AUseItemObjective : public AObjective
{ 
public:
	TMap<TWeakObjectPtr, FUsableObjectiveItem>         _targetMeshes;                                              // 0x0320   (0x0050)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0370   (0x0008)  MISSED
};

/// Class /Script/ConZ.UserManager
/// Size: 0x0078 (0x000028 - 0x0000A0)
class UUserManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x78];                                      // 0x0028   (0x0078)  MISSED
};

/// Class /Script/ConZ.User
/// Size: 0x00E8 (0x000028 - 0x000110)
class UUser : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0xE8];                                      // 0x0028   (0x00E8)  MISSED
};

/// Class /Script/ConZ.UserProfile
/// Size: 0x00E8 (0x000028 - 0x000110)
class UUserProfile : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0xD8];                                      // 0x0028   (0x00D8)  MISSED
	USpamProtectionState*                              _globalSpamProtectionState;                                 // 0x0100   (0x0008)  
	USpamProtectionState*                              _localSpamProtectionState;                                  // 0x0108   (0x0008)  


	/// Functions
	// Function /Script/ConZ.UserProfile.UnmarkProfileForDeletion
	void UnmarkProfileForDeletion();                                                                                         // [0x23f69f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.UserProfile.SetPrisonerId
	void SetPrisonerId(FDbIntegerId Value);                                                                                  // [0x23f5d90] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.UserProfile.SetName
	void SetName(FString Value);                                                                                             // [0x23f5cf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.UserProfile.SetLastNameChangeTime
	void SetLastNameChangeTime(FDateTime& Value);                                                                            // [0x23f5bc0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/ConZ.UserProfile.SetLastLogoutTime
	void SetLastLogoutTime(FDateTime& Value);                                                                                // [0x23f5b30] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/ConZ.UserProfile.SetLastLoginTime
	void SetLastLoginTime(FDateTime& Value);                                                                                 // [0x23f5aa0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/ConZ.UserProfile.SetFamePoints
	void SetFamePoints(float Value);                                                                                         // [0x23f5780] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.UserProfile.SetCreationTemplateXml
	void SetCreationTemplateXml(FString Value);                                                                              // [0x23f5650] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.UserProfile.SetAuthorityInfo
	void SetAuthorityInfo(FUserProfileAuthorityInfo& Value);                                                                 // [0x23f5570] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.UserProfile.MarkProfileForDeletion
	void MarkProfileForDeletion();                                                                                           // [0x23f5150] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.UserProfile.MakeCharacterTemplate
	FCharacterTemplate MakeCharacterTemplate();                                                                              // [0x23f3e00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.UserProfile.LoadCharacterTemplate
	FCharacterTemplate LoadCharacterTemplate();                                                                              // [0x23f5070] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.UserProfile.IsProfileMarkedForDeletion
	bool IsProfileMarkedForDeletion();                                                                                       // [0x23f4d70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.UserProfile.GetUser
	UUser* GetUser();                                                                                                        // [0x2309470] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.UserProfile.GetType
	EUserProfileType GetType();                                                                                              // [0x23f4700] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.UserProfile.GetPrisonerId
	FDbIntegerId GetPrisonerId();                                                                                            // [0x23f4500] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.UserProfile.GetName
	FString GetName();                                                                                                       // [0x23f4390] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.UserProfile.GetLastNameChangeTime
	FDateTime GetLastNameChangeTime();                                                                                       // [0x23f41e0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.UserProfile.GetLastLogoutTime
	FDateTime GetLastLogoutTime();                                                                                           // [0x23f41a0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.UserProfile.GetLastLoginTime
	FDateTime GetLastLoginTime();                                                                                            // [0x23f4160] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.UserProfile.GetId
	FDbIntegerId GetId();                                                                                                    // [0x23f4000] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.UserProfile.GetFamePoints
	float GetFamePoints();                                                                                                   // [0x23f3f00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.UserProfile.GetCreationTemplateXml
	FString GetCreationTemplateXml();                                                                                        // [0x23f3e50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.UserProfile.GetCreationTemplate
	FCharacterTemplate GetCreationTemplate();                                                                                // [0x23f3e00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.UserProfile.GetAuthorityInfo
	FUserProfileAuthorityInfo GetAuthorityInfo();                                                                            // [0x23f3cd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.ValueProviderInteger
/// Size: 0x0000 (0x000028 - 0x000028)
class UValueProviderInteger : public UInterface
{ 
public:
};

/// Class /Script/ConZ.ValueProviderString
/// Size: 0x0000 (0x000028 - 0x000028)
class UValueProviderString : public UInterface
{ 
public:
};

/// Class /Script/ConZ.Vehicle
/// Size: 0x0000 (0x000028 - 0x000028)
class UVehicle : public UMountable
{ 
public:
};

/// Class /Script/ConZ.VehicleBaseSave
/// Size: 0x0030 (0x000028 - 0x000058)
class UVehicleBaseSave : public UObject
{ 
public:
	int64_t                                            LastAccessTime;                                             // 0x0028   (0x0008)  
	uint64_t                                           PackedSimulationState;                                      // 0x0030   (0x0008)  
	TArray<FVehicleAttachmentSave>                     VehicleAttachments;                                         // 0x0038   (0x0010)  
	FVector                                            LastSteadyLocation;                                         // 0x0048   (0x000C)  
	float                                              VerticalSpawnOffset;                                        // 0x0054   (0x0004)  
};

/// Class /Script/ConZ.VehicleDamageRegionAssetData
/// Size: 0x0010 (0x000028 - 0x000038)
class UVehicleDamageRegionAssetData : public UAssetUserData
{ 
public:
	FGameplayTag                                       Tag;                                                        // 0x0028   (0x0008)  
	bool                                               TreatCapsuleAsCylinder;                                     // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Class /Script/ConZ.VehicleAttachment
/// Size: 0x03D8 (0x000028 - 0x000400)
class UVehicleAttachment : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0028   (0x0010)  MISSED
	FName                                              ParentSocket;                                               // 0x0038   (0x0008)  
	FVehicleAttachmentMeshSetup                        MeshSetup;                                                  // 0x0040   (0x0080)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x00C0   (0x0010)  MISSED
	FVehicleAttachmentMeshSetup                        QueryMeshSetup;                                             // 0x00D0   (0x0080)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x0150   (0x0008)  MISSED
	TArray<FVehicleAttachmentAdditionalSocket>         AdditionalSockets;                                          // 0x0158   (0x0010)  
	UWidgetComponent*                                  HealthDisplay;                                              // 0x0168   (0x0008)  
	FText                                              _displayName;                                               // 0x0170   (0x0018)  
	bool                                               _canEverBeRemoved;                                          // 0x0188   (0x0001)  
	unsigned char                                      UnknownData03_5[0x7];                                       // 0x0189   (0x0007)  MISSED
	TArray<FVehicleAttachmentSlot>                     _slots;                                                     // 0x0190   (0x0010)  
	bool                                               _isIndestructible;                                          // 0x01A0   (0x0001)  
	bool                                               _shouldBeRemovedFromVehicleWhenDestroyed;                   // 0x01A1   (0x0001)  
	unsigned char                                      UnknownData04_5[0x2];                                       // 0x01A2   (0x0002)  MISSED
	FGameplayTag                                       _requiredServiceToolTag;                                    // 0x01A4   (0x0008)  
	unsigned char                                      UnknownData05_5[0x14];                                      // 0x01AC   (0x0014)  MISSED
	int32_t                                            _parentId;                                                  // 0x01C0   (0x0004)  
	int32_t                                            _parentSlotIndex;                                           // 0x01C4   (0x0004)  
	UMaterialInstanceDynamic*                          _serviceModeMaterial;                                       // 0x01C8   (0x0008)  
	double                                             _mileage;                                                   // 0x01D0   (0x0008)  
	unsigned char                                      UnknownData06_5[0x1];                                       // 0x01D8   (0x0001)  MISSED
	bool                                               _isSupportedForNetworking;                                  // 0x01D9   (0x0001)  
	unsigned char                                      UnknownData07_5[0x2];                                       // 0x01DA   (0x0002)  MISSED
	int32_t                                            _id;                                                        // 0x01DC   (0x0004)  
	unsigned char                                      UnknownData08_5[0x8];                                       // 0x01E0   (0x0008)  MISSED
	TArray<UMaterialInterface*>                        _cachedMeshMaterials;                                       // 0x01E8   (0x0010)  
	float                                              _maxHealth;                                                 // 0x01F8   (0x0004)  
	float                                              _health;                                                    // 0x01FC   (0x0004)  
	float                                              _hardness;                                                  // 0x0200   (0x0004)  
	unsigned char                                      UnknownData09_5[0x4];                                       // 0x0204   (0x0004)  MISSED
	uint64_t                                           _miscState;                                                 // 0x0208   (0x0008)  
	float                                              _linearEnergyAbsorption;                                    // 0x0210   (0x0004)  
	float                                              _flatEnergyAbsorption;                                      // 0x0214   (0x0004)  
	TWeakObjectPtr<UClass*>                            AttachmentItemClass;                                        // 0x0218   (0x0028)  
	unsigned char                                      UnknownData10_5[0x20];                                      // 0x0240   (0x0020)  MISSED
	bool                                               _isServiceRestrictedToAcceptableModes;                      // 0x0260   (0x0001)  
	unsigned char                                      UnknownData11_5[0x7];                                       // 0x0261   (0x0007)  MISSED
	TArray<FGameplayTag>                               _acceptableServiceModes;                                    // 0x0268   (0x0010)  
	FGameplayTag                                       _damageRegion;                                              // 0x0278   (0x0008)  
	int32_t                                            _damageRegionPriority;                                      // 0x0280   (0x0004)  
	unsigned char                                      UnknownData12_5[0x4];                                       // 0x0284   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _damagePropagationVsArmorPiercing;                          // 0x0288   (0x0088)  
	TMap<ECollisionDamageType, float>                  _damageRatios;                                              // 0x0310   (0x0050)  
	float                                              _explosionDamageRatio;                                      // 0x0360   (0x0004)  
	unsigned char                                      UnknownData13_5[0x4];                                       // 0x0364   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _burnDamagePerSecondVsTemperature;                          // 0x0368   (0x0088)  
	float                                              _installDuration;                                           // 0x03F0   (0x0004)  
	float                                              _repairDuration;                                            // 0x03F4   (0x0004)  
	float                                              _removeDuration;                                            // 0x03F8   (0x0004)  
	unsigned char                                      UnknownData14_6[0x4];                                       // 0x03FC   (0x0004)  MISSED


	/// Functions
	// Function /Script/ConZ.VehicleAttachment.OnRep_MiscState
	void OnRep_MiscState();                                                                                                  // [0x23faba0] Final|Native|Private 
	// Function /Script/ConZ.VehicleAttachment.OnRep_Health
	void OnRep_Health();                                                                                                     // [0x23fab80] Final|Native|Private 
};

/// Class /Script/ConZ.VehicleAttachment_Alternator
/// Size: 0x0010 (0x000400 - 0x000410)
class UVehicleAttachment_Alternator : public UVehicleAttachment
{ 
public:
	FVehicleAttachmentAlternatorSetup                  AlternatorSetup;                                            // 0x0400   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0408   (0x0008)  MISSED
};

/// Class /Script/ConZ.VehicleAttachment_Armor
/// Size: 0x0000 (0x000400 - 0x000400)
class UVehicleAttachment_Armor : public UVehicleAttachment
{ 
public:
};

/// Class /Script/ConZ.VehicleAttachment_Battery
/// Size: 0x0040 (0x000400 - 0x000440)
class UVehicleAttachment_Battery : public UVehicleAttachment
{ 
public:
	FVehicleAttachmentBatterySetup                     BatterySetup;                                               // 0x0400   (0x0030)  
	FVehicleAttachmentBatterySimulationData            _simulationData;                                            // 0x0430   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x0434   (0x000C)  MISSED
};

/// Class /Script/ConZ.VehicleAttachment_Chassis
/// Size: 0x0040 (0x000400 - 0x000440)
class UVehicleAttachment_Chassis : public UVehicleAttachment
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0400   (0x0008)  MISSED
	TArray<UClass*>                                    _mountSlotClasses;                                          // 0x0408   (0x0010)  
	TArray<FVehicleServiceItemSlot>                    _serviceItemSlots;                                          // 0x0418   (0x0010)  
	TArray<UVehicleBaseMountSlot*>                     _mountSlots;                                                // 0x0428   (0x0010)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0438   (0x0008)  MISSED
};

/// Class /Script/ConZ.VehicleAttachment_Door
/// Size: 0x0090 (0x000400 - 0x000490)
class UVehicleAttachment_Door : public UVehicleAttachment
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0400   (0x0010)  MISSED
	FVehicleAttachmentDoorSetup                        DoorSetup;                                                  // 0x0410   (0x0060)  
	EVehicleAttachment_DoorFlags                       _flags;                                                     // 0x0470   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0471   (0x0007)  MISSED
	UObject*                                           _reservee;                                                  // 0x0478   (0x0008)  
	TArray<FGameplayTag>                               _mountPathObstructionTags;                                  // 0x0480   (0x0010)  


	/// Functions
	// Function /Script/ConZ.VehicleAttachment_Door.OnRep_Flags
	void OnRep_Flags();                                                                                                      // [0x23fab60] Final|Native|Private 
};

/// Class /Script/ConZ.VehicleWithDoors
/// Size: 0x0000 (0x000028 - 0x000028)
class UVehicleWithDoors : public UInterface
{ 
public:
};

/// Class /Script/ConZ.VehicleAttachment_EngineBlock
/// Size: 0x0200 (0x000400 - 0x000600)
class UVehicleAttachment_EngineBlock : public UVehicleAttachment
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0400   (0x0010)  MISSED
	FVehicleAttachmentEngineBlockSetup                 EngineSetup;                                                // 0x0410   (0x0158)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0568   (0x0008)  MISSED
	FVehicleAttachmentEngineBlockSimulationData        _simulationData;                                            // 0x0570   (0x002C)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x059C   (0x0004)  MISSED
	TWeakObjectPtr<UClass*>                            _tradeableClass;                                            // 0x05A0   (0x0028)  
	EEngineBlockState                                  _repEngineBlockState;                                       // 0x05C8   (0x0001)  
	unsigned char                                      UnknownData03_5[0x27];                                      // 0x05C9   (0x0027)  MISSED
	FGameplayTag                                       _toggleOnTag;                                               // 0x05F0   (0x0008)  
	FGameplayTag                                       _toggleOffTag;                                              // 0x05F8   (0x0008)  


	/// Functions
	// Function /Script/ConZ.VehicleAttachment_EngineBlock.OnRep_EngineBlockState
	void OnRep_EngineBlockState();                                                                                           // [0x23fab40] Final|Native|Private 
};

/// Class /Script/ConZ.VehicleWithEngineBlock
/// Size: 0x0000 (0x000028 - 0x000028)
class UVehicleWithEngineBlock : public UInterface
{ 
public:
};

/// Class /Script/ConZ.VehicleAttachment_Gearbox
/// Size: 0x0050 (0x000400 - 0x000450)
class UVehicleAttachment_Gearbox : public UVehicleAttachment
{ 
public:
	FVehicleAttachmentGearboxSetup                     GearboxSetup;                                               // 0x0400   (0x0018)  
	unsigned char                                      UnknownData00_5[0x18];                                      // 0x0418   (0x0018)  MISSED
	FVehicleAttachmentGearboxSimulationData            _simulationData;                                            // 0x0430   (0x0014)  
	unsigned char                                      UnknownData01_6[0xC];                                       // 0x0444   (0x000C)  MISSED
};

/// Class /Script/ConZ.VehicleWithGearbox
/// Size: 0x0000 (0x000028 - 0x000028)
class UVehicleWithGearbox : public UInterface
{ 
public:
};

/// Class /Script/ConZ.VehicleAttachment_Lights
/// Size: 0x0050 (0x000400 - 0x000450)
class UVehicleAttachment_Lights : public UVehicleAttachment
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0400   (0x0008)  MISSED
	bool                                               _affectMaterialsOnParent;                                   // 0x0408   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0409   (0x0007)  MISSED
	TArray<FVehicleLightsData>                         _lightsData;                                                // 0x0410   (0x0010)  
	unsigned char                                      UnknownData02_5[0x20];                                      // 0x0420   (0x0020)  MISSED
	FLightsAttachmentSimulationData                    _simulationData;                                            // 0x0440   (0x0001)  
	unsigned char                                      UnknownData03_6[0xF];                                       // 0x0441   (0x000F)  MISSED
};

/// Class /Script/ConZ.VehicleAttachment_Seat
/// Size: 0x0030 (0x000400 - 0x000430)
class UVehicleAttachment_Seat : public UVehicleAttachment
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0400   (0x0008)  MISSED
	TArray<UClass*>                                    _mountSlotClasses;                                          // 0x0408   (0x0010)  
	TArray<UVehicleBaseMountSlot*>                     _mountSlots;                                                // 0x0418   (0x0010)  
	float                                              _minimalHealthPercentWhenMounted;                           // 0x0428   (0x0004)  
	float                                              _minimalHealthPercentToMounted;                             // 0x042C   (0x0004)  
};

/// Class /Script/ConZ.VehicleAttachment_StaticPart
/// Size: 0x0010 (0x000400 - 0x000410)
class UVehicleAttachment_StaticPart : public UVehicleAttachment
{ 
public:
	bool                                               _isIndependentFromParent;                                   // 0x0400   (0x0001)  
	unsigned char                                      UnknownData00_6[0xF];                                       // 0x0401   (0x000F)  MISSED
};

/// Class /Script/ConZ.VehicleAttachment_Dashboard
/// Size: 0x0000 (0x000410 - 0x000410)
class UVehicleAttachment_Dashboard : public UVehicleAttachment_StaticPart
{ 
public:
};

/// Class /Script/ConZ.VehicleWithDashboard
/// Size: 0x0000 (0x000028 - 0x000028)
class UVehicleWithDashboard : public UInterface
{ 
public:
};

/// Class /Script/ConZ.VehicleAttachment_Wheel
/// Size: 0x0050 (0x000400 - 0x000450)
class UVehicleAttachment_Wheel : public UVehicleAttachment
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0400   (0x0050)  MISSED
};

/// Class /Script/ConZ.VehicleAttachment_DcxWheel
/// Size: 0x0010 (0x000450 - 0x000460)
class UVehicleAttachment_DcxWheel : public UVehicleAttachment_Wheel
{ 
public:
	TArray<int32_t>                                    WheelIndices;                                               // 0x0450   (0x0010)  
};

/// Class /Script/ConZ.VehicleAttachment_ConstrainedWheel
/// Size: 0x0180 (0x000450 - 0x0005D0)
class UVehicleAttachment_ConstrainedWheel : public UVehicleAttachment_Wheel
{ 
public:
	FVehicleAttachmentWheelSetup                       WheelSetup;                                                 // 0x0450   (0x0044)  
	unsigned char                                      UnknownData00_5[0xC];                                       // 0x0494   (0x000C)  MISSED
	FVehicleAttachmentMeshSetup                        VisualMeshSetup;                                            // 0x04A0   (0x0080)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x0520   (0x0010)  MISSED
	FVehicleAttachmentMeshSetup                        SteeringMeshSetup;                                          // 0x0530   (0x0080)  
	unsigned char                                      UnknownData02_6[0x20];                                      // 0x05B0   (0x0020)  MISSED
};

/// Class /Script/ConZ.VehicleWithWheels
/// Size: 0x0000 (0x000028 - 0x000028)
class UVehicleWithWheels : public UInterface
{ 
public:
};

/// Class /Script/ConZ.VehicleAttachmentDashboardAnimInstance
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UVehicleAttachmentDashboardAnimInstance : public UAnimInstance
{ 
public:
	FRotator                                           _steerRotator;                                              // 0x02BC   (0x000C)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x02C8   (0x0008)  MISSED
};

/// Class /Script/ConZ.VehicleAttachmentHealthWidget
/// Size: 0x0030 (0x000260 - 0x000290)
class UVehicleAttachmentHealthWidget : public UUserWidget
{ 
public:
	UTextBlock*                                        _text;                                                      // 0x0260   (0x0008)  
	UProgressBar*                                      _progressBar;                                               // 0x0268   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0270   (0x0020)  MISSED
};

/// Class /Script/ConZ.VehicleAttachmentItem
/// Size: 0x0010 (0x000910 - 0x000920)
class AVehicleAttachmentItem : public AItem
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0910   (0x0010)  MISSED
};

/// Class /Script/ConZ.VehicleAttachmentParent
/// Size: 0x0000 (0x000028 - 0x000028)
class UVehicleAttachmentParent : public UInterface
{ 
public:
};

/// Class /Script/ConZ.VehicleSlotIdAssetData
/// Size: 0x0018 (0x000028 - 0x000040)
class UVehicleSlotIdAssetData : public UAssetUserData
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0028   (0x0018)  MISSED
};

/// Class /Script/ConZ.MountableVehicleAttachment
/// Size: 0x0000 (0x000028 - 0x000028)
class UMountableVehicleAttachment : public UInterface
{ 
public:
};

/// Class /Script/ConZ.VehicleAttachmentTag
/// Size: 0x0008 (0x000030 - 0x000038)
class UVehicleAttachmentTag : public UBaseItemTag
{ 
public:
	UClass*                                            AttachmentClass;                                            // 0x0030   (0x0008)  
};

/// Class /Script/ConZ.VehicleBaseAnimInstance
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UVehicleBaseAnimInstance : public UAnimInstance
{ 
public:
};

/// Class /Script/ConZ.VehicleBasePushMountSlot
/// Size: 0x0010 (0x000140 - 0x000150)
class UVehicleBasePushMountSlot : public UVehicleBaseMountSlot
{ 
public:
	FName                                              LeftHandIKSocketName;                                       // 0x0140   (0x0008)  
	FName                                              RightHandIKSocketName;                                      // 0x0148   (0x0008)  
};

/// Class /Script/ConZ.VehicleCameraStabilizerComponent
/// Size: 0x0080 (0x000200 - 0x000280)
class UVehicleCameraStabilizerComponent : public USceneComponent
{ 
public:
	FVector                                            _componentWorldOffset;                                      // 0x01FC   (0x000C)  
	float                                              _desiredDistance;                                           // 0x0208   (0x0004)  
	float                                              _speedFallbackIntensity;                                    // 0x020C   (0x0004)  
	float                                              _lateralMovementResponseIntensity;                          // 0x0210   (0x0004)  
	float                                              _lockedHorizontalDampeningFactor;                           // 0x0214   (0x0004)  
	float                                              _lockedHorizontalOscillationFactor;                         // 0x0218   (0x0004)  
	float                                              _lockedVerticalDampeningFactor;                             // 0x021C   (0x0004)  
	float                                              _lockedVerticalOscillationFactor;                           // 0x0220   (0x0004)  
	float                                              _maxFreeLookPitch;                                          // 0x0224   (0x0004)  
	float                                              _freeHorizontalDampeningFactor;                             // 0x0228   (0x0004)  
	float                                              _freeHorizontalOscillationFactor;                           // 0x022C   (0x0004)  
	float                                              _freeVerticalDampeningFactor;                               // 0x0230   (0x0004)  
	float                                              _freeVerticalOscillationFactor;                             // 0x0234   (0x0004)  
	unsigned char                                      UnknownData00_6[0x48];                                      // 0x0238   (0x0048)  MISSED
};

/// Class /Script/ConZ.VehicleCorpse
/// Size: 0x00A0 (0x000220 - 0x0002C0)
class AVehicleCorpse : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0220   (0x0008)  MISSED
	UStaticMeshComponent*                              _mesh;                                                      // 0x0228   (0x0008)  
	UParticleSystem*                                   _explosionParticles;                                        // 0x0230   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0238   (0x0008)  MISSED
	FTransform                                         _explosionParticlesTransform;                               // 0x0240   (0x0030)  
	UAkAudioEvent*                                     _explosionAudioEvent;                                       // 0x0270   (0x0008)  
	float                                              _explosionForceMagnitude;                                   // 0x0278   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x027C   (0x0004)  MISSED
	TArray<FVehicleCorpseBurningParticles>             _burningParticles;                                          // 0x0280   (0x0010)  
	UAkAudioEvent*                                     _burningAudioEvent;                                         // 0x0290   (0x0008)  
	float                                              _endOfLifeFadingTime;                                       // 0x0298   (0x0004)  
	unsigned char                                      UnknownData03_6[0x24];                                      // 0x029C   (0x0024)  MISSED


	/// Functions
	// Function /Script/ConZ.VehicleCorpse.GetMesh
	UStaticMeshComponent* GetMesh();                                                                                         // [0x23fe380] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.VehicleCraftedItem
/// Size: 0x0020 (0x000910 - 0x000930)
class AVehicleCraftedItem : public AItem
{ 
public:
	UClass*                                            _vehicleClass;                                              // 0x0910   (0x0008)  
	FPrimaryAssetId                                    _vehiclePrimaryAssetId;                                     // 0x0918   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0928   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.VehicleCraftedItem.SpawnVehicle
	AActor* SpawnVehicle(UClass* vehicleClass);                                                                              // [0x23fe8b0] Native|Event|Protected|BlueprintEvent 
};

/// Class /Script/ConZ.VehicleDoorsComponent
/// Size: 0x0010 (0x0000B0 - 0x0000C0)
class UVehicleDoorsComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00B0   (0x0010)  MISSED
};

/// Class /Script/ConZ.VehicleElectricalDevice
/// Size: 0x0000 (0x000028 - 0x000028)
class UVehicleElectricalDevice : public UInterface
{ 
public:
};

/// Class /Script/ConZ.VehicleSystem
/// Size: 0x0008 (0x000028 - 0x000030)
class UVehicleSystem : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x4];                                       // 0x0028   (0x0004)  MISSED
	bool                                               _useReplication;                                            // 0x002C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x002D   (0x0003)  MISSED
};

/// Class /Script/ConZ.VehicleElectricalSystem
/// Size: 0x0038 (0x000030 - 0x000068)
class UVehicleElectricalSystem : public UVehicleSystem
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0030   (0x0030)  MISSED
	float                                              _chargeDrainWhenInactive;                                   // 0x0060   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0064   (0x0004)  MISSED
};

/// Class /Script/ConZ.VehicleEntitySetup
/// Size: 0x0000 (0x000080 - 0x000080)
class UVehicleEntitySetup : public UEntitySetup
{ 
public:
};

/// Class /Script/ConZ.VehicleForcePushComponent
/// Size: 0x0020 (0x0000B0 - 0x0000D0)
class UVehicleForcePushComponent : public UActorComponent
{ 
public:
	TArray<FVehicleForcePushParams>                    _forcePushParams;                                           // 0x00B0   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x00C0   (0x0010)  MISSED
};

/// Class /Script/ConZ.VehicleGroupSpawningPreset
/// Size: 0x0010 (0x000030 - 0x000040)
class UVehicleGroupSpawningPreset : public UDataAsset
{ 
public:
	TArray<UVehiclePreset*>                            VehiclePresets;                                             // 0x0030   (0x0010)  
};

/// Class /Script/ConZ.VehicleHitZoneManager
/// Size: 0x0060 (0x0000D0 - 0x000130)
class UVehicleHitZoneManager : public UMeshHitZones
{ 
public:
	FName                                              _vehicleHitMeshName;                                        // 0x00D0   (0x0008)  
	TArray<UMaterialInterface*>                        _engineBlock;                                               // 0x00D8   (0x0010)  
	TArray<FVehicleHitZoneData>                        _doors;                                                     // 0x00E8   (0x0010)  
	TArray<FVehicleHitZoneData>                        _doorWindows;                                               // 0x00F8   (0x0010)  
	TArray<FVehicleHitZoneData>                        _wheelTires;                                                // 0x0108   (0x0010)  
	TArray<FAirplaneWingHitZoneData>                   _airplaneWings;                                             // 0x0118   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0128   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.VehicleHitZoneManager.SetVehicleDoorWindowHitMeshAttached
	void SetVehicleDoorWindowHitMeshAttached(int32_t doorIndex, bool Value);                                                 // [0x2403ee0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.VehicleHitZoneManager.SetVehicleDoorHitMeshAttached
	void SetVehicleDoorHitMeshAttached(int32_t doorIndex, bool Value);                                                       // [0x2403e10] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.VehicleHitZoneManager.GetWheelTires
	TArray<FVehicleHitZoneData> GetWheelTires();                                                                             // [0x2403ce0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.VehicleHitZoneManager.GetVehicleHitMeshName
	FName GetVehicleHitMeshName();                                                                                           // [0x2403cb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.VehicleHitZoneManager.GetDoorWindows
	TArray<FVehicleHitZoneData> GetDoorWindows();                                                                            // [0x2403c30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.VehicleHitZoneManager.GetDoors
	TArray<FVehicleHitZoneData> GetDoors();                                                                                  // [0x2403c70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.VehicleHitZoneManager.GetAirplaneWings
	TArray<FAirplaneWingHitZoneData> GetAirplaneWings();                                                                     // [0x2403ba0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.VehicleHudWidget
/// Size: 0x00B0 (0x000260 - 0x000310)
class UVehicleHudWidget : public UUserWidget
{ 
public:
	UVehicleMountSlotIndicators*                       _mountSlotIndicators;                                       // 0x0260   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0268   (0x0008)  MISSED
	UTextBlock*                                        Speed1s;                                                    // 0x0270   (0x0008)  
	UTextBlock*                                        Speed10s;                                                   // 0x0278   (0x0008)  
	UTextBlock*                                        Speed100s;                                                  // 0x0280   (0x0008)  
	UTextBlock*                                        Gear;                                                       // 0x0288   (0x0008)  
	UProgressBar*                                      HealthBar;                                                  // 0x0290   (0x0008)  
	UProgressBar*                                      FuelBar;                                                    // 0x0298   (0x0008)  
	UProgressBar*                                      BatteryBar;                                                 // 0x02A0   (0x0008)  
	UImage*                                            EngineBrokenIndicator;                                      // 0x02A8   (0x0008)  
	UWidgetAnimation*                                  Blink;                                                      // 0x02B0   (0x0008)  
	UOverlay*                                          Overlay;                                                    // 0x02B8   (0x0008)  
	UTextBlock*                                        TextBlock;                                                  // 0x02C0   (0x0008)  
	UTextBlock*                                        TextBlock;                                                  // 0x02C8   (0x0008)  
	USizeBox*                                          SizeBox;                                                    // 0x02D0   (0x0008)  
	USizeBox*                                          SizeBox;                                                    // 0x02D8   (0x0008)  
	UImage*                                            Image;                                                      // 0x02E0   (0x0008)  
	UImage*                                            Image;                                                      // 0x02E8   (0x0008)  
	UImage*                                            Image;                                                      // 0x02F0   (0x0008)  
	UImage*                                            Image;                                                      // 0x02F8   (0x0008)  
	UImage*                                            Image;                                                      // 0x0300   (0x0008)  
	UTextBlock*                                        kmh;                                                        // 0x0308   (0x0008)  
};

/// Class /Script/ConZ.VehicleItemContainer
/// Size: 0x0000 (0x000A30 - 0x000A30)
class AVehicleItemContainer : public AChestItem
{ 
public:
};

/// Class /Script/ConZ.VehicleMeshComponent
/// Size: 0x0000 (0x000ED0 - 0x000ED0)
class UVehicleMeshComponent : public USkeletalMeshComponent
{ 
public:
};

/// Class /Script/ConZ.VehicleMountSlot
/// Size: 0x0000 (0x000028 - 0x000028)
class UVehicleMountSlot : public UMountSlot
{ 
public:
};

/// Class /Script/ConZ.VehicleMountSlotIndicators
/// Size: 0x0020 (0x000260 - 0x000280)
class UVehicleMountSlotIndicators : public UUserWidget
{ 
public:
	UImage*                                            _backgroundGradient;                                        // 0x0260   (0x0008)  
	UContentWidget*                                    _vehicleMountSlotsContainer;                                // 0x0268   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0270   (0x0010)  MISSED
};

/// Class /Script/ConZ.VehicleMountSlotsWidget
/// Size: 0x0010 (0x000260 - 0x000270)
class UVehicleMountSlotsWidget : public UUserWidget
{ 
public:
	UCanvasPanel*                                      _mountSlotsCanvas;                                          // 0x0260   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0268   (0x0008)  MISSED
};

/// Class /Script/ConZ.VehicleMountSlotWidget
/// Size: 0x0010 (0x000260 - 0x000270)
class UVehicleMountSlotWidget : public UUserWidget
{ 
public:
	UWidgetSwitcher*                                   _slotStateSwitcher;                                         // 0x0260   (0x0008)  
	UTextBlock*                                        _keybindLabel;                                              // 0x0268   (0x0008)  
};

/// Class /Script/ConZ.VehiclePartDescriptionComponent
/// Size: 0x0000 (0x000480 - 0x000480)
class UVehiclePartDescriptionComponent : public UBoxComponent
{ 
public:
};

/// Class /Script/ConZ.VehiclePowertrainComponent
/// Size: 0x0018 (0x0000B0 - 0x0000C8)
class UVehiclePowertrainComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x00B0   (0x0018)  MISSED
};

/// Class /Script/ConZ.VehiclePresetNode
/// Size: 0x0048 (0x000028 - 0x000070)
class UVehiclePresetNode : public UObject
{ 
public:
	TArray<FPrimaryAssetId>                            PossibleAttachmentAssetIds;                                 // 0x0028   (0x0010)  
	FPrimaryAssetId                                    AttachmentAssetId;                                          // 0x0038   (0x0010)  
	bool                                               IsFunctionalityAttachment;                                  // 0x0048   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0049   (0x0003)  MISSED
	float                                              SpawnChance;                                                // 0x004C   (0x0004)  
	FFloatRange                                        SpawnHealthPercentageRange;                                 // 0x0050   (0x0010)  
	TArray<UVehiclePresetNode*>                        Children;                                                   // 0x0060   (0x0010)  
};

/// Class /Script/ConZ.VehiclePreset
/// Size: 0x0068 (0x000030 - 0x000098)
class UVehiclePreset : public UDataAsset
{ 
public:
	FPrimaryAssetId                                    VehicleAssetId;                                             // 0x0030   (0x0010)  
	UVehiclePresetNode*                                RootNode;                                                   // 0x0040   (0x0008)  
	FFloatRange                                        FuelAmountSpawnPercentageRange;                             // 0x0048   (0x0010)  
	FFloatRange                                        BatteryChargeSpawnPercentageRange;                          // 0x0058   (0x0010)  
	TWeakObjectPtr<UClass*>                            LockClass;                                                  // 0x0068   (0x0028)  
	float                                              VerticalSpawnOffset;                                        // 0x0090   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0094   (0x0004)  MISSED
};

/// Class /Script/ConZ.VehicleQueryComponent
/// Size: 0x0008 (0x0000B0 - 0x0000B8)
class UVehicleQueryComponent : public UActorComponent
{ 
public:
	bool                                               _isReady;                                                   // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00B1   (0x0007)  MISSED
};

/// Class /Script/ConZ.VehicleServiceComponent
/// Size: 0x0020 (0x0000B0 - 0x0000D0)
class UVehicleServiceComponent : public UActorComponent
{ 
public:
	AVehicleServiceStation*                            _serviceStation;                                            // 0x00B0   (0x0008)  
	FDbIntegerId                                       _serviceInitiatorId;                                        // 0x00B8   (0x0008)  
	TWeakObjectPtr<UObject*>                           _currentAction;                                             // 0x00C0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x00C8   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.VehicleServiceComponent.OnRep_ServiceStation
	void OnRep_ServiceStation();                                                                                             // [0x2403dd0] Final|Native|Private 
};

/// Class /Script/ConZ.VehicleServiceItemComponent
/// Size: 0x0018 (0x0000B0 - 0x0000C8)
class UVehicleServiceItemComponent : public UActorComponent
{ 
public:
	UClass*                                            _serviceStationClass;                                       // 0x00B0   (0x0008)  
	TArray<FGameplayTag>                               _supportedServiceTags;                                      // 0x00B8   (0x0010)  
};

/// Class /Script/ConZ.VehicleServiceRegistry
/// Size: 0x0060 (0x0000B0 - 0x000110)
class UVehicleServiceRegistry : public UActorComponent
{ 
public:
	TArray<FVehicleServiceData>                        _serviceData;                                               // 0x00B0   (0x0010)  
	unsigned char                                      UnknownData00_6[0x50];                                      // 0x00C0   (0x0050)  MISSED
};

/// Class /Script/ConZ.VehicleServiceStationSaveObject
/// Size: 0x0000 (0x000028 - 0x000028)
class UVehicleServiceStationSaveObject : public UObject
{ 
public:
};

/// Class /Script/ConZ.StaticVehicleServiceStationSaveObject
/// Size: 0x0008 (0x000028 - 0x000030)
class UStaticVehicleServiceStationSaveObject : public UVehicleServiceStationSaveObject
{ 
public:
	int64_t                                            StaticId;                                                   // 0x0028   (0x0008)  
};

/// Class /Script/ConZ.VehicleServiceStation
/// Size: 0x0080 (0x000220 - 0x0002A0)
class AVehicleServiceStation : public AActor
{ 
public:
	FGameplayTag                                       _serviceMode;                                               // 0x0220   (0x0008)  
	USkeletalMeshComponent*                            _mesh;                                                      // 0x0228   (0x0008)  
	FText                                              _displayName;                                               // 0x0230   (0x0018)  
	FName                                              _vehicleAttachSocketName;                                   // 0x0248   (0x0008)  
	float                                              _maxServiceDistanceSquared;                                 // 0x0250   (0x0004)  
	float                                              _minUpAlignmentAngleDeg;                                    // 0x0254   (0x0004)  
	float                                              _minForwardAbsAlignmentAngleDeg;                            // 0x0258   (0x0004)  
	FVector                                            _blockCheckBoxExtent;                                       // 0x025C   (0x000C)  
	UAkAudioEvent*                                     _movingStartAudioEvent;                                     // 0x0268   (0x0008)  
	UAkAudioEvent*                                     _movingStopAudioEvent;                                      // 0x0270   (0x0008)  
	ATradePost*                                        _assignedTradePost;                                         // 0x0278   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0280   (0x0008)  MISSED
	AVehicleBase*                                      _servicedVehicle;                                           // 0x0288   (0x0008)  
	int64_t                                            _staticId;                                                  // 0x0290   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0298   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.VehicleServiceStation.OnRep_ServicedVehicle
	void OnRep_ServicedVehicle();                                                                                            // [0x2403df0] Final|Native|Private 
	// Function /Script/ConZ.VehicleServiceStation.OnAttachedVehicleDestroyed
	void OnAttachedVehicleDestroyed(AActor* DestroyedActor);                                                                 // [0x2403d20] Final|Native|Private 
	// Function /Script/ConZ.VehicleServiceStation.NetMulticast_StartLowering
	void NetMulticast_StartLowering();                                                                                       // [0x226ff90] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/ConZ.PortableVehicleServiceStationSaveObject
/// Size: 0x0060 (0x000028 - 0x000088)
class UPortableVehicleServiceStationSaveObject : public UVehicleServiceStationSaveObject
{ 
public:
	FPrimaryAssetId                                    AssetId;                                                    // 0x0028   (0x0010)  
	FGameplayTag                                       ServiceMode;                                                // 0x0038   (0x0008)  
	FVector                                            Location;                                                   // 0x0040   (0x000C)  
	FRotator                                           Rotation;                                                   // 0x004C   (0x000C)  
	TWeakObjectPtr<UClass*>                            OriginalItemClass;                                          // 0x0058   (0x0028)  
	float                                              HealthRatio;                                                // 0x0080   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0084   (0x0004)  MISSED
};

/// Class /Script/ConZ.PortableVehicleServiceStation
/// Size: 0x0068 (0x0002A0 - 0x000308)
class APortableVehicleServiceStation : public AVehicleServiceStation
{ 
public:
	FGameplayTag                                       _serviceModeRep;                                            // 0x02A0   (0x0008)  
	TMap<FGameplayTag, UAnimSequenceBase*>             _poseVsSericeModeMap;                                       // 0x02A8   (0x0050)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x02F8   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.PortableVehicleServiceStation.OnRep_ServiceMode
	void OnRep_ServiceMode();                                                                                                // [0x2403db0] Final|Native|Private 
};

/// Class /Script/ConZ.VehicleServiceStationAnimInstance
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UVehicleServiceStationAnimInstance : public UAnimInstance
{ 
public:
	float                                              _liftTime;                                                  // 0x02B8   (0x0004)  
	float                                              _liftInterpValue;                                           // 0x02BC   (0x0004)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x02C0   (0x0010)  MISSED
};

/// Class /Script/ConZ.VehicleServiceToolTag
/// Size: 0x0010 (0x000030 - 0x000040)
class UVehicleServiceToolTag : public UBaseItemTag
{ 
public:
	FGameplayTag                                       GameplayTag;                                                // 0x0030   (0x0008)  
	int32_t                                            UsesPerService;                                             // 0x0038   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x003C   (0x0004)  MISSED
};

/// Class /Script/ConZ.VehicleWeaponAimingParameters
/// Size: 0x0100 (0x000028 - 0x000128)
class UVehicleWeaponAimingParameters : public UObject
{ 
public:
	TArray<EVehicleWeaponAimingStance>                 SupportedStance;                                            // 0x0028   (0x0010)  
	FVehicleWeaponAimingStanceData                     StanceData;                                                 // 0x0038   (0x00F0)  


	/// Functions
	// Function /Script/ConZ.VehicleWeaponAimingParameters.CanPrisonerTakeItemInHands
	bool CanPrisonerTakeItemInHands(APrisoner* Prisoner, AItem* Item, EVehicleWeaponAimingStance stance);                    // [0x2403a80] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.VehicleWeaponAimingParameters.CanPrisonerEnterCombatModeUsingItem
	bool CanPrisonerEnterCombatModeUsingItem(APrisoner* Prisoner, AItem* Item, EVehicleWeaponAimingStance stance);           // [0x2403960] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.VehicleWeaponAimingParameters.CanExecutePrisonerAction
	bool CanExecutePrisonerAction(APrisoner* Prisoner, UPrisonerActionDescription* desc);                                    // [0x2403890] Native|Event|Public|BlueprintEvent|Const 
};

/// Class /Script/ConZ.VehicleSpawner
/// Size: 0x0008 (0x000220 - 0x000228)
class AVehicleSpawner : public AActor
{ 
public:
	UVehicleSpawnerComponent*                          SpawnerComponent;                                           // 0x0220   (0x0008)  
};

/// Class /Script/ConZ.VehicleSpawnerComponent
/// Size: 0x0010 (0x000200 - 0x000210)
class UVehicleSpawnerComponent : public USceneComponent
{ 
public:
	TArray<FVehicleSpawnerMarker>                      SpawnerMarkers;                                             // 0x01F8   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0208   (0x0008)  MISSED
};

/// Class /Script/ConZ.VehicleSpawningManager2
/// Size: 0x03A8 (0x000220 - 0x0005C8)
class AVehicleSpawningManager2 : public AActor
{ 
public:
	float                                              _maxAllowedTimeInForbiddenZones;                            // 0x0220   (0x0004)  
	float                                              _forbiddenZoneCheckInterval;                                // 0x0224   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0228   (0x0004)  MISSED
	float                                              _relevantSpawnerGroupsUpdateTimeElapsed;                    // 0x022C   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0230   (0x0004)  MISSED
	float                                              _minPlayerLocationDeltaToUpdateRelevantSpawners;            // 0x0234   (0x0004)  
	float                                              _relevantSpawnerGroupsUpdateTimeBudget;                     // 0x0238   (0x0004)  
	float                                              _defaultSpawnerNetCullDistance;                             // 0x023C   (0x0004)  
	bool                                               _alwaysUseDefaultSpawnerNetCullDistance;                    // 0x0240   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0241   (0x0003)  MISSED
	float                                              _numDaysToKeepSpawnerAliveIfVehicleIsInactive;              // 0x0244   (0x0004)  
	float                                              _spawnerTasksProcessingTimeElapsed;                         // 0x0248   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x024C   (0x0004)  MISSED
	float                                              _spawnerTasksProcessingTimeBudget;                          // 0x0250   (0x0004)  
	float                                              _addSpawnerUpdateInterval;                                  // 0x0254   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x0258   (0x0004)  MISSED
	float                                              _relevantSpawnersUpdateInterval;                            // 0x025C   (0x0004)  
	unsigned char                                      UnknownData05_5[0x4];                                       // 0x0260   (0x0004)  MISSED
	float                                              _autoSaveCheckIntervalForMovingVehicles;                    // 0x0264   (0x0004)  
	unsigned char                                      UnknownData06_5[0x4];                                       // 0x0268   (0x0004)  MISSED
	float                                              _autoSaveIntervalForMovingVehicles;                         // 0x026C   (0x0004)  
	float                                              _autoSaveCheckIntervalForStationaryVehicles;                // 0x0270   (0x0004)  
	unsigned char                                      UnknownData07_5[0x4];                                       // 0x0274   (0x0004)  MISSED
	float                                              _autoSaveIntervalForStationaryVehicles;                     // 0x0278   (0x0004)  
	unsigned char                                      UnknownData08_5[0x4];                                       // 0x027C   (0x0004)  MISSED
	TMap<FPrimaryAssetId, FVehicleManualSpawnPresetArray> _manualSpawnPresetsMap;                                  // 0x0280   (0x0050)  
	TMap<FPrimaryAssetId, UVehiclePreset*>             _purchaseSpawnPresetsMap;                                   // 0x02D0   (0x0050)  
	unsigned char                                      UnknownData09_5[0x50];                                      // 0x0320   (0x0050)  MISSED
	FGameplayTag                                       _spawnGroupParentTag;                                       // 0x0370   (0x0008)  
	int32_t                                            _defaultMaxNumSpawnersPerSpawnGroup;                        // 0x0378   (0x0004)  
	unsigned char                                      UnknownData10_5[0xF4];                                      // 0x037C   (0x00F4)  MISSED
	float                                              _minDistanceBetweenVisitorAndSpawnLocation;                 // 0x0470   (0x0004)  
	float                                              _spawnPointsSearchExtension;                                // 0x0474   (0x0004)  
	float                                              _preferredDistanceBetweenSpawners;                          // 0x0478   (0x0004)  
	float                                              _preferredDistanceBetweenSpawnersOfSameType;                // 0x047C   (0x0004)  
	TArray<FVehicleSpawnPointData>                     _vehicleSpawnPoints;                                        // 0x0480   (0x0010)  
	unsigned char                                      UnknownData11_6[0x138];                                     // 0x0490   (0x0138)  MISSED


	/// Functions
	// Function /Script/ConZ.VehicleSpawningManager2.OnVehicleActorDestroyed
	void OnVehicleActorDestroyed(AActor* vehicleActor);                                                                      // [0x2406950] Final|Native|Private 
};

/// Class /Script/ConZ.VehicleUIDataController
/// Size: 0x0090 (0x000028 - 0x0000B8)
class UVehicleUIDataController : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x90];                                      // 0x0028   (0x0090)  MISSED
};

/// Class /Script/ConZ.VerificationStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UVerificationStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.VerticalScrollBoxDropdownContent
/// Size: 0x0008 (0x000260 - 0x000268)
class UVerticalScrollBoxDropdownContent : public UUserWidget
{ 
public:
	UScrollBox*                                        _entriesScrollBox;                                          // 0x0260   (0x0008)  
};

/// Class /Script/ConZ.VicinityContainer3
/// Size: 0x0048 (0x000260 - 0x0002A8)
class UVicinityContainer3 : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0260   (0x0030)  MISSED
	UItemInventoryWidget2*                             _container;                                                 // 0x0290   (0x0008)  
	UScrollBox*                                        _containerScrollBox;                                        // 0x0298   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x02A0   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.VicinityContainer3.OnContainerScrollBoxScrolled
	void OnContainerScrollBoxScrolled(float CurrentOffset);                                                                  // [0x2406840] Final|Native|Private 
};

/// Class /Script/ConZ.VicinityContainerRowItemWidget
/// Size: 0x0048 (0x000550 - 0x000598)
class UVicinityContainerRowItemWidget : public UItemWidget2
{ 
public:
	UTextBlock*                                        _caption;                                                   // 0x0550   (0x0008)  
	UImage*                                            Image;                                                      // 0x0558   (0x0008)  
	UImage*                                            Image;                                                      // 0x0560   (0x0008)  
	UImage*                                            Image;                                                      // 0x0568   (0x0008)  
	UTextBlock*                                        TextBlock;                                                  // 0x0570   (0x0008)  
	UImage*                                            UpperLeftIcon;                                              // 0x0578   (0x0008)  
	UProgressBar*                                      ProgressBarLeftFirst;                                       // 0x0580   (0x0008)  
	UProgressBar*                                      ProgressBarLeftSecond;                                      // 0x0588   (0x0008)  
	USizeBox*                                          SizeBox;                                                    // 0x0590   (0x0008)  
};

/// Class /Script/ConZ.VicinityPanel3
/// Size: 0x02E8 (0x000260 - 0x000548)
class UVicinityPanel3 : public UUserWidget
{ 
public:
	bool                                               _isTradingThingy;                                           // 0x0260   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0261   (0x0007)  MISSED
	UWrapBox*                                          _searchedItemsBox;                                          // 0x0268   (0x0008)  
	UWrapBox*                                          _vicinityBox;                                               // 0x0270   (0x0008)  
	UHorizontalBox*                                    _vicinityContainersBox;                                     // 0x0278   (0x0008)  
	UHorizontalBox*                                    _tradingBox;                                                // 0x0280   (0x0008)  
	UOverlay*                                          _tradingBoxOverlay;                                         // 0x0288   (0x0008)  
	UBadAdjustableSeparator*                           _adjustableSeparator;                                       // 0x0290   (0x0008)  
	TMap<UObject*, UWidget*>                           _searchedItems;                                             // 0x0298   (0x0050)  
	TMap<UObject*, UWidget*>                           _vicinityItems;                                             // 0x02E8   (0x0050)  
	TMap<UObject*, UWidget*>                           _vicinityContainers;                                        // 0x0338   (0x0050)  
	TMap<UObject*, UWidget*>                           _tradingItems;                                              // 0x0388   (0x0050)  
	unsigned char                                      UnknownData01_5[0xA0];                                      // 0x03D8   (0x00A0)  MISSED
	TMap<UCheckBox*, FClassesArray>                    _filterCheckboxes;                                          // 0x0478   (0x0050)  
	TMap<FName, FClassesArray>                         _filterCheckboxesNames;                                     // 0x04C8   (0x0050)  
	FMargin                                            _vicinityContainersPadding;                                 // 0x0518   (0x0010)  
	unsigned char                                      UnknownData02_6[0x20];                                      // 0x0528   (0x0020)  MISSED


	/// Functions
	// Function /Script/ConZ.VicinityPanel3.OnVicinityContainerInitialized
	void OnVicinityContainerInitialized(TScriptInterface<Class>& Item, UItemWidget2* Widget);                                // [0x2406a70] Final|Native|Private|HasOutParms 
	// Function /Script/ConZ.VicinityPanel3.OnVicinityContainerClosed
	void OnVicinityContainerClosed(UItemWidget2* Widget);                                                                    // [0x24069e0] Final|Native|Private 
	// Function /Script/ConZ.VicinityPanel3.OnItemActorDestroyed
	void OnItemActorDestroyed(AActor* Actor);                                                                                // [0x24068c0] Final|Native|Private 
	// Function /Script/ConZ.VicinityPanel3.OnCheckBoxCheckedChanged
	void OnCheckBoxCheckedChanged(bool checked);                                                                             // [0x24067b0] Final|Native|Private 
};

/// Class /Script/ConZ.VideoSettingsManager
/// Size: 0x0000 (0x000028 - 0x000028)
class UVideoSettingsManager : public UObject
{ 
public:
};

/// Class /Script/ConZ.VisionEffectsComponent
/// Size: 0x1470 (0x0000B0 - 0x001520)
class UVisionEffectsComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x38];                                      // 0x00B0   (0x0038)  MISSED
	float                                              PostProcessPriority;                                        // 0x00E8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x00EC   (0x0004)  MISSED
	UMaterialInterface*                                FadeOutMaterial;                                            // 0x00F0   (0x0008)  
	UMaterialInterface*                                LowLightVisionMaterial;                                     // 0x00F8   (0x0008)  
	UMaterialInterface*                                NightVisionMaterial;                                        // 0x0100   (0x0008)  
	float                                              NightVisionBlendInDuration;                                 // 0x0108   (0x0004)  
	float                                              NightVisionBlendOutDuration;                                // 0x010C   (0x0004)  
	UMaterialParameterCollection*                      AnimalEyesMaterialParameterCollection;                      // 0x0110   (0x0008)  
	FName                                              AnimalEyesEmissiveMaterialName;                             // 0x0118   (0x0008)  
	float                                              AnimalEyesEmissiveValueWhenNightVisionIsEnabled;            // 0x0120   (0x0004)  
	FName                                              NightVisionGlitchStrengthParameterName;                     // 0x0124   (0x0008)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x012C   (0x0004)  MISSED
	UMaterialInterface*                                FlashbangEffectMaterial;                                    // 0x0130   (0x0008)  
	UMaterialInterface*                                FallingBlurMaterial;                                        // 0x0138   (0x0008)  
	UMaterialInterface*                                TakenDamageMaterial;                                        // 0x0140   (0x0008)  
	UMaterialParameterCollection*                      TakenDamageMaterialParameterCollection;                     // 0x0148   (0x0008)  
	FName                                              TakenDamageBlurIntensityParameterName;                      // 0x0150   (0x0008)  
	FName                                              TakenDamageStainsIntensityParameterName;                    // 0x0158   (0x0008)  
	FName                                              TakenDamageVignetteIntensityParameterName;                  // 0x0160   (0x0008)  
	UCurveFloat*                                       TakenDamageBlurShapeCurve;                                  // 0x0168   (0x0008)  
	UCurveFloat*                                       TakenDamageBlurIntensityCurve;                              // 0x0170   (0x0008)  
	UCurveFloat*                                       TakenDamageBlurDurationCurve;                               // 0x0178   (0x0008)  
	UCurveFloat*                                       TakenDamageStainsShapeCurve;                                // 0x0180   (0x0008)  
	UCurveFloat*                                       TakenDamageStainsIntensityCurve;                            // 0x0188   (0x0008)  
	UCurveFloat*                                       TakenDamageStainsDurationCurve;                             // 0x0190   (0x0008)  
	UCurveFloat*                                       TakenDamageVignetteShapeCurve;                              // 0x0198   (0x0008)  
	UCurveFloat*                                       TakenDamageVignetteIntensityCurve;                          // 0x01A0   (0x0008)  
	UCurveFloat*                                       TakenDamageVignetteDurationCurve;                           // 0x01A8   (0x0008)  
	float                                              TakenDamageMaxChromaticAberration;                          // 0x01B0   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x01B4   (0x0004)  MISSED
	UClass*                                            TakenDamageCameraShakeClass;                                // 0x01B8   (0x0008)  
	UCurveFloat*                                       TakenDamageCameraShakeScaleCurve;                           // 0x01C0   (0x0008)  
	UMaterialInterface*                                TacticsEffectMaterial;                                      // 0x01C8   (0x0008)  
	UMaterialInterface*                                FocusModeMaterial;                                          // 0x01D0   (0x0008)  
	UMaterialInterface*                                DoubleVisionMaterial;                                       // 0x01D8   (0x0008)  
	FName                                              DoubleVisionIntensityParameterName;                         // 0x01E0   (0x0008)  
	UMaterialInterface*                                UnderwaterBlurMaterial;                                     // 0x01E8   (0x0008)  
	UMaterialInterface*                                PhotoModeTransitionMaterial;                                // 0x01F0   (0x0008)  
	UMaterialInterface*                                ScopeZoomMaterial;                                          // 0x01F8   (0x0008)  
	FName                                              ScopeZoomBlendPPParameterName;                              // 0x0200   (0x0008)  
	FName                                              ScopeZoomBlackoutDensityParameterName;                      // 0x0208   (0x0008)  
	FName                                              ScopeZoomChromaticAberrationDampeningParameterName;         // 0x0210   (0x0008)  
	FName                                              ScopeZoomCrosshairBaseScaleParameterName;                   // 0x0218   (0x0008)  
	FName                                              ScopeZoomCrosshairDepthOffsetMultiplierParameterName;       // 0x0220   (0x0008)  
	FName                                              ScopeZoomCrosshairScaleMultiplierParameterName;             // 0x0228   (0x0008)  
	FName                                              ScopeZoomDistortionPowerParameterName;                      // 0x0230   (0x0008)  
	FName                                              ScopeZoomDistortionScaleParameterName;                      // 0x0238   (0x0008)  
	FName                                              ScopeZoomEyeDistanceBlackoutMultiplierParameterName;        // 0x0240   (0x0008)  
	FName                                              ScopeZoomGlowIntensityAtNightParameterName;                 // 0x0248   (0x0008)  
	FName                                              ScopeZoomLensDepthOffsetMultiplierParameterName;            // 0x0250   (0x0008)  
	FName                                              ScopeZoomLensScaleParameterName;                            // 0x0258   (0x0008)  
	FName                                              ScopeZoomLensUIScaleParameterName;                          // 0x0260   (0x0008)  
	FName                                              ScopeZoomLensZoomParameterName;                             // 0x0268   (0x0008)  
	FName                                              ScopeZoomOptimalEyeDistanceParameterName;                   // 0x0270   (0x0008)  
	FName                                              ScopeZoomCrosshairCenterScreenOffsetParameterName;          // 0x0278   (0x0008)  
	FName                                              ScopeZoomLensCenterScreenOffsetParameterName;               // 0x0280   (0x0008)  
	FName                                              ScopeZoomCrosshairParameterName;                            // 0x0288   (0x0008)  
	FName                                              ScopeZoomCrosshairColorParameterName;                       // 0x0290   (0x0008)  
	FName                                              ScopeZoomCrosshairColorAtNightParameterName;                // 0x0298   (0x0008)  
	FName                                              ScopeZoomCrosshairGlowColorParameterName;                   // 0x02A0   (0x0008)  
	FName                                              ScopeZoomDirtMaskParameterName;                             // 0x02A8   (0x0008)  
	FName                                              ScopeZoomDirtinessParameterName;                            // 0x02B0   (0x0008)  
	FName                                              ScopeZoomDarkeningParameterName;                            // 0x02B8   (0x0008)  
	FName                                              ScopeZoomLensNormalMapParameterName;                        // 0x02C0   (0x0008)  
	FName                                              ScopeZoomLensUIParameterName;                               // 0x02C8   (0x0008)  
	FName                                              IsNightVisionActiveOnScopeParameterName;                    // 0x02D0   (0x0008)  
	UMaterialInterface*                                ScopeInHandsNightVisionMaterial;                            // 0x02D8   (0x0008)  
	UMaterialInterface*                                InjuryMaterial;                                             // 0x02E0   (0x0008)  
	UMaterialInterface*                                TraumaMaterial;                                             // 0x02E8   (0x0008)  
	UMaterialInterface*                                BulletHitMaterial;                                          // 0x02F0   (0x0008)  
	UMaterialInterface*                                SickMaterial;                                               // 0x02F8   (0x0008)  
	UMaterialInterface*                                ColdMaterial;                                               // 0x0300   (0x0008)  
	UMaterialInterface*                                HotMaterial;                                                // 0x0308   (0x0008)  
	UMaterialInterface*                                FatigueMaterial;                                            // 0x0310   (0x0008)  
	UMaterialInterface*                                HallucinationMaterial;                                      // 0x0318   (0x0008)  
	UMaterialInterface*                                EyePressureMaterial;                                        // 0x0320   (0x0008)  
	UMaterialInterface*                                BloodyEyesMaterial;                                         // 0x0328   (0x0008)  
	UMaterialInterface*                                RadiationMaterial;                                          // 0x0330   (0x0008)  
	UMaterialInterface*                                BlackoutMaterial;                                           // 0x0338   (0x0008)  
	UMaterialInterface*                                BlurredVisionMaterial;                                      // 0x0340   (0x0008)  
	UMaterialInterface*                                DepthOfFieldMaterial;                                       // 0x0348   (0x0008)  
	UMaterialInterface*                                PhoenixTearsMaterial;                                       // 0x0350   (0x0008)  
	unsigned char                                      UnknownData04_5[0x8];                                       // 0x0358   (0x0008)  MISSED
	FVector4                                           HeightenedSensesSaturationColor;                            // 0x0360   (0x0010)  
	FPostProcessSettings                               _postProcessSettings;                                       // 0x0370   (0x0560)  
	unsigned char                                      UnknownData05_5[0x5D8];                                     // 0x08D0   (0x05D8)  MISSED
	UMaterialInstanceDynamic*                          _doubleVisionIntensityMaterialInstance;                     // 0x0EA8   (0x0008)  
	UMaterialInterface*                                _headgearOverlayMaterialInstance;                           // 0x0EB0   (0x0008)  
	UMaterialInstanceDynamic*                          _scopeZoomMaterialInstance;                                 // 0x0EB8   (0x0008)  
	UMaterialInstanceDynamic*                          _nightVisionMaterialInstance;                               // 0x0EC0   (0x0008)  
	UMaterialInstanceDynamic*                          _scopeInHandsNightVisionMaterialInstance;                   // 0x0EC8   (0x0008)  
	UMaterialInstanceDynamic*                          _fallingBlurMaterialInstance;                               // 0x0ED0   (0x0008)  
	UMaterialInterface*                                _underwaterPostProcessingCurrent;                           // 0x0ED8   (0x0008)  
	UMaterialInterface*                                _underwaterPostProcessingLast;                              // 0x0EE0   (0x0008)  
	float                                              _underwaterPostProcessingBlendTime;                         // 0x0EE8   (0x0004)  
	unsigned char                                      UnknownData06_5[0x8];                                       // 0x0EEC   (0x0008)  MISSED
	float                                              _DOFBlurTime;                                               // 0x0EF4   (0x0004)  
	float                                              _DOFClearBlurTime;                                          // 0x0EF8   (0x0004)  
	float                                              _DOFScopingBlurTime;                                        // 0x0EFC   (0x0004)  
	float                                              _DOFBlurDistanceADS;                                        // 0x0F00   (0x0004)  
	float                                              _DOFFstopADS;                                               // 0x0F04   (0x0004)  
	UMaterialInstanceDynamic*                          _injuryMaterial;                                            // 0x0F08   (0x0008)  
	unsigned char                                      UnknownData07_5[0x8];                                       // 0x0F10   (0x0008)  MISSED
	UMaterialInstanceDynamic*                          _traumaMaterial;                                            // 0x0F18   (0x0008)  
	unsigned char                                      UnknownData08_5[0x8];                                       // 0x0F20   (0x0008)  MISSED
	UMaterialInstanceDynamic*                          _hallucinationMaterial;                                     // 0x0F28   (0x0008)  
	unsigned char                                      UnknownData09_5[0x8];                                       // 0x0F30   (0x0008)  MISSED
	UMaterialInstanceDynamic*                          _eyePressureMaterial;                                       // 0x0F38   (0x0008)  
	unsigned char                                      UnknownData10_5[0x8];                                       // 0x0F40   (0x0008)  MISSED
	UMaterialInstanceDynamic*                          _bloodyEyesMaterial;                                        // 0x0F48   (0x0008)  
	unsigned char                                      UnknownData11_5[0x8];                                       // 0x0F50   (0x0008)  MISSED
	UMaterialInstanceDynamic*                          _bulletHitMaterial;                                         // 0x0F58   (0x0008)  
	unsigned char                                      UnknownData12_5[0x8];                                       // 0x0F60   (0x0008)  MISSED
	UMaterialInstanceDynamic*                          _sickMaterial;                                              // 0x0F68   (0x0008)  
	unsigned char                                      UnknownData13_5[0x8];                                       // 0x0F70   (0x0008)  MISSED
	UMaterialInstanceDynamic*                          _coldMaterial;                                              // 0x0F78   (0x0008)  
	unsigned char                                      UnknownData14_5[0x8];                                       // 0x0F80   (0x0008)  MISSED
	UMaterialInstanceDynamic*                          _hotMaterial;                                               // 0x0F88   (0x0008)  
	unsigned char                                      UnknownData15_5[0x8];                                       // 0x0F90   (0x0008)  MISSED
	UMaterialInstanceDynamic*                          _fatigueMaterial;                                           // 0x0F98   (0x0008)  
	unsigned char                                      UnknownData16_5[0x8];                                       // 0x0FA0   (0x0008)  MISSED
	UMaterialInstanceDynamic*                          _radiationMaterial;                                         // 0x0FA8   (0x0008)  
	unsigned char                                      UnknownData17_5[0x8];                                       // 0x0FB0   (0x0008)  MISSED
	UMaterialInstanceDynamic*                          _blackoutMaterial;                                          // 0x0FB8   (0x0008)  
	unsigned char                                      UnknownData18_5[0x8];                                       // 0x0FC0   (0x0008)  MISSED
	UMaterialInstanceDynamic*                          _blurredVisionMaterial;                                     // 0x0FC8   (0x0008)  
	unsigned char                                      UnknownData19_5[0x8];                                       // 0x0FD0   (0x0008)  MISSED
	UMaterialInstanceDynamic*                          _depthOfFieldMaterial;                                      // 0x0FD8   (0x0008)  
	unsigned char                                      UnknownData20_5[0x8];                                       // 0x0FE0   (0x0008)  MISSED
	UMaterialInstanceDynamic*                          _phoenixTearsMaterial;                                      // 0x0FE8   (0x0008)  
	unsigned char                                      UnknownData21_6[0x530];                                     // 0x0FF0   (0x0530)  MISSED
};

/// Class /Script/ConZ.VisualOverlayItemTag
/// Size: 0x0010 (0x000030 - 0x000040)
class UVisualOverlayItemTag : public UBaseItemTag
{ 
public:
	UMaterialInterface*                                OverlayMaterial;                                            // 0x0030   (0x0008)  
	int32_t                                            Priority;                                                   // 0x0038   (0x0004)  
	bool                                               ShouldBeVisibleInFirstPersonView;                           // 0x003C   (0x0001)  
	bool                                               ShouldBeVisibleInThirdPersonView;                           // 0x003D   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x003E   (0x0002)  MISSED
};

/// Class /Script/ConZ.VoiceAudioComponent
/// Size: 0x0020 (0x000860 - 0x000880)
class UVoiceAudioComponent : public UAudioComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0860   (0x0008)  MISSED
	UVoiceDecoder*                                     VoiceDecoder;                                               // 0x0868   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0870   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.VoiceAudioComponent.QueueVoiceData
	void QueueVoiceData(TArray<char>& CompressedVoiceData);                                                                  // [0x2406b60] Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.VoiceAudioComponent.InitializeVoiceAudioComponent
	void InitializeVoiceAudioComponent();                                                                                    // [0x2406790] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.VoiceChatComponent
/// Size: 0x0080 (0x0000B0 - 0x000130)
class UVoiceChatComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00B0   (0x0008)  MISSED
	float                                              MaxVoiceDistance;                                           // 0x00B8   (0x0004)  
	bool                                               ActiveTalker;                                               // 0x00BC   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x00BD   (0x0003)  MISSED
	float                                              StopTalkingTimeThreshold;                                   // 0x00C0   (0x0004)  
	unsigned char                                      UnknownData02_6[0x6C];                                      // 0x00C4   (0x006C)  MISSED


	/// Functions
	// Function /Script/ConZ.VoiceChatComponent.ServerProcessVoiceChatData
	void ServerProcessVoiceChatData(TArray<char> compressedVoiceDataBuffer);                                                 // [0x2406c10] Final|Net|Native|Event|Private|NetServer|Const 
	// Function /Script/ConZ.VoiceChatComponent.GetIsActiveTalker
	bool GetIsActiveTalker();                                                                                                // [0x2406760] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.VoiceChatComponent.GetCompressedVoiceData
	bool GetCompressedVoiceData(TArray<char>& OutBuffer);                                                                    // [0x24066a0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.VoiceChatComponent.GetAllVoiceChatComponentsInRange
	void GetAllVoiceChatComponentsInRange(TArray<UVoiceChatComponent*>& pawnList);                                           // [0x24065f0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.VoiceChatComponent.ClientReceiveVoiceData
	void ClientReceiveVoiceData(UVoiceChatComponent* from, TArray<char> compressedVoiceDataBuffer);                          // [0x2406510] Final|Net|Native|Event|Private|NetClient|Const 
};

/// Class /Script/ConZ.VoiceDecoder
/// Size: 0x0010 (0x000028 - 0x000038)
class UVoiceDecoder : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0028   (0x0010)  MISSED
};

/// Class /Script/ConZ.VoltageMatchingMinigame
/// Size: 0x01A8 (0x0002F8 - 0x0004A0)
class AVoltageMatchingMinigame : public AMinigame
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x02F8   (0x0020)  MISSED
	USwitchboardComponent*                             _switchboardComponent;                                      // 0x0318   (0x0008)  
	UStaticMeshComponent*                              _bodyMesh;                                                  // 0x0320   (0x0008)  
	UStaticMeshComponent*                              _leftDoor;                                                  // 0x0328   (0x0008)  
	UStaticMeshComponent*                              _rightDoor;                                                 // 0x0330   (0x0008)  
	UStaticMeshComponent*                              _screens;                                                   // 0x0338   (0x0008)  
	UWidgetComponent*                                  _screenWidget;                                              // 0x0340   (0x0008)  
	UMaterialInstance*                                 _screenMaterialInstance;                                    // 0x0348   (0x0008)  
	FName                                              _baseColorMaterialParameterName;                            // 0x0350   (0x0008)  
	FGameplayTag                                       _masterSwitchTag;                                           // 0x0358   (0x0008)  
	int32_t                                            _masterSwitchLightMaterialIndex;                            // 0x0360   (0x0004)  
	FName                                              _masterSwitchLightColorPropertyName;                        // 0x0364   (0x0008)  
	FLinearColor                                       _masterSwitchLightOffColor;                                 // 0x036C   (0x0010)  
	FLinearColor                                       _masterSwitchLightOnColor;                                  // 0x037C   (0x0010)  
	float                                              _masterSwitchLightBlinkingFrequency;                        // 0x038C   (0x0004)  
	UStaticMesh*                                       _neutralMesh;                                               // 0x0390   (0x0008)  
	UStaticMesh*                                       _plusMesh;                                                  // 0x0398   (0x0008)  
	UStaticMesh*                                       _minusMesh;                                                 // 0x03A0   (0x0008)  
	UStaticMesh*                                       _multiplicationMesh;                                        // 0x03A8   (0x0008)  
	UStaticMesh*                                       _divisionMesh;                                              // 0x03B0   (0x0008)  
	TArray<FVoltageMatchingSwitchElementsPairing>      _switchPairings;                                            // 0x03B8   (0x0010)  
	TArray<UStaticMeshComponent*>                      _electricalElementsMeshComponents;                          // 0x03C8   (0x0010)  
	TArray<FVoltageMatchingElementRow>                 _elementRows;                                               // 0x03D8   (0x0010)  
	float                                              _timeLimit;                                                 // 0x03E8   (0x0004)  
	float                                              _waitingForPlayerTimeLimit;                                 // 0x03EC   (0x0004)  
	UAkAudioEvent*                                     _switchFlipAudioEvent;                                      // 0x03F0   (0x0008)  
	UAkAudioEvent*                                     _failAudioEvent;                                            // 0x03F8   (0x0008)  
	UAkAudioEvent*                                     _successAudioEvent;                                         // 0x0400   (0x0008)  
	TArray<uint32_t>                                   _additionValues;                                            // 0x0408   (0x0010)  
	TArray<uint32_t>                                   _subtractionValues;                                         // 0x0418   (0x0010)  
	TArray<uint32_t>                                   _multiplicationValues;                                      // 0x0428   (0x0010)  
	TArray<uint32_t>                                   _divisionValues;                                            // 0x0438   (0x0010)  
	TArray<uint32_t>                                   _inputValues;                                               // 0x0448   (0x0010)  
	int32_t                                            _maximumNumberOfElementsPerType;                            // 0x0458   (0x0004)  
	int32_t                                            _minActiveSwitches;                                         // 0x045C   (0x0004)  
	int32_t                                            _maxActiveSwitches;                                         // 0x0460   (0x0004)  
	unsigned char                                      UnknownData01_6[0x3C];                                      // 0x0464   (0x003C)  MISSED
};

/// Class /Script/ConZ.VoltageMatchingMinigameConfiguration
/// Size: 0x0008 (0x000048 - 0x000050)
class UVoltageMatchingMinigameConfiguration : public UMinigameConfiguration
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0048   (0x0008)  MISSED
};

/// Class /Script/ConZ.VoltageMatchingScreensWidget
/// Size: 0x0040 (0x000260 - 0x0002A0)
class UVoltageMatchingScreensWidget : public UUserWidget
{ 
public:
	UTextBlock*                                        _input;                                                     // 0x0260   (0x0008)  
	UTextBlock*                                        _timer;                                                     // 0x0268   (0x0008)  
	TArray<FName>                                      _correctOutputsWidgetNames;                                 // 0x0270   (0x0010)  
	TArray<FName>                                      _currentOutputWidgetNames;                                  // 0x0280   (0x0010)  
	TArray<FVoltageMatchingElementIndicator>           _elementIndicators;                                         // 0x0290   (0x0010)  
};

/// Class /Script/ConZ.VoltageMatchingWidget
/// Size: 0x0008 (0x000278 - 0x000280)
class UVoltageMatchingWidget : public UMinigameWidget
{ 
public:
	UUserWidget*                                       _instructionsOverlay;                                       // 0x0278   (0x0008)  
};

/// Class /Script/ConZ.VolumeZone
/// Size: 0x0008 (0x000258 - 0x000260)
class AVolumeZone : public AVolume
{ 
public:
	UZoneConfigurationDataAsset*                       configuration;                                              // 0x0258   (0x0008)  
};

/// Class /Script/ConZ.VoteSystemManager
/// Size: 0x00A8 (0x000220 - 0x0002C8)
class AVoteSystemManager : public AActor
{ 
public:
	TArray<UClass*>                                    VoteTopics;                                                 // 0x0220   (0x0010)  
	UUpdateableNotificationDescription*                _activeTopicDesc;                                           // 0x0230   (0x0008)  
	UVoteTopic*                                        _activeTopic;                                               // 0x0238   (0x0008)  
	unsigned char                                      UnknownData00_6[0x88];                                      // 0x0240   (0x0088)  MISSED
};

/// Class /Script/ConZ.VoteTopic
/// Size: 0x0020 (0x000028 - 0x000048)
class UVoteTopic : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0028   (0x0020)  MISSED
};

/// Class /Script/ConZ.VoteTopic_InitiateCargoDrop
/// Size: 0x0000 (0x000048 - 0x000048)
class UVoteTopic_InitiateCargoDrop : public UVoteTopic
{ 
public:
};

/// Class /Script/ConZ.VoteTopic_SetTimeOfDay
/// Size: 0x0008 (0x000048 - 0x000050)
class UVoteTopic_SetTimeOfDay : public UVoteTopic
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0048   (0x0008)  MISSED
};

/// Class /Script/ConZ.VoteTopic_SetWeather
/// Size: 0x0008 (0x000048 - 0x000050)
class UVoteTopic_SetWeather : public UVoteTopic
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0048   (0x0008)  MISSED
};

/// Class /Script/ConZ.Warning
/// Size: 0x0010 (0x000260 - 0x000270)
class UWarning : public UUserWidget
{ 
public:
	TArray<FMessageStruct>                             MessageQueue;                                               // 0x0260   (0x0010)  
};

/// Class /Script/ConZ.WarningNotification
/// Size: 0x0000 (0x000030 - 0x000030)
class UWarningNotification : public UConZNotification
{ 
public:
};

/// Class /Script/ConZ.WarningNotificationDescription
/// Size: 0x0018 (0x000040 - 0x000058)
class UWarningNotificationDescription : public UNotificationDescription
{ 
public:
	FString                                            Message;                                                    // 0x0040   (0x0010)  
	float                                              Duration;                                                   // 0x0050   (0x0004)  
	FColor                                             Color;                                                      // 0x0054   (0x0004)  
};

/// Class /Script/ConZ.WarningSignWidget
/// Size: 0x0008 (0x000260 - 0x000268)
class UWarningSignWidget : public UUserWidget
{ 
public:
	EWarningType                                       _type;                                                      // 0x0260   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0261   (0x0007)  MISSED


	/// Functions
	// Function /Script/ConZ.WarningSignWidget.InitFromWarningType
	void InitFromWarningType(EWarningType warningType);                                                                      // [0x2859740] Event|Public|BlueprintEvent 
};

/// Class /Script/ConZ.WashClothesData
/// Size: 0x0060 (0x000030 - 0x000090)
class UWashClothesData : public UDataAsset
{ 
public:
	TMap<UClass*, FWashItemData>                       WashClothes;                                                // 0x0030   (0x0050)  
	UClass*                                            SkillToIncrease;                                            // 0x0080   (0x0008)  
	float                                              SkillIncreaseAmount;                                        // 0x0088   (0x0004)  
	float                                              SkillIncreaseModifier;                                      // 0x008C   (0x0004)  
};

/// Class /Script/ConZ.WashEyesAssetData
/// Size: 0x0010 (0x000030 - 0x000040)
class UWashEyesAssetData : public UInteractionAssetData
{ 
public:
	UClass*                                            ResourceType;                                               // 0x0030   (0x0008)  
	float                                              QuantityPerWash;                                            // 0x0038   (0x0004)  
	float                                              WashDuration;                                               // 0x003C   (0x0004)  
};

/// Class /Script/ConZ.WaterDetectionComponent
/// Size: 0x0048 (0x0000C8 - 0x000110)
class UWaterDetectionComponent : public UItemComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x00C8   (0x0030)  MISSED
	float                                              _waterImmersionDepthLimitWhenEquipped;                      // 0x00F8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x14];                                      // 0x00FC   (0x0014)  MISSED
};

/// Class /Script/ConZ.WaterSurfaceAssetData
/// Size: 0x0000 (0x000028 - 0x000028)
class UWaterSurfaceAssetData : public UAssetUserData
{ 
public:
};

/// Class /Script/ConZ.WaypointScreenWidget
/// Size: 0x0020 (0x000260 - 0x000280)
class UWaypointScreenWidget : public UUserWidget
{ 
public:
	UClass*                                            WaypointClass;                                              // 0x0260   (0x0008)  
	TArray<UWaypointWidgetBase*>                       _waypoints;                                                 // 0x0268   (0x0010)  
	UCanvasPanel*                                      WaypointPanel;                                              // 0x0278   (0x0008)  
};

/// Class /Script/ConZ.WaypointWidget
/// Size: 0x0058 (0x0002F8 - 0x000350)
class UWaypointWidget : public UWaypointWidgetBase
{ 
public:
	UImage*                                            Emphasis;                                                   // 0x02F8   (0x0008)  
	UImage*                                            BarBG;                                                      // 0x0300   (0x0008)  
	UImage*                                            Bar;                                                        // 0x0308   (0x0008)  
	UImage*                                            Background;                                                 // 0x0310   (0x0008)  
	UImage*                                            BigPointer;                                                 // 0x0318   (0x0008)  
	UImage*                                            SmallPointer;                                               // 0x0320   (0x0008)  
	UImage*                                            Icon;                                                       // 0x0328   (0x0008)  
	UImage*                                            Accent;                                                     // 0x0330   (0x0008)  
	UTextBlock*                                        Label;                                                      // 0x0338   (0x0008)  
	UTextBlock*                                        Distance;                                                   // 0x0340   (0x0008)  
	UMaterialInterface*                                _barBrushMaterial;                                          // 0x0348   (0x0008)  
};

/// Class /Script/ConZ.ItemWeaponState
/// Size: 0x0040 (0x000100 - 0x000140)
class UItemWeaponState : public UWeaponItemState
{ 
public:
	int32_t                                            ZeroRange;                                                  // 0x0100   (0x0004)  
	EWeaponFiringMode                                  FiringMode;                                                 // 0x0104   (0x0001)  
	EWeaponMalfunction                                 malfunction;                                                // 0x0105   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0106   (0x0002)  MISSED
	TArray<FAmmunitionData>                            LoadedAmmoData;                                             // 0x0108   (0x0010)  
	TArray<FAmmunitionData>                            InternalMagazineAmmoData;                                   // 0x0118   (0x0010)  
	UClass*                                            LoadedAmmunitionItemClass;                                  // 0x0128   (0x0008)  
	TArray<FEntityId>                                  WeaponAttachments;                                          // 0x0130   (0x0010)  
};

/// Class /Script/ConZ.WeaponAccuracyGroup
/// Size: 0x0030 (0x000030 - 0x000060)
class UWeaponAccuracyGroup : public UDataAsset
{ 
public:
	float                                              NormalStandFrom;                                            // 0x0030   (0x0004)  
	float                                              NormalStandTo;                                              // 0x0034   (0x0004)  
	float                                              NormalCrouchFrom;                                           // 0x0038   (0x0004)  
	float                                              NormalCrouchTo;                                             // 0x003C   (0x0004)  
	float                                              NormalProneFrom;                                            // 0x0040   (0x0004)  
	float                                              NormalProneTo;                                              // 0x0044   (0x0004)  
	float                                              ScopedStandFrom;                                            // 0x0048   (0x0004)  
	float                                              ScopedStandTo;                                              // 0x004C   (0x0004)  
	float                                              ScopedCrouchFrom;                                           // 0x0050   (0x0004)  
	float                                              ScopedCrouchTo;                                             // 0x0054   (0x0004)  
	float                                              ScopedProneFrom;                                            // 0x0058   (0x0004)  
	float                                              ScopedProneTo;                                              // 0x005C   (0x0004)  
};

/// Class /Script/ConZ.WeaponActionSequence
/// Size: 0x0040 (0x000028 - 0x000068)
class UWeaponActionSequence : public UWeaponAction
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0028   (0x0018)  MISSED
	FBodyWeaponAnimation                               Animations;                                                 // 0x0040   (0x0010)  
	bool                                               CanBeInterrupted;                                           // 0x0050   (0x0001)  
	unsigned char                                      UnknownData01_6[0x17];                                      // 0x0051   (0x0017)  MISSED


	/// Functions
	// Function /Script/ConZ.WeaponActionSequence.SetNextMontageSectionFromPrevious
	void SetNextMontageSectionFromPrevious(FName previousSection, FName NextSection);                                        // [0x2413420] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponActionSequence.SetNextMontageSection
	void SetNextMontageSection(FName NextSection);                                                                           // [0x2413090] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponActionSequence.OnMontageEnded
	void OnMontageEnded(UAnimMontage* Montage, bool interrupted);                                                            // [0x2412bb0] Native|Protected     
	// Function /Script/ConZ.WeaponActionSequence.OnMontageBlendingOutStarted
	void OnMontageBlendingOutStarted(UAnimMontage* Montage, bool interrupted);                                               // [0x2412ae0] Native|Protected     
	// Function /Script/ConZ.WeaponActionSequence.GetActiveAnimationWeapon
	UAnimMontage* GetActiveAnimationWeapon();                                                                                // [0x2412490] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponActionSequence.GetActiveAnimationBody
	UAnimMontage* GetActiveAnimationBody();                                                                                  // [0x24123d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponActionSequence.Execute
	float Execute();                                                                                                         // [0x2412160] Native|Event|Public|BlueprintEvent 
	// Function /Script/ConZ.WeaponActionSequence.End
	void End(bool Regular);                                                                                                  // [0x2411fb0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/ConZ.WeaponActionSequence.CanInterrupt
	bool CanInterrupt();                                                                                                     // [0x11312d0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.WeaponActionSequence.CanExecute
	bool CanExecute();                                                                                                       // [0x2411d30] Native|Event|Public|BlueprintEvent|Const 
};

/// Class /Script/ConZ.WeaponActionRocketLauncherArmSequence
/// Size: 0x0000 (0x000068 - 0x000068)
class UWeaponActionRocketLauncherArmSequence : public UWeaponActionSequence
{ 
public:
};

/// Class /Script/ConZ.WeaponActionRocketLauncherUnarmSequence
/// Size: 0x0000 (0x000068 - 0x000068)
class UWeaponActionRocketLauncherUnarmSequence : public UWeaponActionSequence
{ 
public:
};

/// Class /Script/ConZ.WeaponActionWornOutFiringConditions
/// Size: 0x0000 (0x000028 - 0x000028)
class UWeaponActionWornOutFiringConditions : public UWeaponAction
{ 
public:
};

/// Class /Script/ConZ.WeaponAmmoDisplayContainerWidget
/// Size: 0x0028 (0x000260 - 0x000288)
class UWeaponAmmoDisplayContainerWidget : public UUserWidget
{ 
public:
	UClass*                                            _ammoDisplayWidgetClass;                                    // 0x0260   (0x0008)  
	UVerticalBox*                                      _displayList;                                               // 0x0268   (0x0008)  
	UVerticalBox*                                      _displayListCentered;                                       // 0x0270   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0278   (0x0010)  MISSED


	/// Functions
	// Function /Script/ConZ.WeaponAmmoDisplayContainerWidget.OnTabModeOpened
	void OnTabModeOpened(ETabMode tabMode);                                                                                  // [0x2412d70] Final|Native|Protected 
	// Function /Script/ConZ.WeaponAmmoDisplayContainerWidget.OnTabModeClosed
	void OnTabModeClosed();                                                                                                  // [0x2412d50] Final|Native|Protected 
	// Function /Script/ConZ.WeaponAmmoDisplayContainerWidget.Init
	void Init(AWeapon* Weapon, float onScreenDuration, bool displayOnCenter, UTexture2D* iconOverride);                      // [0x2412620] Native|Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/ConZ.WeaponAmmoDisplayWidget
/// Size: 0x0010 (0x000260 - 0x000270)
class UWeaponAmmoDisplayWidget : public UUserWidget
{ 
public:
	UTextBlock*                                        _ammoCountText;                                             // 0x0260   (0x0008)  
	UImage*                                            _ammoIcon;                                                  // 0x0268   (0x0008)  
};

/// Class /Script/ConZ.WeaponAnimInstance
/// Size: 0x0030 (0x0002D0 - 0x000300)
class UWeaponAnimInstance : public UItemAnimInstance
{ 
public:
	float                                              _owningPrisonerWeaponBreathFactor;                          // 0x02D0   (0x0004)  
	float                                              _owningPrisonerWeaponAimDownTheSightsStillBlendFactor;      // 0x02D4   (0x0004)  
	bool                                               _isOwningPrisonerAimingDownTheSights;                       // 0x02D8   (0x0001)  
	bool                                               _isChamberOpened;                                           // 0x02D9   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x02DA   (0x0002)  MISSED
	int32_t                                            _ammoCount;                                                 // 0x02DC   (0x0004)  
	int32_t                                            _loadedAmmoCount;                                           // 0x02E0   (0x0004)  
	bool                                               _shouldPlayChamberOpenedIdle;                               // 0x02E4   (0x0001)  
	bool                                               _isInGameEvent;                                             // 0x02E5   (0x0001)  
	EWeaponMalfunction                                 _malfunction;                                               // 0x02E6   (0x0001)  
	bool                                               _useFiringModeBoneRotation;                                 // 0x02E7   (0x0001)  
	FRotator                                           _firingModeBoneRotation;                                    // 0x02E8   (0x000C)  
	float                                              _hideBoneCurveValue;                                        // 0x02F4   (0x0004)  
	float                                              _zeroRange;                                                 // 0x02F8   (0x0004)  
	EWeaponDownTheSightsMode                           _aiminDownTheSightsMode;                                    // 0x02FC   (0x0001)  
	bool                                               _hasUnusedLoadedAmmo;                                       // 0x02FD   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x02FE   (0x0002)  MISSED
};

/// Class /Script/ConZ.WeaponAttachmentState
/// Size: 0x0000 (0x000100 - 0x000100)
class UWeaponAttachmentState : public UItemState
{ 
public:
};

/// Class /Script/ConZ.WeaponAttachmentMagazine
/// Size: 0x00A0 (0x000950 - 0x0009F0)
class AWeaponAttachmentMagazine : public ASkeletalWeaponAttachment
{ 
public:
	FGameplayTagContainer                              AmmunitionTags;                                             // 0x0948   (0x0020)  
	bool                                               RequiresFullCapacityOnLoad;                                 // 0x0968   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0969   (0x0007)  MISSED
	UClass*                                            DefaultFillAmmo;                                            // 0x0970   (0x0008)  
	int32_t                                            InitialAmmo;                                                // 0x0978   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x097C   (0x0004)  MISSED
	TArray<FAmmunitionData>                            _ammoData;                                                  // 0x0980   (0x0010)  
	TArray<FAmmunitionData>                            _ammoOwnerHelper;                                           // 0x0990   (0x0010)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x09A0   (0x0004)  MISSED
	int32_t                                            _capacity;                                                  // 0x09A4   (0x0004)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x09A8   (0x0008)  MISSED
	TArray<UStaticMeshComponent*>                      _cartridgeMeshComponents;                                   // 0x09B0   (0x0010)  
	TArray<UClass*>                                    _loadAmmoSequences;                                         // 0x09C0   (0x0010)  
	UClass*                                            _rangedWeaponsSkillClass;                                   // 0x09D0   (0x0008)  
	float                                              _loadMagazineActionSpeedMultiplier;                         // 0x09D8   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x09DC   (0x0004)  MISSED
	UTexture2D*                                        _inventoryIconFull;                                         // 0x09E0   (0x0008)  
	unsigned char                                      UnknownData05_6[0x8];                                       // 0x09E8   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.WeaponAttachmentMagazine.UpdateAmmunitionMeshes
	void UpdateAmmunitionMeshes(TArray<int32_t>& ammoIndices, bool showReversed);                                            // [0x2417d40] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.WeaponAttachmentMagazine.SetAmmo
	void SetAmmo(TArray<FAmmunitionData>& ammo);                                                                             // [0x2417b70] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.WeaponAttachmentMagazine.Server_InsertCartridgeIntoMagazine
	void Server_InsertCartridgeIntoMagazine(AAmmunitionItem* ammo);                                                          // [0x2417890] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.WeaponAttachmentMagazine.Server_InsertAmmoSingle
	void Server_InsertAmmoSingle(AAmmunitionItem* ammoItem);                                                                 // [0x2417770] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.WeaponAttachmentMagazine.Server_EmptyAmmo
	void Server_EmptyAmmo();                                                                                                 // [0x22d5920] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.WeaponAttachmentMagazine.RemoveAmmo
	FAmmunitionData RemoveAmmo();                                                                                            // [0x2417690] Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponAttachmentMagazine.OnRep_AmmoOwnerHelper
	void OnRep_AmmoOwnerHelper();                                                                                            // [0x24175f0] Final|Native|Private 
	// Function /Script/ConZ.WeaponAttachmentMagazine.OnRep_AmmoData
	void OnRep_AmmoData();                                                                                                   // [0x24175d0] Final|Native|Private 
	// Function /Script/ConZ.WeaponAttachmentMagazine.OnAmmoChangedEvent
	void OnAmmoChangedEvent();                                                                                               // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.WeaponAttachmentMagazine.Multicast_SetLoadedVariables
	void Multicast_SetLoadedVariables(TArray<FAmmunitionData> ammo);                                                         // [0x24173b0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.WeaponAttachmentMagazine.IsAmmoSupported
	bool IsAmmoSupported(AAmmunitionItem* ammo);                                                                             // [0x2417280] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/ConZ.WeaponAttachmentMagazine.GetTopmostProjectileClass
	UClass* GetTopmostProjectileClass();                                                                                     // [0x2417140] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponAttachmentMagazine.GetTopmostAmmunitionData
	bool GetTopmostAmmunitionData(FAmmunitionData& Data);                                                                    // [0x2417090] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponAttachmentMagazine.GetCapacity
	int32_t GetCapacity();                                                                                                   // [0x2416d20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponAttachmentMagazine.GetAmmoCount
	int32_t GetAmmoCount();                                                                                                  // [0x2416cf0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponAttachmentMagazine.GetAmmo
	void GetAmmo(TArray<FAmmunitionData>& ammo);                                                                             // [0x2416c40] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponAttachmentMagazine.FillWithDefaultAmmo
	void FillWithDefaultAmmo(int32_t Count);                                                                                 // [0x2416bb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponAttachmentMagazine.EmptyAmmo
	void EmptyAmmo();                                                                                                        // [0x2416b00] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponAttachmentMagazine.DestroyAmmunitionMeshes
	void DestroyAmmunitionMeshes();                                                                                          // [0x2416ae0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponAttachmentMagazine.CreateAmmunitionMeshes
	void CreateAmmunitionMeshes();                                                                                           // [0x2416ac0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponAttachmentMagazine.AddAmmoSingle
	void AddAmmoSingle(FAmmunitionData& ammo);                                                                               // [0x2416950] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.WeaponAttachmentMagazine.AddAmmo
	void AddAmmo(TArray<FAmmunitionData>& ammo);                                                                             // [0x24168a0] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/ConZ.WeaponAttachmentAutoCrossbowMagazine
/// Size: 0x0000 (0x0009F0 - 0x0009F0)
class AWeaponAttachmentAutoCrossbowMagazine : public AWeaponAttachmentMagazine
{ 
public:
};

/// Class /Script/ConZ.WeaponAttachmentBayonet
/// Size: 0x0000 (0x000940 - 0x000940)
class AWeaponAttachmentBayonet : public AWeaponAttachment
{ 
public:
};

/// Class /Script/ConZ.WeaponAttachmentCharm
/// Size: 0x0000 (0x000950 - 0x000950)
class AWeaponAttachmentCharm : public ASkeletalWeaponAttachment
{ 
public:
};

/// Class /Script/ConZ.WeaponAttachmentFlashlight
/// Size: 0x0040 (0x000940 - 0x000980)
class AWeaponAttachmentFlashlight : public AWeaponAttachment
{ 
public:
	UAkAudioEvent*                                     _lightActivatedAudioEvent;                                  // 0x0940   (0x0008)  
	FName                                              _lightSocketName;                                           // 0x0948   (0x0008)  
	FName                                              _materialEmissiveParameterName;                             // 0x0950   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0958   (0x0008)  MISSED
	UBasicGameResourceSlotItemComponent*               _batterySlot;                                               // 0x0960   (0x0008)  
	UClass*                                            _resourceLightAnimatorClass;                                // 0x0968   (0x0008)  
	UBaseResourceLightAnimator*                        _lightAnimator;                                             // 0x0970   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0978   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.WeaponAttachmentFlashlight.Server_SetTurnedOn
	void Server_SetTurnedOn(bool Value);                                                                                     // [0x2365dd0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.WeaponAttachmentFlashlight.OnComponentDeactivated
	void OnComponentDeactivated(UActorComponent* Component);                                                                 // [0x2417540] Final|Native|Private 
	// Function /Script/ConZ.WeaponAttachmentFlashlight.OnComponentActivated
	void OnComponentActivated(UActorComponent* Component, bool wasReset);                                                    // [0x2417470] Final|Native|Private 
};

/// Class /Script/ConZ.WeaponAttachmentGhillie
/// Size: 0x0060 (0x000940 - 0x0009A0)
class AWeaponAttachmentGhillie : public AWeaponAttachment
{ 
public:
	USkeletalMeshComponent*                            EquippedSkeletalMeshComponent;                              // 0x0940   (0x0008)  
	TMap<UClass*, FMeshMaterialPair>                   WeaponToSkeletalMeshMapping;                                // 0x0948   (0x0050)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0998   (0x0008)  MISSED
};

/// Class /Script/ConZ.WeaponAttachmentMagazineState
/// Size: 0x0010 (0x000100 - 0x000110)
class UWeaponAttachmentMagazineState : public UWeaponAttachmentState
{ 
public:
	TArray<FAmmunitionData>                            ammoData;                                                   // 0x0100   (0x0010)  
};

/// Class /Script/ConZ.WeaponAttachmentSight
/// Size: 0x0010 (0x000940 - 0x000950)
class AWeaponAttachmentSight : public AWeaponAttachment
{ 
public:
	UWeaponSightItemComponent*                         _weaponSightItemComponent;                                  // 0x0940   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0948   (0x0008)  MISSED
};

/// Class /Script/ConZ.WeaponAttachmentScope
/// Size: 0x0000 (0x000950 - 0x000950)
class AWeaponAttachmentScope : public AWeaponAttachmentSight
{ 
public:
};

/// Class /Script/ConZ.WeaponAttachmentNightVisionScope
/// Size: 0x0010 (0x000950 - 0x000960)
class AWeaponAttachmentNightVisionScope : public AWeaponAttachmentScope
{ 
public:
	UBasicGameResourceSlotItemComponent*               _batterySlot;                                               // 0x0950   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0958   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.WeaponAttachmentNightVisionScope.Server_ToggleActivity
	void Server_ToggleActivity();                                                                                            // [0x22d5920] Final|Net|NetReliableNative|Event|Private|NetServer 
};

/// Class /Script/ConZ.WeaponAttachmentScopeRail
/// Size: 0x0010 (0x000940 - 0x000950)
class AWeaponAttachmentScopeRail : public AWeaponAttachment
{ 
public:
	FName                                              ScopeSocketName;                                            // 0x0940   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0948   (0x0008)  MISSED
};

/// Class /Script/ConZ.WeaponAttachmentSuppressor
/// Size: 0x0010 (0x000940 - 0x000950)
class AWeaponAttachmentSuppressor : public AWeaponAttachment
{ 
public:
	FName                                              MuzzleSocketName;                                           // 0x0940   (0x0008)  
	float                                              NoiseMultiplier;                                            // 0x0948   (0x0004)  
	bool                                               IsImprovised;                                               // 0x094C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x094D   (0x0003)  MISSED


	/// Functions
	// Function /Script/ConZ.WeaponAttachmentSuppressor.OnAttachedWeaponShot
	void OnAttachedWeaponShot();                                                                                             // [0x2417450] Final|Native|Private 
};

/// Class /Script/ConZ.WeaponAttachmentUniversalFlashlight
/// Size: 0x0050 (0x000980 - 0x0009D0)
class AWeaponAttachmentUniversalFlashlight : public AWeaponAttachmentFlashlight
{ 
public:
	TMap<UClass*, UStaticMesh*>                        WeaponToStaticMeshMapping;                                  // 0x0978   (0x0050)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x09C8   (0x0008)  MISSED
};

/// Class /Script/ConZ.WeaponAutoCrossbow
/// Size: 0x1430 (0x002F60 - 0x004390)
class AWeaponAutoCrossbow : public AWeapon
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x2F60   (0x0008)  MISSED
	UWeaponStateFiring*                                FireState;                                                  // 0x2F68   (0x0008)  
	float                                              _muzzleVelocity;                                            // 0x2F70   (0x0004)  
	float                                              _probabilityForLaughingSoundEffect;                         // 0x2F74   (0x0004)  
	FCharacterAndItemAnimation                         _autoCrossbowFireAnimation;                                 // 0x2F78   (0x0010)  
	UAkAudioEvent*                                     _autoCrossbowLaughingAudioEvent;                            // 0x2F88   (0x0008)  
	UWeaponState*                                      _autoCrossbowActiveState;                                   // 0x2F90   (0x0008)  
	unsigned char                                      UnknownData01_5[0x13A0];                                    // 0x2F98   (0x13A0)  MISSED
	UClass*                                            _fuelType;                                                  // 0x4338   (0x0008)  
	FGameplayTagContainer                              _inFuelingSocketTypes;                                      // 0x4340   (0x0020)  
	float                                              _maxFuelAmount;                                             // 0x4360   (0x0004)  
	float                                              _fuelUsagePerHour;                                          // 0x4364   (0x0004)  
	float                                              _fuelUsagePerHourWhenDamaged;                               // 0x4368   (0x0004)  
	float                                              _fuelFillingDurationPerAmountFilled;                        // 0x436C   (0x0004)  
	float                                              _fuelFillingDurationPerAmountFilledWhenDamaged;             // 0x4370   (0x0004)  
	float                                              _fuelFillingExperiencePerAmount;                            // 0x4374   (0x0004)  
	float                                              _currentFuelAmount;                                         // 0x4378   (0x0004)  
	unsigned char                                      UnknownData02_6[0x14];                                      // 0x437C   (0x0014)  MISSED


	/// Functions
	// Function /Script/ConZ.WeaponAutoCrossbow.SetFollowerBoneLocationOffset
	void SetFollowerBoneLocationOffset(float LocationOffset);                                                                // [0x2417ca0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponAutoCrossbow.Server_PlayLaughingSoundEffect
	void Server_PlayLaughingSoundEffect();                                                                                   // [0x2417920] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.WeaponAutoCrossbow.Server_HandleFiringEffects
	void Server_HandleFiringEffects(bool Active);                                                                            // [0x24176e0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.WeaponAutoCrossbow.Multicast_PlayLaughingSoundEffect
	void Multicast_PlayLaughingSoundEffect();                                                                                // [0x2362870] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.WeaponAutoCrossbow.Multicast_HandleFiringEffects
	void Multicast_HandleFiringEffects(bool Active);                                                                         // [0x2417320] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/ConZ.WeaponAutoCrossbowAnimInstance
/// Size: 0x0010 (0x000300 - 0x000310)
class UWeaponAutoCrossbowAnimInstance : public UWeaponAnimInstance
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0300   (0x0008)  MISSED
	float                                              _followerBoneLocationOffset;                                // 0x0308   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x030C   (0x0004)  MISSED
};

/// Class /Script/ConZ.WeaponBow
/// Size: 0x0480 (0x002F60 - 0x0033E0)
class AWeaponBow : public AWeapon
{ 
public:
	FBodyWeaponAnimation                               InsertArrowAnimations;                                      // 0x2F60   (0x0010)  
	FBodyWeaponAnimation                               RemoveArrowAnimations;                                      // 0x2F70   (0x0010)  
	FBodyWeaponAnimation                               UnableToDrawAnimations;                                     // 0x2F80   (0x0010)  
	FBodyWeaponAnimation                               DrawAnimations2;                                            // 0x2F90   (0x0030)  
	FBodyWeaponAnimation                               DrawWhileAnticipatingDrawAnimations2;                       // 0x2FC0   (0x0030)  
	FBodyWeaponAnimation                               CancelDrawAnimations2;                                      // 0x2FF0   (0x0030)  
	FBodyWeaponAnimation                               LooseAnimations2;                                           // 0x3020   (0x0030)  
	FBodyWeaponAnimation                               LooseLastShotAnimations2;                                   // 0x3050   (0x0030)  
	FWeaponBowAimOffsets                               AimOffsets;                                                 // 0x3080   (0x00A8)  
	FWeaponBowArmsShake                                ArmsShakeAnimamtion;                                        // 0x3128   (0x00C0)  
	FBodyWeaponAnimation                               DrawAnimations;                                             // 0x31E8   (0x0010)  
	FBodyWeaponAnimation                               DrawWhileAnticipatingDrawAnimations;                        // 0x31F8   (0x0010)  
	FBodyWeaponAnimation                               CancelDrawAnimations;                                       // 0x3208   (0x0010)  
	FBodyWeaponAnimation                               LooseAnimations;                                            // 0x3218   (0x0010)  
	FBodyWeaponAnimation                               LooseLastShotAnimations;                                    // 0x3228   (0x0010)  
	UAnimSequenceBase*                                 WeaponAimingDownTheSightsAnimationPose;                     // 0x3238   (0x0008)  
	UAnimSequenceBase*                                 WeaponAimingDownTheSightsStillAnimationPose;                // 0x3240   (0x0008)  
	UWeaponState*                                      AnticipateDrawState2;                                       // 0x3248   (0x0008)  
	UWeaponState*                                      DrawState3;                                                 // 0x3250   (0x0008)  
	UWeaponState*                                      CancelFiringState;                                          // 0x3258   (0x0008)  
	UWeaponState*                                      AnticipateFiringState;                                      // 0x3260   (0x0008)  
	UWeaponState*                                      FireState;                                                  // 0x3268   (0x0008)  
	UWeaponState*                                      FireAndInsertArrowState;                                    // 0x3270   (0x0008)  
	unsigned char                                      UnknownData00_5[0x18];                                      // 0x3278   (0x0018)  MISSED
	UAkAudioEvent*                                     _fireNoArrowAudioEvent;                                     // 0x3290   (0x0008)  
	FName                                              _arrowSocketName;                                           // 0x3298   (0x0008)  
	float                                              _muzzleVelocity;                                            // 0x32A0   (0x0004)  
	float                                              _drawWeight;                                                // 0x32A4   (0x0004)  
	float                                              _compoundBowFullDrawHoldTime;                               // 0x32A8   (0x0004)  
	float                                              _armShakeTimerDecreaseRate;                                 // 0x32AC   (0x0004)  
	float                                              _damageOnUsage;                                             // 0x32B0   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x32B4   (0x0004)  MISSED
	UWeaponState*                                      _bowActiveState2;                                           // 0x32B8   (0x0008)  
	UWeaponState*                                      _bowInsertArrowState;                                       // 0x32C0   (0x0008)  
	UWeaponState*                                      _bowRemoveArrowState;                                       // 0x32C8   (0x0008)  
	UWeaponStateFiring*                                _bowFiringState2;                                           // 0x32D0   (0x0008)  
	unsigned char                                      UnknownData02_5[0x30];                                      // 0x32D8   (0x0030)  MISSED
	EWeaponBowState                                    _bowState;                                                  // 0x3308   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x3309   (0x0003)  MISSED
	FWeaponBowStateDataReplicated                      _weaponBowStateDataReplicated;                              // 0x330C   (0x000C)  
	UStaticMeshComponent*                              _arrowMeshComponent;                                        // 0x3318   (0x0008)  
	FProjectileArrowData                               _projectileArrowData;                                       // 0x3320   (0x0020)  
	unsigned char                                      UnknownData04_5[0x50];                                      // 0x3340   (0x0050)  MISSED
	bool                                               _isCompound;                                                // 0x3390   (0x0001)  
	unsigned char                                      UnknownData05_5[0x7];                                       // 0x3391   (0x0007)  MISSED
	UStaticMeshComponent*                              _handTriggerMeshComponent;                                  // 0x3398   (0x0008)  
	bool                                               _ignoreArrowStiffness;                                      // 0x33A0   (0x0001)  
	unsigned char                                      UnknownData06_5[0x3];                                       // 0x33A1   (0x0003)  MISSED
	float                                              _letOff;                                                    // 0x33A4   (0x0004)  
	FName                                              _handTriggerBoneName;                                       // 0x33A8   (0x0008)  
	unsigned char                                      UnknownData07_6[0x30];                                      // 0x33B0   (0x0030)  MISSED


	/// Functions
	// Function /Script/ConZ.WeaponBow.SetDrawWeight
	void SetDrawWeight(float drawWeight);                                                                                    // [0x2417c20] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponBow.Server_SetPendingArrow
	void Server_SetPendingArrow(AAmmunitionArrow* arrow);                                                                    // [0x2417ae0] Net|NetReliableNative|Event|Public|NetServer 
	// Function /Script/ConZ.WeaponBow.Server_SetDrawAmount
	void Server_SetDrawAmount(float drawAmount);                                                                             // [0x2417a50] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.WeaponBow.Server_SetBowStateData
	void Server_SetBowStateData(FWeaponBowStateDataReplicated State);                                                        // [0x24179c0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.WeaponBow.Server_SetBowState
	void Server_SetBowState(EWeaponBowState State);                                                                          // [0x2417940] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.WeaponBow.Server_RemoveArrow
	void Server_RemoveArrow();                                                                                               // [0x2362870] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.WeaponBow.Server_InsertArrow
	void Server_InsertArrow(AAmmunitionArrow* arrow);                                                                        // [0x2417800] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.WeaponBow.ReloadArrow
	void ReloadArrow();                                                                                                      // [0x2417670] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponBow.OnRep_BowStateData
	void OnRep_BowStateData();                                                                                               // [0x2417650] Final|Native|Private 
	// Function /Script/ConZ.WeaponBow.OnRep_BowState
	void OnRep_BowState();                                                                                                   // [0x2417630] Final|Native|Private 
	// Function /Script/ConZ.WeaponBow.OnRep_Arrow
	void OnRep_Arrow();                                                                                                      // [0x2417610] Final|Native|Private 
	// Function /Script/ConZ.WeaponBow.GotoInsertArrowState
	void GotoInsertArrowState();                                                                                             // [0x2417260] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponBow.GetPendingArrow
	AAmmunitionArrow* GetPendingArrow();                                                                                     // [0x2416fc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponBow.GetOwnersTotalDrawWeight
	float GetOwnersTotalDrawWeight();                                                                                        // [0x2416f60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponBow.GetOwnersDrawWeightByStrength
	float GetOwnersDrawWeightByStrength();                                                                                   // [0x2416f30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponBow.GetOwnersDrawWeightBySkill
	float GetOwnersDrawWeightBySkill();                                                                                      // [0x2416f00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponBow.GetDrawWeightDefaultsByStrength
	float GetDrawWeightDefaultsByStrength(float Strength);                                                                   // [0x2416e50] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponBow.GetDrawWeight
	float GetDrawWeight();                                                                                                   // [0x2416e20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponBow.GetDrawPercentageDefaultsForParameters
	float GetDrawPercentageDefaultsForParameters(float characterDrawWeight, float bowDrawWeight);                            // [0x2416d50] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponBow.EquipArrow
	void EquipArrow(AAmmunitionArrow* arrow);                                                                                // [0x2416b20] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponBow.CanInsertArrow
	bool CanInsertArrow(AAmmunitionArrow* arrowItem);                                                                        // [0x2416a20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.WeaponBowAnimInstance
/// Size: 0x0020 (0x000300 - 0x000320)
class UWeaponBowAnimInstance : public UWeaponAnimInstance
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0300   (0x0008)  MISSED
	float                                              _armsShakeValue;                                            // 0x0308   (0x0004)  
	bool                                               _useArrowLookAt;                                            // 0x030C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x030D   (0x0003)  MISSED
	UAnimSequenceBase*                                 _aimingDownTheSightsAnimation;                              // 0x0310   (0x0008)  
	UAnimSequenceBase*                                 _aimingDownTheSightsStillAnimation;                         // 0x0318   (0x0008)  
};

/// Class /Script/ConZ.WeaponCrossbow
/// Size: 0x0050 (0x002F60 - 0x002FB0)
class AWeaponCrossbow : public AWeapon
{ 
public:
	UWeaponStateFiring*                                FireState;                                                  // 0x2F60   (0x0008)  
	UWeaponState*                                      FireAndInsertArrowState;                                    // 0x2F68   (0x0008)  
	float                                              _muzzleVelocity;                                            // 0x2F70   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x2F74   (0x0004)  MISSED
	FCharacterAndItemAnimation                         _crossbowFireAnimation;                                     // 0x2F78   (0x0010)  
	UAkAudioEvent*                                     _crossbowFireAudioEvent;                                    // 0x2F88   (0x0008)  
	UAkAudioEvent*                                     _crossbowDryFireAudioEvent;                                 // 0x2F90   (0x0008)  
	UWeaponState*                                      _crossbowActiveState;                                       // 0x2F98   (0x0008)  
	bool                                               _isCocked;                                                  // 0x2FA0   (0x0001)  
	unsigned char                                      UnknownData01_6[0xF];                                       // 0x2FA1   (0x000F)  MISSED


	/// Functions
	// Function /Script/ConZ.WeaponCrossbow.SetIsCocked
	void SetIsCocked(bool Value);                                                                                            // [0x241c4a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/ConZ.WeaponCrossbow.Server_HandleFiringEffects
	void Server_HandleFiringEffects(bool shotFired);                                                                         // [0x241c0e0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.WeaponCrossbow.NetMulticast_SetLoadedVariablesForCrossbow
	void NetMulticast_SetLoadedVariablesForCrossbow(bool isCocked);                                                          // [0x2417320] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.WeaponCrossbow.Multicast_HandleFiringEffects
	void Multicast_HandleFiringEffects(bool shotFired);                                                                      // [0x241bb50] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.WeaponCrossbow.GetIsCocked
	bool GetIsCocked();                                                                                                      // [0x241ba50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/ConZ.WeaponCrossbow.GetDrawCategory
	EWeaponCrossbowDrawCategory GetDrawCategory();                                                                           // [0x241ba20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.WeaponCrossbowAnimInstance
/// Size: 0x0010 (0x000300 - 0x000310)
class UWeaponCrossbowAnimInstance : public UWeaponAnimInstance
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0300   (0x0008)  MISSED
	bool                                               _isCocked;                                                  // 0x0308   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0309   (0x0007)  MISSED
};

/// Class /Script/ConZ.WeaponDamageGroup
/// Size: 0x0020 (0x000030 - 0x000050)
class UWeaponDamageGroup : public UDataAsset
{ 
public:
	float                                              Head;                                                       // 0x0030   (0x0004)  
	float                                              Neck;                                                       // 0x0034   (0x0004)  
	float                                              Torso;                                                      // 0x0038   (0x0004)  
	float                                              ArmUpper;                                                   // 0x003C   (0x0004)  
	float                                              Abdomen;                                                    // 0x0040   (0x0004)  
	float                                              LegUpper;                                                   // 0x0044   (0x0004)  
	float                                              OtherLimbs;                                                 // 0x0048   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x004C   (0x0004)  MISSED
};

/// Class /Script/ConZ.WeaponDamageStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UWeaponDamageStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.WeaponDisassemblyToolItemTag
/// Size: 0x0000 (0x000030 - 0x000030)
class UWeaponDisassemblyToolItemTag : public UBaseItemTag
{ 
public:
};

/// Class /Script/ConZ.WeaponHolsterItem
/// Size: 0x0040 (0x0009C0 - 0x000A00)
class AWeaponHolsterItem : public AClothesItem
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x09C0   (0x0008)  MISSED
	AWeapon*                                           _holsteredWeaponRep;                                        // 0x09C8   (0x0008)  
	FName                                              _maxLocationSocketName;                                     // 0x09D0   (0x0008)  
	FName                                              _minLocationSocketName;                                     // 0x09D8   (0x0008)  
	FName                                              _fatLocationSocketName;                                     // 0x09E0   (0x0008)  
	FName                                              _muscleLocationSocketName;                                  // 0x09E8   (0x0008)  
	FName                                              _leanLocationSocketName;                                    // 0x09F0   (0x0008)  
	FName                                              _staticMeshSocketName;                                      // 0x09F8   (0x0008)  


	/// Functions
	// Function /Script/ConZ.WeaponHolsterItem.OnRep_HolsteredWeapon
	void OnRep_HolsteredWeapon();                                                                                            // [0x241c080] Final|Native|Private 
	// Function /Script/ConZ.WeaponHolsterItem.HolsterWeapon
	bool HolsterWeapon(AWeapon* Weapon);                                                                                     // [0x241ba80] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/ConZ.WeaponItemEntitySetup
/// Size: 0x0000 (0x000088 - 0x000088)
class UWeaponItemEntitySetup : public UItemEntitySetup
{ 
public:
};

/// Class /Script/ConZ.WeaponScopeItemComponent
/// Size: 0x0140 (0x000120 - 0x000260)
class UWeaponScopeItemComponent : public UScopeableItemComponent
{ 
public:
	FVector                                            ScopeViewOffset;                                            // 0x0120   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x012C   (0x0004)  MISSED
	UMaterialInterface*                                ScopeLensPostProcess;                                       // 0x0130   (0x0008)  
	FName                                              LensZoomParameterName;                                      // 0x0138   (0x0008)  
	bool                                               FrontFocalPlane;                                            // 0x0140   (0x0001)  
	bool                                               HasCrosshairParallax;                                       // 0x0141   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x0142   (0x0006)  MISSED
	UStaticMesh*                                       ScopeViewMesh;                                              // 0x0148   (0x0008)  
	UStaticMesh*                                       ScopeViewLensMesh;                                          // 0x0150   (0x0008)  
	bool                                               _canToggleDownTheSightsMode;                                // 0x0158   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0159   (0x0007)  MISSED
	UTextureRenderTarget2D*                            TextRenderTarget;                                           // 0x0160   (0x0008)  
	int32_t                                            WindageInitialOffset;                                       // 0x0168   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x016C   (0x0004)  MISSED
	UAkAudioEvent*                                     WindageClickAudioEvent;                                     // 0x0170   (0x0008)  
	UStaticMeshComponent*                              _scopeViewMesh;                                             // 0x0178   (0x0008)  
	UStaticMeshComponent*                              _scopeViewLensMesh;                                         // 0x0180   (0x0008)  
	float                                              _fakeGlassMinOpacity;                                       // 0x0188   (0x0004)  
	unsigned char                                      UnknownData04_5[0x60];                                      // 0x018C   (0x0060)  MISSED
	float                                              _displayBrightnessMultiplier;                               // 0x01EC   (0x0004)  
	unsigned char                                      UnknownData05_6[0x70];                                      // 0x01F0   (0x0070)  MISSED


	/// Functions
	// Function /Script/ConZ.WeaponScopeItemComponent.Server_SetWindage
	void Server_SetWindage(int32_t Windage);                                                                                 // [0x241c360] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.WeaponScopeItemComponent.Server_SetDisplayBrightnessMultiplier
	void Server_SetDisplayBrightnessMultiplier(float Value);                                                                 // [0x241c2d0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.WeaponScopeItemComponent.Client_SetLoadedVariables
	void Client_SetLoadedVariables(int32_t Windage, float displayBrightnessMultiplier);                                      // [0x241b950] Final|Net|NetReliableNative|Event|Private|NetClient 
};

/// Class /Script/ConZ.WeaponNightVisionScopeItemComponent
/// Size: 0x00A0 (0x000260 - 0x000300)
class UWeaponNightVisionScopeItemComponent : public UWeaponScopeItemComponent
{ 
public:
	UAkAudioEvent*                                     _activatedSound;                                            // 0x0260   (0x0008)  
	UAkAudioEvent*                                     _deactivatedSound;                                          // 0x0268   (0x0008)  
	FRuntimeFloatCurve                                 _batteryPercentageToGlitchStrengthCurve;                    // 0x0270   (0x0088)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x02F8   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.WeaponNightVisionScopeItemComponent.OnBatteryDeactivated
	void OnBatteryDeactivated(UActorComponent* containerComponent);                                                          // [0x241bff0] Final|Native|Public  
	// Function /Script/ConZ.WeaponNightVisionScopeItemComponent.OnBatteryActivated
	void OnBatteryActivated(UActorComponent* batteryComponent, bool bReset);                                                 // [0x241bf20] Final|Native|Public  
};

/// Class /Script/ConZ.WeaponPaintjobCommonData
/// Size: 0x0018 (0x000030 - 0x000048)
class UWeaponPaintjobCommonData : public UDataAsset
{ 
public:
	TArray<FWeaponPaintjobPatternParams>               Patterns;                                                   // 0x0030   (0x0010)  
	UAkAudioEvent*                                     SprayCanAudio;                                              // 0x0040   (0x0008)  
};

/// Class /Script/ConZ.WeaponPaintjobItemComponent
/// Size: 0x0058 (0x0000C8 - 0x000120)
class UWeaponPaintjobItemComponent : public UItemComponent
{ 
public:
	TArray<FWeaponPaintjobPatternParams>               _patterns;                                                  // 0x00C8   (0x0010)  
	float                                              _paintjobDecayDurationSeconds;                              // 0x00D8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x44];                                      // 0x00DC   (0x0044)  MISSED


	/// Functions
	// Function /Script/ConZ.WeaponPaintjobItemComponent.NetMulticast_SetPatternIndex
	void NetMulticast_SetPatternIndex(int32_t Index);                                                                        // [0x241be90] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.WeaponPaintjobItemComponent.NetMulticast_SetColorAtIndex
	void NetMulticast_SetColorAtIndex(int32_t Index, FColor Value);                                                          // [0x241bd30] Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults 
	// Function /Script/ConZ.WeaponPaintjobItemComponent.NetMulticast_RefreshColor
	void NetMulticast_RefreshColor();                                                                                        // [0x2256df0] Net|NetReliableNative|Event|NetMulticast|Public 
	// Function /Script/ConZ.WeaponPaintjobItemComponent.NetMulticast_ClearPaintjob
	void NetMulticast_ClearPaintjob(FColor NewColor);                                                                        // [0x241bbe0] Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults 
};

/// Class /Script/ConZ.WeaponRecoilGroup
/// Size: 0x0010 (0x000030 - 0x000040)
class UWeaponRecoilGroup : public UDataAsset
{ 
public:
	float                                              Up;                                                         // 0x0030   (0x0004)  
	float                                              Down;                                                       // 0x0034   (0x0004)  
	float                                              Left;                                                       // 0x0038   (0x0004)  
	float                                              Right;                                                      // 0x003C   (0x0004)  
};

/// Class /Script/ConZ.WeaponRevolver
/// Size: 0x0070 (0x002F60 - 0x002FD0)
class AWeaponRevolver : public AWeapon
{ 
public:
	UWeaponStateFiring*                                FireState;                                                  // 0x2F60   (0x0008)  
	UWeaponState*                                      _revolverActiveState;                                       // 0x2F68   (0x0008)  
	FCharacterAndItemAnimation                         _fireAnimation;                                             // 0x2F70   (0x0010)  
	FCharacterAndItemAnimation                         _dryFireAnimation;                                          // 0x2F80   (0x0010)  
	FCharacterAndItemAnimation                         _rollDrumAnimation;                                         // 0x2F90   (0x0010)  
	UAnimMontage*                                      _russianRouletteMontage;                                    // 0x2FA0   (0x0008)  
	float                                              _drumRotationOffset;                                        // 0x2FA8   (0x0004)  
	int32_t                                            _firingIndex;                                               // 0x2FAC   (0x0004)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x2FB0   (0x0010)  MISSED
	float                                              _drumRotationInterpolatorSpeed;                             // 0x2FC0   (0x0004)  
	ERotationDirection                                 _drumRotationDirection;                                     // 0x2FC4   (0x0001)  
	unsigned char                                      UnknownData01_6[0xB];                                       // 0x2FC5   (0x000B)  MISSED


	/// Functions
	// Function /Script/ConZ.WeaponRevolver.Server_UseAmmoAtIndex
	void Server_UseAmmoAtIndex(int32_t Index);                                                                               // [0x241c410] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.WeaponRevolver.Server_RollDrum
	void Server_RollDrum(int32_t Index);                                                                                     // [0x241c240] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.WeaponRevolver.Server_PlayFiringAnimation
	void Server_PlayFiringAnimation(int32_t ammoIndex, bool dryFire);                                                        // [0x241c170] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.WeaponRevolver.NetMulticast_SetLoadedVariablesForRevolver
	void NetMulticast_SetLoadedVariablesForRevolver(int32_t ammoIndex);                                                      // [0x241be00] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.WeaponRevolver.NetMulticast_PlayFiringAnimation
	void NetMulticast_PlayFiringAnimation(int32_t ammoIndex, bool dryFire);                                                  // [0x241bc60] Final|Net|Native|Event|NetMulticast|Private 
};

/// Class /Script/ConZ.WeaponRevolverAnimInstance
/// Size: 0x0010 (0x000300 - 0x000310)
class UWeaponRevolverAnimInstance : public UWeaponAnimInstance
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0300   (0x0008)  MISSED
	bool                                               _useDrumRotation;                                           // 0x0308   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0309   (0x0003)  MISSED
	float                                              _drumRotation;                                              // 0x030C   (0x0004)  
};

/// Class /Script/ConZ.WeaponRocketLauncher
/// Size: 0x0060 (0x002F60 - 0x002FC0)
class AWeaponRocketLauncher : public AWeapon
{ 
public:
	UWeaponState*                                      ArmState;                                                   // 0x2F60   (0x0008)  
	UWeaponState*                                      UnarmState;                                                 // 0x2F68   (0x0008)  
	UWeaponState*                                      ArmedState;                                                 // 0x2F70   (0x0008)  
	UClass*                                            _armActionSequenceClass;                                    // 0x2F78   (0x0008)  
	UClass*                                            _unarmActionSequenceClass;                                  // 0x2F80   (0x0008)  
	bool                                               _needsToBeArmedToFire;                                      // 0x2F88   (0x0001)  
	bool                                               _spawnWithLoadedProjectile;                                 // 0x2F89   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x2F8A   (0x0002)  MISSED
	FName                                              _backMuzzlerSocketName;                                     // 0x2F8C   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x2F94   (0x0004)  MISSED
	UParticleSystem*                                   _baskMuzzlePS;                                              // 0x2F98   (0x0008)  
	UWeaponActionRocketLauncherArmSequence*            _armActionSequence;                                         // 0x2FA0   (0x0008)  
	UWeaponActionRocketLauncherUnarmSequence*          _unarmActionSequence;                                       // 0x2FA8   (0x0008)  
	UWeaponState*                                      _unarmedState;                                              // 0x2FB0   (0x0008)  
	bool                                               _isArmed;                                                   // 0x2FB8   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x2FB9   (0x0007)  MISSED


	/// Functions
	// Function /Script/ConZ.WeaponRocketLauncher.Server_Unarm
	void Server_Unarm();                                                                                                     // [0x241c3f0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.WeaponRocketLauncher.Server_Arm
	void Server_Arm();                                                                                                       // [0x241c0c0] Final|Net|NetReliableNative|Event|Private|NetServer 
	// Function /Script/ConZ.WeaponRocketLauncher.OnRep_IsArmed
	void OnRep_IsArmed();                                                                                                    // [0x241c0a0] Final|Native|Private 
	// Function /Script/ConZ.WeaponRocketLauncher.OnRep_ActiveState
	void OnRep_ActiveState();                                                                                                // [0xb92f40] Final|Native|Private 
	// Function /Script/ConZ.WeaponRocketLauncher.NetMulticast_Unarm
	void NetMulticast_Unarm();                                                                                               // [0x2362870] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.WeaponRocketLauncher.NetMulticast_Arm
	void NetMulticast_Arm();                                                                                                 // [0x2417920] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.WeaponRocketLauncher.IsArmed
	bool IsArmed();                                                                                                          // [0x241bb20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.WeaponRocketLauncherAnimInstance
/// Size: 0x0010 (0x000300 - 0x000310)
class UWeaponRocketLauncherAnimInstance : public UWeaponAnimInstance
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0300   (0x0008)  MISSED
	bool                                               _isArmed;                                                   // 0x0308   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0309   (0x0007)  MISSED
};

/// Class /Script/ConZ.WeaponScopeWidget
/// Size: 0x0018 (0x000260 - 0x000278)
class UWeaponScopeWidget : public UUserWidget
{ 
public:
	UTexture2D*                                        ReticleTexture;                                             // 0x0260   (0x0008)  
	UTextureRenderTarget2D*                            TextRenderTarget;                                           // 0x0268   (0x0008)  
	float                                              FadeFactor;                                                 // 0x0270   (0x0004)  
	float                                              OnHideDelay;                                                // 0x0274   (0x0004)  


	/// Functions
	// Function /Script/ConZ.WeaponScopeWidget.OnShowElements
	void OnShowElements();                                                                                                   // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.WeaponScopeWidget.OnHideElements
	void OnHideElements();                                                                                                   // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.WeaponScopeWidget.OnFadeOutComplete
	void OnFadeOutComplete();                                                                                                // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.WeaponScopeWidget.OnFadeInComplete
	void OnFadeInComplete();                                                                                                 // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.WeaponScopeWidget.OnConstructFinished
	void OnConstructFinished();                                                                                              // [0x2859740] Event|Public|BlueprintEvent 
	// Function /Script/ConZ.WeaponScopeWidget.BeginFadeIn
	void BeginFadeIn();                                                                                                      // [0x2859740] Event|Public|BlueprintEvent 
};

/// Class /Script/ConZ.WeaponFirstPersonAnimationsDataAsset
/// Size: 0x0050 (0x000098 - 0x0000E8)
class UWeaponFirstPersonAnimationsDataAsset : public UItemFirstPersonAnimationsDataAsset
{ 
public:
	FItemFirstPersonUpperBodyAnimationsData            UpperBodyAimingHip;                                         // 0x0098   (0x0050)  
};

/// Class /Script/ConZ.WeaponSightItemComponent
/// Size: 0x0018 (0x0000C8 - 0x0000E0)
class UWeaponSightItemComponent : public UItemComponent
{ 
public:
	FName                                              ViewCenterSocketName;                                       // 0x00C8   (0x0008)  
	FVector                                            AimingDownTheSightsLocationOffset;                          // 0x00D0   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00DC   (0x0004)  MISSED
};

/// Class /Script/ConZ.WeaponState
/// Size: 0x0008 (0x000028 - 0x000030)
class UWeaponState : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/ConZ.WeaponStateActive
/// Size: 0x0000 (0x000030 - 0x000030)
class UWeaponStateActive : public UWeaponState
{ 
public:
};

/// Class /Script/ConZ.WeaponStateActiveManualFiring
/// Size: 0x0000 (0x000030 - 0x000030)
class UWeaponStateActiveManualFiring : public UWeaponState
{ 
public:
};

/// Class /Script/ConZ.WeaponStateAutoCrossbowActive
/// Size: 0x0000 (0x000030 - 0x000030)
class UWeaponStateAutoCrossbowActive : public UWeaponState
{ 
public:
};

/// Class /Script/ConZ.WeaponStateFiring
/// Size: 0x0000 (0x000030 - 0x000030)
class UWeaponStateFiring : public UWeaponState
{ 
public:
};

/// Class /Script/ConZ.WeaponStateAutoCrossbowFire
/// Size: 0x0008 (0x000030 - 0x000038)
class UWeaponStateAutoCrossbowFire : public UWeaponStateFiring
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.WeaponStateBowActive
/// Size: 0x0000 (0x000030 - 0x000030)
class UWeaponStateBowActive : public UWeaponState
{ 
public:
};

/// Class /Script/ConZ.WeaponStateBowAnticipateDraw
/// Size: 0x0010 (0x000030 - 0x000040)
class UWeaponStateBowAnticipateDraw : public UWeaponState
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0030   (0x0010)  MISSED
};

/// Class /Script/ConZ.WeaponStateBowAnticipateFiring
/// Size: 0x0008 (0x000030 - 0x000038)
class UWeaponStateBowAnticipateFiring : public UWeaponState
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.WeaponStateBowCancelFiring
/// Size: 0x0008 (0x000030 - 0x000038)
class UWeaponStateBowCancelFiring : public UWeaponState
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.WeaponStateBowDraw
/// Size: 0x0020 (0x000030 - 0x000050)
class UWeaponStateBowDraw : public UWeaponState
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0030   (0x0020)  MISSED
};

/// Class /Script/ConZ.WeaponStateBowFire
/// Size: 0x0000 (0x000030 - 0x000030)
class UWeaponStateBowFire : public UWeaponStateFiring
{ 
public:
};

/// Class /Script/ConZ.WeaponStateBowFireAndInsertArrow
/// Size: 0x0010 (0x000030 - 0x000040)
class UWeaponStateBowFireAndInsertArrow : public UWeaponStateFiring
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0030   (0x0010)  MISSED
};

/// Class /Script/ConZ.WeaponStateBowFiring
/// Size: 0x0008 (0x000030 - 0x000038)
class UWeaponStateBowFiring : public UWeaponStateFiring
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.WeaponStateBowInsertArrow
/// Size: 0x0010 (0x000030 - 0x000040)
class UWeaponStateBowInsertArrow : public UWeaponState
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0030   (0x0010)  MISSED
};

/// Class /Script/ConZ.WeaponStateBowRemoveArrow
/// Size: 0x0008 (0x000030 - 0x000038)
class UWeaponStateBowRemoveArrow : public UWeaponState
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.WeaponStateChamberBullet
/// Size: 0x0008 (0x000030 - 0x000038)
class UWeaponStateChamberBullet : public UWeaponState
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.WeaponStateCheckAmmo
/// Size: 0x0008 (0x000030 - 0x000038)
class UWeaponStateCheckAmmo : public UWeaponState
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.WeaponStateClearMalfunction
/// Size: 0x0010 (0x000030 - 0x000040)
class UWeaponStateClearMalfunction : public UWeaponState
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0030   (0x0010)  MISSED
};

/// Class /Script/ConZ.WeaponStateCrossbowActive
/// Size: 0x0000 (0x000030 - 0x000030)
class UWeaponStateCrossbowActive : public UWeaponState
{ 
public:
};

/// Class /Script/ConZ.WeaponStateCrossbowFire
/// Size: 0x0000 (0x000030 - 0x000030)
class UWeaponStateCrossbowFire : public UWeaponStateFiring
{ 
public:
};

/// Class /Script/ConZ.WeaponStateCrossbowFireAndInsertArrow
/// Size: 0x0000 (0x000030 - 0x000030)
class UWeaponStateCrossbowFireAndInsertArrow : public UWeaponStateFiring
{ 
public:
};

/// Class /Script/ConZ.WeaponStateEquipping
/// Size: 0x0000 (0x000030 - 0x000030)
class UWeaponStateEquipping : public UWeaponState
{ 
public:
};

/// Class /Script/ConZ.WeaponStateFiringAutomatic
/// Size: 0x0010 (0x000030 - 0x000040)
class UWeaponStateFiringAutomatic : public UWeaponStateFiring
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0030   (0x0010)  MISSED
};

/// Class /Script/ConZ.WeaponStateFiringBurst
/// Size: 0x0000 (0x000040 - 0x000040)
class UWeaponStateFiringBurst : public UWeaponStateFiringAutomatic
{ 
public:
};

/// Class /Script/ConZ.WeaponStateFiringManual
/// Size: 0x0008 (0x000030 - 0x000038)
class UWeaponStateFiringManual : public UWeaponStateFiring
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.WeaponStateFiringSemiAutomatic
/// Size: 0x0008 (0x000040 - 0x000048)
class UWeaponStateFiringSemiAutomatic : public UWeaponStateFiringAutomatic
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0040   (0x0008)  MISSED
};

/// Class /Script/ConZ.WeaponStateInactive
/// Size: 0x0000 (0x000030 - 0x000030)
class UWeaponStateInactive : public UWeaponState
{ 
public:
};

/// Class /Script/ConZ.WeaponStateReload
/// Size: 0x0038 (0x000030 - 0x000068)
class UWeaponStateReload : public UWeaponState
{ 
public:
	UWeaponActionReloadSequence*                       _currentReloadActionSequence;                               // 0x0030   (0x0008)  
	FWeaponReloadData                                  _reloadData;                                                // 0x0038   (0x0030)  
};

/// Class /Script/ConZ.WeaponStateRevolverActive
/// Size: 0x0000 (0x000030 - 0x000030)
class UWeaponStateRevolverActive : public UWeaponState
{ 
public:
};

/// Class /Script/ConZ.WeaponStateRevolverFire
/// Size: 0x0000 (0x000038 - 0x000038)
class UWeaponStateRevolverFire : public UWeaponStateFiringManual
{ 
public:
};

/// Class /Script/ConZ.WeaponStateRocketLauncherActiveArmed
/// Size: 0x0000 (0x000030 - 0x000030)
class UWeaponStateRocketLauncherActiveArmed : public UWeaponState
{ 
public:
};

/// Class /Script/ConZ.WeaponStateRocketLauncherActiveUnarmed
/// Size: 0x0000 (0x000030 - 0x000030)
class UWeaponStateRocketLauncherActiveUnarmed : public UWeaponState
{ 
public:
};

/// Class /Script/ConZ.WeaponStateRocketLauncherArm
/// Size: 0x0008 (0x000030 - 0x000038)
class UWeaponStateRocketLauncherArm : public UWeaponState
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.WeaponStateRocketLauncherUnarm
/// Size: 0x0008 (0x000030 - 0x000038)
class UWeaponStateRocketLauncherUnarm : public UWeaponState
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Class /Script/ConZ.WeaponStateUnEquipping
/// Size: 0x0000 (0x000030 - 0x000030)
class UWeaponStateUnEquipping : public UWeaponState
{ 
public:
};

/// Class /Script/ConZ.WeaponStateUnloadAmmo
/// Size: 0x0010 (0x000030 - 0x000040)
class UWeaponStateUnloadAmmo : public UWeaponState
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0030   (0x0010)  MISSED
};

/// Class /Script/ConZ.WeatherAmbientSounds
/// Size: 0x0038 (0x000220 - 0x000258)
class AWeatherAmbientSounds : public AActor
{ 
public:
	float                                              WeatherRTPCsUpdateInterval;                                 // 0x0220   (0x0004)  
	float                                              TimeOfDayRTPCUpdateInterval;                                // 0x0224   (0x0004)  
	float                                              TimeOfDayRTPCInterpolationSpeed;                            // 0x0228   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x022C   (0x0004)  MISSED
	UAkAudioEvent*                                     RainAudioEvent;                                             // 0x0230   (0x0008)  
	UAkAudioEvent*                                     WindAudioEvent;                                             // 0x0238   (0x0008)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x0240   (0x0018)  MISSED
};

/// Class /Script/ConZ.WeatherController2
/// Size: 0x0E98 (0x000220 - 0x0010B8)
class AWeatherController2 : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x60];                                      // 0x0220   (0x0060)  MISSED
	float                                              _maxHeightAboveSeaLevel;                                    // 0x0280   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0284   (0x0004)  MISSED
	UDirectionalLightComponent*                        _sun;                                                       // 0x0288   (0x0008)  
	float                                              _timeOfDay;                                                 // 0x0290   (0x0004)  
	bool                                               _canStartTimeOfDayBeOverridenByConfig;                      // 0x0294   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0295   (0x0003)  MISSED
	float                                              _timeOfDaySpeed;                                            // 0x0298   (0x0004)  
	bool                                               _canTimeOfDaySpeedBeOverridenByConfig;                      // 0x029C   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x029D   (0x0003)  MISSED
	float                                              _sunIntensity;                                              // 0x02A0   (0x0004)  
	float                                              _sunFullEclipseMult;                                        // 0x02A4   (0x0004)  
	float                                              _sunAzimuthDegrees;                                         // 0x02A8   (0x0004)  
	float                                              _sunriseTime;                                               // 0x02AC   (0x0004)  
	bool                                               _canSunriseTimeBeOverridenByConfig;                         // 0x02B0   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x02B1   (0x0003)  MISSED
	float                                              _sunsetTime;                                                // 0x02B4   (0x0004)  
	bool                                               _canSunsetTimeBeOverridenByConfig;                          // 0x02B8   (0x0001)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x02B9   (0x0003)  MISSED
	float                                              _dawnDuskTresholdAngle;                                     // 0x02BC   (0x0004)  
	unsigned char                                      UnknownData06_5[0x4];                                       // 0x02C0   (0x0004)  MISSED
	float                                              _maxSolarIrradiance;                                        // 0x02C4   (0x0004)  
	UDirectionalLightComponent*                        _moon;                                                      // 0x02C8   (0x0008)  
	float                                              _moonRotation;                                              // 0x02D0   (0x0004)  
	float                                              _moonIntensityMult;                                         // 0x02D4   (0x0004)  
	FLinearColor                                       _moonLightTint;                                             // 0x02D8   (0x0010)  
	UMaterialInterface*                                _moonStarsMaterial;                                         // 0x02E8   (0x0008)  
	UMaterialInstanceDynamic*                          _moonStarsMaterialDynamic;                                  // 0x02F0   (0x0008)  
	UStaticMeshComponent*                              _starsSphere;                                               // 0x02F8   (0x0008)  
	float                                              _starsSphereDistance;                                       // 0x0300   (0x0004)  
	FRotator                                           _starsSphereRotation;                                       // 0x0304   (0x000C)  
	UDirectionalLightComponent*                        _nightLight;                                                // 0x0310   (0x0008)  
	float                                              _nightLightIntensity;                                       // 0x0318   (0x0004)  
	FFloatInterval                                     _nightLightIntensityRange;                                  // 0x031C   (0x0008)  
	FLinearColor                                       _nightLightColor;                                           // 0x0324   (0x0010)  
	unsigned char                                      UnknownData07_5[0x4];                                       // 0x0334   (0x0004)  MISSED
	USkyLightComponent*                                _skyAmbientReflEnv;                                         // 0x0338   (0x0008)  
	USkyAtmosphereComponent*                           _skyAtmosphere;                                             // 0x0340   (0x0008)  
	float                                              _skyAmbientIntensity;                                       // 0x0348   (0x0004)  
	unsigned char                                      UnknownData08_5[0x4];                                       // 0x034C   (0x0004)  MISSED
	FRuntimeFloatCurve                                 _skyAmbientOcclusionTint;                                   // 0x0350   (0x0088)  
	UVolumetricCloudComponent*                         _volumetricClouds;                                          // 0x03D8   (0x0008)  
	UMaterialInterface*                                _volumetricCloudsMaterialLQ;                                // 0x03E0   (0x0008)  
	UMaterialInterface*                                _volumetricCloudsMaterialHQ;                                // 0x03E8   (0x0008)  
	UMaterialInstanceDynamic*                          _volumetricCloudsMaterialDynamic;                           // 0x03F0   (0x0008)  
	float                                              _cirrostratusCoverage;                                      // 0x03F8   (0x0004)  
	float                                              _cirrostratusSunlightThroughput;                            // 0x03FC   (0x0004)  
	FRuntimeFloatCurve                                 _cirrostratusCoverageMaterialParamRemap;                    // 0x0400   (0x0088)  
	float                                              _cumulonimbusCoverage;                                      // 0x0488   (0x0004)  
	float                                              _cumulonimbusSunlightThroughput;                            // 0x048C   (0x0004)  
	FRuntimeFloatCurve                                 _cumulonimbusCoverageMaterialParamRemap;                    // 0x0490   (0x0088)  
	float                                              _nimbostratusCoverage;                                      // 0x0518   (0x0004)  
	float                                              _nimbostratusSunlightThroughput;                            // 0x051C   (0x0004)  
	FRuntimeFloatCurve                                 _nimbostratusCoverageMaterialParamRemap;                    // 0x0520   (0x0088)  
	float                                              _cloudsBaseSpeed;                                           // 0x05A8   (0x0004)  
	float                                              _cloudsWindSpeed;                                           // 0x05AC   (0x0004)  
	unsigned char                                      UnknownData09_5[0x8];                                       // 0x05B0   (0x0008)  MISSED
	UParticleSystem*                                   _lightningParticleSystem;                                   // 0x05B8   (0x0008)  
	FFloatInterval                                     _lightningParticleLifetime;                                 // 0x05C0   (0x0008)  
	UAkAudioEvent*                                     _thunderSoundEmitter;                                       // 0x05C8   (0x0008)  
	FFloatInterval                                     _thunderSoundDuration;                                      // 0x05D0   (0x0008)  
	float                                              _lightningRate;                                             // 0x05D8   (0x0004)  
	float                                              _lightningMaxDistance;                                      // 0x05DC   (0x0004)  
	float                                              _lightningAltitudeOffsetFromPlayer;                         // 0x05E0   (0x0004)  
	float                                              _lightningAltitudeBandThickness;                            // 0x05E4   (0x0004)  
	unsigned char                                      UnknownData10_5[0x20];                                      // 0x05E8   (0x0020)  MISSED
	USceneComponent*                                   _precipitationEmittersRoot;                                 // 0x0608   (0x0008)  
	UChildActorComponent*                              _precipitationMaskCapture;                                  // 0x0610   (0x0008)  
	float                                              _precipitationMaskUpdateInterval;                           // 0x0618   (0x0004)  
	unsigned char                                      UnknownData11_5[0x4];                                       // 0x061C   (0x0004)  MISSED
	float                                              _precipitationEmittersUpOffset;                             // 0x0620   (0x0004)  
	float                                              _precipitationEmittersForwardOffset;                        // 0x0624   (0x0004)  
	float                                              _precipitationEmittersVelocityOffset;                       // 0x0628   (0x0004)  
	unsigned char                                      UnknownData12_5[0x4];                                       // 0x062C   (0x0004)  MISSED
	TArray<UParticleSystem*>                           _rainParticleSystems;                                       // 0x0630   (0x0010)  
	TArray<UParticleSystemComponent*>                  _rainEmitters;                                              // 0x0640   (0x0010)  
	float                                              _rainIntensity;                                             // 0x0650   (0x0004)  
	float                                              _maxRainMilimeterPerHour;                                   // 0x0654   (0x0004)  
	TArray<UParticleSystem*>                           _snowParticleSystems;                                       // 0x0658   (0x0010)  
	TArray<UParticleSystemComponent*>                  _snowEmitters;                                              // 0x0668   (0x0010)  
	float                                              _snowIntensity;                                             // 0x0678   (0x0004)  
	unsigned char                                      UnknownData13_5[0x4];                                       // 0x067C   (0x0004)  MISSED
	UMaterialParameterCollection*                      _mainMPC;                                                   // 0x0680   (0x0008)  
	UMaterialParameterCollection*                      _foliageMPC;                                                // 0x0688   (0x0008)  
	FRuntimeFloatCurve                                 _foliageMPCSubsurfaceColorIntensityCurve;                   // 0x0690   (0x0088)  
	UMaterialParameterCollection*                      _wetnessMPC;                                                // 0x0718   (0x0008)  
	FRuntimeFloatCurve                                 _wetnessMPCEmissiveIntensityCurve;                          // 0x0720   (0x0088)  
	UMaterialParameterCollection*                      _particlesMPC;                                              // 0x07A8   (0x0008)  
	FRuntimeCurveLinearColor                           _particlesMPCGlobalParticlesColorCurve;                     // 0x07B0   (0x0208)  
	float                                              _baseAirTemperature;                                        // 0x09B8   (0x0004)  
	FFloatInterval                                     _baseAirTemperatureRange;                                   // 0x09BC   (0x0008)  
	float                                              _airTemperatureHeightModifier;                              // 0x09C4   (0x0004)  
	float                                              _waterTemperature;                                          // 0x09C8   (0x0004)  
	FFloatInterval                                     _waterTemperatureRange;                                     // 0x09CC   (0x0008)  
	float                                              _waterTemperatureInterpSpeed;                               // 0x09D4   (0x0004)  
	float                                              _waterTemperatureHeightModifier;                            // 0x09D8   (0x0004)  
	float                                              _temperatureDifferenceBetweenShadeAndOnSun;                 // 0x09DC   (0x0004)  
	FRuntimeFloatCurve                                 _waterEvaporationRate;                                      // 0x09E0   (0x0088)  
	float                                              _airRelativeHumidity;                                       // 0x0A68   (0x0004)  
	unsigned char                                      UnknownData14_5[0x4];                                       // 0x0A6C   (0x0004)  MISSED
	UWindDirectionalSourceComponent*                   _windSourceComponent;                                       // 0x0A70   (0x0008)  
	UParticleSystemComponent*                          _leavesComponent;                                           // 0x0A78   (0x0008)  
	float                                              _windAzimuth;                                               // 0x0A80   (0x0004)  
	float                                              _windIntensity;                                             // 0x0A84   (0x0004)  
	float                                              _windAzimuthForWaves;                                       // 0x0A88   (0x0004)  
	float                                              _windIntensityForWaves;                                     // 0x0A8C   (0x0004)  
	float                                              _maxWindSpeedKph;                                           // 0x0A90   (0x0004)  
	unsigned char                                      UnknownData15_5[0x4];                                       // 0x0A94   (0x0004)  MISSED
	UExponentialHeightFogComponent*                    _heightFog;                                                 // 0x0A98   (0x0008)  
	float                                              _fogDensity;                                                // 0x0AA0   (0x0004)  
	float                                              _fogFalloff;                                                // 0x0AA4   (0x0004)  
	float                                              _fogHeightOffset;                                           // 0x0AA8   (0x0004)  
	FLinearColor                                       _fogBaseInscatteringColor;                                  // 0x0AAC   (0x0010)  
	FLinearColor                                       _fogBaseDirectionalInscatteringColor;                       // 0x0ABC   (0x0010)  
	unsigned char                                      UnknownData16_5[0x4];                                       // 0x0ACC   (0x0004)  MISSED
	UChildActorComponent*                              _postProcessVolume;                                         // 0x0AD0   (0x0008)  
	FRuntimeFloatCurve                                 _exposureMinBrightness;                                     // 0x0AD8   (0x0088)  
	FRuntimeFloatCurve                                 _exposureMaxBrightness;                                     // 0x0B60   (0x0088)  
	FRuntimeFloatCurve                                 _exposureSpeedUp;                                           // 0x0BE8   (0x0088)  
	FRuntimeFloatCurve                                 _exposureSpeedDown;                                         // 0x0C70   (0x0088)  
	FMultistageRandomRoll                              _windAzimuthRandom;                                         // 0x0CF8   (0x0068)  
	FMultistageRandomRoll                              _windIntensityRandom;                                       // 0x0D60   (0x0068)  
	FMultistageRandomRoll                              _cirrostratusCoverageRandom;                                // 0x0DC8   (0x0068)  
	FMultistageRandomRoll                              _cumulonimbusCoverageRandom;                                // 0x0E30   (0x0068)  
	FMultistageRandomRoll                              _nimbostratusCoverageRandom;                                // 0x0E98   (0x0068)  
	FRuntimeFloatCurve                                 _baseAirTemperatureVsTimeOfDay;                             // 0x0F00   (0x0088)  
	FRuntimeFloatCurve                                 _fogDensityVsSunIntensity;                                  // 0x0F88   (0x0088)  
	float                                              _fogDensityFromCumulonimbus;                                // 0x1010   (0x0004)  
	float                                              _fogRainRatioFromCumulonimbus;                              // 0x1014   (0x0004)  
	unsigned char                                      UnknownData17_5[0x4];                                       // 0x1018   (0x0004)  MISSED
	float                                              _fogDensityWhenRaining;                                     // 0x101C   (0x0004)  
	float                                              _fogDensityInterpSpeed;                                     // 0x1020   (0x0004)  
	float                                              _autoSaveInterval;                                          // 0x1024   (0x0004)  
	unsigned char                                      UnknownData18_5[0x4];                                       // 0x1028   (0x0004)  MISSED
	bool                                               _shouldSerializeState;                                      // 0x102C   (0x0001)  
	unsigned char                                      UnknownData19_5[0x3];                                       // 0x102D   (0x0003)  MISSED
	float                                              _sendReplicatedStateSnapshotInterval;                       // 0x1030   (0x0004)  
	unsigned char                                      UnknownData20_5[0x20];                                      // 0x1034   (0x0020)  MISSED
	float                                              _nighttimeDarkness;                                         // 0x1054   (0x0004)  
	unsigned char                                      UnknownData21_6[0x60];                                      // 0x1058   (0x0060)  MISSED


	/// Functions
	// Function /Script/ConZ.WeatherController2.OnRep_NighttimeDarkness
	void OnRep_NighttimeDarkness();                                                                                          // [0x2420d70] Final|Native|Private 
	// Function /Script/ConZ.WeatherController2.NetMulticast_SendStateSnapshot
	void NetMulticast_SendStateSnapshot(FWeatherReplicatedStateSnapshot Snapshot);                                           // [0x2420cd0] Final|Net|Native|Event|NetMulticast|Private 
	// Function /Script/ConZ.WeatherController2.NetMulticast_ResetStateSnapshots
	void NetMulticast_ResetStateSnapshots(FWeatherReplicatedStateSnapshot Snapshot);                                         // [0x2420c30] Final|Net|NetReliableNative|Event|NetMulticast|Private 
};

/// Class /Script/ConZ.WeedRemovalToolItemTag
/// Size: 0x0000 (0x000030 - 0x000030)
class UWeedRemovalToolItemTag : public UBaseItemTag
{ 
public:
};

/// Class /Script/ConZ.WetnessManager
/// Size: 0x0050 (0x000220 - 0x000270)
class AWetnessManager : public AActor
{ 
public:
	int32_t                                            MaxNumberOfActiveWettables;                                 // 0x0220   (0x0004)  
	float                                              MaxWettableLifeTime;                                        // 0x0224   (0x0004)  
	float                                              WeatherAndWettableObjectParametersUpdateInterval;           // 0x0228   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x022C   (0x0004)  MISSED
	UCurveFloat*                                       WettingRateFromRainVsRainIntensity;                         // 0x0230   (0x0008)  
	float                                              WettingRateFromWaterImmersion;                              // 0x0238   (0x0004)  
	float                                              WettingRateFromWetSurfaces;                                 // 0x023C   (0x0004)  
	float                                              DryingRate;                                                 // 0x0240   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0244   (0x0004)  MISSED
	UCurveFloat*                                       DryingRateModifierVsTemperature;                            // 0x0248   (0x0008)  
	UCurveFloat*                                       DryingRateModifierVsRelativeHumidity;                       // 0x0250   (0x0008)  
	float                                              AirTemperatureModifierWhenNotExposedToSunlight;             // 0x0258   (0x0004)  
	unsigned char                                      UnknownData02_6[0x14];                                      // 0x025C   (0x0014)  MISSED
};

/// Class /Script/ConZ.WetnessStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UWetnessStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.Wettable
/// Size: 0x0000 (0x000028 - 0x000028)
class UWettable : public UInterface
{ 
public:
};

/// Class /Script/ConZ.WheelBarrow
/// Size: 0x0750 (0x000B30 - 0x001280)
class AWheelBarrow : public AVehicleBase
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0B30   (0x0018)  MISSED
	float                                              _driverCapsuleMaxDepenetrationVelocity;                     // 0x0B48   (0x0004)  
	FVector                                            _driverCapsuleRelativeLocation;                             // 0x0B4C   (0x000C)  
	float                                              _driverCapsuleMass;                                         // 0x0B58   (0x0004)  
	float                                              _driverCapsuleLinearDamping;                                // 0x0B5C   (0x0004)  
	float                                              _driverCapsuleAngularDamping;                               // 0x0B60   (0x0004)  
	FVector                                            _driverCapsuleConstraintRelativeLocation;                   // 0x0B64   (0x000C)  
	float                                              _driverCapsuleConstraintSwingLimit;                         // 0x0B70   (0x0004)  
	float                                              _driverCapsuleConstraintTwistLimit;                         // 0x0B74   (0x0004)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0B78   (0x0008)  MISSED
	FTransform                                         _driverTransformRelativeToCapsule;                          // 0x0B80   (0x0030)  
	FRuntimeFloatCurve                                 _driverActionDifficultyVsSpeed;                             // 0x0BB0   (0x0088)  
	FRuntimeFloatCurve                                 _driverActionDifficultyVsSpeedWhenLimping;                  // 0x0C38   (0x0088)  
	FRuntimeFloatCurve                                 _driverBaseConstitutionChangeRateModifierVsSpeed;           // 0x0CC0   (0x0088)  
	FRuntimeFloatCurve                                 _driverBaseConstitutionChangeRateModifierVsSpeedWhenLimping; // 0x0D48   (0x0088)  
	FRuntimeFloatCurve                                 _driverStrengthGainSpeedInfluenceVsSpeed;                   // 0x0DD0   (0x0088)  
	FRuntimeFloatCurve                                 _driverStrengthGainSpeedInfluenceVsSpeedWhenLimping;        // 0x0E58   (0x0088)  
	FFloatInterval                                     _loadModifierInterpedWithDriverStrength;                    // 0x0EE0   (0x0008)  
	FWheelBarrowParametersPerMovementPace              _parametersPerMovementPace;                                 // 0x0EE8   (0x0080)  
	FFloatInterval                                     _maxSpeedModifierInterpedWithDriverDexterity;               // 0x0F68   (0x0008)  
	FRuntimeFloatCurve                                 _weightLoadFactorVsFloorSlopeAngle;                         // 0x0F70   (0x0088)  
	float                                              _forwardDriveForceMagnitude;                                // 0x0FF8   (0x0004)  
	float                                              _reverseDriveForceMagnitude;                                // 0x0FFC   (0x0004)  
	float                                              _steerForceMagnitude;                                       // 0x1000   (0x0004)  
	float                                              _steerForceMagnitudeWhenLimping;                            // 0x1004   (0x0004)  
	float                                              _steerRollTorqueMagnitude;                                  // 0x1008   (0x0004)  
	float                                              _meshBrakeForceScale;                                       // 0x100C   (0x0004)  
	float                                              _meshBrakeForceMagnitudeWhenCloseToMaxSpeed;                // 0x1010   (0x0004)  
	float                                              _meshSidewaysBrakeForceScale;                               // 0x1014   (0x0004)  
	float                                              _driverCapsuleBrakeForceScale;                              // 0x1018   (0x0004)  
	float                                              _driverCapsuleBrakeForceMagnitudeWhenCloseToMaxSpeed;       // 0x101C   (0x0004)  
	float                                              _driverCapsuleSidewaysBrakeForceScale;                      // 0x1020   (0x0004)  
	float                                              _physicsMaterialFrictionWhenDriven;                         // 0x1024   (0x0004)  
	float                                              _physicsMaterialRestitutionWhenDriven;                      // 0x1028   (0x0004)  
	bool                                               _stickyFrictionEnabled;                                     // 0x102C   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x102D   (0x0003)  MISSED
	float                                              _stickyFrictionSpeedThreshold;                              // 0x1030   (0x0004)  
	float                                              _stickyFriction;                                            // 0x1034   (0x0004)  
	float                                              _healthDrainPerSpeed;                                       // 0x1038   (0x0004)  
	float                                              _healthDrainPerLoad;                                        // 0x103C   (0x0004)  
	float                                              _healthDrainUpdateInterval;                                 // 0x1040   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x1044   (0x0004)  MISSED
	float                                              _speedThresholdToEvictAllMountees;                          // 0x1048   (0x0004)  
	float                                              _vertSpeedThresholdToEvictAllMountees;                      // 0x104C   (0x0004)  
	UAkAudioEvent*                                     _startedMovingAudioEvent;                                   // 0x1050   (0x0008)  
	UAkAudioEvent*                                     _stoppedMovingAudioEvent;                                   // 0x1058   (0x0008)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x1060   (0x0004)  MISSED
	float                                              _sendStateFrequency;                                        // 0x1064   (0x0004)  
	UPhysicsConstraintComponent*                       _driverPhysicsConstraintComponent;                          // 0x1068   (0x0008)  
	unsigned char                                      UnknownData05_5[0x8];                                       // 0x1070   (0x0008)  MISSED
	UPhysicalMaterial*                                 _physicsMaterialWhenDriven;                                 // 0x1078   (0x0008)  
	unsigned char                                      UnknownData06_5[0x188];                                     // 0x1080   (0x0188)  MISSED
	UWheelBarrowDriverCapsuleComponent*                _driverPhysicsCapsuleComponent;                             // 0x1208   (0x0008)  
	TArray<TWeakObjectPtr>                             _attachedWheels;                                            // 0x1210   (0x0010)  
	unsigned char                                      UnknownData07_5[0x40];                                      // 0x1220   (0x0040)  MISSED
	UStaticMeshComponent*                              _wheelMesh;                                                 // 0x1260   (0x0008)  
	unsigned char                                      UnknownData08_6[0x18];                                      // 0x1268   (0x0018)  MISSED


	/// Functions
	// Function /Script/ConZ.WheelBarrow.GetDriverPhysicsCapsuleComponent
	UWheelBarrowDriverCapsuleComponent* GetDriverPhysicsCapsuleComponent();                                                  // [0x2424f50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/ConZ.WheelBarrowDriverCapsuleComponent
/// Size: 0x0030 (0x000470 - 0x0004A0)
class UWheelBarrowDriverCapsuleComponent : public UCapsuleComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x0470   (0x0030)  MISSED
};

/// Class /Script/ConZ.WheelBarrowMountSlot
/// Size: 0x0000 (0x000140 - 0x000140)
class UWheelBarrowMountSlot : public UVehicleBaseMountSlot
{ 
public:
};

/// Class /Script/ConZ.WheelBarrowDriverMountSlot
/// Size: 0x0010 (0x000140 - 0x000150)
class UWheelBarrowDriverMountSlot : public UWheelBarrowMountSlot
{ 
public:
	UBlendSpace*                                       _walkJogLimpingAnimation;                                   // 0x0140   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0148   (0x0008)  MISSED
};

/// Class /Script/ConZ.WindowFortificationsType
/// Size: 0x0050 (0x000030 - 0x000080)
class UWindowFortificationsType : public UDataAsset
{ 
public:
	TMap<UClass*, UStaticMesh*>                        MeshForFortification;                                       // 0x0030   (0x0050)  
};

/// Class /Script/ConZ.WindVane
/// Size: 0x0030 (0x000220 - 0x000250)
class AWindVane : public AActor
{ 
public:
	UStaticMeshComponent*                              _column;                                                    // 0x0220   (0x0008)  
	UStaticMeshComponent*                              _body;                                                      // 0x0228   (0x0008)  
	UStaticMeshComponent*                              _propeller;                                                 // 0x0230   (0x0008)  
	float                                              _bodyRotationRate;                                          // 0x0238   (0x0004)  
	float                                              _propellerSpinRate;                                         // 0x023C   (0x0004)  
	FName                                              _rotationRateRTPC;                                          // 0x0240   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0248   (0x0008)  MISSED
};

/// Class /Script/ConZ.WorldCraftingMarkerWidget
/// Size: 0x0008 (0x0002F8 - 0x000300)
class UWorldCraftingMarkerWidget : public UWaypointWidgetBase
{ 
public:
	UCraftingInfoWidget*                               _craftingInfo;                                              // 0x02F8   (0x0008)  


	/// Functions
	// Function /Script/ConZ.WorldCraftingMarkerWidget.ChangeMode
	void ChangeMode(ECraftingMarkerMode mode);                                                                               // [0x2859740] Event|Public|BlueprintEvent 
};

/// Class /Script/ConZ.WorldDoorOwnershipManager
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UWorldDoorOwnershipManager : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x00B0   (0x0050)  MISSED
};

/// Class /Script/ConZ.WorldEventManager
/// Size: 0x0030 (0x000220 - 0x000250)
class AWorldEventManager : public AActor
{ 
public:
	TArray<UClass*>                                    EventTypes;                                                 // 0x0220   (0x0010)  
	float                                              TimeBetweenEventsMin;                                       // 0x0230   (0x0004)  
	float                                              TimeBetweenEventsMax;                                       // 0x0234   (0x0004)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0238   (0x0008)  MISSED
	TArray<AWorldEvent*>                               _events;                                                    // 0x0240   (0x0010)  
};

/// Class /Script/ConZ.WorldItemSpawner
/// Size: 0x0008 (0x000220 - 0x000228)
class AWorldItemSpawner : public AActor
{ 
public:
	UWorldItemSpawnerComponent*                        _spawnerComponent;                                          // 0x0220   (0x0008)  
};

/// Class /Script/ConZ.WorldItemSpawnerComponent
/// Size: 0x0060 (0x000450 - 0x0004B0)
class UWorldItemSpawnerComponent : public UPrimitiveComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0450   (0x0018)  MISSED
	TWeakObjectPtr<UClass*>                            _item;                                                      // 0x0468   (0x0028)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x0490   (0x0020)  MISSED
};

/// Class /Script/ConZ.WorldStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UWorldStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.Wristwatch
/// Size: 0x0098 (0x000220 - 0x0002B8)
class AWristwatch : public AActor
{ 
public:
	USkeletalMeshComponent*                            SkeletalMesh;                                               // 0x0220   (0x0008)  
	UTextureRenderTarget2D*                            TextRenderTarget;                                           // 0x0228   (0x0008)  
	UFont*                                             TimeFont;                                                   // 0x0230   (0x0008)  
	float                                              TextScaleX;                                                 // 0x0238   (0x0004)  
	float                                              TextScaleY;                                                 // 0x023C   (0x0004)  
	UAkAudioEvent*                                     AlarmSound;                                                 // 0x0240   (0x0008)  
	USkeletalMesh*                                     _maleWristwatchMesh;                                        // 0x0248   (0x0008)  
	USkeletalMesh*                                     _femaleWristwatchMesh;                                      // 0x0250   (0x0008)  
	unsigned char                                      UnknownData00_6[0x60];                                      // 0x0258   (0x0060)  MISSED


	/// Functions
	// Function /Script/ConZ.Wristwatch.SetDisplayBrightness
	void SetDisplayBrightness(float Value);                                                                                  // [0x2859740] Event|Public|BlueprintEvent 
};

/// Class /Script/ConZ.XMLStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UXMLStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/ConZ.YesNoDialog
/// Size: 0x0060 (0x000260 - 0x0002C0)
class UYesNoDialog : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0260   (0x0030)  MISSED
	UTextBlock*                                        _textDialog;                                                // 0x0290   (0x0008)  
	UConZStandardButton*                               _buttonYes;                                                 // 0x0298   (0x0008)  
	UConZStandardButton*                               _buttonNo;                                                  // 0x02A0   (0x0008)  
	FText                                              _dialogMessage;                                             // 0x02A8   (0x0018)  


	/// Functions
	// Function /Script/ConZ.YesNoDialog.SetDialogMessage
	void SetDialogMessage(FText& Value);                                                                                     // [0x2426070] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/ConZ.YesNoDialog.OnButtonYesClicked
	void OnButtonYesClicked();                                                                                               // [0x22b2420] Final|Native|Private 
	// Function /Script/ConZ.YesNoDialog.OnButtonNoClicked
	void OnButtonNoClicked();                                                                                                // [0x22b2400] Final|Native|Private 
};

/// Class /Script/ConZ.ZombieAIController2
/// Size: 0x0350 (0x000328 - 0x000678)
class AZombieAIController2 : public AAIController
{ 
public:
	UAISenseConfig_Sight*                              _lyingSightSenseConfig;                                     // 0x0328   (0x0008)  
	UAISenseConfig_Hearing*                            _lyingHearingSenseConfig;                                   // 0x0330   (0x0008)  
	UAISenseConfig_Damage*                             _lyingDamageSenseConfig;                                    // 0x0338   (0x0008)  
	float                                              _stateMachineTickIntervalWhenInRelaxedState;                // 0x0340   (0x0004)  
	bool                                               _shouldWander;                                              // 0x0344   (0x0001)  
	bool                                               _shouldWanderAroundWanderOrigin;                            // 0x0345   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0346   (0x0002)  MISSED
	float                                              _maxWanderingRadius;                                        // 0x0348   (0x0004)  
	float                                              _minTimeToRestBeforeWandering;                              // 0x034C   (0x0004)  
	float                                              _maxTimeToRestBeforeWandering;                              // 0x0350   (0x0004)  
	bool                                               _shouldBecomeAlertedBySight;                                // 0x0354   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0355   (0x0003)  MISSED
	float                                              _minLineOfSightDurationToBecomeAlerted;                     // 0x0358   (0x0004)  
	float                                              _maxLineOfSightDurationToBecomeAlerted;                     // 0x035C   (0x0004)  
	bool                                               _shouldBecomeAlertedByHearing;                              // 0x0360   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0361   (0x0003)  MISSED
	float                                              _minDelayBeforeBecomingAlertedByHearing;                    // 0x0364   (0x0004)  
	float                                              _maxDelayBeforeBecomingAlertedByHearing;                    // 0x0368   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x036C   (0x0004)  MISSED
	UAISenseConfig_Sight*                              _relaxedIdleSightSenseConfig;                               // 0x0370   (0x0008)  
	UAISenseConfig_Hearing*                            _relaxedIdleHearingSenseConfig;                             // 0x0378   (0x0008)  
	UAISenseConfig_Damage*                             _relaxedIdleDamageSenseConfig;                              // 0x0380   (0x0008)  
	UAISenseConfig_Sight*                              _relaxedWanderSightSenseConfig;                             // 0x0388   (0x0008)  
	UAISenseConfig_Hearing*                            _relaxedWanderHearingSenseConfig;                           // 0x0390   (0x0008)  
	UAISenseConfig_Damage*                             _relaxedWanderDamageSenseConfig;                            // 0x0398   (0x0008)  
	float                                              _stateMachineTickIntervalWhenInAlertedState;                // 0x03A0   (0x0004)  
	float                                              _minObservingForLineOfSightStartDelay;                      // 0x03A4   (0x0004)  
	float                                              _maxObservingForLineOfSightStartDelay;                      // 0x03A8   (0x0004)  
	float                                              _minInvestigateStimulusDelay;                               // 0x03AC   (0x0004)  
	float                                              _maxInvestigateStimulusDelay;                               // 0x03B0   (0x0004)  
	float                                              _minEnterCombatModeDelay;                                   // 0x03B4   (0x0004)  
	float                                              _maxEnterCombatModeDelay;                                   // 0x03B8   (0x0004)  
	float                                              _distanceAtWhichToIgnoreEnterCombatModeDelay;               // 0x03BC   (0x0004)  
	UCurveVector*                                      _observingCurve;                                            // 0x03C0   (0x0008)  
	float                                              _observingCurvePeriod;                                      // 0x03C8   (0x0004)  
	float                                              _observingCurveMaxYaw;                                      // 0x03CC   (0x0004)  
	float                                              _observingCurveMaxPitch;                                    // 0x03D0   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x03D4   (0x0004)  MISSED
	UAISenseConfig_Sight*                              _alertedSightSenseConfig;                                   // 0x03D8   (0x0008)  
	UAISenseConfig_Hearing*                            _alertedHearingSenseConfig;                                 // 0x03E0   (0x0008)  
	UAISenseConfig_Damage*                             _alertedDamageSenseConfig;                                  // 0x03E8   (0x0008)  
	float                                              _stateMachineTickIntervalWhenInCombatState;                 // 0x03F0   (0x0004)  
	bool                                               _shouldAttack;                                              // 0x03F4   (0x0001)  
	bool                                               _shouldBackOffIfTooCloseToFoe;                              // 0x03F5   (0x0001)  
	bool                                               _shouldPredictFoeLocation;                                  // 0x03F6   (0x0001)  
	unsigned char                                      UnknownData05_5[0x1];                                       // 0x03F7   (0x0001)  MISSED
	UCurveFloat*                                       _foeLocationPredictionStrengthVsDistanceToFoe;              // 0x03F8   (0x0008)  
	float                                              _attackDistance;                                            // 0x0400   (0x0004)  
	int32_t                                            _minNumConsecutiveInflictedMeleeHitsToIntimidate;           // 0x0404   (0x0004)  
	int32_t                                            _maxNumConsecutiveInflictedMeleeHitsToIntimidate;           // 0x0408   (0x0004)  
	float                                              _minTimeBeforeFoeIsConsideredUnreachable;                   // 0x040C   (0x0004)  
	float                                              _maxTimeBeforeFoeIsConsideredUnreachable;                   // 0x0410   (0x0004)  
	float                                              _minTimeSinceLastAttackWhileFoeIsInLineOfSightToIntimidate; // 0x0414   (0x0004)  
	float                                              _maxTimeSinceLastAttackWhileFoeIsInLineOfSightToIntimidate; // 0x0418   (0x0004)  
	float                                              _costOfJumpingInPathLength;                                 // 0x041C   (0x0004)  
	float                                              _minPathPointDistance;                                      // 0x0420   (0x0004)  
	FDetectionDelayTimerData                           _detectionDelayTimerData;                                   // 0x0424   (0x0010)  
	float                                              _hearingRangeMultiplierIfSpawnedUnderground;                // 0x0434   (0x0004)  
	AZombie2*                                          _zombie;                                                    // 0x0438   (0x0008)  
	unsigned char                                      UnknownData06_6[0x238];                                     // 0x0440   (0x0238)  MISSED
};

/// Class /Script/ConZ.ZombieAnimInstance2
/// Size: 0x00B0 (0x0002C0 - 0x000370)
class UZombieAnimInstance2 : public UAnimInstance
{ 
public:
	bool                                               HasOwnerBegunPlay;                                          // 0x02B8   (0x0001)  
	bool                                               IsAlive;                                                    // 0x02B9   (0x0001)  
	bool                                               IsInRagdoll;                                                // 0x02BA   (0x0001)  
	bool                                               IsDeadAndCompletelyInRagdoll;                               // 0x02BB   (0x0001)  
	EZombieStance                                      stance;                                                     // 0x02BC   (0x0001)  
	bool                                               IsStanceRelaxed;                                            // 0x02BD   (0x0001)  
	bool                                               IsStanceLying;                                              // 0x02BE   (0x0001)  
	bool                                               IsStanceAlerted;                                            // 0x02BF   (0x0001)  
	bool                                               IsStanceCombat;                                             // 0x02C0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x02C1   (0x0003)  MISSED
	int32_t                                            NumRelaxedIdleVariations;                                   // 0x02C4   (0x0004)  
	int32_t                                            RelaxedIdleVariationIndex;                                  // 0x02C8   (0x0004)  
	FVector                                            Acceleration;                                               // 0x02CC   (0x000C)  
	bool                                               WantsToMove;                                                // 0x02D8   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x02D9   (0x0003)  MISSED
	FVector                                            Velocity;                                                   // 0x02DC   (0x000C)  
	float                                              Speed;                                                      // 0x02E8   (0x0004)  
	float                                              SpeedXY;                                                    // 0x02EC   (0x0004)  
	float                                              WalkStoppingDistance;                                       // 0x02F0   (0x0004)  
	float                                              WalkStoppingTime;                                           // 0x02F4   (0x0004)  
	bool                                               IsFalling;                                                  // 0x02F8   (0x0001)  
	bool                                               IsJumping;                                                  // 0x02F9   (0x0001)  
	unsigned char                                      UnknownData02_5[0x2];                                       // 0x02FA   (0x0002)  MISSED
	float                                              JumpApex;                                                   // 0x02FC   (0x0004)  
	float                                              JumpDuration;                                               // 0x0300   (0x0004)  
	FRotator                                           AimOffset;                                                  // 0x0304   (0x000C)  
	bool                                               CanStartGoToLoop;                                           // 0x0310   (0x0001)  
	unsigned char                                      UnknownData03_5[0x7];                                       // 0x0311   (0x0007)  MISSED
	UAnimSequenceBase*                                 RelaxedWalkLoopAnimation;                                   // 0x0318   (0x0008)  
	float                                              RelaxedWalkLoopAnimationPlayRate;                           // 0x0320   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x0324   (0x0004)  MISSED
	UAnimSequenceBase*                                 CombatRunStartAnimation;                                    // 0x0328   (0x0008)  
	float                                              CombatRunStartAnimationPlayRate;                            // 0x0330   (0x0004)  
	unsigned char                                      UnknownData05_5[0x4];                                       // 0x0334   (0x0004)  MISSED
	UAnimSequenceBase*                                 CombatRunLoopAnimation;                                     // 0x0338   (0x0008)  
	float                                              CombatRunLoopAnimationPlayRate;                             // 0x0340   (0x0004)  
	unsigned char                                      UnknownData06_5[0x4];                                       // 0x0344   (0x0004)  MISSED
	UAnimSequenceBase*                                 CombatRunStopAnimation;                                     // 0x0348   (0x0008)  
	float                                              CombatRunStopAnimationStartTime;                            // 0x0350   (0x0004)  
	float                                              CombatRunStopAnimationPlayRate;                             // 0x0354   (0x0004)  
	float                                              MinUpperBodyBlendWeight;                                    // 0x0358   (0x0004)  
	float                                              UpperBodyBlendMaxSpeedXY;                                   // 0x035C   (0x0004)  
	float                                              UpperBodyBlendWeight;                                       // 0x0360   (0x0004)  
	unsigned char                                      UnknownData07_6[0xC];                                       // 0x0364   (0x000C)  MISSED


	/// Functions
	// Function /Script/ConZ.ZombieAnimInstance2.AnimNotify_RFootDown
	void AnimNotify_RFootDown();                                                                                             // [0x23850a0] Native|Event|Protected|BlueprintEvent 
	// Function /Script/ConZ.ZombieAnimInstance2.AnimNotify_LFootDown
	void AnimNotify_LFootDown();                                                                                             // [0x2427eb0] Native|Event|Protected|BlueprintEvent 
	// Function /Script/ConZ.ZombieAnimInstance2.AnimNotify_GoToRagdoll
	void AnimNotify_GoToRagdoll();                                                                                           // [0x23850c0] Native|Event|Protected|BlueprintEvent 
};

/// Class /Script/ConZ.ZombieArmorDamageReductionAssetData
/// Size: 0x0030 (0x000028 - 0x000058)
class UZombieArmorDamageReductionAssetData : public UAssetUserData
{ 
public:
	float                                              CollisionDamageMultiplierPerBodyPart;                       // 0x0028   (0x0030)  
};

/// Class /Script/ConZ.ZombieImpersonatingItemTag
/// Size: 0x0000 (0x000030 - 0x000030)
class UZombieImpersonatingItemTag : public UBaseItemTag
{ 
public:
};

/// Class /Script/ConZ.ZombieKamikazeComponent
/// Size: 0x0140 (0x0000B0 - 0x0001F0)
class UZombieKamikazeComponent : public UActorComponent
{ 
public:
	AConZCharacter*                                    _owningCharacter;                                           // 0x00B0   (0x0008)  
	float                                              _beepingDistance;                                           // 0x00B8   (0x0004)  
	float                                              _explosionDistance;                                         // 0x00BC   (0x0004)  
	float                                              _autoExplosionTime;                                         // 0x00C0   (0x0004)  
	float                                              _postMortemExplosionTime;                                   // 0x00C4   (0x0004)  
	float                                              _criticalPostMortemExplosionTime;                           // 0x00C8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00CC   (0x0004)  MISSED
	float                                              _baseDamage;                                                // 0x00D0   (0x0004)  
	float                                              _minimumDamage;                                             // 0x00D4   (0x0004)  
	float                                              _damageInnerRadius;                                         // 0x00D8   (0x0004)  
	float                                              _damageOuterRadius;                                         // 0x00DC   (0x0004)  
	float                                              _damageFalloff;                                             // 0x00E0   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x00E4   (0x0004)  MISSED
	FTargetTypeDamageMultiplier                        _targetTypeMultiplier;                                      // 0x00E8   (0x0010)  
	float                                              _netCullDistanceSquaredMeters;                              // 0x00F8   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x00FC   (0x0004)  MISSED
	UAkAudioEvent*                                     _explosionAudioEvent;                                       // 0x0100   (0x0008)  
	UAkAudioEvent*                                     _beepingStartAudioEvent;                                    // 0x0108   (0x0008)  
	UAkAudioEvent*                                     _beepingEndAudioEvent;                                      // 0x0110   (0x0008)  
	UAkComponent*                                      _beepingAudioComponent;                                     // 0x0118   (0x0008)  
	UParticleSystem*                                   _explosionPS;                                               // 0x0120   (0x0008)  
	UClass*                                            _explosionCameraShakeClass;                                 // 0x0128   (0x0008)  
	UMaterialInterface*                                _sootDecal;                                                 // 0x0130   (0x0008)  
	float                                              _minSootDecalSize;                                          // 0x0138   (0x0004)  
	float                                              _maxSootDecalSize;                                          // 0x013C   (0x0004)  
	float                                              _minSootScalarParamValue;                                   // 0x0140   (0x0004)  
	float                                              _maxSootScalarParamValue;                                   // 0x0144   (0x0004)  
	FName                                              _sootScalarParameterValueName;                              // 0x0148   (0x0008)  
	float                                              _decalsLifeSpan;                                            // 0x0150   (0x0004)  
	float                                              _decalFadeFactor;                                           // 0x0154   (0x0004)  
	int32_t                                            _maximumNumberOfChunksSpawned;                              // 0x0158   (0x0004)  
	float                                              _minVelocityMagnitude;                                      // 0x015C   (0x0004)  
	float                                              _maxVelocityMagnitude;                                      // 0x0160   (0x0004)  
	float                                              _velocityHalfAngle;                                         // 0x0164   (0x0004)  
	float                                              _timeAfterChunksAreDeleted;                                 // 0x0168   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x016C   (0x0004)  MISSED
	TArray<UStaticMesh*>                               _bodyPartChunks;                                            // 0x0170   (0x0010)  
	UClass*                                            _minigameClass;                                             // 0x0180   (0x0008)  
	UClass*                                            _minigameToolTag;                                           // 0x0188   (0x0008)  
	UClass*                                            _dummyTrapItemClass;                                        // 0x0190   (0x0008)  
	TArray<UClass*>                                    _spawnerPresets;                                            // 0x0198   (0x0010)  
	TArray<UClass*>                                    _spawnerPresets2;                                           // 0x01A8   (0x0010)  
	unsigned char                                      UnknownData04_5[0xA];                                       // 0x01B8   (0x000A)  MISSED
	bool                                               _isCriticalPostMortemPhase;                                 // 0x01C2   (0x0001)  
	bool                                               _isDisarmed;                                                // 0x01C3   (0x0001)  
	unsigned char                                      UnknownData05_5[0x1C];                                      // 0x01C4   (0x001C)  MISSED
	bool                                               _shouldExplodeOnDeath;                                      // 0x01E0   (0x0001)  
	unsigned char                                      UnknownData06_5[0x3];                                       // 0x01E1   (0x0003)  MISSED
	float                                              _dummyTrapItemDestroyDelay;                                 // 0x01E4   (0x0004)  
	unsigned char                                      UnknownData07_6[0x8];                                       // 0x01E8   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.ZombieKamikazeComponent.OnRep_IsDisarmed
	void OnRep_IsDisarmed();                                                                                                 // [0x2427f10] Final|Native|Private 
	// Function /Script/ConZ.ZombieKamikazeComponent.OnRep_IsCriticalPostMortemPhase
	void OnRep_IsCriticalPostMortemPhase();                                                                                  // [0xb92f40] Final|Native|Private 
	// Function /Script/ConZ.ZombieKamikazeComponent.NetMulticast_HandleExplosion
	void NetMulticast_HandleExplosion();                                                                                     // [0x22706f0] Final|Net|NetReliableNative|Event|NetMulticast|Private 
	// Function /Script/ConZ.ZombieKamikazeComponent.Explode
	void Explode();                                                                                                          // [0x2427ef0] Final|Native|Public  
	// Function /Script/ConZ.ZombieKamikazeComponent.Disarm
	void Disarm();                                                                                                           // [0x2427ed0] Final|Native|Public  
};

/// Class /Script/ConZ.ZombieKamikazeDummyTrap
/// Size: 0x0010 (0x000A60 - 0x000A70)
class AZombieKamikazeDummyTrap : public ATrapItem
{ 
public:
	TWeakObjectPtr<UZombieKamikazeComponent*>          _owningComponent;                                           // 0x0A60   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0A68   (0x0008)  MISSED


	/// Functions
	// Function /Script/ConZ.ZombieKamikazeDummyTrap.OnRep_OwningComponent
	void OnRep_OwningComponent();                                                                                            // [0x2427f30] Final|Native|Private 
};

/// Class /Script/ConZ.ZombieMovementComponent2
/// Size: 0x0000 (0x000C10 - 0x000C10)
class UZombieMovementComponent2 : public UConZCharacterMovementComponent
{ 
public:
};

/// Class /Script/ConZ.ZombieSoundComponent2
/// Size: 0x0040 (0x0000D8 - 0x000118)
class UZombieSoundComponent2 : public UCharacterSoundComponent
{ 
public:
	UAkAudioEvent*                                     RelaxedStanceEnteredAudioEvent;                             // 0x00D8   (0x0008)  
	UAkAudioEvent*                                     AlertedStanceEnteredAudioEvent;                             // 0x00E0   (0x0008)  
	UAkAudioEvent*                                     CombatStanceEnteredAudioEvent;                              // 0x00E8   (0x0008)  
	UAkAudioEvent*                                     FootstepAudioEvent;                                         // 0x00F0   (0x0008)  
	UAkAudioEvent*                                     StopAllAudioEvent;                                          // 0x00F8   (0x0008)  
	UAkAudioEvent*                                     DeathAudioEvent;                                            // 0x0100   (0x0008)  
	UAkAudioEvent*                                     StartSearchCorpseAudioEvent;                                // 0x0108   (0x0008)  
	UAkAudioEvent*                                     StopSearchCorpseAudioEvent;                                 // 0x0110   (0x0008)  
};

/// Class /Script/ConZ.ZoneConfigurationDataAsset
/// Size: 0x0018 (0x000030 - 0x000048)
class UZoneConfigurationDataAsset : public UDataAsset
{ 
public:
	FZoneConfiguration                                 configuration;                                              // 0x0030   (0x0018)  
};

/// Class /Script/ConZ.ZoneRegistry
/// Size: 0x0008 (0x0000B0 - 0x0000B8)
class UZoneRegistry : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00B0   (0x0008)  MISSED
};

/// Struct /Script/ConZ.CharacterAndItemAnimation
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCharacterAndItemAnimation
{ 
	UAnimMontage*                                      CharacterMontage;                                           // 0x0000   (0x0008)  
	UAnimMontage*                                      ItemMontage;                                                // 0x0008   (0x0008)  
};

/// Struct /Script/ConZ.ItemObstructionTestCapsule
/// Size: 0x0050 (0x000000 - 0x000050)
struct FItemObstructionTestCapsule
{ 
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0000   (0x0050)  MISSED
};

/// Struct /Script/ConZ.WidgetDisplayInfo
/// Size: 0x000C (0x000000 - 0x00000C)
struct FWidgetDisplayInfo
{ 
	EWidgetDisplayInfoType                             DisplayType;                                                // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            First;                                                      // 0x0004   (0x0004)  
	int32_t                                            Second;                                                     // 0x0008   (0x0004)  
};

/// Struct /Script/ConZ.CraftingPart
/// Size: 0x0020 (0x000000 - 0x000020)
struct FCraftingPart
{ 
	UClass*                                            ItemClass;                                                  // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0008   (0x0018)  MISSED
};

/// Struct /Script/ConZ.InventoryStackData
/// Size: 0x0080 (0x000000 - 0x000080)
struct FInventoryStackData
{ 
	UClass*                                            _stackClass;                                                // 0x0000   (0x0008)  
	float                                              _approximateCount;                                          // 0x0008   (0x0004)  
	float                                              _approximateMaxCount;                                       // 0x000C   (0x0004)  
	float                                              _weight;                                                    // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	TArray<char>                                       _data;                                                      // 0x0018   (0x0010)  
	unsigned char                                      UnknownData01_6[0x58];                                      // 0x0028   (0x0058)  MISSED
};

/// Struct /Script/ConZ.VisibilityReplication
/// Size: 0x0008 (0x000000 - 0x000008)
struct FVisibilityReplication
{ 
	bool                                               Value;                                                      // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            RepHelper;                                                  // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.PackedEntitySetupAndId
/// Size: 0x0008 (0x000000 - 0x000008)
struct FPackedEntitySetupAndId
{ 
	uint64_t                                           _value;                                                     // 0x0000   (0x0008)  
};

/// Struct /Script/ConZ.ItemStackData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FItemStackData
{ 
	TArray<UItemStateBase*>                            Stacks;                                                     // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.AttachmentSocketOffset
/// Size: 0x0020 (0x000000 - 0x000020)
struct FAttachmentSocketOffset
{ 
	FName                                              BoneName;                                                   // 0x0000   (0x0008)  
	FVector                                            Location;                                                   // 0x0008   (0x000C)  
	FRotator                                           Rotation;                                                   // 0x0014   (0x000C)  
};

/// Struct /Script/ConZ.AttachmentSocket
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAttachmentSocket
{ 
	TArray<FAttachmentSocketDataItem>                  Items;                                                      // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.AttachmentSocketDataItem
/// Size: 0x0018 (0x000000 - 0x000018)
struct FAttachmentSocketDataItem
{ 
	FName                                              BoneName;                                                   // 0x0000   (0x0008)  
	UClass*                                            MountType;                                                  // 0x0008   (0x0008)  
	AActor*                                            MountedItem;                                                // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.ItemMotionNoise
/// Size: 0x0008 (0x000000 - 0x000008)
struct FItemMotionNoise
{ 
	UAkAudioEvent*                                     AudioEvent;                                                 // 0x0000   (0x0008)  
};

/// Struct /Script/ConZ.ItemLocation
/// Size: 0x000F (0x000000 - 0x00000F)
struct FItemLocation
{ 
	bool                                               Coastal;                                                    // 0x0000   (0x0001)  
	bool                                               Continantal;                                                // 0x0001   (0x0001)  
	bool                                               Mountain;                                                   // 0x0002   (0x0001)  
	bool                                               Urban;                                                      // 0x0003   (0x0001)  
	bool                                               Rural;                                                      // 0x0004   (0x0001)  
	bool                                               Industrial;                                                 // 0x0005   (0x0001)  
	bool                                               Police;                                                     // 0x0006   (0x0001)  
	bool                                               MilitaryBasic;                                              // 0x0007   (0x0001)  
	bool                                               MilitaryMedium;                                             // 0x0008   (0x0001)  
	bool                                               MilitaryAdvanced;                                           // 0x0009   (0x0001)  
	bool                                               MilitaryWW2;                                                // 0x000A   (0x0001)  
	bool                                               Sport;                                                      // 0x000B   (0x0001)  
	bool                                               Market;                                                     // 0x000C   (0x0001)  
	bool                                               GasStation;                                                 // 0x000D   (0x0001)  
	bool                                               Airfield;                                                   // 0x000E   (0x0001)  
};

/// Struct /Script/ConZ.PlayerLoginInfo
/// Size: 0x0040 (0x000000 - 0x000040)
struct FPlayerLoginInfo
{ 
	FString                                            UserId;                                                     // 0x0000   (0x0010)  
	FDbIntegerId                                       UserProfileId;                                              // 0x0010   (0x0008)  
	FString                                            UserProfileName;                                            // 0x0018   (0x0010)  
	bool                                               IsUserAdmin;                                                // 0x0028   (0x0001)  
	bool                                               IsUserServerSettingsAdmin;                                  // 0x0029   (0x0001)  
	bool                                               PlayAsDrone;                                                // 0x002A   (0x0001)  
	FDeluxeVersion                                     DeluxeVersion;                                              // 0x002B   (0x0007)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0032   (0x0002)  MISSED
	int32_t                                            ServerResponsePort;                                         // 0x0034   (0x0004)  
	FDbIntegerId                                       ServerUserProfileId;                                        // 0x0038   (0x0008)  
};

/// Struct /Script/ConZ.DbIntegerId
/// Size: 0x0008 (0x000000 - 0x000008)
struct FDbIntegerId
{ 
	int64_t                                            Value;                                                      // 0x0000   (0x0008)  
};

/// Struct /Script/ConZ.DeluxeVersion
/// Size: 0x0007 (0x000000 - 0x000007)
struct FDeluxeVersion
{ 
	unsigned char                                      UnknownData00_1[0x7];                                       // 0x0000   (0x0007)  MISSED
};

/// Struct /Script/ConZ.EventsRankingStatsItem
/// Size: 0x0048 (0x000000 - 0x000048)
struct FEventsRankingStatsItem
{ 
	int32_t                                            Rank;                                                       // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	FString                                            PlayerName;                                                 // 0x0008   (0x0010)  
	FEventsRankingStats                                CharacterStats;                                             // 0x0018   (0x0030)  
};

/// Struct /Script/ConZ.EventsRankingStats
/// Size: 0x0030 (0x000000 - 0x000030)
struct FEventsRankingStats
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	float                                              FamePoints;                                                 // 0x0008   (0x0004)  
	int32_t                                            FameLevel;                                                  // 0x000C   (0x0004)  
	float                                              EventScore;                                                 // 0x0010   (0x0004)  
	int32_t                                            EventKills;                                                 // 0x0014   (0x0004)  
	int32_t                                            EventTeamKills;                                             // 0x0018   (0x0004)  
	int32_t                                            EventDeaths;                                                // 0x001C   (0x0004)  
	int32_t                                            EventSuicides;                                              // 0x0020   (0x0004)  
	int32_t                                            EventAssists;                                               // 0x0024   (0x0004)  
	int32_t                                            EventHeadshots;                                             // 0x0028   (0x0004)  
	bool                                               IsBanned;                                                   // 0x002C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x002D   (0x0003)  MISSED
};

/// Struct /Script/ConZ.SurvivalStats
/// Size: 0x0190 (0x000000 - 0x000190)
struct FSurvivalStats
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	float                                              HighestPositiveFamePoints;                                  // 0x0008   (0x0004)  
	int32_t                                            DoorsClaimed;                                               // 0x000C   (0x0004)  
	int32_t                                            AnimalsKilled;                                              // 0x0010   (0x0004)  
	float                                              MinutesSurvived;                                            // 0x0014   (0x0004)  
	int32_t                                            Kills;                                                      // 0x0018   (0x0004)  
	int32_t                                            Deaths;                                                     // 0x001C   (0x0004)  
	int32_t                                            LocksPicked;                                                // 0x0020   (0x0004)  
	int32_t                                            PuppetsKilled;                                              // 0x0024   (0x0004)  
	int32_t                                            GunsCrafted;                                                // 0x0028   (0x0004)  
	int32_t                                            AmmoCrafted;                                                // 0x002C   (0x0004)  
	int32_t                                            BulletsCrafted;                                             // 0x0030   (0x0004)  
	int32_t                                            ArrowsCrafted;                                              // 0x0034   (0x0004)  
	int32_t                                            ClothingCrafted;                                            // 0x0038   (0x0004)  
	float                                              LongestKillDistance;                                        // 0x003C   (0x0004)  
	int32_t                                            MeleeKills;                                                 // 0x0040   (0x0004)  
	int32_t                                            ArcheryKills;                                               // 0x0044   (0x0004)  
	int32_t                                            PlayersKnockedOut;                                          // 0x0048   (0x0004)  
	int32_t                                            TotalDefecations;                                           // 0x004C   (0x0004)  
	int32_t                                            TotalUrinations;                                            // 0x0050   (0x0004)  
	int32_t                                            LightsFired;                                                // 0x0054   (0x0004)  
	int32_t                                            ContainersLooted;                                           // 0x0058   (0x0004)  
	int32_t                                            ItemsPutIntoContainers;                                     // 0x005C   (0x0004)  
	int32_t                                            DeathsByPrisoners;                                          // 0x0060   (0x0004)  
	int32_t                                            AnimalsSkinned;                                             // 0x0064   (0x0004)  
	float                                              FoodEaten;                                                  // 0x0068   (0x0004)  
	float                                              DistanceTravelledByFoot;                                    // 0x006C   (0x0004)  
	int32_t                                            WoundsPatched;                                              // 0x0070   (0x0004)  
	int32_t                                            ItemsPickedUp;                                              // 0x0074   (0x0004)  
	float                                              LiquidDrank;                                                // 0x0078   (0x0004)  
	int32_t                                            TeethLost;                                                  // 0x007C   (0x0004)  
	int32_t                                            TotalCaloriesIntake;                                        // 0x0080   (0x0004)  
	int32_t                                            ShotsFired;                                                 // 0x0084   (0x0004)  
	int32_t                                            ShotsHit;                                                   // 0x0088   (0x0004)  
	float                                              RangeWeaponAccuracy;                                        // 0x008C   (0x0004)  
	int32_t                                            Headshots;                                                  // 0x0090   (0x0004)  
	int32_t                                            MeleeWeaponSwings;                                          // 0x0094   (0x0004)  
	int32_t                                            MeleeWeaponHits;                                            // 0x0098   (0x0004)  
	float                                              MeleeWeaponAccuracy;                                        // 0x009C   (0x0004)  
	int32_t                                            MeleeWeaponsCrafted;                                        // 0x00A0   (0x0004)  
	int32_t                                            DroneKills;                                                 // 0x00A4   (0x0004)  
	int32_t                                            SentryKills;                                                // 0x00A8   (0x0004)  
	int32_t                                            PrisonerKills;                                              // 0x00AC   (0x0004)  
	int32_t                                            PuppetsKnockedOut;                                          // 0x00B0   (0x0004)  
	int32_t                                            Diarrheas;                                                  // 0x00B4   (0x0004)  
	int32_t                                            Vomits;                                                     // 0x00B8   (0x0004)  
	float                                              DistanceTravelledInVehicle;                                 // 0x00BC   (0x0004)  
	int32_t                                            MushroomsEaten;                                             // 0x00C0   (0x0004)  
	float                                              HighestMuscleMass;                                          // 0x00C4   (0x0004)  
	float                                              HighestFat;                                                 // 0x00C8   (0x0004)  
	int32_t                                            HeartAttacks;                                               // 0x00CC   (0x0004)  
	int32_t                                            Overdose;                                                   // 0x00D0   (0x0004)  
	int32_t                                            Starvation;                                                 // 0x00D4   (0x0004)  
	float                                              HighestDamageTaken;                                         // 0x00D8   (0x0004)  
	float                                              HighestWeightCarried;                                       // 0x00DC   (0x0004)  
	int32_t                                            EventsWon;                                                  // 0x00E0   (0x0004)  
	int32_t                                            EventsLost;                                                 // 0x00E4   (0x0004)  
	float                                              LowestNegativeFamePoints;                                   // 0x00E8   (0x0004)  
	float                                              DistanceTravelledSwimming;                                  // 0x00EC   (0x0004)  
	int32_t                                            EventsEnemyKills;                                           // 0x00F0   (0x0004)  
	int32_t                                            EventsDeaths;                                               // 0x00F4   (0x0004)  
	int32_t                                            FlagCaptures;                                               // 0x00F8   (0x0004)  
	int32_t                                            CrowsKilled;                                                // 0x00FC   (0x0004)  
	int32_t                                            SeagullsKilled;                                             // 0x0100   (0x0004)  
	int32_t                                            HorsesKilled;                                               // 0x0104   (0x0004)  
	int32_t                                            BoarsKilled;                                                // 0x0108   (0x0004)  
	int32_t                                            BearsKilled;                                                // 0x010C   (0x0004)  
	int32_t                                            GoatsKilled;                                                // 0x0110   (0x0004)  
	int32_t                                            DeersKilled;                                                // 0x0114   (0x0004)  
	int32_t                                            ChickensKilled;                                             // 0x0118   (0x0004)  
	int32_t                                            RabbitsKilled;                                              // 0x011C   (0x0004)  
	int32_t                                            DonkeysKilled;                                              // 0x0120   (0x0004)  
	int32_t                                            WolvesKilled;                                               // 0x0124   (0x0004)  
	int32_t                                            TimesMauledByABear;                                         // 0x0128   (0x0004)  
	float                                              LongestAnimalKillDistance;                                  // 0x012C   (0x0004)  
	int32_t                                            EventTeamKills;                                             // 0x0130   (0x0004)  
	float                                              KillDeathRatio;                                             // 0x0134   (0x0004)  
	float                                              EventsKillDeathRatio;                                       // 0x0138   (0x0004)  
	float                                              AlcoholDrank;                                               // 0x013C   (0x0004)  
	int32_t                                            FoliageCut;                                                 // 0x0140   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0144   (0x0004)  MISSED
	FFishingStats                                      FishingStats;                                               // 0x0148   (0x0028)  
	float                                              DistanceTravelledByBoat;                                    // 0x0170   (0x0004)  
	float                                              DistanceSailed;                                             // 0x0174   (0x0004)  
	int32_t                                            TimesCaughtByShark;                                         // 0x0178   (0x0004)  
	int32_t                                            TimesEscapedSharkBite;                                      // 0x017C   (0x0004)  
	int32_t                                            LastFamePointAwardConsecutiveDays;                          // 0x0180   (0x0004)  
	int32_t                                            FirearmKills;                                               // 0x0184   (0x0004)  
	int32_t                                            BareHandedKills;                                            // 0x0188   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x018C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.FishingStats
/// Size: 0x0028 (0x000000 - 0x000028)
struct FFishingStats
{ 
	int32_t                                            FishCaught;                                                 // 0x0000   (0x0004)  
	int32_t                                            FishKept;                                                   // 0x0004   (0x0004)  
	int32_t                                            FishReleased;                                               // 0x0008   (0x0004)  
	int32_t                                            LinesBroken;                                                // 0x000C   (0x0004)  
	float                                              HeaviestFishCaught;                                         // 0x0010   (0x0004)  
	float                                              LongestFishCaught;                                          // 0x0014   (0x0004)  
	TArray<FCaughtFishData>                            FishSpeciesCaught;                                          // 0x0018   (0x0010)  
};

/// Struct /Script/ConZ.CaughtFishData
/// Size: 0x0008 (0x000000 - 0x000008)
struct FCaughtFishData
{ 
	EFishSpecies                                       FishSpecies;                                                // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            Amount;                                                     // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.RespawnParameters
/// Size: 0x006C (0x000000 - 0x00006C)
struct FRespawnParameters
{ 
	int32_t                                            RandomLocationPrice;                                        // 0x0000   (0x0004)  
	int32_t                                            SectorLocationPrice;                                        // 0x0004   (0x0004)  
	ECurrencyType                                      SectorLocationPriceCurrency;                                // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	int32_t                                            ShelterLocationPrice;                                       // 0x000C   (0x0004)  
	ECurrencyType                                      ShelterLocationPriceCurrency;                               // 0x0010   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0011   (0x0003)  MISSED
	int32_t                                            SquadLocationPrice;                                         // 0x0014   (0x0004)  
	ECurrencyType                                      SquadLocationPriceCurrency;                                 // 0x0018   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0019   (0x0003)  MISSED
	int32_t                                            PermadeathThreshold;                                        // 0x001C   (0x0004)  
	ECurrencyType                                      PermadeathThresholdPriceCurrency;                           // 0x0020   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x0021   (0x0003)  MISSED
	float                                              RandomPriceModifier;                                        // 0x0024   (0x0004)  
	float                                              SectorPriceModifier;                                        // 0x0028   (0x0004)  
	float                                              HomePriceModifier;                                          // 0x002C   (0x0004)  
	float                                              RandomInitialTime;                                          // 0x0030   (0x0004)  
	float                                              SectorInitialTime;                                          // 0x0034   (0x0004)  
	float                                              ShelterInitialTime;                                         // 0x0038   (0x0004)  
	float                                              SquadInitialTime;                                           // 0x003C   (0x0004)  
	float                                              RandomCooldownTime;                                         // 0x0040   (0x0004)  
	float                                              SectorCooldownTime;                                         // 0x0044   (0x0004)  
	float                                              ShelterCooldownTime;                                        // 0x0048   (0x0004)  
	float                                              SquadCooldownTime;                                          // 0x004C   (0x0004)  
	float                                              RandomCooldownResetMultiplier;                              // 0x0050   (0x0004)  
	float                                              SectorCooldownResetMultiplier;                              // 0x0054   (0x0004)  
	float                                              ShelterCooldownResetMultiplier;                             // 0x0058   (0x0004)  
	float                                              SquadCooldownResetMultiplier;                               // 0x005C   (0x0004)  
	float                                              CommitSuicideInitialTime;                                   // 0x0060   (0x0004)  
	float                                              CommitSuicideCooldownTime;                                  // 0x0064   (0x0004)  
	float                                              CommitSuicideCooldownResetMultiplier;                       // 0x0068   (0x0004)  
};

/// Struct /Script/ConZ.CharacterTemplate
/// Size: 0x00E8 (0x000000 - 0x0000E8)
struct FCharacterTemplate
{ 
	float                                              Strength;                                                   // 0x0000   (0x0004)  
	float                                              Constitution;                                               // 0x0004   (0x0004)  
	float                                              Dexterity;                                                  // 0x0008   (0x0004)  
	float                                              Intelligence;                                               // 0x000C   (0x0004)  
	int32_t                                            Age;                                                        // 0x0010   (0x0004)  
	EConZGender                                        Gender;                                                     // 0x0014   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0015   (0x0003)  MISSED
	FString                                            Name;                                                       // 0x0018   (0x0010)  
	int32_t                                            AppearanceIndex;                                            // 0x0028   (0x0004)  
	int32_t                                            TattooIndex;                                                // 0x002C   (0x0004)  
	int32_t                                            BodyHairIndex;                                              // 0x0030   (0x0004)  
	int32_t                                            HairStyleIndex;                                             // 0x0034   (0x0004)  
	int32_t                                            MoustacheStyleIndex;                                        // 0x0038   (0x0004)  
	int32_t                                            BeardStyleIndex;                                            // 0x003C   (0x0004)  
	float                                              BreastSize;                                                 // 0x0040   (0x0004)  
	float                                              PenisSize;                                                  // 0x0044   (0x0004)  
	bool                                               GrowOverTime;                                               // 0x0048   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0049   (0x0003)  MISSED
	int32_t                                            TeamIndex;                                                  // 0x004C   (0x0004)  
	FString                                            BirthDate;                                                  // 0x0050   (0x0010)  
	FString                                            ArrestDate;                                                 // 0x0060   (0x0010)  
	TArray<FSkillTemplate>                             Skills;                                                     // 0x0070   (0x0010)  
	UClass*                                            Item0;                                                      // 0x0080   (0x0008)  
	UClass*                                            Item1;                                                      // 0x0088   (0x0008)  
	UClass*                                            Item2;                                                      // 0x0090   (0x0008)  
	int32_t                                            FaceTypeIndex;                                              // 0x0098   (0x0004)  
	int32_t                                            SkinToneIndex;                                              // 0x009C   (0x0004)  
	int32_t                                            HairColorId;                                                // 0x00A0   (0x0004)  
	int32_t                                            FacialHairColorId;                                          // 0x00A4   (0x0004)  
	int32_t                                            EyeColorIndex;                                              // 0x00A8   (0x0004)  
	int32_t                                            IrisTypeIndex;                                              // 0x00AC   (0x0004)  
	FLinearColor                                       EyeshadowColor;                                             // 0x00B0   (0x0010)  
	FLinearColor                                       EyelinerColor;                                              // 0x00C0   (0x0010)  
	FLinearColor                                       LipstickColor;                                              // 0x00D0   (0x0010)  
	char                                               EyeMakeupMetalness;                                         // 0x00E0   (0x0001)  
	char                                               EyeMakeupIntensity;                                         // 0x00E1   (0x0001)  
	char                                               LipstickRoughness;                                          // 0x00E2   (0x0001)  
	char                                               LipstickIntensity;                                          // 0x00E3   (0x0001)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x00E4   (0x0004)  MISSED
};

/// Struct /Script/ConZ.SkillTemplate
/// Size: 0x0038 (0x000000 - 0x000038)
struct FSkillTemplate
{ 
	ESkillAttribute                                    Attribute;                                                  // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	FText                                              Name;                                                       // 0x0008   (0x0018)  
	FString                                            ClassName;                                                  // 0x0020   (0x0010)  
	ESkillLevel                                        Level;                                                      // 0x0030   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	float                                              Experience;                                                 // 0x0034   (0x0004)  
};

/// Struct /Script/ConZ.TeleportRequest
/// Size: 0x0028 (0x000000 - 0x000028)
struct FTeleportRequest
{ 
	TWeakObjectPtr<AActor*>                            Subject;                                                    // 0x0000   (0x0008)  
	FVector                                            TargetLocation;                                             // 0x0008   (0x000C)  
	FRotator                                           TargetRotation;                                             // 0x0014   (0x000C)  
	TWeakObjectPtr<UTeleportUserData*>                 UserData;                                                   // 0x0020   (0x0008)  
};

/// Struct /Script/ConZ.CharacterActionReplicationHelper
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCharacterActionReplicationHelper
{ 
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/ConZ.EnvironmentDescription
/// Size: 0x0004 (0x000000 - 0x000004)
struct FEnvironmentDescription
{ 
	EEnvironmentClass                                  EnvironmentClass;                                           // 0x0000   (0x0001)  
	bool                                               IsUnderground;                                              // 0x0001   (0x0001)  
	bool                                               IsAbandonedBunker;                                          // 0x0002   (0x0001)  
	bool                                               ShouldBlockWeatherEffects;                                  // 0x0003   (0x0001)  
};

/// Struct /Script/ConZ.CharacterActionAck
/// Size: 0x000C (0x000000 - 0x00000C)
struct FCharacterActionAck
{ 
	int32_t                                            ActionId;                                                   // 0x0000   (0x0004)  
	int32_t                                            SubActionIndex;                                             // 0x0004   (0x0004)  
	ECharacterActionAckType                            Type;                                                       // 0x0008   (0x0001)  
	ECharacterActionEndState                           EndState;                                                   // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x000A   (0x0002)  MISSED
};

/// Struct /Script/ConZ.MeleeAttackCapsuleHitInfo
/// Size: 0x0150 (0x000000 - 0x000150)
struct FMeleeAttackCapsuleHitInfo
{ 
	FMeleeAttackCapsule                                MeleeAttackCapsule;                                         // 0x0000   (0x0080)  
	FHitResult                                         HitResult;                                                  // 0x0080   (0x0088)  
	EHitSeverity                                       HitSeverity;                                                // 0x0108   (0x0001)  
	EAttackType                                        AttackType;                                                 // 0x0109   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x010A   (0x0002)  MISSED
	FVector_NetQuantize100                             AttackerLocation;                                           // 0x010C   (0x000C)  
	FVector_NetQuantize100                             VictimLocation;                                             // 0x0118   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0124   (0x0004)  MISSED
	FGameplayTagContainer                              Tags;                                                       // 0x0128   (0x0020)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0148   (0x0008)  MISSED
};

/// Struct /Script/ConZ.MeleeAttackCapsule
/// Size: 0x0080 (0x000000 - 0x000080)
struct FMeleeAttackCapsule
{ 
	TWeakObjectPtr<AActor*>                            AttachParent;                                               // 0x0000   (0x0008)  
	FGameplayTag                                       Attachment;                                                 // 0x0008   (0x0008)  
	FTransform                                         RelativeTransform;                                          // 0x0010   (0x0030)  
	float                                              UnscaledRadius;                                             // 0x0040   (0x0004)  
	float                                              UnscaledHalfHeight;                                         // 0x0044   (0x0004)  
	FMeleeWeaponDesc                                   WeaponDesc;                                                 // 0x0048   (0x0038)  
};

/// Struct /Script/ConZ.MeleeWeaponDesc
/// Size: 0x0038 (0x000000 - 0x000038)
struct FMeleeWeaponDesc
{ 
	float                                              Damage;                                                     // 0x0000   (0x0004)  
	float                                              DamageInGameEvent;                                          // 0x0004   (0x0004)  
	FTargetTypeDamageMultiplier                        TargetTypeMultiplier;                                       // 0x0008   (0x0010)  
	float                                              Energy;                                                     // 0x0018   (0x0004)  
	float                                              SharpnessSlash;                                             // 0x001C   (0x0004)  
	float                                              SharpnessPierce;                                            // 0x0020   (0x0004)  
	int32_t                                            HitSeverityChange;                                          // 0x0024   (0x0004)  
	ECharacterImpactSourceSoundCategory                ImpactSoundCategory;                                        // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0029   (0x0007)  MISSED
	UProjectileImpactEffects*                          ImpactEffects;                                              // 0x0030   (0x0008)  
};

/// Struct /Script/ConZ.TargetTypeDamageMultiplier
/// Size: 0x0010 (0x000000 - 0x000010)
struct FTargetTypeDamageMultiplier
{ 
	TArray<FDamageMultiplier>                          _multipliers;                                               // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.DamageMultiplier
/// Size: 0x0004 (0x000000 - 0x000004)
struct FDamageMultiplier
{ 
	float                                              Multiplier;                                                 // 0x0000   (0x0004)  
};

/// Struct /Script/ConZ.HitEffects
/// Size: 0x0038 (0x000000 - 0x000038)
struct FHitEffects
{ 
	float                                              SpeedThreshold;                                             // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	UParticleSystem*                                   ParticleSystem;                                             // 0x0008   (0x0008)  
	FVector                                            ParticlesScale;                                             // 0x0010   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x001C   (0x0004)  MISSED
	UAkAudioEvent*                                     AudioEvent;                                                 // 0x0020   (0x0008)  
	UClass*                                            CameraShake;                                                // 0x0028   (0x0008)  
	float                                              CameraShakeScale;                                           // 0x0030   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Struct /Script/ConZ.BaseInteractionEvent
/// Size: 0x0008 (0x000000 - 0x000008)
struct FBaseInteractionEvent
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/ConZ.ConZSquadEmblem
/// Size: 0x0008 (0x000000 - 0x000008)
struct FConZSquadEmblem
{ 
	FConZSquadEmblemElement                            Background;                                                 // 0x0000   (0x0004)  
	FConZSquadEmblemElement                            Symbol;                                                     // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.ConZSquadEmblemElement
/// Size: 0x0004 (0x000000 - 0x000004)
struct FConZSquadEmblemElement
{ 
	char                                               ShapeIndex;                                                 // 0x0000   (0x0001)  
	char                                               PrimaryColorIndex;                                          // 0x0001   (0x0001)  
	char                                               SecondaryColorIndex;                                        // 0x0002   (0x0001)  
	char                                               TertiaryColorIndex;                                         // 0x0003   (0x0001)  
};

/// Struct /Script/ConZ.InteractionData
/// Size: 0x0068 (0x000000 - 0x000068)
struct FInteractionData
{ 
	bool                                               ModifierPressed;                                            // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	int64_t                                            IntegerData;                                                // 0x0008   (0x0008)  
	UObject*                                           PointerData;                                                // 0x0010   (0x0008)  
	bool                                               BoolData;                                                   // 0x0018   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0019   (0x0007)  MISSED
	FText                                              TextData;                                                   // 0x0020   (0x0018)  
	FVector                                            InteractionLocation;                                        // 0x0038   (0x000C)  
	FVector                                            InteractionNormal;                                          // 0x0044   (0x000C)  
	FVector                                            VectorData;                                                 // 0x0050   (0x000C)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x005C   (0x0004)  MISSED
	int64_t                                            BaseElementId;                                              // 0x0060   (0x0008)  
};

/// Struct /Script/ConZ.AmmunitionData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FAmmunitionData
{ 
	UClass*                                            AmmunitionItemClass;                                        // 0x0000   (0x0008)  
	float                                              health;                                                     // 0x0008   (0x0004)  
	float                                              MaxHealth;                                                  // 0x000C   (0x0004)  
	float                                              DefaultMaxHealth;                                           // 0x0010   (0x0004)  
	EAmmunitionCartridgeState                          State;                                                      // 0x0014   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0015   (0x0003)  MISSED
};

/// Struct /Script/ConZ.PrisonerNearbyFoliageInfo
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPrisonerNearbyFoliageInfo
{ 
	TArray<FPrisonerNearbyFoliageInstanceInfo>         InstancesInfo;                                              // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.PrisonerNearbyFoliageInstanceInfo
/// Size: 0x0060 (0x000000 - 0x000060)
struct FPrisonerNearbyFoliageInstanceInfo
{ 
	EPrisonerNearbyFoliageType                         FoliageType;                                                // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	UInstancedStaticMeshComponent*                     InstancedMeshComponent;                                     // 0x0008   (0x0008)  
	FPackedLocation                                    PackedLocation;                                             // 0x0010   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0018   (0x0008)  MISSED
	FTransform                                         TransformZeroOrigin;                                        // 0x0020   (0x0030)  
	UFoliageAssetData*                                 FoliageAssetData;                                           // 0x0050   (0x0008)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0058   (0x0008)  MISSED
};

/// Struct /Script/ConZ.PackedLocation
/// Size: 0x0008 (0x000000 - 0x000008)
struct FPackedLocation
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/ConZ.PrisonerGroundMovementParameters
/// Size: 0x000C (0x000000 - 0x00000C)
struct FPrisonerGroundMovementParameters
{ 
	float                                              MaxSpeed;                                                   // 0x0000   (0x0004)  
	float                                              Acceleration;                                               // 0x0004   (0x0004)  
	float                                              Deceleration;                                               // 0x0008   (0x0004)  
};

/// Struct /Script/ConZ.PrisonerWaterMovementParameters
/// Size: 0x000C (0x000000 - 0x00000C)
struct FPrisonerWaterMovementParameters
{ 
	float                                              MaxSpeed;                                                   // 0x0000   (0x0004)  
	float                                              Acceleration;                                               // 0x0004   (0x0004)  
	float                                              Deceleration;                                               // 0x0008   (0x0004)  
};

/// Struct /Script/ConZ.PrisonerNearbyFoliageInstanceInfoReplicated
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPrisonerNearbyFoliageInstanceInfoReplicated
{ 
	TWeakObjectPtr<UInstancedStaticMeshComponent*>     InstancedMeshComponent;                                     // 0x0000   (0x0008)  
	FPackedLocation                                    PackedLocation;                                             // 0x0008   (0x0008)  
};

/// Struct /Script/ConZ.PrisonerTeleportRequest
/// Size: 0x001C (0x000000 - 0x00001C)
struct FPrisonerTeleportRequest
{ 
	unsigned char                                      UnknownData00_1[0x1C];                                      // 0x0000   (0x001C)  MISSED
};

/// Struct /Script/ConZ.SectorId
/// Size: 0x0008 (0x000000 - 0x000008)
struct FSectorId
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/ConZ.InventoryPositionDataRepHelper
/// Size: 0x0020 (0x000000 - 0x000020)
struct FInventoryPositionDataRepHelper
{ 
	UClass*                                            _dataClass;                                                 // 0x0000   (0x0008)  
	UInventoryPositionData*                            _positionData;                                              // 0x0008   (0x0008)  
	UObject*                                           _owner;                                                     // 0x0010   (0x0008)  
	int32_t                                            _repKey;                                                    // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.ConZBaseElementIdentifier
/// Size: 0x0020 (0x000000 - 0x000020)
struct FConZBaseElementIdentifier
{ 
	int64_t                                            BaseId;                                                     // 0x0000   (0x0008)  
	int64_t                                            ElementID;                                                  // 0x0008   (0x0008)  
	FVector                                            Location;                                                   // 0x0010   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.AmmunitionArrowSpawningParamsHelper
/// Size: 0x0018 (0x000000 - 0x000018)
struct FAmmunitionArrowSpawningParamsHelper
{ 
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/ConZ.WeaponStateSyncData
/// Size: 0x0048 (0x000000 - 0x000048)
struct FWeaponStateSyncData
{ 
	int32_t                                            ZeroRange;                                                  // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	TArray<FAmmunitionData>                            LoadedAmmoData;                                             // 0x0008   (0x0010)  
	TArray<FAmmunitionData>                            InternalMagazineAmmoData;                                   // 0x0018   (0x0010)  
	UClass*                                            LoadedAmmunitionItemClass;                                  // 0x0028   (0x0008)  
	UClass*                                            LoadedProjectileClass;                                      // 0x0030   (0x0008)  
	EWeaponFiringMode                                  FiringMode;                                                 // 0x0038   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0039   (0x0003)  MISSED
	int32_t                                            malfunction;                                                // 0x003C   (0x0004)  
	bool                                               IsChamberOpened;                                            // 0x0040   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0041   (0x0007)  MISSED
};

/// Struct /Script/ConZ.PrisonerMountReplication
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPrisonerMountReplication
{ 
	UObject*                                           MountedSlot;                                                // 0x0000   (0x0008)  
	EPrisonerMountSlotFlags                            _mountFlags;                                                // 0x0008   (0x0001)  
	char                                               _version;                                                   // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x000A   (0x0006)  MISSED
};

/// Struct /Script/ConZ.DoorRepData
/// Size: 0x0038 (0x000000 - 0x000038)
struct FDoorRepData
{ 
	EDoorStateFlags                                    StateFlags;                                                 // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	FDbIntegerId                                       OwningUserProfileId;                                        // 0x0008   (0x0008)  
	TArray<UClass*>                                    Locks;                                                      // 0x0010   (0x0010)  
	TArray<int32_t>                                    RemainingNeutralizationAttemptsPerLock;                     // 0x0020   (0x0010)  
	char                                               DoorAccessLevel;                                            // 0x0030   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Struct /Script/ConZ.BaseInteractionParams
/// Size: 0x0008 (0x000000 - 0x000008)
struct FBaseInteractionParams
{ 
	FDbIntegerId                                       ElementID;                                                  // 0x0000   (0x0008)  
};

/// Struct /Script/ConZ.UnlockLocation
/// Size: 0x0030 (0x000000 - 0x000030)
struct FUnlockLocation
{ 
	FTransform                                         Transform;                                                  // 0x0000   (0x0030)  
};

/// Struct /Script/ConZ.ObjectConditionContainer
/// Size: 0x0010 (0x000000 - 0x000010)
struct FObjectConditionContainer
{ 
	TArray<UClass*>                                    _objectConditions;                                          // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.TriggeredEventData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FTriggeredEventData
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/ConZ.WeaponReloadData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FWeaponReloadData
{ 
	bool                                               IsQuick;                                                    // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	AItem*                                             Item;                                                       // 0x0008   (0x0008)  
	AItem*                                             Item2;                                                      // 0x0010   (0x0008)  
	int32_t                                            Count;                                                      // 0x0018   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x001C   (0x0004)  MISSED
	UClass*                                            ReloadSequenceClass;                                        // 0x0020   (0x0008)  
	float                                              AnimationPlayRate;                                          // 0x0028   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.BodyWeaponAnimation
/// Size: 0x0010 (0x000000 - 0x000010)
struct FBodyWeaponAnimation
{ 
	UAnimMontage*                                      Body;                                                       // 0x0000   (0x0008)  
	UAnimMontage*                                      Weapon;                                                     // 0x0008   (0x0008)  
};

/// Struct /Script/ConZ.WeaponMalfunctionProbability
/// Size: 0x0008 (0x000000 - 0x000008)
struct FWeaponMalfunctionProbability
{ 
	EWeaponMalfunction                                 malfunction;                                                // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              Probability;                                                // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.WeaponMalfunctionEventDescription
/// Size: 0x0008 (0x000000 - 0x000008)
struct FWeaponMalfunctionEventDescription
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/ConZ.FireShotDescription
/// Size: 0x0008 (0x000000 - 0x000008)
struct FFireShotDescription
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/ConZ.FireShotProjectileData
/// Size: 0x002C (0x000000 - 0x00002C)
struct FFireShotProjectileData
{ 
	FVector                                            StartLocation;                                              // 0x0000   (0x000C)  
	FVector_NetQuantizeNormal                          shootDirection;                                             // 0x000C   (0x000C)  
	int32_t                                            ZeroRange;                                                  // 0x0018   (0x0004)  
	float                                              Windage;                                                    // 0x001C   (0x0004)  
	int32_t                                            RandomFactor;                                               // 0x0020   (0x0004)  
	float                                              ConeHalfAngle;                                              // 0x0024   (0x0004)  
	FFireShotProjectileDescription                     Description;                                                // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0029   (0x0003)  MISSED
};

/// Struct /Script/ConZ.FireShotProjectileDescription
/// Size: 0x0001 (0x000000 - 0x000001)
struct FFireShotProjectileDescription
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/ConZ.WeaponMalfunctionData
/// Size: 0x00A8 (0x000000 - 0x0000A8)
struct FWeaponMalfunctionData
{ 
	bool                                               UseCustomProbabilityCurve;                                  // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	FRuntimeFloatCurve                                 ProbabilityCurve;                                           // 0x0008   (0x0088)  
	UClass*                                            ClearMalfunctionSequence;                                   // 0x0090   (0x0008)  
	TArray<UClass*>                                    ClearMalfunctionSequences;                                  // 0x0098   (0x0010)  
};

/// Struct /Script/ConZ.WeaponMalfunctionChances
/// Size: 0x0038 (0x000000 - 0x000038)
struct FWeaponMalfunctionChances
{ 
	FFloatInterval                                     Value;                                                      // 0x0000   (0x0038)  
};

/// Struct /Script/ConZ.FireAnimationData
/// Size: 0x00C0 (0x000000 - 0x0000C0)
struct FFireAnimationData
{ 
	FBodyWeaponAnimation                               BodyWeaponAnimation;                                        // 0x0000   (0x0010)  
	float                                              TimeBetweenShots;                                           // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	FBodyWeaponAnimation                               BodyWeaponAnimationChamber;                                 // 0x0018   (0x0010)  
	float                                              TimeForChamber;                                             // 0x0028   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x002C   (0x0004)  MISSED
	UClass*                                            Conditions;                                                 // 0x0030   (0x0008)  
	FRuntimeFloatCurve                                 ProbabilityWeightCurve;                                     // 0x0038   (0x0088)  
};

/// Struct /Script/ConZ.WeaponViewKickData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FWeaponViewKickData
{ 
	float                                              PitchMin;                                                   // 0x0000   (0x0004)  
	float                                              PitchMax;                                                   // 0x0004   (0x0004)  
	float                                              YawMin;                                                     // 0x0008   (0x0004)  
	float                                              YawMax;                                                     // 0x000C   (0x0004)  
	float                                              PitchDecrementSpeed;                                        // 0x0010   (0x0004)  
	float                                              YawDecrementSpeed;                                          // 0x0014   (0x0004)  
};

/// Struct /Script/ConZ.WeaponSpreadData
/// Size: 0x0040 (0x000000 - 0x000040)
struct FWeaponSpreadData
{ 
	FWeaponSpreadItem                                  ByStance;                                                   // 0x0000   (0x0030)  
	float                                              IncrementPerShot;                                           // 0x0030   (0x0004)  
	float                                              IncrementFromShotsMax;                                      // 0x0034   (0x0004)  
	float                                              IncrementSpeed;                                             // 0x0038   (0x0004)  
	float                                              DecrementSpeed;                                             // 0x003C   (0x0004)  
};

/// Struct /Script/ConZ.WeaponSpreadItem
/// Size: 0x000C (0x000000 - 0x00000C)
struct FWeaponSpreadItem
{ 
	float                                              Idle;                                                       // 0x0000   (0x0004)  
	float                                              Moving;                                                     // 0x0004   (0x0004)  
	float                                              SpeedTarget;                                                // 0x0008   (0x0004)  
};

/// Struct /Script/ConZ.WeaponAttachmentAnimations
/// Size: 0x0020 (0x000000 - 0x000020)
struct FWeaponAttachmentAnimations
{ 
	FBodyWeaponAnimation                               Add;                                                        // 0x0000   (0x0010)  
	FBodyWeaponAnimation                               Remove;                                                     // 0x0010   (0x0010)  
};

/// Struct /Script/ConZ.MapHUDObject
/// Size: 0x0018 (0x000000 - 0x000018)
struct FMapHUDObject
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	int32_t                                            _priority;                                                  // 0x0008   (0x0004)  
	bool                                               _showText;                                                  // 0x000C   (0x0001)  
	bool                                               _showMarkers;                                               // 0x000D   (0x0001)  
	unsigned char                                      UnknownData01_6[0xA];                                       // 0x000E   (0x000A)  MISSED
};

/// Struct /Script/ConZ.MapHUDFlagsObject
/// Size: 0x00A8 (0x000018 - 0x0000C0)
struct FMapHUDFlagsObject : FMapHUDObject
{ 
	UTexture*                                          _flagPositionOuterRingTexture;                              // 0x0018   (0x0008)  
	FLinearColor                                       _flagOuterRingColor;                                        // 0x0020   (0x0010)  
	FLinearColor                                       _flagHighlightOuterRingColor;                               // 0x0030   (0x0010)  
	UTexture*                                          _flagPositionInnerCircleTexture;                            // 0x0040   (0x0008)  
	FLinearColor                                       _flagInnerCircleColor;                                      // 0x0048   (0x0010)  
	FLinearColor                                       _flagHighlightInnerCircleColor;                             // 0x0058   (0x0010)  
	UFont*                                             _flagFont;                                                  // 0x0068   (0x0008)  
	FLinearColor                                       _flagNameHighlightColor;                                    // 0x0070   (0x0010)  
	FLinearColor                                       _flagNameHighlightOutlineColor;                             // 0x0080   (0x0010)  
	FLinearColor                                       _flagNameColor;                                             // 0x0090   (0x0010)  
	FLinearColor                                       _flagNameOutlineColor;                                      // 0x00A0   (0x0010)  
	FVector2D                                          _flagPositionTextureSize;                                   // 0x00B0   (0x0008)  
	int32_t                                            _flagTextStackOffset;                                       // 0x00B8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00BC   (0x0004)  MISSED
};

/// Struct /Script/ConZ.MapHUDVehiclesObject
/// Size: 0x00A8 (0x000018 - 0x0000C0)
struct FMapHUDVehiclesObject : FMapHUDObject
{ 
	UTexture*                                          _vehiclePositionOuterRingTexture;                           // 0x0018   (0x0008)  
	FLinearColor                                       _vehicleOuterRingColor;                                     // 0x0020   (0x0010)  
	FLinearColor                                       _vehicleHighlightOuterRingColor;                            // 0x0030   (0x0010)  
	UTexture*                                          _vehiclePositionInnerCircleTexture;                         // 0x0040   (0x0008)  
	FLinearColor                                       _vehicleInnerCircleColor;                                   // 0x0048   (0x0010)  
	FLinearColor                                       _vehicleHighlightInnerCircleColor;                          // 0x0058   (0x0010)  
	UFont*                                             _vehicleFont;                                               // 0x0068   (0x0008)  
	FLinearColor                                       _vehicleNameHighlightColor;                                 // 0x0070   (0x0010)  
	FLinearColor                                       _vehicleNameHighlightOutlineColor;                          // 0x0080   (0x0010)  
	FLinearColor                                       _vehicleNameColor;                                          // 0x0090   (0x0010)  
	FLinearColor                                       _vehicleNameOutlineColor;                                   // 0x00A0   (0x0010)  
	FVector2D                                          _vehiclePositionTextureSize;                                // 0x00B0   (0x0008)  
	int32_t                                            _vehicleTextStackOffset;                                    // 0x00B8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00BC   (0x0004)  MISSED
};

/// Struct /Script/ConZ.MapHUDDroneObject
/// Size: 0x0020 (0x000018 - 0x000038)
struct FMapHUDDroneObject : FMapHUDObject
{ 
	UTexture*                                          _droneDirectionTexture;                                     // 0x0018   (0x0008)  
	UTexture*                                          _dronePositionTexture;                                      // 0x0020   (0x0008)  
	UTexture*                                          _dronePingAnimationTexture;                                 // 0x0028   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0030   (0x0008)  MISSED
};

/// Struct /Script/ConZ.MapHUDOtherPlayersObject
/// Size: 0x00A8 (0x000018 - 0x0000C0)
struct FMapHUDOtherPlayersObject : FMapHUDObject
{ 
	UTexture*                                          _otherPlayerPositionOuterRingTexture;                       // 0x0018   (0x0008)  
	FLinearColor                                       _otherPlayerOuterRingColor;                                 // 0x0020   (0x0010)  
	FLinearColor                                       _otherPlayerHighlightOuterRingColor;                        // 0x0030   (0x0010)  
	UTexture*                                          _otherPlayerPositionInnerCicleTexture;                      // 0x0040   (0x0008)  
	FLinearColor                                       _otherPlayerInnerCircleColor;                               // 0x0048   (0x0010)  
	FLinearColor                                       _otherPlayerHighlightInnerCircleColor;                      // 0x0058   (0x0010)  
	UFont*                                             _otherPlayerFont;                                           // 0x0068   (0x0008)  
	FLinearColor                                       _otherPlayerNameHighlightColor;                             // 0x0070   (0x0010)  
	FLinearColor                                       _otherPlayerNameHighlightOutlineColor;                      // 0x0080   (0x0010)  
	FLinearColor                                       _otherPlayerNameColor;                                      // 0x0090   (0x0010)  
	FLinearColor                                       _otherPlayerNameOutlineColor;                               // 0x00A0   (0x0010)  
	FVector2D                                          _prisonerPositionTextureSize;                               // 0x00B0   (0x0008)  
	int32_t                                            _otherPlayerTextStackOffset;                                // 0x00B8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00BC   (0x0004)  MISSED
};

/// Struct /Script/ConZ.MapHUDWorldEventsObject
/// Size: 0x0000 (0x000018 - 0x000018)
struct FMapHUDWorldEventsObject : FMapHUDObject
{ 
};

/// Struct /Script/ConZ.MapHUDHomeLocationObject
/// Size: 0x0030 (0x000018 - 0x000048)
struct FMapHUDHomeLocationObject : FMapHUDObject
{ 
	UFont*                                             _font;                                                      // 0x0018   (0x0008)  
	unsigned char                                      UnknownData00_6[0x28];                                      // 0x0020   (0x0028)  MISSED
};

/// Struct /Script/ConZ.MapHUDPrisonerObject
/// Size: 0x0028 (0x000018 - 0x000040)
struct FMapHUDPrisonerObject : FMapHUDObject
{ 
	FVector2D                                          _prisonerPositionTextureSize;                               // 0x0018   (0x0008)  
	UTexture*                                          _myPrisonerPositionTexture;                                 // 0x0020   (0x0008)  
	UTexture*                                          _prisonerPingAnimationTexture;                              // 0x0028   (0x0008)  
	float                                              _prisonerPingSizeMultiplier;                                // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x0034   (0x000C)  MISSED
};

/// Struct /Script/ConZ.QuickAccessClientSyncData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FQuickAccessClientSyncData
{ 
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/ConZ.QuickAccessSlotData
/// Size: 0x0014 (0x000000 - 0x000014)
struct FQuickAccessSlotData
{ 
	unsigned char                                      UnknownData00_1[0x14];                                      // 0x0000   (0x0014)  MISSED
};

/// Struct /Script/ConZ.ClothesPartSet
/// Size: 0x0050 (0x000000 - 0x000050)
struct FClothesPartSet
{ 
	TSet<EClothesPart>                                 ClothesParts;                                               // 0x0000   (0x0050)  
};

/// Struct /Script/ConZ.AbandonedBunkerConnectionBinding
/// Size: 0x000C (0x000000 - 0x00000C)
struct FAbandonedBunkerConnectionBinding
{ 
	FGameplayTag                                       ActivationTag;                                              // 0x0000   (0x0008)  
	float                                              Load;                                                       // 0x0008   (0x0004)  
};

/// Struct /Script/ConZ.AbandonedBunkerFloorSetup
/// Size: 0x00F0 (0x000000 - 0x0000F0)
struct FAbandonedBunkerFloorSetup
{ 
	UClass*                                            DoorUnlockData;                                             // 0x0000   (0x0008)  
	UClass*                                            KeyCardItem;                                                // 0x0008   (0x0008)  
	FItemSpawnerPresetWithOverrides                    ZombieKeycardSpawnerPreset;                                 // 0x0010   (0x00B8)  
	FGameplayTag                                       FloorId;                                                    // 0x00C8   (0x0008)  
	UStaticMesh*                                       SchematicMesh;                                              // 0x00D0   (0x0008)  
	TArray<AAbandonedBunkerSwitchboard*>               SlaveSwitchboards;                                          // 0x00D8   (0x0010)  
	AAbandonedBunkerSwitchboard*                       MasterSwitchboard;                                          // 0x00E8   (0x0008)  
};

/// Struct /Script/ConZ.ItemSpawnerPresetWithOverrides
/// Size: 0x00B8 (0x000000 - 0x0000B8)
struct FItemSpawnerPresetWithOverrides
{ 
	UClass*                                            Preset;                                                     // 0x0000   (0x0008)  
	bool                                               OverrideNodes;                                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	TArray<FItemSpawnerPreset_Node>                    Nodes;                                                      // 0x0010   (0x0010)  
	bool                                               OverrideItems;                                              // 0x0020   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0021   (0x0007)  MISSED
	TArray<FItemSpawnerPreset_Item>                    Items;                                                      // 0x0028   (0x0010)  
	bool                                               OverrideSubpresets;                                         // 0x0038   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0039   (0x0007)  MISSED
	TArray<FItemSpawnerPreset_Subpreset>               Subpresets;                                                 // 0x0040   (0x0010)  
	bool                                               OverrideFixedItems;                                         // 0x0050   (0x0001)  
	unsigned char                                      UnknownData03_5[0x7];                                       // 0x0051   (0x0007)  MISSED
	TArray<TWeakObjectPtr>                             FixedItems;                                                 // 0x0058   (0x0010)  
	bool                                               OverrideAlwaysSpawn;                                        // 0x0068   (0x0001)  
	bool                                               AlwaysSpawn;                                                // 0x0069   (0x0001)  
	bool                                               OverrideProbability;                                        // 0x006A   (0x0001)  
	unsigned char                                      UnknownData04_5[0x1];                                       // 0x006B   (0x0001)  MISSED
	float                                              Probability;                                                // 0x006C   (0x0004)  
	bool                                               OverrideQuantity;                                           // 0x0070   (0x0001)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x0071   (0x0003)  MISSED
	FInt32Interval                                     Quantity;                                                   // 0x0074   (0x0008)  
	bool                                               OverrideAllowDuplicates;                                    // 0x007C   (0x0001)  
	bool                                               AllowDuplicates;                                            // 0x007D   (0x0001)  
	bool                                               OverrideShouldFilterItemsByZone;                            // 0x007E   (0x0001)  
	bool                                               ShouldFilterItemsByZone;                                    // 0x007F   (0x0001)  
	bool                                               OverrideInitialDamage;                                      // 0x0080   (0x0001)  
	unsigned char                                      UnknownData06_5[0x3];                                       // 0x0081   (0x0003)  MISSED
	float                                              InitialDamage;                                              // 0x0084   (0x0004)  
	bool                                               OverrideRandomDamage;                                       // 0x0088   (0x0001)  
	unsigned char                                      UnknownData07_5[0x3];                                       // 0x0089   (0x0003)  MISSED
	float                                              RandomDamage;                                               // 0x008C   (0x0004)  
	bool                                               OverrideInitialUsage;                                       // 0x0090   (0x0001)  
	unsigned char                                      UnknownData08_5[0x3];                                       // 0x0091   (0x0003)  MISSED
	float                                              InitialUsage;                                               // 0x0094   (0x0004)  
	bool                                               OverrideRandomUsage;                                        // 0x0098   (0x0001)  
	unsigned char                                      UnknownData09_5[0x3];                                       // 0x0099   (0x0003)  MISSED
	float                                              RandomUsage;                                                // 0x009C   (0x0004)  
	bool                                               OverridePostSpawnActions;                                   // 0x00A0   (0x0001)  
	unsigned char                                      UnknownData10_5[0x7];                                       // 0x00A1   (0x0007)  MISSED
	TArray<TWeakObjectPtr>                             PostSpawnActions;                                           // 0x00A8   (0x0010)  
};

/// Struct /Script/ConZ.ItemSpawnerPreset_Subpreset
/// Size: 0x0010 (0x000000 - 0x000010)
struct FItemSpawnerPreset_Subpreset
{ 
	UClass*                                            Preset;                                                     // 0x0000   (0x0008)  
	EItemRarity                                        Rarity;                                                     // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
};

/// Struct /Script/ConZ.ItemSpawnerPreset_Item
/// Size: 0x0030 (0x000000 - 0x000030)
struct FItemSpawnerPreset_Item
{ 
	TWeakObjectPtr<UClass*>                            Item;                                                       // 0x0000   (0x0028)  
	EItemRarity                                        Rarity;                                                     // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0029   (0x0007)  MISSED
};

/// Struct /Script/ConZ.ItemSpawnerPreset_Node
/// Size: 0x0028 (0x000000 - 0x000028)
struct FItemSpawnerPreset_Node
{ 
	FGameplayTagContainer                              Nodes;                                                      // 0x0000   (0x0020)  
	EItemRarity                                        Rarity;                                                     // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0021   (0x0007)  MISSED
};

/// Struct /Script/ConZ.AbandonedBunkerZombieSpawnPoint
/// Size: 0x0020 (0x000000 - 0x000020)
struct FAbandonedBunkerZombieSpawnPoint
{ 
	TArray<TWeakObjectPtr>                             ZombieClasses;                                              // 0x0000   (0x0010)  
	FVector                                            Location;                                                   // 0x0010   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.AchievementStats
/// Size: 0x0001 (0x000000 - 0x000001)
struct FAchievementStats
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/ConZ.Achievements
/// Size: 0x0001 (0x000000 - 0x000001)
struct FAchievements
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/ConZ.AdminCommandArgumentDescription
/// Size: 0x0040 (0x000000 - 0x000040)
struct FAdminCommandArgumentDescription
{ 
	FText                                              Name;                                                       // 0x0000   (0x0018)  
	FText                                              Description;                                                // 0x0018   (0x0018)  
	bool                                               ShowCompletionValuesInHelpText;                             // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	UAdminCommandArgumentDataTypeBase*                 Data;                                                       // 0x0038   (0x0008)  
};

/// Struct /Script/ConZ.SearchItemClassesArray
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSearchItemClassesArray
{ 
	TArray<TWeakObjectPtr>                             ItemClasses;                                                // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.SearchItemSpawnerPresetArray
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSearchItemSpawnerPresetArray
{ 
	TArray<UClass*>                                    ItemSpawnerPresets;                                         // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.PrisonerPlayerInfo
/// Size: 0x0070 (0x000000 - 0x000070)
struct FPrisonerPlayerInfo
{ 
	unsigned char                                      UnknownData00_1[0x70];                                      // 0x0000   (0x0070)  MISSED
};

/// Struct /Script/ConZ.PrisonerSkillInfo
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPrisonerSkillInfo
{ 
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/ConZ.AerodynamicSurfaceControlData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FAerodynamicSurfaceControlData
{ 
	TArray<char>                                       Indices;                                                    // 0x0000   (0x0010)  
	float                                              MaxHealth;                                                  // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/ConZ.AITeamAttitudeData
/// Size: 0x0008 (0x000000 - 0x000008)
struct FAITeamAttitudeData
{ 
	TEnumAsByte<ETeamAttitude>                         AttitudePerTeam;                                            // 0x0000   (0x0008)  
};

/// Struct /Script/ConZ.DetectionDelayTimerData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FDetectionDelayTimerData
{ 
	float                                              MinDetectionDelayBasedOnDistance;                           // 0x0000   (0x0004)  
	float                                              MaxDetectionDelayBasedOnDistance;                           // 0x0004   (0x0004)  
	float                                              MinDetectionDelayBasedOnVisibility;                         // 0x0008   (0x0004)  
	float                                              MaxDetectionDelayBasedOnVisibility;                         // 0x000C   (0x0004)  
};

/// Struct /Script/ConZ.MeleeHitDetectionMarker
/// Size: 0x0080 (0x000000 - 0x000080)
struct FMeleeHitDetectionMarker
{ 
	float                                              Time;                                                       // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0xC];                                       // 0x0004   (0x000C)  MISSED
	FTransform                                         Transform;                                                  // 0x0010   (0x0030)  
	FTransform                                         RootMotion;                                                 // 0x0040   (0x0030)  
	float                                              DamageMultiplier;                                           // 0x0070   (0x0004)  
	float                                              SelectionWeight;                                            // 0x0074   (0x0004)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0078   (0x0008)  MISSED
};

/// Struct /Script/ConZ.AquaticLifeSpawningVolumeDescription
/// Size: 0x0068 (0x000000 - 0x000068)
struct FAquaticLifeSpawningVolumeDescription
{ 
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0000   (0x0020)  MISSED
	UFishSpeciesPreset*                                FishSpeciesPreset;                                          // 0x0020   (0x0008)  
	UFishSpawningPreset*                               FishSpawningPreset;                                         // 0x0028   (0x0008)  
	unsigned char                                      UnknownData01_6[0x38];                                      // 0x0030   (0x0038)  MISSED
};

/// Struct /Script/ConZ.AviationSkillParametersPerSkillLevel
/// Size: 0x0100 (0x000000 - 0x000100)
struct FAviationSkillParametersPerSkillLevel
{ 
	bool                                               ShouldHaveMouseInput;                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              EngineReadyDelay;                                           // 0x0004   (0x0004)  
	float                                              EngineFailedToStartDelay;                                   // 0x0008   (0x0004)  
	float                                              EngineFailedToStartNoFuelDelay;                             // 0x000C   (0x0004)  
	float                                              EngineFailedToStartNoBatteryDelay;                          // 0x0010   (0x0004)  
	float                                              EngineStalledDelay;                                         // 0x0014   (0x0004)  
	float                                              ThrottleLerpMultiplier;                                     // 0x0018   (0x0004)  
	float                                              BrakeLerpMultiplier;                                        // 0x001C   (0x0004)  
	float                                              RollLerpMultiplier;                                         // 0x0020   (0x0004)  
	float                                              YawLerpMultiplier;                                          // 0x0024   (0x0004)  
	float                                              PitchLerpMultiplier;                                        // 0x0028   (0x0004)  
	float                                              ControlResetLerpMultiplier;                                 // 0x002C   (0x0004)  
	float                                              WindInfluenceMultiplier;                                    // 0x0030   (0x0004)  
	FEngineHandlingParameters                          EngineHandlingParameters;                                   // 0x0034   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x003C   (0x0004)  MISSED
	FDrivingSkillEngineStallingParameters              EngineStallingByAccelerationParameters;                     // 0x0040   (0x0040)  
	FDrivingSkillEngineStallingParameters              EngineStallingByUpShiftParameters;                          // 0x0080   (0x0040)  
	FDrivingSkillEngineStallingParameters              EngineStallingWhenStartingViaMotion;                        // 0x00C0   (0x0040)  
};

/// Struct /Script/ConZ.DrivingSkillEngineStallingParameters
/// Size: 0x0040 (0x000000 - 0x000040)
struct FDrivingSkillEngineStallingParameters
{ 
	float                                              Chance;                                                     // 0x0000   (0x0004)  
	float                                              MinDuration;                                                // 0x0004   (0x0004)  
	float                                              MaxDuration;                                                // 0x0008   (0x0004)  
	float                                              StopEngineChance;                                           // 0x000C   (0x0004)  
	UCurveFloat*                                       ThrottleCurve;                                              // 0x0010   (0x0008)  
	float                                              ThrottleCurveFrequencyMultiplier;                           // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x001C   (0x0004)  MISSED
	UCurveFloat*                                       BrakeCurve;                                                 // 0x0020   (0x0008)  
	float                                              BrakeCurveFrequencyMultiplier;                              // 0x0028   (0x0004)  
	float                                              ForceMagnitudeScale;                                        // 0x002C   (0x0004)  
	UCurveFloat*                                       ForceMagnitudeScaleCurve;                                   // 0x0030   (0x0008)  
	float                                              ForceMagnitudeScaleCurveFrequencyMultiplier;                // 0x0038   (0x0004)  
	float                                              ForceDirectionRandomizationAngle;                           // 0x003C   (0x0004)  
};

/// Struct /Script/ConZ.EngineHandlingParameters
/// Size: 0x0008 (0x000000 - 0x000008)
struct FEngineHandlingParameters
{ 
	float                                              IgnitionDurationMultiplier;                                 // 0x0000   (0x0004)  
	float                                              IgnitionFailureChance;                                      // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.AwarenessSkillParametersPerSkillLevel
/// Size: 0x0058 (0x000000 - 0x000058)
struct FAwarenessSkillParametersPerSkillLevel
{ 
	float                                              ItemDetectionTime;                                          // 0x0000   (0x0004)  
	float                                              ItemDetectionRadius;                                        // 0x0004   (0x0004)  
	float                                              ItemDetectionHighlightByDayRadius;                          // 0x0008   (0x0004)  
	float                                              ItemDetectionHighlightByNightRadius;                        // 0x000C   (0x0004)  
	float                                              WatchingDetectionTime;                                      // 0x0010   (0x0004)  
	float                                              WatchingDetectionRadius;                                    // 0x0014   (0x0004)  
	float                                              WatchingDetectionChance;                                    // 0x0018   (0x0004)  
	float                                              CharacterDetectionAngle;                                    // 0x001C   (0x0004)  
	float                                              CharacterDetectionTime;                                     // 0x0020   (0x0004)  
	float                                              CharacterDetectionPeriodicRangeIncrement;                   // 0x0024   (0x0004)  
	float                                              HiddenCharacterDetectionRange;                              // 0x0028   (0x0004)  
	float                                              HiddenCharacterHotSpotDetectionRange;                       // 0x002C   (0x0004)  
	float                                              HiddenCharacterSoundDetectionRange;                         // 0x0030   (0x0004)  
	float                                              TrackDetectionRange;                                        // 0x0034   (0x0004)  
	float                                              TrapDetectionRange;                                         // 0x0038   (0x0004)  
	float                                              FocusModeNotMovingFocusRangeMultiplier;                     // 0x003C   (0x0004)  
	float                                              FocusModeSlowMovingFocusRangeMultiplier;                    // 0x0040   (0x0004)  
	float                                              FocusModeMediumMovingFocusRangeMultiplier;                  // 0x0044   (0x0004)  
	float                                              FocusModeFastMovingFocusRangeMultiplier;                    // 0x0048   (0x0004)  
	float                                              FocusModeActivationTime;                                    // 0x004C   (0x0004)  
	float                                              FlashbangFlashFadeOutDurationMultiplier;                    // 0x0050   (0x0004)  
	float                                              ContainerItemSpawnProbabilityModifier;                      // 0x0054   (0x0004)  
};

/// Struct /Script/ConZ.AwarenessSkillExperienceAwards
/// Size: 0x000C (0x000000 - 0x00000C)
struct FAwarenessSkillExperienceAwards
{ 
	float                                              PointsForDetectedItem;                                      // 0x0000   (0x0004)  
	float                                              PointsForDetectedWatchingPrisoner;                          // 0x0004   (0x0004)  
	float                                              PointsForDetectedCamouflagedPrisoner;                       // 0x0008   (0x0004)  
};

/// Struct /Script/ConZ.BankCardOperationRequestData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FBankCardOperationRequestData
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/ConZ.BankTransactionRequestData
/// Size: 0x0038 (0x000000 - 0x000038)
struct FBankTransactionRequestData
{ 
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0000   (0x0038)  MISSED
};

/// Struct /Script/ConZ.CurrencyConversionRequestData
/// Size: 0x0024 (0x000000 - 0x000024)
struct FCurrencyConversionRequestData
{ 
	unsigned char                                      UnknownData00_1[0x24];                                      // 0x0000   (0x0024)  MISSED
};

/// Struct /Script/ConZ.BankAccountRegistryRequestData
/// Size: 0x001C (0x000000 - 0x00001C)
struct FBankAccountRegistryRequestData
{ 
	unsigned char                                      UnknownData00_1[0x1C];                                      // 0x0000   (0x001C)  MISSED
};

/// Struct /Script/ConZ.BankATMBoughtCardStateVisual
/// Size: 0x0040 (0x000000 - 0x000040)
struct FBankATMBoughtCardStateVisual
{ 
	FSlateColor                                        FontColor;                                                  // 0x0000   (0x0028)  
	FLinearColor                                       BrushColor;                                                 // 0x0028   (0x0010)  
	float                                              OnHoveredUpwardsOffset;                                     // 0x0038   (0x0004)  
	bool                                               OptionsCircleSelectedState;                                 // 0x003C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x003D   (0x0003)  MISSED
};

/// Struct /Script/ConZ.BankATMBuyableCardStateVisual
/// Size: 0x000C (0x000000 - 0x00000C)
struct FBankATMBuyableCardStateVisual
{ 
	bool                                               TransparentBackground;                                      // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              RenderOpacity;                                              // 0x0004   (0x0004)  
	bool                                               PlusCircleVisible;                                          // 0x0008   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0009   (0x0003)  MISSED
};

/// Struct /Script/ConZ.BankATMCarouselCardStateVisual
/// Size: 0x0010 (0x000000 - 0x000010)
struct FBankATMCarouselCardStateVisual
{ 
	FMargin                                            Padding;                                                    // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.BankATMMyCardsButtonStateVisual
/// Size: 0x0120 (0x000000 - 0x000120)
struct FBankATMMyCardsButtonStateVisual
{ 
	FLinearColor                                       FontColor;                                                  // 0x0000   (0x0010)  
	FSlateBrush                                        BackgroundBrush;                                            // 0x0010   (0x0088)  
	FSlateBrush                                        CardIconBrush;                                              // 0x0098   (0x0088)  
};

/// Struct /Script/ConZ.BankATMPointingButtonStateVisual
/// Size: 0x0098 (0x000000 - 0x000098)
struct FBankATMPointingButtonStateVisual
{ 
	FLinearColor                                       FontColor;                                                  // 0x0000   (0x0010)  
	FSlateBrush                                        BackgroundBrush;                                            // 0x0010   (0x0088)  
};

/// Struct /Script/ConZ.BankATMVirtualEditboxStateVisual
/// Size: 0x0010 (0x000000 - 0x000010)
struct FBankATMVirtualEditboxStateVisual
{ 
	FLinearColor                                       OutlineColor;                                               // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.BankCardOwnershipPayloadData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FBankCardOwnershipPayloadData
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/ConZ.CraftingProductDescription
/// Size: 0x00C8 (0x000000 - 0x0000C8)
struct FCraftingProductDescription
{ 
	TWeakObjectPtr<UClass*>                            ProductClass;                                               // 0x0000   (0x0028)  
	FString                                            ProductClassName;                                           // 0x0028   (0x0010)  
	FText                                              ProductCaption;                                             // 0x0038   (0x0018)  
	UTexture2D*                                        ProductIcon;                                                // 0x0050   (0x0008)  
	TArray<FCraftingSlotRequirement>                   SlotRequirements;                                           // 0x0058   (0x0010)  
	TArray<UCraftingCondition*>                        Conditions;                                                 // 0x0068   (0x0010)  
	TArray<UCraftingAction*>                           Actions;                                                    // 0x0078   (0x0010)  
	FCraftingRecipeSkillReward                         SkillReward;                                                // 0x0088   (0x0040)  
};

/// Struct /Script/ConZ.CraftingRecipeSkillReward
/// Size: 0x0040 (0x000000 - 0x000040)
struct FCraftingRecipeSkillReward
{ 
	TWeakObjectPtr<UClass*>                            Skill;                                                      // 0x0000   (0x0028)  
	int32_t                                            NoSkillReward;                                              // 0x0028   (0x0004)  
	int32_t                                            BasicReward;                                                // 0x002C   (0x0004)  
	int32_t                                            MediumReward;                                               // 0x0030   (0x0004)  
	int32_t                                            AdvancedReward;                                             // 0x0034   (0x0004)  
	int32_t                                            AboveAdvancedReward;                                        // 0x0038   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x003C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.CraftingSlotRequirement
/// Size: 0x0068 (0x000000 - 0x000068)
struct FCraftingSlotRequirement
{ 
	FString                                            SlotName;                                                   // 0x0000   (0x0010)  
	bool                                               LimitIngredientTypes;                                       // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0011   (0x0007)  MISSED
	TArray<UClass*>                                    IngredientTypes;                                            // 0x0018   (0x0010)  
	ECraftingIngredientConsumptionHint                 ConsumptionHint;                                            // 0x0028   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	int32_t                                            AmountNeeded;                                               // 0x002C   (0x0004)  
	bool                                               OverrideAmountNeededSkill;                                  // 0x0030   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	FCraftingSlotAmountNeededPerSkillLevel             AmountNeededSkillLevelOverride;                             // 0x0038   (0x0020)  
	TArray<FCraftingIngredientTypeModifier>            IngredientTypeModifiers;                                    // 0x0058   (0x0010)  
};

/// Struct /Script/ConZ.CraftingIngredientTypeModifier
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCraftingIngredientTypeModifier
{ 
	UClass*                                            IngredientType;                                             // 0x0000   (0x0008)  
	float                                              AmountMultiplier;                                           // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.CraftingSlotAmountNeededPerSkillLevel
/// Size: 0x0020 (0x000000 - 0x000020)
struct FCraftingSlotAmountNeededPerSkillLevel
{ 
	UClass*                                            Skill;                                                      // 0x0000   (0x0008)  
	int32_t                                            NoSkillAmount;                                              // 0x0008   (0x0004)  
	int32_t                                            BasicAmount;                                                // 0x000C   (0x0004)  
	int32_t                                            MediumAmount;                                               // 0x0010   (0x0004)  
	int32_t                                            AdvancedAmount;                                             // 0x0014   (0x0004)  
	int32_t                                            AboveAdvancedAmount;                                        // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.CraftingIngredientCost
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCraftingIngredientCost
{ 
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/ConZ.CraftingRecipeParams
/// Size: 0x0088 (0x000000 - 0x000088)
struct FCraftingRecipeParams
{ 
	TWeakObjectPtr<UClass*>                            ProductClass;                                               // 0x0000   (0x0028)  
	TMap<UClass*, ESkillLevel>                         SkillLevels;                                                // 0x0028   (0x0050)  
	TArray<FCraftingSlotParams>                        Slots;                                                      // 0x0078   (0x0010)  
};

/// Struct /Script/ConZ.CraftingSlotParams
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCraftingSlotParams
{ 
	TArray<TScriptInterface>                           Ingredients;                                                // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.BaseDamageInteractionEvent
/// Size: 0x0090 (0x000008 - 0x000098)
struct FBaseDamageInteractionEvent : FBaseInteractionEvent
{ 
	unsigned char                                      UnknownData00_1[0x90];                                      // 0x0008   (0x0090)  MISSED
};

/// Struct /Script/ConZ.BasicNotificationDescriptionData
/// Size: 0x0038 (0x000000 - 0x000038)
struct FBasicNotificationDescriptionData
{ 
	FText                                              Message;                                                    // 0x0000   (0x0018)  
	int32_t                                            FontSize;                                                   // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x001C   (0x0004)  MISSED
	UTexture2D*                                        Icon;                                                       // 0x0020   (0x0008)  
	int32_t                                            IconSize;                                                   // 0x0028   (0x0004)  
	float                                              Duration;                                                   // 0x002C   (0x0004)  
	bool                                               ping;                                                       // 0x0030   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	float                                              Delay;                                                      // 0x0034   (0x0004)  
};

/// Struct /Script/ConZ.AnimalSpawnData
/// Size: 0x002C (0x000000 - 0x00002C)
struct FAnimalSpawnData
{ 
	float                                              NextClueDistanceMin;                                        // 0x0000   (0x0004)  
	float                                              NextClueDistanceMax;                                        // 0x0004   (0x0004)  
	int32_t                                            NumCluesMin;                                                // 0x0008   (0x0004)  
	int32_t                                            NumCluesMax;                                                // 0x000C   (0x0004)  
	int32_t                                            PackSizeMin;                                                // 0x0010   (0x0004)  
	int32_t                                            PackSizeMax;                                                // 0x0014   (0x0004)  
	float                                              NextClueMaxHalfAngleDeg;                                    // 0x0018   (0x0004)  
	FAnimalSpawnWeigthsPerDayPeriod                    SpawnWeights;                                               // 0x001C   (0x0010)  
};

/// Struct /Script/ConZ.AnimalSpawnWeigthsPerDayPeriod
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAnimalSpawnWeigthsPerDayPeriod
{ 
	float                                              SpawnWeight;                                                // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.BoatParametersPerMovementPace
/// Size: 0x0018 (0x000000 - 0x000018)
struct FBoatParametersPerMovementPace
{ 
	bool                                               IsValid;                                                    // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              BaseMaxForwardSpeed;                                        // 0x0004   (0x0004)  
	bool                                               CanReverse;                                                 // 0x0008   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              BaseMaxReverseSpeed;                                        // 0x000C   (0x0004)  
	float                                              MinPrisonerStrength;                                        // 0x0010   (0x0004)  
	float                                              ThrottleMultiplier;                                         // 0x0014   (0x0004)  
};

/// Struct /Script/ConZ.SplineDescription
/// Size: 0x0030 (0x000000 - 0x000030)
struct FSplineDescription
{ 
	USplineComponent*                                  SplineComponent;                                            // 0x0000   (0x0008)  
	TArray<USplineMeshComponent*>                      SplineMeshComponents;                                       // 0x0008   (0x0010)  
	UStaticMeshComponent*                              SplineStartConnector;                                       // 0x0018   (0x0008)  
	UStaticMeshComponent*                              SplineEndConnector;                                         // 0x0020   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Struct /Script/ConZ.WireDescription
/// Size: 0x0050 (0x000000 - 0x000050)
struct FWireDescription
{ 
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0000   (0x0050)  MISSED
};

/// Struct /Script/ConZ.BrennerCommonData_BleedingParticles
/// Size: 0x0030 (0x000000 - 0x000030)
struct FBrennerCommonData_BleedingParticles
{ 
	TWeakObjectPtr<UParticleSystem*>                   Particles;                                                  // 0x0000   (0x0028)  
	FName                                              AttachSocketName;                                           // 0x0028   (0x0008)  
};

/// Struct /Script/ConZ.BrennerUpperBodyPitchRangeData
/// Size: 0x0014 (0x000000 - 0x000014)
struct FBrennerUpperBodyPitchRangeData
{ 
	FFloatRange                                        ActualPitchRange;                                           // 0x0000   (0x0010)  
	float                                              AppliedPitch;                                               // 0x0010   (0x0004)  
};

/// Struct /Script/ConZ.BrennerAttackDescription
/// Size: 0x0018 (0x000000 - 0x000018)
struct FBrennerAttackDescription
{ 
	EBrennerAttackType                                 Type;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	UAnimMontage*                                      Montage;                                                    // 0x0008   (0x0008)  
	float                                              cooldown;                                                   // 0x0010   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/ConZ.BruisePatch
/// Size: 0x0038 (0x000000 - 0x000038)
struct FBruisePatch
{ 
	EBruiseLayer                                       Layer;                                                      // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	TArray<EBruiseZone>                                AllowedZones;                                               // 0x0008   (0x0010)  
	int32_t                                            Order;                                                      // 0x0018   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x001C   (0x0004)  MISSED
	UTexture2D*                                        Texture;                                                    // 0x0020   (0x0008)  
	FVector2D                                          Offset;                                                     // 0x0028   (0x0008)  
	bool                                               Mute;                                                       // 0x0030   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Struct /Script/ConZ.BuildingsArray
/// Size: 0x0010 (0x000000 - 0x000010)
struct FBuildingsArray
{ 
	TArray<ABuilding*>                                 _buildings;                                                 // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.BurialInformation
/// Size: 0x0018 (0x000000 - 0x000018)
struct FBurialInformation
{ 
	FDbIntegerId                                       BurierUserId;                                               // 0x0000   (0x0008)  
	bool                                               ShouldBury;                                                 // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	FVector                                            BurialLocation;                                             // 0x000C   (0x000C)  
};

/// Struct /Script/ConZ.ScumPointDamageEvent
/// Size: 0x0008 (0x0000A8 - 0x0000B0)
struct FScumPointDamageEvent : FPointDamageEvent
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00A8   (0x0008)  MISSED
};

/// Struct /Script/ConZ.BurnPointDamageEvent
/// Size: 0x0010 (0x0000B0 - 0x0000C0)
struct FBurnPointDamageEvent : FScumPointDamageEvent
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00B0   (0x0010)  MISSED
};

/// Struct /Script/ConZ.BuryMaterialData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FBuryMaterialData
{ 
	UMaterialInterface*                                Material;                                                   // 0x0000   (0x0008)  
	UParticleSystem*                                   BreachActionParticles;                                      // 0x0008   (0x0008)  
	UAkAudioEvent*                                     BreachActionSound;                                          // 0x0010   (0x0008)  
	UParticleSystem*                                   DumpActionParticles;                                        // 0x0018   (0x0008)  
	UAkAudioEvent*                                     DumpActionSound;                                            // 0x0020   (0x0008)  
};

/// Struct /Script/ConZ.CamouflageSkillExperienceAwards
/// Size: 0x0004 (0x000000 - 0x000004)
struct FCamouflageSkillExperienceAwards
{ 
	float                                              BonusExperience;                                            // 0x0000   (0x0004)  
};

/// Struct /Script/ConZ.CamouflageSkillParametersPerSkillLevel
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCamouflageSkillParametersPerSkillLevel
{ 
	float                                              Modifier;                                                   // 0x0000   (0x0004)  
	float                                              Bonus;                                                      // 0x0004   (0x0004)  
	float                                              FoliageAIPerceptionOuterRadius;                             // 0x0008   (0x0004)  
	float                                              FoliageAIPerceptionInnerRadius;                             // 0x000C   (0x0004)  
};

/// Struct /Script/ConZ.CargoDropSpawnerPreset
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCargoDropSpawnerPreset
{ 
	UClass*                                            Preset;                                                     // 0x0000   (0x0008)  
	UClass*                                            SpawnerPreset;                                              // 0x0008   (0x0008)  
	float                                              ChanceMultiplier;                                           // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/ConZ.CarouselStyle
/// Size: 0x0570 (0x000000 - 0x000570)
struct FCarouselStyle
{ 
	FButtonStyle                                       LeftArrowIcon;                                              // 0x0000   (0x0278)  
	FButtonStyle                                       RightArrowIcon;                                             // 0x0278   (0x0278)  
	FCarouselTextStyle                                 ValueText;                                                  // 0x04F0   (0x0080)  
};

/// Struct /Script/ConZ.CarouselTextStyle
/// Size: 0x0080 (0x000000 - 0x000080)
struct FCarouselTextStyle
{ 
	FMargin                                            Padding;                                                    // 0x0000   (0x0010)  
	TEnumAsByte<EHorizontalAlignment>                  HorizontalAlignment;                                        // 0x0010   (0x0001)  
	TEnumAsByte<EVerticalAlignment>                    VerticalAlignment;                                          // 0x0011   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0012   (0x0006)  MISSED
	FSlateFontInfo                                     Font;                                                       // 0x0018   (0x0058)  
	FLinearColor                                       ColorAndOpacity;                                            // 0x0070   (0x0010)  
};

/// Struct /Script/ConZ.CarouselWithLabelStyle
/// Size: 0x0108 (0x000000 - 0x000108)
struct FCarouselWithLabelStyle
{ 
	FSlateBrush                                        FocusBackgroundImage;                                       // 0x0000   (0x0088)  
	FCarouselTextStyle                                 LabelText;                                                  // 0x0088   (0x0080)  
};

/// Struct /Script/ConZ.CharacterActionAnimationDescription
/// Size: 0x0020 (0x000000 - 0x000020)
struct FCharacterActionAnimationDescription
{ 
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0000   (0x0020)  MISSED
};

/// Struct /Script/ConZ.CCNonImplementedSkill
/// Size: 0x0020 (0x000000 - 0x000020)
struct FCCNonImplementedSkill
{ 
	ESkillAttribute                                    Attribute;                                                  // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	FText                                              Caption;                                                    // 0x0008   (0x0018)  
};

/// Struct /Script/ConZ.CharacterLegsImpactSoundsData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCharacterLegsImpactSoundsData
{ 
	TArray<FCharacterLegsImpactSoundData>              SoundsData;                                                 // 0x0000   (0x0010)  
	FCharacterImpactSounds                             FallbackSounds;                                             // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.CharacterImpactSounds
/// Size: 0x0008 (0x000000 - 0x000008)
struct FCharacterImpactSounds
{ 
	UAkAudioEvent*                                     AudioEvent;                                                 // 0x0000   (0x0008)  
};

/// Struct /Script/ConZ.CharacterLegsImpactSoundData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FCharacterLegsImpactSoundData
{ 
	TArray<ECharacterImpactSourceSoundCategory>        ImpactSourceCategories;                                     // 0x0000   (0x0010)  
	TArray<ECharacterLegsImpactSoundCategory>          ImpactTargetCategories;                                     // 0x0010   (0x0010)  
	FCharacterImpactSounds                             Sounds;                                                     // 0x0020   (0x0008)  
};

/// Struct /Script/ConZ.CharacterArmsImpactSoundsData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCharacterArmsImpactSoundsData
{ 
	TArray<FCharacterArmsImpactSoundData>              SoundsData;                                                 // 0x0000   (0x0010)  
	FCharacterImpactSounds                             FallbackSounds;                                             // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.CharacterArmsImpactSoundData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FCharacterArmsImpactSoundData
{ 
	TArray<ECharacterImpactSourceSoundCategory>        ImpactSourceCategories;                                     // 0x0000   (0x0010)  
	TArray<ECharacterArmsImpactSoundCategory>          ImpactTargetCategories;                                     // 0x0010   (0x0010)  
	FCharacterImpactSounds                             Sounds;                                                     // 0x0020   (0x0008)  
};

/// Struct /Script/ConZ.CharacterTorsoImpactSoundsData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCharacterTorsoImpactSoundsData
{ 
	TArray<FCharacterTorsoImpactSoundData>             SoundsData;                                                 // 0x0000   (0x0010)  
	FCharacterImpactSounds                             FallbackSounds;                                             // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.CharacterTorsoImpactSoundData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FCharacterTorsoImpactSoundData
{ 
	TArray<ECharacterImpactSourceSoundCategory>        ImpactSourceCategories;                                     // 0x0000   (0x0010)  
	TArray<ECharacterTorsoImpactSoundCategory>         ImpactTargetCategories;                                     // 0x0010   (0x0010)  
	FCharacterImpactSounds                             Sounds;                                                     // 0x0020   (0x0008)  
};

/// Struct /Script/ConZ.CharacterHeadImpactSoundsData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCharacterHeadImpactSoundsData
{ 
	TArray<FCharacterHeadImpactSoundData>              SoundsData;                                                 // 0x0000   (0x0010)  
	FCharacterImpactSounds                             FallbackSounds;                                             // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.CharacterHeadImpactSoundData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FCharacterHeadImpactSoundData
{ 
	TArray<ECharacterImpactSourceSoundCategory>        ImpactSourceCategories;                                     // 0x0000   (0x0010)  
	TArray<ECharacterHeadImpactSoundCategory>          ImpactTargetCategories;                                     // 0x0010   (0x0010)  
	FCharacterImpactSounds                             Sounds;                                                     // 0x0020   (0x0008)  
};

/// Struct /Script/ConZ.CharacterMeshSlice
/// Size: 0x0190 (0x000000 - 0x000190)
struct FCharacterMeshSlice
{ 
	FGameplayTagQuery                                  Condition;                                                  // 0x0000   (0x0048)  
	FGameplayTagContainer                              Slots;                                                      // 0x0048   (0x0020)  
	TWeakObjectPtr<USkeletalMesh*>                     SkeletalMesh;                                               // 0x0068   (0x0028)  
	FGameplayTag                                       SkeletalMeshSocket;                                         // 0x0090   (0x0008)  
	TMap<FName, FCharacterMeshMorphTargetArray>        SkeletalMeshMorphTargets;                                   // 0x0098   (0x0050)  
	TWeakObjectPtr<UStaticMesh*>                       StaticMesh;                                                 // 0x00E8   (0x0028)  
	FGameplayTag                                       StaticMeshSocket;                                           // 0x0110   (0x0008)  
	TArray<FCharacterMeshMaterialOverride>             OverrideMaterials;                                          // 0x0118   (0x0010)  
	TWeakObjectPtr<UClass*>                            SpecificAnimationBlueprintClass;                            // 0x0128   (0x0028)  
	FTransform                                         SpecificTransform;                                          // 0x0150   (0x0030)  
	bool                                               HidesUnderlyingLayer;                                       // 0x0180   (0x0001)  
	unsigned char                                      UnknownData00_6[0xF];                                       // 0x0181   (0x000F)  MISSED
};

/// Struct /Script/ConZ.CharacterMeshMaterialOverride
/// Size: 0x0078 (0x000000 - 0x000078)
struct FCharacterMeshMaterialOverride
{ 
	FGameplayTagQuery                                  Condition;                                                  // 0x0000   (0x0048)  
	FName                                              MaterialSlot;                                               // 0x0048   (0x0008)  
	TWeakObjectPtr<UMaterialInstance*>                 OverrideMaterial;                                           // 0x0050   (0x0028)  
};

/// Struct /Script/ConZ.CharacterMeshMorphTargetArray
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCharacterMeshMorphTargetArray
{ 
	TArray<FCharacterMeshMorphTarget>                  MorphTargetArray;                                           // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.CharacterMeshMorphTarget
/// Size: 0x0050 (0x000000 - 0x000050)
struct FCharacterMeshMorphTarget
{ 
	FGameplayTagQuery                                  Condition;                                                  // 0x0000   (0x0048)  
	float                                              Value;                                                      // 0x0048   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x004C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.CharacterMeshManagerPerSlotData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCharacterMeshManagerPerSlotData
{ 
	TArray<UClass*>                                    CharacterMeshLayers;                                        // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.CharacterMeshClassSet
/// Size: 0x0050 (0x000000 - 0x000050)
struct FCharacterMeshClassSet
{ 
	TSet<UClass*>                                      Classes;                                                    // 0x0000   (0x0050)  
};

/// Struct /Script/ConZ.CharacterMeshClassArray
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCharacterMeshClassArray
{ 
	TArray<UClass*>                                    Classes;                                                    // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.HitByMeleeImpactSoundsInfo
/// Size: 0x0010 (0x000000 - 0x000010)
struct FHitByMeleeImpactSoundsInfo
{ 
	ECharacterImpactSourceSoundCategory                ImpactSourceSoundCategory;                                  // 0x0000   (0x0001)  
	EHitSeverity                                       HitSeverity;                                                // 0x0001   (0x0001)  
	EDetectHitCollisionType                            ImpactBodyPart;                                             // 0x0002   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x0003   (0x0001)  MISSED
	FVector                                            ImpactPoint;                                                // 0x0004   (0x000C)  
};

/// Struct /Script/ConZ.CharacterSpawnerMarker
/// Size: 0x0050 (0x000000 - 0x000050)
struct FCharacterSpawnerMarker
{ 
	FTransform                                         Transform;                                                  // 0x0000   (0x0030)  
	FCharacterSpawnerDataBasedOnPreset                 Spawner;                                                    // 0x0030   (0x0020)  
};

/// Struct /Script/ConZ.CharacterSpawnerDataBasedOnPreset
/// Size: 0x0020 (0x000000 - 0x000020)
struct FCharacterSpawnerDataBasedOnPreset
{ 
	UClass*                                            Preset;                                                     // 0x0000   (0x0008)  
	bool                                               OverrideCharacterClasses;                                   // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	TArray<UClass*>                                    CharacterClasses;                                           // 0x0010   (0x0010)  
};

/// Struct /Script/ConZ.CharacterSpawneeInfo
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCharacterSpawneeInfo
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/ConZ.SpawnCharacterGroupInfo
/// Size: 0x0050 (0x000000 - 0x000050)
struct FSpawnCharacterGroupInfo
{ 
	TArray<UClass*>                                    AvailablePawns;                                             // 0x0000   (0x0010)  
	FTransform                                         Transform;                                                  // 0x0010   (0x0030)  
	int32_t                                            NumOfCharactersToSpawn;                                     // 0x0040   (0x0004)  
	bool                                               IgnoreLimit;                                                // 0x0044   (0x0001)  
	unsigned char                                      UnknownData00_6[0xB];                                       // 0x0045   (0x000B)  MISSED
};

/// Struct /Script/ConZ.SpawnCharacterAroundInfo
/// Size: 0x0050 (0x000000 - 0x000050)
struct FSpawnCharacterAroundInfo
{ 
	TArray<UClass*>                                    AvailablePawns;                                             // 0x0000   (0x0010)  
	FTransform                                         Transform;                                                  // 0x0010   (0x0030)  
	float                                              MinSpawnRadius;                                             // 0x0040   (0x0004)  
	float                                              MaxSpawnRadius;                                             // 0x0044   (0x0004)  
	int32_t                                            NumOfCharactersToSpawn;                                     // 0x0048   (0x0004)  
	bool                                               IgnoreLimit;                                                // 0x004C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x004D   (0x0003)  MISSED
};

/// Struct /Script/ConZ.PawnCharacterInfo
/// Size: 0x00B0 (0x000000 - 0x0000B0)
struct FPawnCharacterInfo
{ 
	UClass*                                            SpawnablePawn;                                              // 0x0000   (0x0008)  
	TArray<UClass*>                                    CharacterPreset;                                            // 0x0008   (0x0010)  
	float                                              PoiCharacterIdleThresholdTime;                              // 0x0018   (0x0004)  
	float                                              ExteriorCharacterIdleThresholdTime;                         // 0x001C   (0x0004)  
	float                                              InteriorCharacterIdleThresholdTime;                         // 0x0020   (0x0004)  
	float                                              MinShortRangeSpawnDistance;                                 // 0x0024   (0x0004)  
	float                                              MaxShortRangeSpawnDistance;                                 // 0x0028   (0x0004)  
	float                                              MinLongRangeSpawnDistance;                                  // 0x002C   (0x0004)  
	float                                              MaxLongRangeSpawnDistance;                                  // 0x0030   (0x0004)  
	float                                              PawnCullDuration;                                           // 0x0034   (0x0004)  
	int32_t                                            MinWildCharactersPerPawnGroup;                              // 0x0038   (0x0004)  
	int32_t                                            MaxWildCharactersPerPawnGroup;                              // 0x003C   (0x0004)  
	int32_t                                            MaxExteriorCharactersPerPawnGroup;                          // 0x0040   (0x0004)  
	int32_t                                            MaxInteriorCharactersPerPawnGroup;                          // 0x0044   (0x0004)  
	float                                              PawnFieldOfView;                                            // 0x0048   (0x0004)  
	float                                              SpawningFieldOfView;                                        // 0x004C   (0x0004)  
	int32_t                                            MaxAllowedPawns;                                            // 0x0050   (0x0004)  
	int32_t                                            MaxAllowedWildPawns;                                        // 0x0054   (0x0004)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0058   (0x0008)  MISSED
	int32_t                                            MaxAllowedExteriorPawns;                                    // 0x0060   (0x0004)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0064   (0x0008)  MISSED
	int32_t                                            MaxAllowedInteriorPawns;                                    // 0x006C   (0x0004)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x0070   (0x0008)  MISSED
	float                                              ExteriorPawnAmountModifier;                                 // 0x0078   (0x0004)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x007C   (0x0008)  MISSED
	float                                              InteriorPawnAmountModifier;                                 // 0x0084   (0x0004)  
	unsigned char                                      UnknownData04_5[0x8];                                       // 0x0088   (0x0008)  MISSED
	float                                              WildPawnAmountModifier;                                     // 0x0090   (0x0004)  
	unsigned char                                      UnknownData05_5[0xC];                                       // 0x0094   (0x000C)  MISSED
	TArray<FSpawnedPawnInfo>                           SpawnedPawns;                                               // 0x00A0   (0x0010)  
};

/// Struct /Script/ConZ.SpawnedPawnInfo
/// Size: 0x0014 (0x000000 - 0x000014)
struct FSpawnedPawnInfo
{ 
	unsigned char                                      UnknownData00_1[0x14];                                      // 0x0000   (0x0014)  MISSED
};

/// Struct /Script/ConZ.CharacterSpawnerData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCharacterSpawnerData
{ 
	TArray<UClass*>                                    CharacterClasses;                                           // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.CharacterStatsItem
/// Size: 0x0048 (0x000000 - 0x000048)
struct FCharacterStatsItem
{ 
	int32_t                                            Rank;                                                       // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	FString                                            PlayerName;                                                 // 0x0008   (0x0010)  
	FCharacterStats                                    CharacterStats;                                             // 0x0018   (0x0030)  
};

/// Struct /Script/ConZ.CharacterStats
/// Size: 0x0030 (0x000000 - 0x000030)
struct FCharacterStats
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	float                                              FamePoints;                                                 // 0x0008   (0x0004)  
	int32_t                                            FameLevel;                                                  // 0x000C   (0x0004)  
	float                                              EventScore;                                                 // 0x0010   (0x0004)  
	int32_t                                            EventKills;                                                 // 0x0014   (0x0004)  
	int32_t                                            EventTeamKills;                                             // 0x0018   (0x0004)  
	int32_t                                            EventDeaths;                                                // 0x001C   (0x0004)  
	int32_t                                            EventSuicides;                                              // 0x0020   (0x0004)  
	int32_t                                            EventAssists;                                               // 0x0024   (0x0004)  
	int32_t                                            EventHeadshots;                                             // 0x0028   (0x0004)  
	bool                                               IsBanned;                                                   // 0x002C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x002D   (0x0003)  MISSED
};

/// Struct /Script/ConZ.SpamConsequences
/// Size: 0x0008 (0x000000 - 0x000008)
struct FSpamConsequences
{ 
	float                                              Timeout;                                                    // 0x0000   (0x0004)  
	bool                                               PermanentTimeout;                                           // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0005   (0x0003)  MISSED
};

/// Struct /Script/ConZ.SpamSeverityConditions
/// Size: 0x0008 (0x000000 - 0x000008)
struct FSpamSeverityConditions
{ 
	float                                              ResetDuration;                                              // 0x0000   (0x0004)  
	int32_t                                            OffenceRepetitions;                                         // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.ChoppingRecipe
/// Size: 0x0098 (0x000000 - 0x000098)
struct FChoppingRecipe
{ 
	FText                                              InteractionCaption;                                         // 0x0000   (0x0018)  
	UAkAudioEvent*                                     ChopAudioEvent;                                             // 0x0018   (0x0008)  
	ENoiseLevel                                        noiseLevel;                                                 // 0x0020   (0x0001)  
	EPrisonerMontage                                   ChoppingMontage;                                            // 0x0021   (0x0001)  
	EPrisonerMontage                                   ChoppingMontageEnd;                                         // 0x0022   (0x0001)  
	bool                                               EnforceDroppingItemOnGround;                                // 0x0023   (0x0001)  
	bool                                               ShouldResultUsesDependOnSourceHP;                           // 0x0024   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0025   (0x0003)  MISSED
	TArray<FChoppingIngredient>                        Ingredients;                                                // 0x0028   (0x0010)  
	FPossibleChoppingTools                             ToolRequiredToBeInRightHand;                                // 0x0038   (0x0010)  
	TArray<FPossibleChoppingTools>                     AdditionalToolsRequired;                                    // 0x0048   (0x0010)  
	UClass*                                            Skill;                                                      // 0x0058   (0x0008)  
	float                                              ExperiencePointsAwarded;                                    // 0x0060   (0x0004)  
	FChoppingParametersPerSkillLevel                   NoSkillLevelData;                                           // 0x0064   (0x000C)  
	FChoppingParametersPerSkillLevel                   BasicLevelData;                                             // 0x0070   (0x000C)  
	FChoppingParametersPerSkillLevel                   MediumLevelData;                                            // 0x007C   (0x000C)  
	FChoppingParametersPerSkillLevel                   AdvancedLevelData;                                          // 0x0088   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0094   (0x0004)  MISSED
};

/// Struct /Script/ConZ.ChoppingParametersPerSkillLevel
/// Size: 0x000C (0x000000 - 0x00000C)
struct FChoppingParametersPerSkillLevel
{ 
	FExperienceDependentFloat                          ChoppingTime;                                               // 0x0000   (0x0008)  
	int32_t                                            IngredientsQuantityBonus;                                   // 0x0008   (0x0004)  
};

/// Struct /Script/ConZ.ExperienceDependentFloat
/// Size: 0x0008 (0x000000 - 0x000008)
struct FExperienceDependentFloat
{ 
	float                                              ValueWhenExperienceIsMinimal;                               // 0x0000   (0x0004)  
	float                                              ValueWhenExperienceIsMaximal;                               // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.PossibleChoppingTools
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPossibleChoppingTools
{ 
	TArray<FChoppingTool2>                             PossibleTools;                                              // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.ChoppingTool2
/// Size: 0x0050 (0x000000 - 0x000050)
struct FChoppingTool2
{ 
	TArray<UBaseItemTag*>                              ItemTags;                                                   // 0x0000   (0x0010)  
	UClass*                                            ItemTagClass;                                               // 0x0010   (0x0008)  
	TWeakObjectPtr<UClass*>                            ItemClass;                                                  // 0x0018   (0x0028)  
	bool                                               OverrideChoppingTime;                                       // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0041   (0x0003)  MISSED
	float                                              ChoppingTimeMultiplier;                                     // 0x0044   (0x0004)  
	bool                                               OverrideIngredientsQuantity;                                // 0x0048   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0049   (0x0003)  MISSED
	int32_t                                            IngredientsQuantityBonus;                                   // 0x004C   (0x0004)  
};

/// Struct /Script/ConZ.ChoppingIngredient
/// Size: 0x0050 (0x000000 - 0x000050)
struct FChoppingIngredient
{ 
	TWeakObjectPtr<UClass*>                            Item;                                                       // 0x0000   (0x0028)  
	int32_t                                            MinQuantity;                                                // 0x0028   (0x0004)  
	int32_t                                            MaxQuantity;                                                // 0x002C   (0x0004)  
	bool                                               IsQuantityAffectedByTool;                                   // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	float                                              InitialDamage;                                              // 0x0034   (0x0004)  
	float                                              RandomizeDamage;                                            // 0x0038   (0x0004)  
	bool                                               OverrideAutoDestructTime;                                   // 0x003C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x003D   (0x0003)  MISSED
	float                                              AutoDestructTime;                                           // 0x0040   (0x0004)  
	bool                                               IsHealthAffectedByChoppedItem;                              // 0x0044   (0x0001)  
	unsigned char                                      UnknownData02_6[0xB];                                       // 0x0045   (0x000B)  MISSED
};

/// Struct /Script/ConZ.SelectedChoppingTool
/// Size: 0x0060 (0x000000 - 0x000060)
struct FSelectedChoppingTool
{ 
	AItem*                                             Item;                                                       // 0x0000   (0x0008)  
	FChoppingTool2                                     Tool;                                                       // 0x0008   (0x0050)  
	bool                                               IsRequiredToBeInHands;                                      // 0x0058   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0059   (0x0007)  MISSED
};

/// Struct /Script/ConZ.CircularSegmentContainer
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCircularSegmentContainer
{ 
	TArray<UCircularMenuSegmentWidget*>                SegmentWidgets;                                             // 0x0000   (0x0010)  
	int32_t                                            SegmentCountOverride;                                       // 0x0010   (0x0004)  
	float                                              Offset;                                                     // 0x0014   (0x0004)  
};

/// Struct /Script/ConZ.CircularLayerData
/// Size: 0x0008 (0x000000 - 0x000008)
struct FCircularLayerData
{ 
	float                                              CenterCutoffPercentage;                                     // 0x0000   (0x0004)  
	float                                              Size;                                                       // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.PlayerUnsubscribeData
/// Size: 0x0078 (0x000000 - 0x000078)
struct FPlayerUnsubscribeData
{ 
	unsigned char                                      UnknownData00_1[0x78];                                      // 0x0000   (0x0078)  MISSED
};

/// Struct /Script/ConZ.TraderUnsubscribeData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FTraderUnsubscribeData
{ 
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0000   (0x0028)  MISSED
};

/// Struct /Script/ConZ.NetPackedProjectileDamageEvent
/// Size: 0x0058 (0x0000B0 - 0x000108)
struct FNetPackedProjectileDamageEvent : FScumPointDamageEvent
{ 
	FVector_NetQuantize100                             DealerLocation;                                             // 0x00B0   (0x000C)  
	FVector_NetQuantize100                             TargetLocation;                                             // 0x00BC   (0x000C)  
	float                                              ProjectileMass;                                             // 0x00C8   (0x0004)  
	float                                              ProjectileSpeed;                                            // 0x00CC   (0x0004)  
	float                                              ProjectileMuzzleVelocity;                                   // 0x00D0   (0x0004)  
	char                                               SharpnessHardnessPacked;                                    // 0x00D4   (0x0001)  
	char                                               ArmorPiercingFactorPacked;                                  // 0x00D5   (0x0001)  
	char                                               EventDataPacked;                                            // 0x00D6   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x00D7   (0x0001)  MISSED
	UClass*                                            WeaponClass;                                                // 0x00D8   (0x0008)  
	UObject*                                           DamageDealer;                                               // 0x00E0   (0x0008)  
	UVehicleAttachment*                                DamageReceiverVehicleAttachment;                            // 0x00E8   (0x0008)  
	float                                              DistanceTravelled;                                          // 0x00F0   (0x0004)  
	float                                              ExperienceMultiplier;                                       // 0x00F4   (0x0004)  
	bool                                               IsVehicleCollision;                                         // 0x00F8   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x00F9   (0x0007)  MISSED
	int64_t                                            BaseElementId;                                              // 0x0100   (0x0008)  
};

/// Struct /Script/ConZ.CollisionPointDamageEvent
/// Size: 0x00A8 (0x0000B0 - 0x000158)
struct FCollisionPointDamageEvent : FScumPointDamageEvent
{ 
	unsigned char                                      UnknownData00_1[0xA8];                                      // 0x00B0   (0x00A8)  MISSED
};

/// Struct /Script/ConZ.RepActionData
/// Size: 0x0003 (0x000000 - 0x000003)
struct FRepActionData
{ 
	EAnimalAction                                      Action;                                                     // 0x0000   (0x0001)  
	char                                               IndexParameter;                                             // 0x0001   (0x0001)  
	char                                               Version;                                                    // 0x0002   (0x0001)  
};

/// Struct /Script/ConZ.AnimalStationaryRotationRateSettings
/// Size: 0x003C (0x000000 - 0x00003C)
struct FAnimalStationaryRotationRateSettings
{ 
	FRotator                                           RunRotationRate;                                            // 0x0000   (0x000C)  
	FRotator                                           TrotRotationRate;                                           // 0x000C   (0x000C)  
	FRotator                                           WalkRotationRate;                                           // 0x0018   (0x000C)  
	FRotator                                           SneakRotationRate;                                          // 0x0024   (0x000C)  
	FRotator                                           StandRotationRate;                                          // 0x0030   (0x000C)  
};

/// Struct /Script/ConZ.AnimalPaceSettings
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAnimalPaceSettings
{ 
	float                                              RunSpeed;                                                   // 0x0000   (0x0004)  
	float                                              TrotSpeed;                                                  // 0x0004   (0x0004)  
	float                                              WalkSpeed;                                                  // 0x0008   (0x0004)  
	float                                              SneakSpeed;                                                 // 0x000C   (0x0004)  
};

/// Struct /Script/ConZ.TurnMontages
/// Size: 0x0010 (0x000000 - 0x000010)
struct FTurnMontages
{ 
	UAnimMontage*                                      TurnInPlaceLeft;                                            // 0x0000   (0x0008)  
	UAnimMontage*                                      TurnInPlaceRight;                                           // 0x0008   (0x0008)  
};

/// Struct /Script/ConZ.AnimalActionMontageData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FAnimalActionMontageData
{ 
	UAnimMontage*                                      SleepMontage;                                               // 0x0000   (0x0008)  
	UAnimMontage*                                      EatMontage;                                                 // 0x0008   (0x0008)  
	UAnimMontage*                                      IntimidateMontage;                                          // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.CloseRangeAttackData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCloseRangeAttackData
{ 
	UAnimMontage*                                      Montage;                                                    // 0x0000   (0x0008)  
	float                                              RegainControlDurationModifier;                              // 0x0008   (0x0004)  
	float                                              Range;                                                      // 0x000C   (0x0004)  
	float                                              angle;                                                      // 0x0010   (0x0004)  
	float                                              HorizontalHalfAngleRange;                                   // 0x0014   (0x0004)  
};

/// Struct /Script/ConZ.ChargeAttackData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FChargeAttackData
{ 
	UAnimMontage*                                      Montage;                                                    // 0x0000   (0x0008)  
	float                                              RegainControlDurationModifier;                              // 0x0008   (0x0004)  
	float                                              Range;                                                      // 0x000C   (0x0004)  
	float                                              Speed;                                                      // 0x0010   (0x0004)  
	float                                              Height;                                                     // 0x0014   (0x0004)  
	float                                              lengthOverride;                                             // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.ContainerItemDescriptorData
/// Size: 0x0060 (0x000000 - 0x000060)
struct FContainerItemDescriptorData
{ 
	unsigned char                                      UnknownData00_2[0x38];                                      // 0x0000   (0x0038)  MISSED
	UTexture2D*                                        Icon;                                                       // 0x0038   (0x0008)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x0040   (0x0020)  MISSED
};

/// Struct /Script/ConZ.ImageAssetToLoad
/// Size: 0x0018 (0x000000 - 0x000018)
struct FImageAssetToLoad
{ 
	FGameplayTag                                       Name;                                                       // 0x0000   (0x0008)  
	FString                                            FilePath;                                                   // 0x0008   (0x0010)  
};

/// Struct /Script/ConZ.BaseElementSpawnParams
/// Size: 0x0048 (0x000000 - 0x000048)
struct FBaseElementSpawnParams
{ 
	float                                              Quality;                                                    // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	TArray<UClass*>                                    DoorUpgrades;                                               // 0x0008   (0x0010)  
	TArray<AItem*>                                     DoorAttachedItems;                                          // 0x0018   (0x0010)  
	TArray<int32_t>                                    CombinationsPerLock;                                        // 0x0028   (0x0010)  
	FDbIntegerId                                       ShelterId;                                                  // 0x0038   (0x0008)  
	FEntityId                                          EntityId;                                                   // 0x0040   (0x0008)  
};

/// Struct /Script/ConZ.EntityId
/// Size: 0x0008 (0x000000 - 0x000008)
struct FEntityId
{ 
	int64_t                                            Value;                                                      // 0x0000   (0x0008)  
};

/// Struct /Script/ConZ.BaseBuildingSizeVariation
/// Size: 0x0018 (0x000000 - 0x000018)
struct FBaseBuildingSizeVariation
{ 
	UClass*                                            Component;                                                  // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0008   (0x0010)  MISSED
};

/// Struct /Script/ConZ.BaseInteractionVisitor
/// Size: 0x0020 (0x000000 - 0x000020)
struct FBaseInteractionVisitor
{ 
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0000   (0x0020)  MISSED
};

/// Struct /Script/ConZ.ConZBaseRepairAreaDuration
/// Size: 0x0008 (0x000000 - 0x000008)
struct FConZBaseRepairAreaDuration
{ 
	int32_t                                            NumberOfBaseElementsTreshold;                               // 0x0000   (0x0004)  
	float                                              RepairDuration;                                             // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.ConZOnDemandElementData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FConZOnDemandElementData
{ 
	FConZBaseElementIdentifier                         ElementIdentifier;                                          // 0x0000   (0x0020)  
	FString                                            OwnerName;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/ConZ.ConZPlacementQueryParams
/// Size: 0x0028 (0x000000 - 0x000028)
struct FConZPlacementQueryParams
{ 
	bool                                               IsSnapping;                                                 // 0x0000   (0x0001)  
	bool                                               MustBePlacedOnFoundations;                                  // 0x0001   (0x0001)  
	bool                                               CanEverBePlacedOnFoundations;                               // 0x0002   (0x0001)  
	bool                                               CanBePlacedOnOtherBaseElements;                             // 0x0003   (0x0001)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	APrisoner*                                         User;                                                       // 0x0008   (0x0008)  
	bool                                               CanBePlacedWithoutFlag;                                     // 0x0010   (0x0001)  
	bool                                               CanBePlacedInBuilding;                                      // 0x0011   (0x0001)  
	bool                                               CanBePlacedInRestrictedArea;                                // 0x0012   (0x0001)  
	bool                                               CanBePlacedInAbandonedBunker;                               // 0x0013   (0x0001)  
	int32_t                                            MaxInstancesPerFlagArea;                                    // 0x0014   (0x0004)  
	UClass*                                            ClassToSpawn;                                               // 0x0018   (0x0008)  
	bool                                               IgnoreDisabledBaseBuildingFlag;                             // 0x0020   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0021   (0x0007)  MISSED
};

/// Struct /Script/ConZ.ConZBaseElementInteractionData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FConZBaseElementInteractionData
{ 
	int64_t                                            BaseElementId;                                              // 0x0000   (0x0008)  
	FVector                                            BaseElementLocation;                                        // 0x0008   (0x000C)  
	float                                              RepairValue;                                                // 0x0014   (0x0004)  
	int64_t                                            InteractionTimestamp;                                       // 0x0018   (0x0008)  
	int64_t                                            IntegerData;                                                // 0x0020   (0x0008)  
	UObject*                                           PointerData;                                                // 0x0028   (0x0008)  
};

/// Struct /Script/ConZ.ConZBaseInteractionData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FConZBaseInteractionData
{ 
	int64_t                                            BaseId;                                                     // 0x0000   (0x0008)  
	FVector                                            BaseLocation;                                               // 0x0008   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/ConZ.ElementMorphQuery
/// Size: 0x0050 (0x000000 - 0x000050)
struct FElementMorphQuery
{ 
	bool                                               DebugSolo;                                                  // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	FName                                              QueryName;                                                  // 0x0004   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	TArray<FElementQueryMarker>                        Markers;                                                    // 0x0010   (0x0010)  
	UStaticMesh*                                       StaticMesh;                                                 // 0x0020   (0x0008)  
	FElementSnapMarkerOverride                         MarkersOverride;                                            // 0x0028   (0x0018)  
	unsigned char                                      UnknownData02_6[0x10];                                      // 0x0040   (0x0010)  MISSED
};

/// Struct /Script/ConZ.ElementSnapMarkerOverride
/// Size: 0x0018 (0x000000 - 0x000018)
struct FElementSnapMarkerOverride
{ 
	ESnapMarkerOverrideType                            OverrideType;                                               // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	TArray<FName>                                      SnapMarkersToRemove;                                        // 0x0008   (0x0010)  
};

/// Struct /Script/ConZ.ElementQueryMarker
/// Size: 0x0040 (0x000000 - 0x000040)
struct FElementQueryMarker
{ 
	bool                                               Include;                                                    // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	UClass*                                            SocketClass;                                                // 0x0008   (0x0008)  
	FTransform                                         Transform;                                                  // 0x0010   (0x0030)  
};

/// Struct /Script/ConZ.ModularElementSnapMarker
/// Size: 0x0060 (0x000000 - 0x000060)
struct FModularElementSnapMarker
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0008   (0x0008)  MISSED
	FTransform                                         Transform;                                                  // 0x0010   (0x0030)  
	FModularElementSnapMarkerSocket                    Socket;                                                     // 0x0040   (0x0018)  
	bool                                               InfluenceStability;                                         // 0x0058   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0059   (0x0003)  MISSED
	float                                              Stability;                                                  // 0x005C   (0x0004)  
};

/// Struct /Script/ConZ.ModularElementSnapMarkerSocket
/// Size: 0x0018 (0x000000 - 0x000018)
struct FModularElementSnapMarkerSocket
{ 
	UClass*                                            Type;                                                       // 0x0000   (0x0008)  
	UClass*                                            InType;                                                     // 0x0008   (0x0008)  
	UClass*                                            OutType;                                                    // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.ElementSnapMarker
/// Size: 0x0060 (0x000000 - 0x000060)
struct FElementSnapMarker
{ 
	FTransform                                         Transform;                                                  // 0x0000   (0x0030)  
	FVector                                            Slack;                                                      // 0x0030   (0x000C)  
	bool                                               ElementTypesMustMatch;                                      // 0x003C   (0x0001)  
	bool                                               IncreaseLevelOnSnap;                                        // 0x003D   (0x0001)  
	char                                               MaxLevelToSnap;                                             // 0x003E   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x003F   (0x0001)  MISSED
	FVector                                            RequiredElementSize;                                        // 0x0040   (0x000C)  
	FVector                                            RequiredElementSizeTolerance;                               // 0x004C   (0x000C)  
	bool                                               DestroySnappedElementWhenDestroyed;                         // 0x0058   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x0059   (0x0001)  MISSED
	uint16_t                                           OutSocketTypes;                                             // 0x005A   (0x0002)  
	uint16_t                                           InSocketTypes;                                              // 0x005C   (0x0002)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0x005E   (0x0002)  MISSED
};

/// Struct /Script/ConZ.ConZBaseData
/// Size: 0x0140 (0x000000 - 0x000140)
struct FConZBaseData
{ 
	int64_t                                            BaseId;                                                     // 0x0000   (0x0008)  
	FString                                            BaseName;                                                   // 0x0008   (0x0010)  
	FVector2D                                          BaseSize;                                                   // 0x0018   (0x0008)  
	FVector                                            BaseLocation;                                               // 0x0020   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x002C   (0x0004)  MISSED
	int64_t                                            BaseOwnerPlayerId;                                          // 0x0030   (0x0008)  
	bool                                               IsOwnedByPlayer;                                            // 0x0038   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0039   (0x0003)  MISSED
	FVector2D                                          BaseBoundsMin;                                              // 0x003C   (0x0008)  
	FVector2D                                          BaseBoundsMax;                                              // 0x0044   (0x0008)  
	unsigned char                                      UnknownData02_6[0xF4];                                      // 0x004C   (0x00F4)  MISSED
};

/// Struct /Script/ConZ.ConZItemElementData
/// Size: 0x0001 (0x000000 - 0x000001)
struct FConZItemElementData
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/ConZ.ConZFlagElementData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FConZFlagElementData
{ 
	int64_t                                            OvertakeEndTime;                                            // 0x0000   (0x0008)  
	FDbIntegerId                                       OvertakerId;                                                // 0x0008   (0x0008)  
	int32_t                                            NumberOfExpandedElements;                                   // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/ConZ.ConZBaseElementData
/// Size: 0x00A0 (0x000000 - 0x0000A0)
struct FConZBaseElementData
{ 
	int64_t                                            ElementID;                                                  // 0x0000   (0x0008)  
	int64_t                                            OwnerPlayerId;                                              // 0x0008   (0x0008)  
	int64_t                                            CreatorPrisonerId;                                          // 0x0010   (0x0008)  
	FString                                            OwnerName;                                                  // 0x0018   (0x0010)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0028   (0x0008)  MISSED
	FTransform                                         Transform;                                                  // 0x0030   (0x0030)  
	UClass*                                            ElementClass;                                               // 0x0060   (0x0008)  
	float                                              HealthPoints;                                               // 0x0068   (0x0004)  
	float                                              Quality;                                                    // 0x006C   (0x0004)  
	char                                               DoorElementStateFlags;                                      // 0x0070   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0071   (0x0007)  MISSED
	TArray<UClass*>                                    DoorUpgrades;                                               // 0x0078   (0x0010)  
	TArray<int32_t>                                    CombinationsPerLock;                                        // 0x0088   (0x0010)  
	EAccessLevel                                       DoorAccessLevel;                                            // 0x0098   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0099   (0x0007)  MISSED
};

/// Struct /Script/ConZ.BaseElementDestructionZone
/// Size: 0x002C (0x000000 - 0x00002C)
struct FBaseElementDestructionZone
{ 
	FBox                                               Bounds;                                                     // 0x0000   (0x001C)  
	float                                              DamageToItems;                                              // 0x001C   (0x0004)  
	float                                              FallDamagePerMeter;                                         // 0x0020   (0x0004)  
	float                                              MaxFallDamage;                                              // 0x0024   (0x0004)  
	bool                                               MustElementBeAboveZone;                                     // 0x0028   (0x0001)  
	bool                                               IgnoreElementsThatCantBePlacedOnOtherElements;              // 0x0029   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x002A   (0x0002)  MISSED
};

/// Struct /Script/ConZ.BaseElementDamageZone
/// Size: 0x0028 (0x000000 - 0x000028)
struct FBaseElementDamageZone
{ 
	FVector                                            BoundsMin;                                                  // 0x0000   (0x000C)  
	FVector                                            BoundsMax;                                                  // 0x000C   (0x000C)  
	float                                              MinDamagePerSecond;                                         // 0x0018   (0x0004)  
	float                                              MaxDamagePerSecond;                                         // 0x001C   (0x0004)  
	float                                              MinSpeedForDamage;                                          // 0x0020   (0x0004)  
	float                                              MaxSpeedForDamage;                                          // 0x0024   (0x0004)  
};

/// Struct /Script/ConZ.BoatParametersPerMovementPace_Deprecated
/// Size: 0x0018 (0x000000 - 0x000018)
struct FBoatParametersPerMovementPace_Deprecated
{ 
	bool                                               IsValid;                                                    // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              BaseMaxForwardSpeed;                                        // 0x0004   (0x0004)  
	bool                                               CanReverse;                                                 // 0x0008   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              BaseMaxReverseSpeed;                                        // 0x000C   (0x0004)  
	float                                              MinPrisonerStrength;                                        // 0x0010   (0x0004)  
	float                                              ThrottleMultiplier;                                         // 0x0014   (0x0004)  
};

/// Struct /Script/ConZ.BuoyancyTestPoint
/// Size: 0x0014 (0x000000 - 0x000014)
struct FBuoyancyTestPoint
{ 
	FVector                                            Location;                                                   // 0x0000   (0x000C)  
	float                                              Radius;                                                     // 0x000C   (0x0004)  
	float                                              Density;                                                    // 0x0010   (0x0004)  
};

/// Struct /Script/ConZ.ActiveHit
/// Size: 0x000C (0x000000 - 0x00000C)
struct FActiveHit
{ 
	unsigned char                                      UnknownData00_1[0xC];                                       // 0x0000   (0x000C)  MISSED
};

/// Struct /Script/ConZ.CharacterCreationMenuContext
/// Size: 0x0030 (0x000000 - 0x000030)
struct FCharacterCreationMenuContext
{ 
	bool                                               IsPreferringMultiplayer;                                    // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	FString                                            ServerIp;                                                   // 0x0008   (0x0010)  
	int32_t                                            ServerResponsePort;                                         // 0x0018   (0x0004)  
	int32_t                                            ServerGameplayPort;                                         // 0x001C   (0x0004)  
	FString                                            ServerAuthToken;                                            // 0x0020   (0x0010)  
};

/// Struct /Script/ConZ.CommonMaps
/// Size: 0x0078 (0x000000 - 0x000078)
struct FCommonMaps
{ 
	TWeakObjectPtr<UWorld*>                            MainMenu;                                                   // 0x0000   (0x0028)  
	TWeakObjectPtr<UWorld*>                            CharacterCreationMenu;                                      // 0x0028   (0x0028)  
	TWeakObjectPtr<UWorld*>                            Singleplayer;                                               // 0x0050   (0x0028)  
};

/// Struct /Script/ConZ.ConZGerstnerWavesParameters
/// Size: 0x0010 (0x000000 - 0x000010)
struct FConZGerstnerWavesParameters
{ 
	float                                              angle;                                                      // 0x0000   (0x0004)  
	float                                              Height;                                                     // 0x0004   (0x0004)  
	float                                              Length;                                                     // 0x0008   (0x0004)  
	float                                              Steepness;                                                  // 0x000C   (0x0004)  
};

/// Struct /Script/ConZ.ConZSliderStyle
/// Size: 0x0228 (0x000000 - 0x000228)
struct FConZSliderStyle
{ 
	FProgressBarStyle                                  Slider;                                                     // 0x0000   (0x01A0)  
	FSlateBrush                                        Thumb;                                                      // 0x01A0   (0x0088)  
};

/// Struct /Script/ConZ.ConZSquadMember
/// Size: 0x0020 (0x000000 - 0x000020)
struct FConZSquadMember
{ 
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0000   (0x0010)  MISSED
	FDbIntegerId                                       UserProfileId;                                              // 0x0010   (0x0008)  
	EConZSquadMemberRank                               Rank;                                                       // 0x0018   (0x0001)  
	bool                                               online;                                                     // 0x0019   (0x0001)  
	bool                                               InDanger;                                                   // 0x001A   (0x0001)  
	bool                                               IsAlive;                                                    // 0x001B   (0x0001)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.ConZSquadPendingMember
/// Size: 0x0010 (0x000000 - 0x000010)
struct FConZSquadPendingMember
{ 
	FDbIntegerId                                       UserProfileId;                                              // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0008   (0x0008)  MISSED
};

/// Struct /Script/ConZ.ConZWaterSplineControlPoint
/// Size: 0x0014 (0x000044 - 0x000058)
struct FConZWaterSplineControlPoint : FSplinePoint
{ 
	bool                                               selected;                                                   // 0x0044   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0045   (0x0003)  MISSED
	float                                              Width;                                                      // 0x0048   (0x0004)  
	float                                              MaxDepth;                                                   // 0x004C   (0x0004)  
	float                                              Speed;                                                      // 0x0050   (0x0004)  
	float                                              Opacity;                                                    // 0x0054   (0x0004)  
};

/// Struct /Script/ConZ.WaterQueryResult
/// Size: 0x00F0 (0x000000 - 0x0000F0)
struct FWaterQueryResult
{ 
	FVector                                            Location;                                                   // 0x0000   (0x000C)  
	bool                                               InWaterIncludingWaves;                                      // 0x000C   (0x0001)  
	bool                                               InWaterExcludingWaves;                                      // 0x000D   (0x0001)  
	bool                                               IsBottomValid;                                              // 0x000E   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x000F   (0x0001)  MISSED
	FVector                                            Surface;                                                    // 0x0010   (0x000C)  
	FVector                                            Bottom;                                                     // 0x001C   (0x000C)  
	FVector                                            Velocity;                                                   // 0x0028   (0x000C)  
	float                                              WaveHeight;                                                 // 0x0034   (0x0004)  
	FVector                                            WaveNormal;                                                 // 0x0038   (0x000C)  
	unsigned char                                      UnknownData01_5[0xC];                                       // 0x0044   (0x000C)  MISSED
	FVirtualizedWaterSpline                            WaterSpline;                                                // 0x0050   (0x00A0)  
};

/// Struct /Script/ConZ.VirtualizedWaterSpline
/// Size: 0x00A0 (0x000000 - 0x0000A0)
struct FVirtualizedWaterSpline
{ 
	unsigned char                                      UnknownData00_1[0xA0];                                      // 0x0000   (0x00A0)  MISSED
};

/// Struct /Script/ConZ.ConZPrisonerSpawnEquipmentProperties
/// Size: 0x0018 (0x000000 - 0x000018)
struct FConZPrisonerSpawnEquipmentProperties
{ 
	float                                              Elevation;                                                  // 0x0000   (0x0004)  
	bool                                               ClearEquipment;                                             // 0x0004   (0x0001)  
	bool                                               OverrideDefaultOutfit;                                      // 0x0005   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0006   (0x0002)  MISSED
	UPrisonerLoadout*                                  LoadoutFemale;                                              // 0x0008   (0x0008)  
	UPrisonerLoadout*                                  LoadoutMale;                                                // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.ConZOceanLocationProperties
/// Size: 0x0024 (0x000000 - 0x000024)
struct FConZOceanLocationProperties
{ 
	unsigned char                                      UnknownData00_1[0x24];                                      // 0x0000   (0x0024)  MISSED
};

/// Struct /Script/ConZ.ConZMapLocationProperties
/// Size: 0x0004 (0x000000 - 0x000004)
struct FConZMapLocationProperties
{ 
	unsigned char                                      UnknownData00_1[0x4];                                       // 0x0000   (0x0004)  MISSED
};

/// Struct /Script/ConZ.CookedFoodIngredientNetData
/// Size: 0x0014 (0x000000 - 0x000014)
struct FCookedFoodIngredientNetData
{ 
	FPrimaryAssetId                                    Resource;                                                   // 0x0000   (0x0010)  
	float                                              Mass;                                                       // 0x0010   (0x0004)  
};

/// Struct /Script/ConZ.CookingCategoryDropdownEntryData
/// Size: 0x0040 (0x000000 - 0x000040)
struct FCookingCategoryDropdownEntryData
{ 
	FGameplayTag                                       CookingCategoryTag;                                         // 0x0000   (0x0008)  
	FGameplayTag                                       NavigationTag;                                              // 0x0008   (0x0008)  
	TArray<FGameplayTag>                               NavigationHistory;                                          // 0x0010   (0x0010)  
	FText                                              DisplayName;                                                // 0x0020   (0x0018)  
	int32_t                                            IndentationLevel;                                           // 0x0038   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x003C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.HoverClickButtonVisualInfo
/// Size: 0x0020 (0x000000 - 0x000020)
struct FHoverClickButtonVisualInfo
{ 
	FLinearColor                                       BackgroundColor;                                            // 0x0000   (0x0010)  
	FLinearColor                                       BorderColor;                                                // 0x0010   (0x0010)  
};

/// Struct /Script/ConZ.CookingFoodProxyMesh
/// Size: 0x00B0 (0x000000 - 0x0000B0)
struct FCookingFoodProxyMesh
{ 
	UStaticMesh*                                       Mesh;                                                       // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_5[0x88];                                      // 0x0008   (0x0088)  MISSED
	UStaticMeshComponent*                              _meshComponent;                                             // 0x0090   (0x0008)  
	UAkComponent*                                      _thermalSoundEffectComponent;                               // 0x0098   (0x0008)  
	UAkAudioEvent*                                     _startCookingEvent;                                         // 0x00A0   (0x0008)  
	UAkAudioEvent*                                     _stopCookingEvent;                                          // 0x00A8   (0x0008)  
};

/// Struct /Script/ConZ.MainPointSnappedUtilities
/// Size: 0x00C8 (0x000000 - 0x0000C8)
struct FMainPointSnappedUtilities
{ 
	unsigned char                                      UnknownData00_2[0xA0];                                      // 0x0000   (0x00A0)  MISSED
	TArray<FEntityId>                                  _repSnappedKey;                                             // 0x00A0   (0x0010)  
	TArray<FEntityId>                                  _repSnappedValue;                                           // 0x00B0   (0x0010)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x00C0   (0x0008)  MISSED
};

/// Struct /Script/ConZ.CookingUtilitySlotArray
/// Size: 0x00B8 (0x000108 - 0x0001C0)
struct FCookingUtilitySlotArray : FFastArraySerializer
{ 
	TArray<FCookingUtilitySlotInstance>                _slots;                                                     // 0x0108   (0x0010)  
	unsigned char                                      UnknownData00_6[0xA8];                                      // 0x0118   (0x00A8)  MISSED
};

/// Struct /Script/ConZ.CookingUtilitySlotInstance
/// Size: 0x01EC (0x00000C - 0x0001F8)
struct FCookingUtilitySlotInstance : FFastArraySerializerItem
{ 
	unsigned char                                      UnknownData00_2[0x2C];                                      // 0x000C   (0x002C)  MISSED
	FDbIntegerId                                       _uniqueId;                                                  // 0x0038   (0x0008)  
	FGameplayTag                                       _utilityType;                                               // 0x0040   (0x0008)  
	char                                               _usage;                                                     // 0x0048   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0049   (0x0007)  MISSED
	FEntityId                                          _boundCookingUtility;                                       // 0x0050   (0x0008)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x0058   (0x0008)  MISSED
	UCookingRecipe*                                    _boundRecipe;                                               // 0x0060   (0x0008)  
	UCookingRecipe*                                    _clientReservedRecipe;                                      // 0x0068   (0x0008)  
	unsigned char                                      UnknownData03_5[0x2];                                       // 0x0070   (0x0002)  MISSED
	uint16_t                                           _repTemperature;                                            // 0x0072   (0x0002)  
	unsigned char                                      UnknownData04_5[0x8];                                       // 0x0074   (0x0008)  MISSED
	uint16_t                                           _repCookTime;                                               // 0x007C   (0x0002)  
	unsigned char                                      UnknownData05_5[0xA];                                       // 0x007E   (0x000A)  MISSED
	char                                               _cookQualityPacked;                                         // 0x0088   (0x0001)  
	unsigned char                                      UnknownData06_5[0x7];                                       // 0x0089   (0x0007)  MISSED
	FEntityId                                          _ownerCookingUtility;                                       // 0x0090   (0x0008)  
	unsigned char                                      UnknownData07_5[0x20];                                      // 0x0098   (0x0020)  MISSED
	TArray<uint32_t>                                   _packedLocations;                                           // 0x00B8   (0x0010)  
	TArray<char>                                       _internalCoordinatesPacked;                                 // 0x00C8   (0x0010)  
	unsigned char                                      UnknownData08_5[0x34];                                      // 0x00D8   (0x0034)  MISSED
	int32_t                                            _slotItemTagArrayIndex;                                     // 0x010C   (0x0004)  
	TWeakObjectPtr<AFoodItem*>                         _resultItem;                                                // 0x0110   (0x0008)  
	unsigned char                                      UnknownData09_5[0x54];                                      // 0x0118   (0x0054)  MISSED
	float                                              _targetCookTime;                                            // 0x016C   (0x0004)  
	unsigned char                                      UnknownData10_5[0x4];                                       // 0x0170   (0x0004)  MISSED
	bool                                               _cookingFinished;                                           // 0x0174   (0x0001)  
	bool                                               _cookingStartFailed;                                        // 0x0175   (0x0001)  
	unsigned char                                      UnknownData11_5[0x1];                                       // 0x0176   (0x0001)  MISSED
	bool                                               _cookingAborted;                                            // 0x0177   (0x0001)  
	unsigned char                                      UnknownData12_5[0x8];                                       // 0x0178   (0x0008)  MISSED
	FDbIntegerId                                       _parentInstance;                                            // 0x0180   (0x0008)  
	unsigned char                                      UnknownData13_6[0x70];                                      // 0x0188   (0x0070)  MISSED
};

/// Struct /Script/ConZ.CookingResult
/// Size: 0x0028 (0x000000 - 0x000028)
struct FCookingResult
{ 
	TWeakObjectPtr<UClass*>                            Item;                                                       // 0x0000   (0x0028)  
};

/// Struct /Script/ConZ.RecipeIngredient
/// Size: 0x0030 (0x000000 - 0x000030)
struct FRecipeIngredient
{ 
	FText                                              IngredientTitle;                                            // 0x0000   (0x0018)  
	bool                                               IsResource;                                                 // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0019   (0x0007)  MISSED
	TArray<FPossibleRecipeIngredient>                  PossibleIngredient;                                         // 0x0020   (0x0010)  
};

/// Struct /Script/ConZ.PossibleRecipeIngredient
/// Size: 0x0048 (0x000000 - 0x000048)
struct FPossibleRecipeIngredient
{ 
	bool                                               IsResource;                                                 // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	TWeakObjectPtr<UClass*>                            Item;                                                       // 0x0008   (0x0028)  
	bool                                               ShouldConsumeWhole;                                         // 0x0030   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	int32_t                                            Usage;                                                      // 0x0034   (0x0004)  
	UClass*                                            ResourceType;                                               // 0x0038   (0x0008)  
	float                                              Liters;                                                     // 0x0040   (0x0004)  
	float                                              NutrientInclusionFactor;                                    // 0x0044   (0x0004)  
};

/// Struct /Script/ConZ.CookingRecipeRegistryEntry
/// Size: 0x0014 (0x000000 - 0x000014)
struct FCookingRecipeRegistryEntry
{ 
	bool                                               Enabled;                                                    // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	FPrimaryAssetId                                    AssetId;                                                    // 0x0004   (0x0010)  
};

/// Struct /Script/ConZ.CookingSortingDropdownEntryData
/// Size: 0x00A8 (0x000000 - 0x0000A8)
struct FCookingSortingDropdownEntryData
{ 
	FText                                              DisplayName;                                                // 0x0000   (0x0018)  
	ECookingRecipesSort                                RecipesSort;                                                // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0019   (0x0007)  MISSED
	FSlateBrush                                        Icon;                                                       // 0x0020   (0x0088)  
};

/// Struct /Script/ConZ.CookingUtilityFilterDropdownEntryData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FCookingUtilityFilterDropdownEntryData
{ 
	FGameplayTag                                       CookingUtilityTag;                                          // 0x0000   (0x0008)  
	FText                                              DisplayName;                                                // 0x0008   (0x0018)  
};

/// Struct /Script/ConZ.CookingUtilityMainSnapPoint
/// Size: 0x0048 (0x000000 - 0x000048)
struct FCookingUtilityMainSnapPoint
{ 
	FGameplayTag                                       UtilitySlotType;                                            // 0x0000   (0x0008)  
	FVector                                            LocationOffset;                                             // 0x0008   (0x000C)  
	float                                              SnapRadius;                                                 // 0x0014   (0x0004)  
	bool                                               CanAllUtilityTypesBePlacedOn;                               // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0019   (0x0007)  MISSED
	FGameplayTagContainer                              UtilityTypesThatCanBePlaced;                                // 0x0020   (0x0020)  
	int32_t                                            RepresentativeSlotId;                                       // 0x0040   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Struct /Script/ConZ.CookingUtilitySlot
/// Size: 0x0088 (0x000000 - 0x000088)
struct FCookingUtilitySlot
{ 
	FGameplayTag                                       UtilitySlotType;                                            // 0x0000   (0x0008)  
	FVector                                            LocationOffset;                                             // 0x0008   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	TArray<FVector>                                    MovementEndpoints;                                          // 0x0018   (0x0010)  
	float                                              CircularShapeRadius;                                        // 0x0028   (0x0004)  
	float                                              ThermalConduction;                                          // 0x002C   (0x0004)  
	bool                                               CanAllUtilityTypesBePlacedOn;                               // 0x0030   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	FGameplayTagContainer                              UtilityTypesThatCanBePlaced;                                // 0x0038   (0x0020)  
	FVector                                            CookMeshVisualOffset;                                       // 0x0058   (0x000C)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0064   (0x0004)  MISSED
	UCookingUtilityUIDataAsset*                        CookingUtilityUIDataAsset;                                  // 0x0068   (0x0008)  
	bool                                               HighlightSlot;                                              // 0x0070   (0x0001)  
	unsigned char                                      UnknownData03_6[0x17];                                      // 0x0071   (0x0017)  MISSED
};

/// Struct /Script/ConZ.CookingUtilitySlotInstance_UserSetData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCookingUtilitySlotInstance_UserSetData
{ 
	int32_t                                            SlotId;                                                     // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	TArray<char>                                       InternalCoordinates;                                        // 0x0008   (0x0010)  
};

/// Struct /Script/ConZ.CookingUtilityUITableRow
/// Size: 0x0010 (0x000008 - 0x000018)
struct FCookingUtilityUITableRow : FTableRowBase
{ 
	FGameplayTag                                       UtilitySlotType;                                            // 0x0008   (0x0008)  
	UCookingUtilityUIDataAsset*                        CookingUtilityUIDataAsset;                                  // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.CraftingPair
/// Size: 0x0028 (0x000000 - 0x000028)
struct FCraftingPair
{ 
	UClass*                                            CraftedItem;                                                // 0x0000   (0x0008)  
	UClass*                                            CraftingItem;                                               // 0x0008   (0x0008)  
	int32_t                                            CraftedItemCount;                                           // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	TArray<UClass*>                                    BonusItems;                                                 // 0x0018   (0x0010)  
};

/// Struct /Script/ConZ.CraftingItem
/// Size: 0x0030 (0x000000 - 0x000030)
struct FCraftingItem
{ 
	FString                                            Description;                                                // 0x0000   (0x0010)  
	TArray<FPossibleItem>                              PossibleItems;                                              // 0x0010   (0x0010)  
	EQuantityScalingType                               ScalingType;                                                // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0021   (0x0007)  MISSED
	UAkAudioEvent*                                     FillSound;                                                  // 0x0028   (0x0008)  
};

/// Struct /Script/ConZ.PossibleItem
/// Size: 0x0030 (0x000000 - 0x000030)
struct FPossibleItem
{ 
	UCraftingItemTag*                                  CraftingTag;                                                // 0x0000   (0x0008)  
	UClass*                                            Item;                                                       // 0x0008   (0x0008)  
	int32_t                                            Quantity;                                                   // 0x0010   (0x0004)  
	int32_t                                            Usage;                                                      // 0x0014   (0x0004)  
	float                                              usageWeight;                                                // 0x0018   (0x0004)  
	ECraftingType                                      CraftingType;                                               // 0x001C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x001D   (0x0003)  MISSED
	int32_t                                            QuantityVariation;                                          // 0x0020   (0x0004)  
	float                                              WeightVariation;                                            // 0x0024   (0x0004)  
	bool                                               SpawnHere;                                                  // 0x0028   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0029   (0x0007)  MISSED
};

/// Struct /Script/ConZ.CraftingSkillLevelData
/// Size: 0x0014 (0x000000 - 0x000014)
struct FCraftingSkillLevelData
{ 
	float                                              CraftingTime;                                               // 0x0000   (0x0004)  
	float                                              ProcessingTime;                                             // 0x0004   (0x0004)  
	float                                              Points;                                                     // 0x0008   (0x0004)  
	float                                              Probability_Add;                                            // 0x000C   (0x0004)  
	float                                              Probability_Multiply;                                       // 0x0010   (0x0004)  
};

/// Struct /Script/ConZ.RecipeAvailabilityState
/// Size: 0x00C8 (0x000000 - 0x0000C8)
struct FRecipeAvailabilityState
{ 
	unsigned char                                      UnknownData00_1[0xC8];                                      // 0x0000   (0x00C8)  MISSED
};

/// Struct /Script/ConZ.RecipeItemState
/// Size: 0x001C (0x000000 - 0x00001C)
struct FRecipeItemState
{ 
	unsigned char                                      UnknownData00_1[0x1C];                                      // 0x0000   (0x001C)  MISSED
};

/// Struct /Script/ConZ.IngredientClassesArray
/// Size: 0x0010 (0x000000 - 0x000010)
struct FIngredientClassesArray
{ 
	TArray<TWeakObjectPtr>                             IngredientClasses;                                          // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.ItemClassesArray
/// Size: 0x0010 (0x000000 - 0x000010)
struct FItemClassesArray
{ 
	TArray<UClass*>                                    ItemClasses;                                                // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.CraftingRecipe
/// Size: 0x0038 (0x000000 - 0x000038)
struct FCraftingRecipe
{ 
	TArray<FCraftingRecipeCraftableItem>               CraftableItems;                                             // 0x0000   (0x0010)  
	TArray<FCraftingRecipeCraftingIngredient>          CraftingIngredients;                                        // 0x0010   (0x0010)  
	UClass*                                            SkillNeeded;                                                // 0x0020   (0x0008)  
	ESkillLevel                                        SkillLevelNeeded;                                           // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0029   (0x0007)  MISSED
	UCraftableItem*                                    CraftableItem;                                              // 0x0030   (0x0008)  
};

/// Struct /Script/ConZ.CraftingRecipeCraftingIngredient
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCraftingRecipeCraftingIngredient
{ 
	TArray<FCraftingRecipeCraftingItem>                CraftingItems;                                              // 0x0000   (0x0010)  
	bool                                               IsTool;                                                     // 0x0010   (0x0001)  
	bool                                               IsOptional;                                                 // 0x0011   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0012   (0x0006)  MISSED
};

/// Struct /Script/ConZ.CraftingRecipeCraftingItem
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCraftingRecipeCraftingItem
{ 
	UClass*                                            ItemClass;                                                  // 0x0000   (0x0008)  
	int32_t                                            Quantity;                                                   // 0x0008   (0x0004)  
	bool                                               IsOptional;                                                 // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x000D   (0x0003)  MISSED
};

/// Struct /Script/ConZ.CraftingRecipeCraftableItem
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCraftingRecipeCraftableItem
{ 
	UClass*                                            ItemClass;                                                  // 0x0000   (0x0008)  
	bool                                               EnoughSkill;                                                // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
};

/// Struct /Script/ConZ.CraftingSlot
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCraftingSlot
{ 
	FString                                            SlotName;                                                   // 0x0000   (0x0010)  
	UClass*                                            SlotType;                                                   // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.CriminalRecordUIData
/// Size: 0x0238 (0x000000 - 0x000238)
struct FCriminalRecordUIData
{ 
	unsigned char                                      UnknownData00_1[0x238];                                     // 0x0000   (0x0238)  MISSED
};

/// Struct /Script/ConZ.SkillTemplateUIData
/// Size: 0x0038 (0x000000 - 0x000038)
struct FSkillTemplateUIData
{ 
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0000   (0x0038)  MISSED
};

/// Struct /Script/ConZ.CTFParameters
/// Size: 0x0030 (0x000000 - 0x000030)
struct FCTFParameters
{ 
	float                                              FlagResetDuration;                                          // 0x0000   (0x0004)  
	bool                                               AllowReturns;                                               // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0005   (0x0003)  MISSED
	int32_t                                            CaptureLimit;                                               // 0x0008   (0x0004)  
	FGameEventRewardPoints                             PointsPerPickup;                                            // 0x000C   (0x000C)  
	FGameEventRewardPoints                             PointsPerCapture;                                           // 0x0018   (0x000C)  
	FGameEventRewardPoints                             PointsPerReturn;                                            // 0x0024   (0x000C)  
};

/// Struct /Script/ConZ.GameEventRewardPoints
/// Size: 0x000C (0x000000 - 0x00000C)
struct FGameEventRewardPoints
{ 
	int32_t                                            Cash;                                                       // 0x0000   (0x0004)  
	int32_t                                            Score;                                                      // 0x0004   (0x0004)  
	float                                              FamePoints;                                                 // 0x0008   (0x0004)  
};

/// Struct /Script/ConZ.CustomZoneDisplayData
/// Size: 0x0040 (0x000000 - 0x000040)
struct FCustomZoneDisplayData
{ 
	FString                                            Value;                                                      // 0x0000   (0x0010)  
	FText                                              Name;                                                       // 0x0010   (0x0018)  
	FText                                              Description;                                                // 0x0028   (0x0018)  
};

/// Struct /Script/ConZ.CustomZoneRegion
/// Size: 0x0038 (0x000000 - 0x000038)
struct FCustomZoneRegion
{ 
	FString                                            Name;                                                       // 0x0000   (0x0010)  
	FVector2D                                          Location;                                                   // 0x0010   (0x0008)  
	FVector2D                                          Size;                                                       // 0x0018   (0x0008)  
	ECustomZoneShape                                   Shape;                                                      // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0021   (0x0003)  MISSED
	int32_t                                            ConfigurationIndex;                                         // 0x0024   (0x0004)  
	FName                                              UniqueDefaultZoneName;                                      // 0x0028   (0x0008)  
	EDefaultCustomZoneState                            DefaultZoneState;                                           // 0x0030   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Struct /Script/ConZ.CustomZoneConfiguration
/// Size: 0x0040 (0x000000 - 0x000040)
struct FCustomZoneConfiguration
{ 
	FString                                            Name;                                                       // 0x0000   (0x0010)  
	ECustomZoneEventHandlingMethod                     EventHandlingMethod;                                        // 0x0010   (0x0014)  
	FLinearColor                                       Color;                                                      // 0x0024   (0x0010)  
	FName                                              UniqueDefaultZoneName;                                      // 0x0034   (0x0008)  
	EDefaultCustomZoneState                            DefaultZoneState;                                           // 0x003C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x003D   (0x0003)  MISSED
};

/// Struct /Script/ConZ.DamageTargetTypeMapping
/// Size: 0x0018 (0x000000 - 0x000018)
struct FDamageTargetTypeMapping
{ 
	EDamageTargetType                                  Type;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	TArray<UClass*>                                    Classes;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/ConZ.RadialDamageDescription
/// Size: 0x0024 (0x000000 - 0x000024)
struct FRadialDamageDescription
{ 
	float                                              RandomDamageMultiplier;                                     // 0x0000   (0x0004)  
	float                                              MinRandomMultiplierChance;                                  // 0x0004   (0x0004)  
	float                                              MaxRandomMultiplierChance;                                  // 0x0008   (0x0004)  
	FVector                                            BlastDirection;                                             // 0x000C   (0x000C)  
	float                                              BlastInnerAngle;                                            // 0x0018   (0x0004)  
	float                                              BlastOuterAngle;                                            // 0x001C   (0x0004)  
	float                                              BlastAngleDamageFalloff;                                    // 0x0020   (0x0004)  
};

/// Struct /Script/ConZ.DamageMultiplierTracker
/// Size: 0x0028 (0x000000 - 0x000028)
struct FDamageMultiplierTracker
{ 
	float                                              _baseDamage;                                                // 0x0000   (0x0004)  
	float                                              _finalDamage;                                               // 0x0004   (0x0004)  
	TArray<FString>                                    _appliedMultiplierNames;                                    // 0x0008   (0x0010)  
	TArray<float>                                      _appliedMultiplierValues;                                   // 0x0018   (0x0010)  
};

/// Struct /Script/ConZ.ScumRadialDamageEvent
/// Size: 0x0008 (0x000040 - 0x000048)
struct FScumRadialDamageEvent : FRadialDamageEvent
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0040   (0x0008)  MISSED
};

/// Struct /Script/ConZ.DcxWheeledVehicleFlatTireWheelConfiguration
/// Size: 0x0050 (0x000000 - 0x000050)
struct FDcxWheeledVehicleFlatTireWheelConfiguration
{ 
	FDcxVehicleWheelData                               FlatTireWheelData;                                          // 0x0000   (0x0020)  
	unsigned char                                      UnknownData00_5[0x20];                                      // 0x0020   (0x0020)  MISSED
	UDcxVehicleTire*                                   FlatTire;                                                   // 0x0040   (0x0008)  
	UDcxVehicleTire*                                   OriginalTire;                                               // 0x0048   (0x0008)  
};

/// Struct /Script/ConZ.DcxWheeledVehicleTireEffectProperties
/// Size: 0x0014 (0x000000 - 0x000014)
struct FDcxWheeledVehicleTireEffectProperties
{ 
	FVector                                            TireLocalOffset;                                            // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x000C   (0x0008)  MISSED
};

/// Struct /Script/ConZ.DcxVehicleTireParticleData
/// Size: 0x0014 (0x000000 - 0x000014)
struct FDcxVehicleTireParticleData
{ 
	float                                              MinLateralSlip;                                             // 0x0000   (0x0004)  
	float                                              MaxLateralSlip;                                             // 0x0004   (0x0004)  
	float                                              MinLongitudinalSlip;                                        // 0x0008   (0x0004)  
	float                                              MaxLongitudinalSlip;                                        // 0x000C   (0x0004)  
	float                                              ParticleScaleModifier;                                      // 0x0010   (0x0004)  
};

/// Struct /Script/ConZ.DeathmatchParameters
/// Size: 0x0014 (0x000000 - 0x000014)
struct FDeathmatchParameters
{ 
	int32_t                                            RoundScoreLimit;                                            // 0x0000   (0x0004)  
	float                                              AreaRestrictionInterval;                                    // 0x0004   (0x0004)  
	float                                              AreaRestrictionDuration;                                    // 0x0008   (0x0004)  
	float                                              AreaRestrictionStep;                                        // 0x000C   (0x0004)  
	float                                              BarrierHeatUpDuration;                                      // 0x0010   (0x0004)  
};

/// Struct /Script/ConZ.PrisonerInjuryTypeLikelihoods
/// Size: 0x0020 (0x000000 - 0x000020)
struct FPrisonerInjuryTypeLikelihoods
{ 
	FString                                            Name;                                                       // 0x0000   (0x0010)  
	float                                              BoneInjuryLikelihood;                                       // 0x0010   (0x0004)  
	float                                              MuscleInjuryLikelihood;                                     // 0x0014   (0x0004)  
	float                                              OrganInjuryLikelihood;                                      // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.DemolitionSkillParametersPerSkillLevel
/// Size: 0x0068 (0x000000 - 0x000068)
struct FDemolitionSkillParametersPerSkillLevel
{ 
	float                                              TrapQuality;                                                // 0x0000   (0x0004)  
	int32_t                                            NumberOfWires;                                              // 0x0004   (0x0004)  
	int32_t                                            GreenWiresNumber;                                           // 0x0008   (0x0004)  
	int32_t                                            RedWiresNumber;                                             // 0x000C   (0x0004)  
	int32_t                                            NumberOfDefuseAttempts;                                     // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	TMap<ETrapType, FDemolitionSkillParametersPerTrapType> ParametersPerTrapType;                                  // 0x0018   (0x0050)  
};

/// Struct /Script/ConZ.DemolitionSkillParametersPerTrapType
/// Size: 0x0004 (0x000000 - 0x000004)
struct FDemolitionSkillParametersPerTrapType
{ 
	float                                              DefuseTime;                                                 // 0x0000   (0x0004)  
};

/// Struct /Script/ConZ.DemolitionSkillExperienceAwards
/// Size: 0x0020 (0x000000 - 0x000020)
struct FDemolitionSkillExperienceAwards
{ 
	float                                              PointsForArmedTrap;                                         // 0x0000   (0x0004)  
	float                                              PointsForDisarmedOwnedTrap;                                 // 0x0004   (0x0004)  
	float                                              PointsForDisarmedEnemyTrap;                                 // 0x0008   (0x0004)  
	float                                              PointsForDisarmedPracticeTrap;                              // 0x000C   (0x0004)  
	float                                              PointsDecreasePerPracticeTrapTimerSecondsIncrease;          // 0x0010   (0x0004)  
	float                                              PointsIncreasePerPracticeTrapTimerSecondsDecrease;          // 0x0014   (0x0004)  
	float                                              PointsForAddedTrigger;                                      // 0x0018   (0x0004)  
	float                                              PointsForCraftedTrap;                                       // 0x001C   (0x0004)  
};

/// Struct /Script/ConZ.TooltipPanelData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FTooltipPanelData
{ 
	UClass*                                            ItemClass;                                                  // 0x0000   (0x0008)  
	UClass*                                            WidgetClass;                                                // 0x0008   (0x0008)  
	ETooltipPanelType                                  PanelType;                                                  // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0011   (0x0003)  MISSED
	int32_t                                            Layer;                                                      // 0x0014   (0x0004)  
	bool                                               IsEditorOnly;                                               // 0x0018   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0019   (0x0007)  MISSED
};

/// Struct /Script/ConZ.WheelData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FWheelData
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	UStaticMeshComponent*                              WheelMesh;                                                  // 0x0008   (0x0008)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x0010   (0x0018)  MISSED
};

/// Struct /Script/ConZ.DialogInfoContainer
/// Size: 0x0010 (0x000000 - 0x000010)
struct FDialogInfoContainer
{ 
	TArray<FDialogueInfo>                              DialogInfos;                                                // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.DialogueInfo
/// Size: 0x0028 (0x000000 - 0x000028)
struct FDialogueInfo
{ 
	UAkAudioEvent*                                     VoiceOver;                                                  // 0x0000   (0x0008)  
	FText                                              Text;                                                       // 0x0008   (0x0018)  
	float                                              Duration;                                                   // 0x0020   (0x0004)  
	EDialogType                                        DialogType;                                                 // 0x0024   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0025   (0x0003)  MISSED
};

/// Struct /Script/ConZ.DistantLevelDescription
/// Size: 0x00A0 (0x000000 - 0x0000A0)
struct FDistantLevelDescription
{ 
	FString                                            Name;                                                       // 0x0000   (0x0010)  
	FTransform                                         Transform;                                                  // 0x0010   (0x0030)  
	EDistantMeshStreamingBehavior                      MeshStreamingBehavior;                                      // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0041   (0x0003)  MISSED
	float                                              MaxDrawDistance;                                            // 0x0044   (0x0004)  
	bool                                               NeverDistanceCull;                                          // 0x0048   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0049   (0x0003)  MISSED
	FBoxSphereBounds                                   MeshBounds;                                                 // 0x004C   (0x001C)  
	TWeakObjectPtr<UStaticMesh*>                       CollisionMesh;                                              // 0x0068   (0x0028)  
	TArray<TWeakObjectPtr>                             MeshLODs;                                                   // 0x0090   (0x0010)  
};

/// Struct /Script/ConZ.DoorUnlockDataCollection
/// Size: 0x0010 (0x000000 - 0x000010)
struct FDoorUnlockDataCollection
{ 
	TArray<FDoorUnlockDataDescription>                 Data;                                                       // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.DoorUnlockDataDescription
/// Size: 0x0010 (0x000000 - 0x000010)
struct FDoorUnlockDataDescription
{ 
	UClass*                                            DoorUnlockData;                                             // 0x0000   (0x0008)  
	int32_t                                            ProbabilityCount;                                           // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.SlidingDoorPartInfo
/// Size: 0x0020 (0x000000 - 0x000020)
struct FSlidingDoorPartInfo
{ 
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0000   (0x0020)  MISSED
};

/// Struct /Script/ConZ.DrivingSkillParametersPerSkillLevel
/// Size: 0x0100 (0x000000 - 0x000100)
struct FDrivingSkillParametersPerSkillLevel
{ 
	float                                              EngineStartViaMotionDuration;                               // 0x0000   (0x0004)  
	float                                              EngineStartViaMotionFailureChance;                          // 0x0004   (0x0004)  
	float                                              EngineReadyDelay;                                           // 0x0008   (0x0004)  
	float                                              EngineFailedToStartDelay;                                   // 0x000C   (0x0004)  
	float                                              EngineFailedToStartNoFuelDelay;                             // 0x0010   (0x0004)  
	float                                              EngineFailedToStartNoBatteryDelay;                          // 0x0014   (0x0004)  
	float                                              EngineStalledDelay;                                         // 0x0018   (0x0004)  
	float                                              MaxSpeedModifier;                                           // 0x001C   (0x0004)  
	float                                              ThrottleModifier;                                           // 0x0020   (0x0004)  
	float                                              BrakeModifier;                                              // 0x0024   (0x0004)  
	float                                              WheelSteeringLerpSpeedMultiplier;                           // 0x0028   (0x0004)  
	FEngineHandlingParameters                          EngineHandlingParameters;                                   // 0x002C   (0x0008)  
	FGearboxHandlingParameters                         GearboxHandlingParameters;                                  // 0x0034   (0x000C)  
	FDrivingSkillEngineStallingParameters              EngineStallingByAccelerationParameters;                     // 0x0040   (0x0040)  
	FDrivingSkillEngineStallingParameters              EngineStallingByUpShiftParameters;                          // 0x0080   (0x0040)  
	FDrivingSkillEngineStallingParameters              EngineStallingWhenStartingViaMotion;                        // 0x00C0   (0x0040)  
};

/// Struct /Script/ConZ.GearboxHandlingParameters
/// Size: 0x000C (0x000000 - 0x00000C)
struct FGearboxHandlingParameters
{ 
	float                                              GearChangeDelayMultiplier;                                  // 0x0000   (0x0004)  
	float                                              GearUpRatioMultiplier;                                      // 0x0004   (0x0004)  
	float                                              GearDownRatioMultiplier;                                    // 0x0008   (0x0004)  
};

/// Struct /Script/ConZ.DroneVisitTimeData
/// Size: 0x0008 (0x000000 - 0x000008)
struct FDroneVisitTimeData
{ 
	float                                              MinVisitTime;                                               // 0x0000   (0x0004)  
	float                                              MaxVisitTime;                                               // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.DropZoneParameters
/// Size: 0x002C (0x000000 - 0x00002C)
struct FDropZoneParameters
{ 
	float                                              IntroAnnouncementDelay;                                     // 0x0000   (0x0004)  
	float                                              WarmupPhaseDuration;                                        // 0x0004   (0x0004)  
	float                                              CrateDropDuration;                                          // 0x0008   (0x0004)  
	float                                              SearchPhaseTimeLimit;                                       // 0x000C   (0x0004)  
	float                                              CargoDropDuration;                                          // 0x0010   (0x0004)  
	float                                              CapturePhaseTimeLimit;                                      // 0x0014   (0x0004)  
	float                                              CargoOpeningDuration;                                       // 0x0018   (0x0004)  
	bool                                               SkipKeyPhase;                                               // 0x001C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x001D   (0x0003)  MISSED
	FGameEventRewardPoints                             PointsPerActivation;                                        // 0x0020   (0x000C)  
};

/// Struct /Script/ConZ.DummyCollisionCapsuleInfo
/// Size: 0x0050 (0x000000 - 0x000050)
struct FDummyCollisionCapsuleInfo
{ 
	TWeakObjectPtr<AActor*>                            AttachParent;                                               // 0x0000   (0x0008)  
	FGameplayTag                                       Attachment;                                                 // 0x0008   (0x0008)  
	FTransform                                         RelativeTransform;                                          // 0x0010   (0x0030)  
	float                                              UnscaledRadius;                                             // 0x0040   (0x0004)  
	float                                              UnscaledHalfHeight;                                         // 0x0044   (0x0004)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0048   (0x0008)  MISSED
};

/// Struct /Script/ConZ.BankCardTypeData
/// Size: 0x0048 (0x000000 - 0x000048)
struct FBankCardTypeData
{ 
	TWeakObjectPtr<UClass*>                            ItemClass;                                                  // 0x0000   (0x0028)  
	int32_t                                            PurchasePrice;                                              // 0x0028   (0x0004)  
	ECurrencyType                                      PurchasePriceCurrency;                                      // 0x002C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x002D   (0x0003)  MISSED
	int32_t                                            MaxWrongPinAttempts;                                        // 0x0030   (0x0004)  
	int32_t                                            FreeRenewalNum;                                             // 0x0034   (0x0004)  
	int32_t                                            DailyWithdrawLimit;                                         // 0x0038   (0x0004)  
	int32_t                                            DailyDepositLimit;                                          // 0x003C   (0x0004)  
	int32_t                                            PinComplexity;                                              // 0x0040   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Struct /Script/ConZ.CurrencyDescription
/// Size: 0x0068 (0x000000 - 0x000068)
struct FCurrencyDescription
{ 
	FString                                            CurrencySymbol;                                             // 0x0000   (0x0010)  
	FText                                              CurrencyName;                                               // 0x0010   (0x0018)  
	FString                                            ConfigFileSymbol;                                           // 0x0028   (0x0010)  
	FSlateColor                                        UITextColor;                                                // 0x0038   (0x0028)  
	EBankCardType                                      RequiredBankCardTypeToPerformTransactions;                  // 0x0060   (0x0001)  
	bool                                               MustBeOwnerOfBankCard;                                      // 0x0061   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0062   (0x0006)  MISSED
};

/// Struct /Script/ConZ.DamageOverTimeUpdateGroup
/// Size: 0x0018 (0x000000 - 0x000018)
struct FDamageOverTimeUpdateGroup
{ 
	float                                              UpdateInterval;                                             // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x14];                                      // 0x0004   (0x0014)  MISSED
};

/// Struct /Script/ConZ.EnduranceSkillParametersPerSkillLevel
/// Size: 0x0018 (0x000000 - 0x000018)
struct FEnduranceSkillParametersPerSkillLevel
{ 
	FExperienceDependentFloat                          EnergyConsumptionMultiplier;                                // 0x0000   (0x0008)  
	FExperienceDependentFloat                          WaterConsumptionMultiplier;                                 // 0x0008   (0x0008)  
	FExperienceDependentFloat                          StaminaRecoveryMultiplier;                                  // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.EnduranceSkillExperienceAwards
/// Size: 0x000C (0x000000 - 0x00000C)
struct FEnduranceSkillExperienceAwards
{ 
	float                                              PointsPerMinuteOfWalking;                                   // 0x0000   (0x0004)  
	float                                              PointsPerMinuteOfJogging;                                   // 0x0004   (0x0004)  
	float                                              PointsPerMinuteOfRunning;                                   // 0x0008   (0x0004)  
};

/// Struct /Script/ConZ.EngineeringSkillExperienceAwards
/// Size: 0x0010 (0x000000 - 0x000010)
struct FEngineeringSkillExperienceAwards
{ 
	float                                              RepairExperienceMultiplier;                                 // 0x0000   (0x0004)  
	float                                              FillFuelExperienceMultiplier;                               // 0x0004   (0x0004)  
	float                                              DrainFuelExperienceMultiplier;                              // 0x0008   (0x0004)  
	float                                              ChargeBatteryExperienceMultiplier;                          // 0x000C   (0x0004)  
};

/// Struct /Script/ConZ.EngineeringSkillParametersPerSkillLevel
/// Size: 0x0020 (0x000000 - 0x000020)
struct FEngineeringSkillParametersPerSkillLevel
{ 
	float                                              RepairRadius;                                               // 0x0000   (0x0004)  
	float                                              RepairTimeMultiplier;                                       // 0x0004   (0x0004)  
	float                                              ResultQuality;                                              // 0x0008   (0x0004)  
	float                                              IngredientMultiplier;                                       // 0x000C   (0x0004)  
	float                                              ToolUsageMultiplier;                                        // 0x0010   (0x0004)  
	float                                              FillFuelDurationMultiplier;                                 // 0x0014   (0x0004)  
	float                                              DrainFuelDurationMultiplier;                                // 0x0018   (0x0004)  
	float                                              ChargeBatteryDurationMultiplier;                            // 0x001C   (0x0004)  
};

/// Struct /Script/ConZ.EntitySetup_Component
/// Size: 0x0010 (0x000000 - 0x000010)
struct FEntitySetup_Component
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	UEntityComponentSetup*                             Component;                                                  // 0x0008   (0x0008)  
};

/// Struct /Script/ConZ.EntityComponentId
/// Size: 0x0010 (0x000000 - 0x000010)
struct FEntityComponentId
{ 
	FEntityId                                          EntityId;                                                   // 0x0000   (0x0008)  
	FName                                              ComponentName;                                              // 0x0008   (0x0008)  
};

/// Struct /Script/ConZ.EntityToCreateOnStartupParams
/// Size: 0x0010 (0x000000 - 0x000010)
struct FEntityToCreateOnStartupParams
{ 
	UClass*                                            Entity;                                                     // 0x0000   (0x0008)  
	bool                                               CreateOnServer;                                             // 0x0008   (0x0001)  
	bool                                               CreateOnClient;                                             // 0x0009   (0x0001)  
	bool                                               CreateInShippingBuilds;                                     // 0x000A   (0x0001)  
	unsigned char                                      UnknownData00_6[0x5];                                       // 0x000B   (0x0005)  MISSED
};

/// Struct /Script/ConZ.ExplosionRadialDamageEvent
/// Size: 0x0068 (0x000048 - 0x0000B0)
struct FExplosionRadialDamageEvent : FScumRadialDamageEvent
{ 
	UClass*                                            DamageCustomizationClass;                                   // 0x0048   (0x0008)  
	float                                              force;                                                      // 0x0050   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0054   (0x0004)  MISSED
	FTargetTypeDamageMultiplier                        TargetTypeMultiplier;                                       // 0x0058   (0x0010)  
	UObject*                                           DamageDealer;                                               // 0x0068   (0x0008)  
	AActor*                                            DirectlyHitActor;                                           // 0x0070   (0x0008)  
	FName                                              BoneName;                                                   // 0x0078   (0x0008)  
	bool                                               IsEventDamage;                                              // 0x0080   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2F];                                      // 0x0081   (0x002F)  MISSED
};

/// Struct /Script/ConZ.FamePointPenalties
/// Size: 0x0018 (0x000000 - 0x000018)
struct FFamePointPenalties
{ 
	float                                              IronLockLockpick;                                           // 0x0000   (0x0004)  
	float                                              SilverLockLockpick;                                         // 0x0004   (0x0004)  
	float                                              GoldLockLockpick;                                           // 0x0008   (0x0004)  
	float                                              VehiclePurchased;                                           // 0x000C   (0x0004)  
	float                                              WheelBarrowPurchased;                                       // 0x0010   (0x0004)  
	float                                              PrisonerCommittedSuicide;                                   // 0x0014   (0x0004)  
};

/// Struct /Script/ConZ.FamePointAwards
/// Size: 0x0160 (0x000000 - 0x000160)
struct FFamePointAwards
{ 
	float                                              BaseFameInflux;                                             // 0x0000   (0x0004)  
	float                                              MovingOnFoot;                                               // 0x0004   (0x0004)  
	float                                              MovingDriving;                                              // 0x0008   (0x0004)  
	float                                              MovingFlying;                                               // 0x000C   (0x0004)  
	float                                              RustyLockLockpick;                                          // 0x0010   (0x0004)  
	float                                              IronLockLockpick;                                           // 0x0014   (0x0004)  
	float                                              SilverLockLockpick;                                         // 0x0018   (0x0004)  
	float                                              GoldLockLockpick;                                           // 0x001C   (0x0004)  
	float                                              BombDefuse;                                                 // 0x0020   (0x0004)  
	float                                              OwningTheBase;                                              // 0x0024   (0x0004)  
	FTimespan                                          MaxTimeFromLastLogin;                                       // 0x0028   (0x0008)  
	float                                              BaseOvertakeMultiplier;                                     // 0x0030   (0x0004)  
	float                                              BuiltBlueprintNoSkill;                                      // 0x0034   (0x0004)  
	float                                              BuiltBlueprintBasic;                                        // 0x0038   (0x0004)  
	float                                              BuiltBlueprintMedium;                                       // 0x003C   (0x0004)  
	float                                              BuiltBlueprintAdvanced;                                     // 0x0040   (0x0004)  
	float                                              BuiltBaseElementNoSkill;                                    // 0x0044   (0x0004)  
	float                                              BuiltBaseElementBasic;                                      // 0x0048   (0x0004)  
	float                                              BuiltBaseElementMedium;                                     // 0x004C   (0x0004)  
	float                                              BuiltBaseElementAdvanced;                                   // 0x0050   (0x0004)  
	float                                              VehicleSold;                                                // 0x0054   (0x0004)  
	float                                              WheelBarrowSold;                                            // 0x0058   (0x0004)  
	float                                              AcquiredGoldCreditCard;                                     // 0x005C   (0x0004)  
	float                                              TreatedWoundC1;                                             // 0x0060   (0x0004)  
	float                                              TreatedWoundC2;                                             // 0x0064   (0x0004)  
	float                                              TreatedWoundC3;                                             // 0x0068   (0x0004)  
	float                                              TreatedWoundC4;                                             // 0x006C   (0x0004)  
	float                                              CuredInfectionC1;                                           // 0x0070   (0x0004)  
	float                                              CuredInfectionC2;                                           // 0x0074   (0x0004)  
	float                                              CuredInfectionC3;                                           // 0x0078   (0x0004)  
	float                                              CuredSepsis;                                                // 0x007C   (0x0004)  
	float                                              AbundantFishCaughtMultiplier;                               // 0x0080   (0x0004)  
	float                                              CommonFishCaughtMultiplier;                                 // 0x0084   (0x0004)  
	float                                              UncommonFishCaughtMultiplier;                               // 0x0088   (0x0004)  
	float                                              RareFishCaughtMultiplier;                                   // 0x008C   (0x0004)  
	float                                              VeryRareFishCaughtMultiplier;                               // 0x0090   (0x0004)  
	float                                              ExtremelyRareFishCaughtMultiplier;                          // 0x0094   (0x0004)  
	float                                              FishCaughtFamePointsPerKg;                                  // 0x0098   (0x0004)  
	float                                              ConsecutivelyKept50Fish;                                    // 0x009C   (0x0004)  
	float                                              ConsecutivelyReleased50Fish;                                // 0x00A0   (0x0004)  
	float                                              UnlockedDoorKillbox;                                        // 0x00A4   (0x0004)  
	float                                              CraftedItemNoSkill;                                         // 0x00A8   (0x0004)  
	float                                              CraftedItemBasic;                                           // 0x00AC   (0x0004)  
	float                                              CraftedItemMedium;                                          // 0x00B0   (0x0004)  
	float                                              CraftedItemAdvanced;                                        // 0x00B4   (0x0004)  
	float                                              CraftedC4;                                                  // 0x00B8   (0x0004)  
	float                                              SurvivedConsecutiveDays2;                                   // 0x00BC   (0x0004)  
	float                                              SurvivedConsecutiveDays4;                                   // 0x00C0   (0x0004)  
	float                                              SurvivedConsecutiveDays8;                                   // 0x00C4   (0x0004)  
	float                                              SurvivedConsecutiveDays16;                                  // 0x00C8   (0x0004)  
	float                                              SurvivedConsecutiveDays32;                                  // 0x00CC   (0x0004)  
	float                                              EscapedSharkBite;                                           // 0x00D0   (0x0004)  
	float                                              PuppetKills;                                                // 0x00D4   (0x0004)  
	float                                              PuppetKills10;                                              // 0x00D8   (0x0004)  
	float                                              PuppetKills100;                                             // 0x00DC   (0x0004)  
	float                                              PuppetKills500;                                             // 0x00E0   (0x0004)  
	float                                              AnimalKills;                                                // 0x00E4   (0x0004)  
	float                                              AnimalKills10;                                              // 0x00E8   (0x0004)  
	float                                              AnimalKills100;                                             // 0x00EC   (0x0004)  
	float                                              AnimalKills500;                                             // 0x00F0   (0x0004)  
	float                                              FirearmKills10;                                             // 0x00F4   (0x0004)  
	float                                              FirearmKills100;                                            // 0x00F8   (0x0004)  
	float                                              FirearmKills500;                                            // 0x00FC   (0x0004)  
	float                                              FirearmHeadShotOver200m;                                    // 0x0100   (0x0004)  
	float                                              BowHeadshotOver100m;                                        // 0x0104   (0x0004)  
	float                                              MeleeKills10;                                               // 0x0108   (0x0004)  
	float                                              MeleeKills100;                                              // 0x010C   (0x0004)  
	float                                              MeleeKills500;                                              // 0x0110   (0x0004)  
	float                                              BareHandedKills10;                                          // 0x0114   (0x0004)  
	float                                              BareHandedKills100;                                         // 0x0118   (0x0004)  
	float                                              BareHandedKills500;                                         // 0x011C   (0x0004)  
	float                                              FinishedHauntedHouseRitual;                                 // 0x0120   (0x0004)  
	float                                              SkillLeveledUpToBasic;                                      // 0x0124   (0x0004)  
	float                                              SkillLeveledUpToMedium;                                     // 0x0128   (0x0004)  
	float                                              SkillLeveledUpToAdvanced;                                   // 0x012C   (0x0004)  
	float                                              SkillLeveledUpToAdvancedPlus;                               // 0x0130   (0x0004)  
	float                                              MaxedOutAttributes;                                         // 0x0134   (0x0004)  
	float                                              Decontaminated;                                             // 0x0138   (0x0004)  
	float                                              WashedClothing;                                             // 0x013C   (0x0004)  
	float                                              LandedWithParachute;                                        // 0x0140   (0x0004)  
	float                                              BuiltGarden;                                                // 0x0144   (0x0004)  
	float                                              SeedsPlanted;                                               // 0x0148   (0x0004)  
	float                                              SuccessfulHarvest;                                          // 0x014C   (0x0004)  
	float                                              WeedsPlucked;                                               // 0x0150   (0x0004)  
	float                                              CollectedSeeds;                                             // 0x0154   (0x0004)  
	float                                              AppliedPesticideOrFungicide;                                // 0x0158   (0x0004)  
	float                                              HadPlasticSurgery;                                          // 0x015C   (0x0004)  
};

/// Struct /Script/ConZ.FarmingSkillParametersPerSkillLevel
/// Size: 0x0070 (0x000000 - 0x000070)
struct FFarmingSkillParametersPerSkillLevel
{ 
	float                                              PlantingSeedTime;                                           // 0x0000   (0x0004)  
	float                                              PlantingSeedTimeDecreaseByStrength;                         // 0x0004   (0x0004)  
	float                                              FertilizingTime;                                            // 0x0008   (0x0004)  
	float                                              WateringTime;                                               // 0x000C   (0x0004)  
	float                                              WeedingByHandTime;                                          // 0x0010   (0x0004)  
	float                                              WeedingByToolTime;                                          // 0x0014   (0x0004)  
	float                                              ApplyWeedRepellentTime;                                     // 0x0018   (0x0004)  
	float                                              ApplyPesticideTime;                                         // 0x001C   (0x0004)  
	float                                              GardenSlotCraftTime;                                        // 0x0020   (0x0004)  
	float                                              RemovePlantTime;                                            // 0x0024   (0x0004)  
	float                                              RemovePlantTimeDecreaseByStrength;                          // 0x0028   (0x0004)  
	float                                              DestroyGardenTime;                                          // 0x002C   (0x0004)  
	float                                              DestroyGardenTimeDecreaseByStrength;                        // 0x0030   (0x0004)  
	float                                              BaseMultiplier;                                             // 0x0034   (0x0004)  
	float                                              ExpMultiplier;                                              // 0x0038   (0x0004)  
	float                                              SuccessfulHarvestChancePercentage;                          // 0x003C   (0x0004)  
	FInt32Interval                                     SuccessfulHarvestNumItemsToSpawn;                           // 0x0040   (0x0008)  
	float                                              SkillLevelBonusExperience;                                  // 0x0048   (0x0004)  
	float                                              PlantingSeedExperience;                                     // 0x004C   (0x0004)  
	float                                              AddFertilizerExperience;                                    // 0x0050   (0x0004)  
	float                                              WateringPlantExperiencePerLiter;                            // 0x0054   (0x0004)  
	float                                              ReachingNextPlantStageExperience;                           // 0x0058   (0x0004)  
	float                                              WeedingByHandExperience;                                    // 0x005C   (0x0004)  
	float                                              WeedingByToolExperience;                                    // 0x0060   (0x0004)  
	float                                              ApplyWeedRepellentExperience;                               // 0x0064   (0x0004)  
	float                                              ApplyPesticideExperience;                                   // 0x0068   (0x0004)  
	float                                              CraftGardenExperience;                                      // 0x006C   (0x0004)  
};

/// Struct /Script/ConZ.FillItemWithReplenishableResourceInteractionData
/// Size: 0x0040 (0x000000 - 0x000040)
struct FFillItemWithReplenishableResourceInteractionData
{ 
	FText                                              InteractionCaptionOverride;                                 // 0x0000   (0x0018)  
	bool                                               CanShowDrinkAsDefaultInteraction;                           // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0019   (0x0003)  MISSED
	float                                              BaseActionDuration;                                         // 0x001C   (0x0004)  
	float                                              ActionDurationPerAmountFilled;                              // 0x0020   (0x0004)  
	float                                              ResourceFillingExperiencePerAmount;                         // 0x0024   (0x0004)  
	UAnimMontage*                                      PrisonerFillingMontage;                                     // 0x0028   (0x0008)  
	UAkAudioEvent*                                     StartItemNoiseAudioEvent;                                   // 0x0030   (0x0008)  
	UAkAudioEvent*                                     StopItemNoiseAudioEvent;                                    // 0x0038   (0x0008)  
};

/// Struct /Script/ConZ.FilteredPrimaryAssetId
/// Size: 0x0010 (0x000000 - 0x000010)
struct FFilteredPrimaryAssetId
{ 
	FPrimaryAssetId                                    Value;                                                      // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.FishingMinigameData
/// Size: 0x0074 (0x000000 - 0x000074)
struct FFishingMinigameData
{ 
	unsigned char                                      UnknownData00_1[0x74];                                      // 0x0000   (0x0074)  MISSED
};

/// Struct /Script/ConZ.FishingData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FFishingData
{ 
	FVector                                            Location;                                                   // 0x0000   (0x000C)  
	float                                              HookDepth;                                                  // 0x000C   (0x0004)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0010   (0x0008)  MISSED
};

/// Struct /Script/ConZ.AttachComponentData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FAttachComponentData
{ 
	UMeshComponent*                                    MeshComponent;                                              // 0x0000   (0x0008)  
	int32_t                                            ParticleIndex;                                              // 0x0008   (0x0004)  
	bool                                               SimulateTension;                                            // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x000D   (0x0003)  MISSED
	FName                                              SocketName;                                                 // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.FishStateParameters
/// Size: 0x0010 (0x000000 - 0x000010)
struct FFishStateParameters
{ 
	float                                              MaxSpeed;                                                   // 0x0000   (0x0004)  
	float                                              Acceleration;                                               // 0x0004   (0x0004)  
	float                                              Deceleration;                                               // 0x0008   (0x0004)  
	float                                              TurnSpeed;                                                  // 0x000C   (0x0004)  
};

/// Struct /Script/ConZ.FishSpawnData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FFishSpawnData
{ 
	UFishSpeciesData*                                  FishSpeciesData;                                            // 0x0000   (0x0008)  
	float                                              SpawningWeight;                                             // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.FloatingWidgetUIData
/// Size: 0x001C (0x000000 - 0x00001C)
struct FFloatingWidgetUIData
{ 
	unsigned char                                      UnknownData00_1[0x1C];                                      // 0x0000   (0x001C)  MISSED
};

/// Struct /Script/ConZ.FoliageCanopyData
/// Size: 0x0040 (0x000000 - 0x000040)
struct FFoliageCanopyData
{ 
	bool                                               UseSphere;                                                  // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	FTreeCanopySphere                                  Sphere;                                                     // 0x0004   (0x0014)  
	bool                                               UseCapsule;                                                 // 0x0018   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0019   (0x0003)  MISSED
	FTreeCanopyCapsule                                 Capsule;                                                    // 0x001C   (0x0024)  
};

/// Struct /Script/ConZ.TreeCanopyCapsule
/// Size: 0x0024 (0x000000 - 0x000024)
struct FTreeCanopyCapsule
{ 
	FVector                                            Center;                                                     // 0x0000   (0x000C)  
	FRotator                                           Rotation;                                                   // 0x000C   (0x000C)  
	float                                              Radius;                                                     // 0x0018   (0x0004)  
	float                                              Length;                                                     // 0x001C   (0x0004)  
	float                                              CanopyDensity;                                              // 0x0020   (0x0004)  
};

/// Struct /Script/ConZ.TreeCanopySphere
/// Size: 0x0014 (0x000000 - 0x000014)
struct FTreeCanopySphere
{ 
	FVector                                            Center;                                                     // 0x0000   (0x000C)  
	float                                              Radius;                                                     // 0x000C   (0x0004)  
	float                                              CanopyDensity;                                              // 0x0010   (0x0004)  
};

/// Struct /Script/ConZ.FoliageAIPerceptionData
/// Size: 0x0002 (0x000000 - 0x000002)
struct FFoliageAIPerceptionData
{ 
	bool                                               CanCoverPrisoner;                                           // 0x0000   (0x0001)  
	EPrisonerStance                                    MaxUndetectedPrisonerStance;                                // 0x0001   (0x0001)  
};

/// Struct /Script/ConZ.FoliageEffectsData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FFoliageEffectsData
{ 
	UAkAudioEvent*                                     StartMovingThroughFoliageAudioEvent;                        // 0x0000   (0x0008)  
	UAkAudioEvent*                                     StopMovingThroughFoliageAudioEvent;                         // 0x0008   (0x0008)  
	UAkAudioEvent*                                     OneShotMovingThroughFoliageAudioEvent;                      // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.FoliageGeneralData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FFoliageGeneralData
{ 
	float                                              CollisionBoundsScale;                                       // 0x0000   (0x0004)  
	FVector                                            CollisionBoundsOffset;                                      // 0x0004   (0x000C)  
};

/// Struct /Script/ConZ.BuildingsReplicationHelper
/// Size: 0x0070 (0x000000 - 0x000070)
struct FBuildingsReplicationHelper
{ 
	TMap<FString, FBuildingData>                       BuildingsData;                                              // 0x0000   (0x0050)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0050   (0x0020)  MISSED
};

/// Struct /Script/ConZ.BuildingData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FBuildingData
{ 
	bool                                               IsCleared;                                                  // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	TArray<FWindowMarkerModifier>                      WindowMarkerModifiers;                                      // 0x0008   (0x0010)  
	TArray<FFortificationData>                         Fortifications;                                             // 0x0018   (0x0010)  
};

/// Struct /Script/ConZ.FortificationData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FFortificationData
{ 
	int32_t                                            MarkerIndex;                                                // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	UClass*                                            FortificationClass;                                         // 0x0008   (0x0008)  
	FDbIntegerId                                       OwnerUserProfileId;                                         // 0x0010   (0x0008)  
	float                                              health;                                                     // 0x0018   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.WindowMarkerModifier
/// Size: 0x0008 (0x000000 - 0x000008)
struct FWindowMarkerModifier
{ 
	int32_t                                            Index;                                                      // 0x0000   (0x0004)  
	bool                                               IsVaultable;                                                // 0x0004   (0x0001)  
	bool                                               IsFortifiable;                                              // 0x0005   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0006   (0x0002)  MISSED
};

/// Struct /Script/ConZ.FortificationMarkerParams
/// Size: 0x0030 (0x000000 - 0x000030)
struct FFortificationMarkerParams
{ 
	bool                                               IsValid;                                                    // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            MarkerIndex;                                                // 0x0004   (0x0004)  
	UStaticMesh*                                       Mesh;                                                       // 0x0008   (0x0008)  
	FVector                                            Location;                                                   // 0x0010   (0x000C)  
	FRotator                                           Rotation;                                                   // 0x001C   (0x000C)  
	float                                              Scale;                                                      // 0x0028   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.EditableParameter
/// Size: 0x0010 (0x000000 - 0x000010)
struct FEditableParameter
{ 
	FString                                            Name;                                                       // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.ParameterVector4
/// Size: 0x0010 (0x000010 - 0x000020)
struct FParameterVector4 : FEditableParameter
{ 
	FVector4                                           Value;                                                      // 0x0010   (0x0010)  
};

/// Struct /Script/ConZ.ParameterVector
/// Size: 0x0010 (0x000010 - 0x000020)
struct FParameterVector : FEditableParameter
{ 
	FVector                                            Value;                                                      // 0x0010   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.ParameterFloat
/// Size: 0x0008 (0x000010 - 0x000018)
struct FParameterFloat : FEditableParameter
{ 
	float                                              Value;                                                      // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/ConZ.ParameterInt32
/// Size: 0x0008 (0x000010 - 0x000018)
struct FParameterInt32 : FEditableParameter
{ 
	int32_t                                            Value;                                                      // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/ConZ.CombustibleItemParams
/// Size: 0x0008 (0x000000 - 0x000008)
struct FCombustibleItemParams
{ 
	float                                              DefaultTemp;                                                // 0x0000   (0x0004)  
	float                                              BurningRate;                                                // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.FundsOverviewUIData
/// Size: 0x0060 (0x000000 - 0x000060)
struct FFundsOverviewUIData
{ 
	unsigned char                                      UnknownData00_1[0x60];                                      // 0x0000   (0x0060)  MISSED
};

/// Struct /Script/ConZ.GameEventParticipantInfo
/// Size: 0x0078 (0x000000 - 0x000078)
struct FGameEventParticipantInfo
{ 
	FString                                            UniqueId;                                                   // 0x0000   (0x0010)  
	TWeakObjectPtr<APrisoner*>                         Prisoner;                                                   // 0x0010   (0x0008)  
	FString                                            Name;                                                       // 0x0018   (0x0010)  
	EGameEventParticipantState                         State;                                                      // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	int32_t                                            TeamIndex;                                                  // 0x002C   (0x0004)  
	TArray<UGameEventParticipantStats*>                RoundStats;                                                 // 0x0030   (0x0010)  
	UGameEventParticipantStats*                        EventStats;                                                 // 0x0040   (0x0008)  
	TArray<APrisoner*>                                 HurtBy;                                                     // 0x0048   (0x0010)  
	int32_t                                            RepHelper;                                                  // 0x0058   (0x0004)  
	unsigned char                                      UnknownData01_6[0x1C];                                      // 0x005C   (0x001C)  MISSED
};

/// Struct /Script/ConZ.GameEventParameters
/// Size: 0x0188 (0x000000 - 0x000188)
struct FGameEventParameters
{ 
	float                                              AnnounceDuration;                                           // 0x0000   (0x0004)  
	float                                              CancelDuration;                                             // 0x0004   (0x0004)  
	float                                              RoundDuration;                                              // 0x0008   (0x0004)  
	int32_t                                            RoundLimit;                                                 // 0x000C   (0x0004)  
	int32_t                                            WinLimit;                                                   // 0x0010   (0x0004)  
	float                                              RespawnDelay;                                               // 0x0014   (0x0004)  
	float                                              TimeoutDuration;                                            // 0x0018   (0x0004)  
	int32_t                                            MinParticipants;                                            // 0x001C   (0x0004)  
	int32_t                                            MaxParticipants;                                            // 0x0020   (0x0004)  
	bool                                               AllowRespawn;                                               // 0x0024   (0x0001)  
	bool                                               FriendlyFire;                                               // 0x0025   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0026   (0x0002)  MISSED
	TArray<int32_t>                                    TeamLimit;                                                  // 0x0028   (0x0010)  
	int32_t                                            EntryFee;                                                   // 0x0038   (0x0004)  
	FGameEventRewardPoints                             PointsPerEnemyKill;                                         // 0x003C   (0x000C)  
	FGameEventRewardPoints                             PointsPerTeamKill;                                          // 0x0048   (0x000C)  
	FGameEventRewardPoints                             PointsPerDeath;                                             // 0x0054   (0x000C)  
	FGameEventRewardPoints                             PointsPerSuicide;                                           // 0x0060   (0x000C)  
	FGameEventRewardPoints                             PointsPerAssist;                                            // 0x006C   (0x000C)  
	FGameEventRewardPoints                             PointsPerHeadshot;                                          // 0x0078   (0x000C)  
	FGameEventRewardPoints                             PointsPerRoundWin;                                          // 0x0084   (0x000C)  
	TArray<FGameEventRewardPoints>                     PointsPerRank;                                              // 0x0090   (0x0010)  
	FGameEventRewardPoints                             PointsForParticipation;                                     // 0x00A0   (0x000C)  
	float                                              ScoreToFameConversionFactor;                                // 0x00AC   (0x0004)  
	TArray<UItemSelection*>                            PossiblePrimaryWeapons;                                     // 0x00B0   (0x0010)  
	TArray<UItemSelection*>                            PossibleSecondaryWeapons;                                   // 0x00C0   (0x0010)  
	TArray<UItemSelection*>                            PossibleTertiaryWeapons;                                    // 0x00D0   (0x0010)  
	TArray<UItemSelection*>                            PossibleOutfits;                                            // 0x00E0   (0x0010)  
	TArray<UItemSelection*>                            PossibleSupportItems;                                       // 0x00F0   (0x0010)  
	TArray<UItemSelection*>                            MandatoryGear;                                              // 0x0100   (0x0010)  
	FText                                              EventName;                                                  // 0x0110   (0x0018)  
	FText                                              EventDescription;                                           // 0x0128   (0x0018)  
	FText                                              PrerequisitesText;                                          // 0x0140   (0x0018)  
	FText                                              WeaponText;                                                 // 0x0158   (0x0018)  
	FText                                              RewardsText;                                                // 0x0170   (0x0018)  
};

/// Struct /Script/ConZ.SpawnArea
/// Size: 0x0014 (0x000000 - 0x000014)
struct FSpawnArea
{ 
	FVector                                            Center;                                                     // 0x0000   (0x000C)  
	float                                              Radius;                                                     // 0x000C   (0x0004)  
	int32_t                                            TeamIndex;                                                  // 0x0010   (0x0004)  
};

/// Struct /Script/ConZ.GameEventNotificationUIData
/// Size: 0x0050 (0x000000 - 0x000050)
struct FGameEventNotificationUIData
{ 
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0000   (0x0050)  MISSED
};

/// Struct /Script/ConZ.GameEventTeamColours
/// Size: 0x0060 (0x000000 - 0x000060)
struct FGameEventTeamColours
{ 
	FLinearColor                                       TeamName;                                                   // 0x0000   (0x0010)  
	FLinearColor                                       ParticipantStatsDarker;                                     // 0x0010   (0x0010)  
	FLinearColor                                       ParticipantStatsLighter;                                    // 0x0020   (0x0010)  
	FLinearColor                                       ParticipantStatsHighlighted;                                // 0x0030   (0x0010)  
	FLinearColor                                       ParticipantStatsDisabled;                                   // 0x0040   (0x0010)  
	FLinearColor                                       ParticipantStatsMini;                                       // 0x0050   (0x0010)  
};

/// Struct /Script/ConZ.GameResourceConsumptionDataForeignSubstance
/// Size: 0x0010 (0x000000 - 0x000010)
struct FGameResourceConsumptionDataForeignSubstance
{ 
	UClass*                                            Class;                                                      // 0x0000   (0x0008)  
	float                                              Amount;                                                     // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.GameResourceMixingRule
/// Size: 0x0018 (0x000000 - 0x000018)
struct FGameResourceMixingRule
{ 
	UClass*                                            Source;                                                     // 0x0000   (0x0008)  
	UClass*                                            Destination;                                                // 0x0008   (0x0008)  
	UClass*                                            Result;                                                     // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.GardenSlotArray
/// Size: 0x0018 (0x000108 - 0x000120)
struct FGardenSlotArray : FFastArraySerializer
{ 
	TArray<FGardenSlot>                                _gardenSlots;                                               // 0x0108   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0118   (0x0008)  MISSED
};

/// Struct /Script/ConZ.GardenSlot
/// Size: 0x01F4 (0x00000C - 0x000200)
struct FGardenSlot : FFastArraySerializerItem
{ 
	FIntPoint                                          _slotPosition;                                              // 0x000C   (0x0008)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	UPlantSpecies*                                     _species;                                                   // 0x0018   (0x0008)  
	EPlantGrowthStage                                  _stage;                                                     // 0x0020   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x0021   (0x0001)  MISSED
	uint16_t                                           _repWater;                                                  // 0x0022   (0x0002)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0024   (0x0004)  MISSED
	char                                               _repGrowthPercentage;                                       // 0x0028   (0x0001)  
	unsigned char                                      UnknownData03_5[0x7];                                       // 0x0029   (0x0007)  MISSED
	bool                                               _organicFertilizer;                                         // 0x0030   (0x0001)  
	bool                                               _industrialFertilizer;                                      // 0x0031   (0x0001)  
	unsigned char                                      UnknownData04_5[0x6];                                       // 0x0032   (0x0006)  MISSED
	UPlantPestSpecies*                                 _pests;                                                     // 0x0038   (0x0018)  
	char                                               _repPestsIntensities;                                       // 0x0050   (0x0003)  
	unsigned char                                      UnknownData05_5[0xD];                                       // 0x0053   (0x000D)  MISSED
	UPlantDiseaseSpecies*                              _diseases;                                                  // 0x0060   (0x0018)  
	char                                               _repDiseaseIntensities;                                     // 0x0078   (0x0003)  
	unsigned char                                      UnknownData06_5[0xD];                                       // 0x007B   (0x000D)  MISSED
	char                                               _repWeedIntensity;                                          // 0x0088   (0x0001)  
	unsigned char                                      UnknownData07_5[0x7];                                       // 0x0089   (0x0007)  MISSED
	bool                                               _pesticideActive;                                           // 0x0090   (0x0001)  
	unsigned char                                      UnknownData08_5[0x7];                                       // 0x0091   (0x0007)  MISSED
	bool                                               _fungicideActive;                                           // 0x0098   (0x0001)  
	unsigned char                                      UnknownData09_5[0x7];                                       // 0x0099   (0x0007)  MISSED
	bool                                               _weedRepellentActive;                                       // 0x00A0   (0x0001)  
	unsigned char                                      UnknownData10_5[0x7];                                       // 0x00A1   (0x0007)  MISSED
	char                                               _repHealth;                                                 // 0x00A8   (0x0001)  
	unsigned char                                      UnknownData11_5[0x7];                                       // 0x00A9   (0x0007)  MISSED
	bool                                               _isDead;                                                    // 0x00B0   (0x0001)  
	bool                                               _isOld;                                                     // 0x00B1   (0x0001)  
	unsigned char                                      UnknownData12_6[0x14E];                                     // 0x00B2   (0x014E)  MISSED
};

/// Struct /Script/ConZ.PlayerPawnBirdInfo
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPlayerPawnBirdInfo
{ 
	int32_t                                            CoastalBirdsinProximity;                                    // 0x0000   (0x0004)  
	int32_t                                            ContinetalBirdsinProximity;                                 // 0x0004   (0x0004)  
	int32_t                                            VirtualAssignedCoastalBirds;                                // 0x0008   (0x0004)  
	int32_t                                            VirtualAssignedContinentalBirds;                            // 0x000C   (0x0004)  
};

/// Struct /Script/ConZ.GrappleActionMontagePair
/// Size: 0x0020 (0x000000 - 0x000020)
struct FGrappleActionMontagePair
{ 
	UAnimMontage*                                      GrapplerMontage;                                            // 0x0000   (0x0008)  
	UAnimMontage*                                      GrapplerMontageFP;                                          // 0x0008   (0x0008)  
	UAnimMontage*                                      VictimMontage;                                              // 0x0010   (0x0008)  
	UAnimMontage*                                      VictimMontageFP;                                            // 0x0018   (0x0008)  
};

/// Struct /Script/ConZ.GuardedZoneManagerDescription
/// Size: 0x0040 (0x000000 - 0x000040)
struct FGuardedZoneManagerDescription
{ 
	TArray<FSentrySpawnerDescription>                  _sentrySpawners;                                            // 0x0000   (0x0010)  
	unsigned char                                      UnknownData00_6[0x30];                                      // 0x0010   (0x0030)  MISSED
};

/// Struct /Script/ConZ.SentrySpawnerDescription
/// Size: 0x0068 (0x000000 - 0x000068)
struct FSentrySpawnerDescription
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	UClass*                                            _sentryClass;                                               // 0x0008   (0x0008)  
	unsigned char                                      UnknownData01_6[0x58];                                      // 0x0010   (0x0058)  MISSED
};

/// Struct /Script/ConZ.HalloweenSacrificePitRequiredItemVariants
/// Size: 0x0010 (0x000000 - 0x000010)
struct FHalloweenSacrificePitRequiredItemVariants
{ 
	TArray<TWeakObjectPtr>                             Variants;                                                   // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.HeatSource
/// Size: 0x00A8 (0x000000 - 0x0000A8)
struct FHeatSource
{ 
	FVector                                            Location;                                                   // 0x0000   (0x000C)  
	FHeatSourceParameters                              parameters;                                                 // 0x000C   (0x0024)  
	bool                                               IsUsingFuelSimulation;                                      // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x23];                                      // 0x0031   (0x0023)  MISSED
	int32_t                                            TimesUpdatedWithoutMoving;                                  // 0x0054   (0x0004)  
	unsigned char                                      UnknownData01_6[0x50];                                      // 0x0058   (0x0050)  MISSED
};

/// Struct /Script/ConZ.HeatSourceParameters
/// Size: 0x0024 (0x000000 - 0x000024)
struct FHeatSourceParameters
{ 
	float                                              Temperature;                                                // 0x0000   (0x0004)  
	float                                              TemperatureMultiplier;                                      // 0x0004   (0x0004)  
	float                                              FuelMassRatio;                                              // 0x0008   (0x0004)  
	float                                              Emissivity;                                                 // 0x000C   (0x0004)  
	float                                              DistanceScale;                                              // 0x0010   (0x0004)  
	float                                              InnerRadiusTemperatureScale;                                // 0x0014   (0x0004)  
	float                                              AdditionalTemperaturePerGramOfOxygen;                       // 0x0018   (0x0004)  
	float                                              InnerRadius;                                                // 0x001C   (0x0004)  
	float                                              OuterRadius;                                                // 0x0020   (0x0004)  
};

/// Struct /Script/ConZ.PhysicalHitReactData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPhysicalHitReactData
{ 
	FName                                              ProfileName;                                                // 0x0000   (0x0008)  
	FName                                              PelvisBoneName;                                             // 0x0008   (0x0008)  
	float                                              InitialStrengthMultiplier;                                  // 0x0010   (0x0004)  
	float                                              BlendDuration;                                              // 0x0014   (0x0004)  
};

/// Struct /Script/ConZ.HitReactLandingData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FHitReactLandingData
{ 
	float                                              MinImpactSpeedToReact;                                      // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	UAnimMontage*                                      MontageToPlay;                                              // 0x0008   (0x0008)  
	float                                              RegainControlDurationMultiplier;                            // 0x0010   (0x0004)  
	bool                                               CanEverGoToRagdoll;                                         // 0x0014   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0015   (0x0003)  MISSED
	float                                              MinImpactSpeedForRagdoll;                                   // 0x0018   (0x0004)  
	float                                              MinRagdollDuration;                                         // 0x001C   (0x0004)  
	float                                              MaxRagdollDuration;                                         // 0x0020   (0x0004)  
	float                                              RagdollDurationPerSpeedUnit;                                // 0x0024   (0x0004)  
};

/// Struct /Script/ConZ.HitReactMagnitudeData
/// Size: 0x0120 (0x000000 - 0x000120)
struct FHitReactMagnitudeData
{ 
	FHitReactDirectionData                             SmallHit;                                                   // 0x0000   (0x0048)  
	FHitReactDirectionData                             MediumHit;                                                  // 0x0048   (0x0048)  
	FHitReactDirectionData                             LargeHit;                                                   // 0x0090   (0x0048)  
	FHitReactDirectionData                             KnockoutHit;                                                // 0x00D8   (0x0048)  
};

/// Struct /Script/ConZ.HitReactDirectionData
/// Size: 0x0048 (0x000000 - 0x000048)
struct FHitReactDirectionData
{ 
	TArray<FHitReactBodyPartDataItem>                  FrontHit;                                                   // 0x0000   (0x0010)  
	TArray<FHitReactBodyPartDataItem>                  LeftHit;                                                    // 0x0010   (0x0010)  
	TArray<FHitReactBodyPartDataItem>                  BackHit;                                                    // 0x0020   (0x0010)  
	TArray<FHitReactBodyPartDataItem>                  RightHit;                                                   // 0x0030   (0x0010)  
	float                                              RegainControlDurationMultiplier;                            // 0x0040   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Struct /Script/ConZ.HitReactBodyPartDataItem
/// Size: 0x0018 (0x000000 - 0x000018)
struct FHitReactBodyPartDataItem
{ 
	UAnimMontage*                                      MontageToPlay;                                              // 0x0000   (0x0008)  
	UAnimMontage*                                      FollowupMontage;                                            // 0x0008   (0x0008)  
	float                                              RegainControlDurationMultiplier;                            // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/ConZ.HitReactResult
/// Size: 0x0018 (0x000000 - 0x000018)
struct FHitReactResult
{ 
	UAnimMontage*                                      MontageToPlay;                                              // 0x0000   (0x0008)  
	UAnimMontage*                                      FollowupMontage;                                            // 0x0008   (0x0008)  
	float                                              RegainControlDurationMultiplier;                            // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/ConZ.PhysicalAnimationDesc
/// Size: 0x0034 (0x000000 - 0x000034)
struct FPhysicalAnimationDesc
{ 
	unsigned char                                      UnknownData00_1[0x34];                                      // 0x0000   (0x0034)  MISSED
};

/// Struct /Script/ConZ.HuntingClueVisuals
/// Size: 0x00A0 (0x000000 - 0x0000A0)
struct FHuntingClueVisuals
{ 
	float                                              Weight;                                                     // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	UStaticMesh*                                       ClueStaticMesh;                                             // 0x0008   (0x0008)  
	UMaterialInstance*                                 ClueStaticMeshMaterial;                                     // 0x0010   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0018   (0x0008)  MISSED
	FTransform                                         StaticMeshOverrideRelativeTransform;                        // 0x0020   (0x0030)  
	UMaterialInstance*                                 ClueDecalMaterials;                                         // 0x0050   (0x0008)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x0058   (0x0008)  MISSED
	FTransform                                         ClueDecalOverrideRelativeTransform;                         // 0x0060   (0x0030)  
	bool                                               ShouldOverrideBoxDimensions;                                // 0x0090   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x0091   (0x0003)  MISSED
	FVector                                            ClueDecalOverrideBoxDimensions;                             // 0x0094   (0x000C)  
};

/// Struct /Script/ConZ.HuntingBiomeDescription
/// Size: 0x0070 (0x000000 - 0x000070)
struct FHuntingBiomeDescription
{ 
	FTransform                                         Transform;                                                  // 0x0000   (0x0030)  
	float                                              Radius;                                                     // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	FHuntingBiomeParameters                            parameters;                                                 // 0x0038   (0x0038)  
};

/// Struct /Script/ConZ.HuntingBiomeParameters
/// Size: 0x0038 (0x000000 - 0x000038)
struct FHuntingBiomeParameters
{ 
	UBiomeData*                                        BiomeData;                                                  // 0x0000   (0x0008)  
	float                                              AnimalSpawnChance;                                          // 0x0008   (0x0004)  
	float                                              DaytimeSpawnMultiplier;                                     // 0x000C   (0x0010)  
	float                                              SpawnCheckCooldownMin;                                      // 0x001C   (0x0004)  
	float                                              SpawnCheckCooldownMax;                                      // 0x0020   (0x0004)  
	int8_t                                             MaxAnimalEncounters;                                        // 0x0024   (0x0001)  
	int8_t                                             MaxAnimalEncountersPerPlayer;                               // 0x0025   (0x0001)  
	int8_t                                             MaxPlayerTriggers;                                          // 0x0026   (0x0001)  
	bool                                               PacksAllowed;                                               // 0x0027   (0x0001)  
	char                                               Priority;                                                   // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	float                                              AnimalSoundCooldownMin;                                     // 0x002C   (0x0004)  
	float                                              AnimalSoundCooldownMax;                                     // 0x0030   (0x0004)  
	float                                              AnimalSoundPlayProbability;                                 // 0x0034   (0x0004)  
};

/// Struct /Script/ConZ.IgnitableItemIgnitionRequirements
/// Size: 0x0018 (0x000000 - 0x000018)
struct FIgnitableItemIgnitionRequirements
{ 
	TArray<UFireSourceItemTag*>                        PossibleItemTags;                                           // 0x0000   (0x0010)  
	int32_t                                            Uses;                                                       // 0x0010   (0x0004)  
	float                                              usageWeight;                                                // 0x0014   (0x0004)  
};

/// Struct /Script/ConZ.SpawnedItems
/// Size: 0x0018 (0x000000 - 0x000018)
struct FSpawnedItems
{ 
	int32_t                                            ID;                                                         // 0x0000   (0x0004)  
	EPickupItemOperation                               Operation;                                                  // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0005   (0x0003)  MISSED
	TArray<AItem*>                                     Items;                                                      // 0x0008   (0x0010)  
};

/// Struct /Script/ConZ.InteractionStruct
/// Size: 0x0098 (0x000000 - 0x000098)
struct FInteractionStruct
{ 
	EInteractionType                                   interactionType;                                            // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	FString                                            InteractionCaption;                                         // 0x0008   (0x0010)  
	unsigned char                                      UnknownData01_6[0x80];                                      // 0x0018   (0x0080)  MISSED
};

/// Struct /Script/ConZ.InteractionQueryParameters
/// Size: 0x0040 (0x000000 - 0x000040)
struct FInteractionQueryParameters
{ 
	FVector                                            InteractionLocation;                                        // 0x0000   (0x000C)  
	FVector                                            InteractionNormal;                                          // 0x000C   (0x000C)  
	TWeakObjectPtr<UPrimitiveComponent*>               Component;                                                  // 0x0018   (0x0008)  
	int32_t                                            InstanceIndex;                                              // 0x0020   (0x0004)  
	bool                                               IsInDroneMode;                                              // 0x0024   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1B];                                      // 0x0025   (0x001B)  MISSED
};

/// Struct /Script/ConZ.InventoryContainerClothesElement
/// Size: 0x0020 (0x000000 - 0x000020)
struct FInventoryContainerClothesElement
{ 
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0000   (0x0020)  MISSED
};

/// Struct /Script/ConZ.Inv2021_InventoryElementRepHelper
/// Size: 0x0020 (0x000000 - 0x000020)
struct FInv2021_InventoryElementRepHelper
{ 
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0000   (0x0020)  MISSED
};

/// Struct /Script/ConZ.Inv2021_InventoryPosition
/// Size: 0x0008 (0x000000 - 0x000008)
struct FInv2021_InventoryPosition
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/ConZ.Inv2021_InventoryPosition2D
/// Size: 0x0010 (0x000008 - 0x000018)
struct FInv2021_InventoryPosition2D : FInv2021_InventoryPosition
{ 
	int32_t                                            X;                                                          // 0x0008   (0x0004)  
	int32_t                                            Y;                                                          // 0x000C   (0x0004)  
	char                                               Rotation;                                                   // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
};

/// Struct /Script/ConZ.Inv2021_InventoryPositionObjectRepHelper
/// Size: 0x0018 (0x000000 - 0x000018)
struct FInv2021_InventoryPositionObjectRepHelper
{ 
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/ConZ.InventoryItemPositionPair
/// Size: 0x0028 (0x000000 - 0x000028)
struct FInventoryItemPositionPair
{ 
	FInventoryPositionDataRepHelper                    position;                                                   // 0x0000   (0x0020)  
	UObject*                                           Item;                                                       // 0x0020   (0x0008)  
};

/// Struct /Script/ConZ.InventoryContainer2DRepData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FInventoryContainer2DRepData
{ 
	TArray<FInventoryItemPositionPair>                 ItemsData;                                                  // 0x0000   (0x0010)  
	UObject*                                           Parent;                                                     // 0x0010   (0x0008)  
	int32_t                                            SizeX;                                                      // 0x0018   (0x0004)  
	int32_t                                            SizeY;                                                      // 0x001C   (0x0004)  
};

/// Struct /Script/ConZ.InventoryContainerClothesData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FInventoryContainerClothesData
{ 
	TArray<FInventoryItemPositionPair>                 ItemsData;                                                  // 0x0000   (0x0010)  
	UObject*                                           Parent;                                                     // 0x0010   (0x0008)  
	int32_t                                            RepCounter;                                                 // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.InventoryContainerHandsHolstersData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FInventoryContainerHandsHolstersData
{ 
	TArray<FInventoryItemPositionPair>                 ItemsData;                                                  // 0x0000   (0x0010)  
	UObject*                                           Parent;                                                     // 0x0010   (0x0008)  
	int32_t                                            RepCounter;                                                 // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.InventoryContainerSelectionRepData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FInventoryContainerSelectionRepData
{ 
	TArray<UObject*>                                   Items;                                                      // 0x0000   (0x0010)  
	TArray<FInventoryItemPositionPair>                 ItemsData;                                                  // 0x0010   (0x0010)  
	UObject*                                           Parent;                                                     // 0x0020   (0x0008)  
};

/// Struct /Script/ConZ.InventoryItemComponentReplicatedPageData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FInventoryItemComponentReplicatedPageData
{ 
	TArray<FInventoryItemComponentElement>             Elements;                                                   // 0x0000   (0x0010)  
	int32_t                                            Version;                                                    // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/ConZ.InventoryItemComponentElement
/// Size: 0x0030 (0x000000 - 0x000030)
struct FInventoryItemComponentElement
{ 
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x0000   (0x0030)  MISSED
};

/// Struct /Script/ConZ.InventoryStackMemberData
/// Size: 0x0008 (0x000000 - 0x000008)
struct FInventoryStackMemberData
{ 
	int32_t                                            position;                                                   // 0x0000   (0x0004)  
	int32_t                                            Size;                                                       // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.InventoryNodeWidgetData
/// Size: 0x0040 (0x000000 - 0x000040)
struct FInventoryNodeWidgetData
{ 
	FName                                              Slot;                                                       // 0x0000   (0x0008)  
	EInventoryNodeWidgetDataType                       Type;                                                       // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              NumberData;                                                 // 0x000C   (0x0004)  
	int32_t                                            IntegerNumberData;                                          // 0x0010   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	FText                                              TextData;                                                   // 0x0018   (0x0018)  
	UTexture2D*                                        IconData;                                                   // 0x0030   (0x0008)  
	ESlateVisibility                                   VisibilityData;                                             // 0x0038   (0x0001)  
	bool                                               IsAnimated;                                                 // 0x0039   (0x0001)  
	unsigned char                                      UnknownData02_5[0x2];                                       // 0x003A   (0x0002)  MISSED
	float                                              Opacity;                                                    // 0x003C   (0x0004)  
};

/// Struct /Script/ConZ.ItemContainersArray
/// Size: 0x0010 (0x000000 - 0x000010)
struct FItemContainersArray
{ 
	TArray<AItemContainer*>                            _itemContainers;                                            // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.ItemContainersReplicationHelper
/// Size: 0x0070 (0x000000 - 0x000070)
struct FItemContainersReplicationHelper
{ 
	TMap<FString, FItemContainerRepData>               ItemContainerData;                                          // 0x0000   (0x0050)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0050   (0x0020)  MISSED
};

/// Struct /Script/ConZ.ItemContainerRepData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FItemContainerRepData
{ 
	TArray<UClass*>                                    Locks;                                                      // 0x0000   (0x0010)  
	TArray<int32_t>                                    RemainingNeutralizationAttemptsPerLock;                     // 0x0010   (0x0010)  
};

/// Struct /Script/ConZ.ItemGeneralParametersTableRow
/// Size: 0x0058 (0x000008 - 0x000060)
struct FItemGeneralParametersTableRow : FTableRowBase
{ 
	FText                                              _caption;                                                   // 0x0008   (0x0018)  
	FText                                              _description;                                               // 0x0020   (0x0018)  
	TWeakObjectPtr<UTexture2D*>                        _outsideInventoryIcon;                                      // 0x0038   (0x0028)  
};

/// Struct /Script/ConZ.ItemSpawnerMarker
/// Size: 0x0180 (0x000000 - 0x000180)
struct FItemSpawnerMarker
{ 
	FTransform                                         Transform;                                                  // 0x0000   (0x0030)  
	FItemSpawnerDataBasedOnPreset                      Spawner;                                                    // 0x0030   (0x0090)  
	FItemSpawnerPresetWithOverrides                    SpawnerPreset;                                              // 0x00C0   (0x00B8)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0178   (0x0008)  MISSED
};

/// Struct /Script/ConZ.ItemSpawnerDataBasedOnPreset
/// Size: 0x0090 (0x000000 - 0x000090)
struct FItemSpawnerDataBasedOnPreset
{ 
	UClass*                                            Preset;                                                     // 0x0000   (0x0008)  
	bool                                               OverrideItemClasses;                                        // 0x0008   (0x0001)  
	bool                                               OverrideItemSpawnTypes;                                     // 0x0009   (0x0001)  
	bool                                               OverrideAlwaysSpawn;                                        // 0x000A   (0x0001)  
	bool                                               OverrideProbability;                                        // 0x000B   (0x0001)  
	bool                                               OverrideUseItemZone;                                        // 0x000C   (0x0001)  
	bool                                               OverrideUseItemRarity;                                      // 0x000D   (0x0001)  
	bool                                               OverrideUseItemSpawnGroup;                                  // 0x000E   (0x0001)  
	bool                                               OverrideInitialDamage;                                      // 0x000F   (0x0001)  
	bool                                               OverrideRandomizeDamage;                                    // 0x0010   (0x0001)  
	bool                                               OverrideInitialUsage;                                       // 0x0011   (0x0001)  
	bool                                               OverrideRandomizeUsage;                                     // 0x0012   (0x0001)  
	bool                                               OverrideInitialDirtiness;                                   // 0x0013   (0x0001)  
	bool                                               OverrideRandomizeDirtiness;                                 // 0x0014   (0x0001)  
	bool                                               OverrideMinAmmoCount;                                       // 0x0015   (0x0001)  
	bool                                               OverrideMaxAmmoCount;                                       // 0x0016   (0x0001)  
	bool                                               OverrideMinCashAmount;                                      // 0x0017   (0x0001)  
	bool                                               OverrideMaxCashAmount;                                      // 0x0018   (0x0001)  
	bool                                               OverrideUseCollisionTraceToAdjustSpawnLocation;             // 0x0019   (0x0001)  
	bool                                               OverrideUseCollisionTraceToAdjustSpawnRotation;             // 0x001A   (0x0001)  
	bool                                               OverridePostItemsSpawnedActions;                            // 0x001B   (0x0001)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x001C   (0x0004)  MISSED
	TArray<TWeakObjectPtr>                             ItemClasses;                                                // 0x0020   (0x0010)  
	FGameplayTagContainer                              ItemSpawnTypes;                                             // 0x0030   (0x0020)  
	bool                                               AlwaysSpawn;                                                // 0x0050   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0051   (0x0003)  MISSED
	float                                              Probability;                                                // 0x0054   (0x0004)  
	bool                                               UseItemZone;                                                // 0x0058   (0x0001)  
	bool                                               UseItemRarity;                                              // 0x0059   (0x0001)  
	bool                                               UseItemSpawnGroup;                                          // 0x005A   (0x0001)  
	unsigned char                                      UnknownData02_5[0x1];                                       // 0x005B   (0x0001)  MISSED
	float                                              InitialDamage;                                              // 0x005C   (0x0004)  
	float                                              RandomizeDamage;                                            // 0x0060   (0x0004)  
	float                                              InitialUsage;                                               // 0x0064   (0x0004)  
	float                                              RandomizeUsage;                                             // 0x0068   (0x0004)  
	float                                              InitialDirtiness;                                           // 0x006C   (0x0004)  
	float                                              RandomizeDirtiness;                                         // 0x0070   (0x0004)  
	int32_t                                            MinAmmoCount;                                               // 0x0074   (0x0004)  
	int32_t                                            MaxAmmoCount;                                               // 0x0078   (0x0004)  
	int32_t                                            MinCashAmount;                                              // 0x007C   (0x0004)  
	int32_t                                            MaxCashAmount;                                              // 0x0080   (0x0004)  
	bool                                               UseCollisionTraceToAdjustSpawnLocation;                     // 0x0084   (0x0001)  
	bool                                               UseCollisionTraceToAdjustSpawnRotation;                     // 0x0085   (0x0001)  
	unsigned char                                      UnknownData03_5[0x2];                                       // 0x0086   (0x0002)  MISSED
	UClass*                                            PostItemsSpawnedActions;                                    // 0x0088   (0x0008)  
};

/// Struct /Script/ConZ.ItemSpawningSettings
/// Size: 0x0044 (0x000000 - 0x000044)
struct FItemSpawningSettings
{ 
	bool                                               UseQuadTreeToDetermineRelevantSpawnerGroups;                // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              RelevantSpawnerGroupsUpdateInterval;                        // 0x0004   (0x0004)  
	float                                              MinPlayerLocationDeltaToUpdateRelevantSpawnerGroups;        // 0x0008   (0x0004)  
	float                                              SpawnerGroupsCullDistance;                                  // 0x000C   (0x0004)  
	float                                              SpawnerExpirationTimeInMinutes;                             // 0x0010   (0x0004)  
	float                                              ExamineSpawnerExpirationTimeInMinutes;                      // 0x0014   (0x0004)  
	float                                              SpawnerTasksProcessingInterval;                             // 0x0018   (0x0004)  
	float                                              SpawnerTasksProcessingBudgetInMilliseconds;                 // 0x001C   (0x0004)  
	int32_t                                            MaxNumberOfSpawnerTasksPerUpdate;                           // 0x0020   (0x0004)  
	bool                                               ShouldDestroySpawnedItemsIfNoPlayersAround;                 // 0x0024   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0025   (0x0003)  MISSED
	float                                              RarityRatio;                                                // 0x0028   (0x0004)  
	float                                              SpawnerProbabilityMultiplier;                               // 0x002C   (0x0004)  
	float                                              ExamineSpawnerProbabilityMultiplier;                        // 0x0030   (0x0004)  
	float                                              ItemHealthMultiplierWhenUnderwater;                         // 0x0034   (0x0004)  
	bool                                               IgnoreSpawnerProbability;                                   // 0x0038   (0x0001)  
	bool                                               IgnoreItemLimit;                                            // 0x0039   (0x0001)  
	bool                                               IgnoreItemZone;                                             // 0x003A   (0x0001)  
	bool                                               IgnoreItemRarity;                                           // 0x003B   (0x0001)  
	bool                                               DebugDrawItemSpawnTransforms;                               // 0x003C   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x003D   (0x0003)  MISSED
	float                                              DebugDrawItemSpawnTransformsDuration;                       // 0x0040   (0x0004)  
};

/// Struct /Script/ConZ.ExamineItemSpawnerData
/// Size: 0x00B0 (0x000000 - 0x0000B0)
struct FExamineItemSpawnerData
{ 
	int32_t                                            MinQuantity;                                                // 0x0000   (0x0004)  
	int32_t                                            MaxQuantity;                                                // 0x0004   (0x0004)  
	bool                                               AllowDuplicates;                                            // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	FItemSpawnerDataBasedOnPreset                      Spawner;                                                    // 0x0010   (0x0090)  
	TArray<FExamineItemSpawnerConstraint_MaxOccurrencesPerSpawnTypes> MaxOccurrencesPerSpawnTypes;                 // 0x00A0   (0x0010)  
};

/// Struct /Script/ConZ.ExamineItemSpawnerConstraint_MaxOccurrencesPerSpawnTypes
/// Size: 0x0028 (0x000000 - 0x000028)
struct FExamineItemSpawnerConstraint_MaxOccurrencesPerSpawnTypes
{ 
	FGameplayTagContainer                              ItemSpawnTypes;                                             // 0x0000   (0x0020)  
	int32_t                                            MaxNumberOfOccurrences;                                     // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/ConZ.ItemSpawnerData
/// Size: 0x0070 (0x000000 - 0x000070)
struct FItemSpawnerData
{ 
	TArray<TWeakObjectPtr>                             ItemClasses;                                                // 0x0000   (0x0010)  
	FGameplayTagContainer                              ItemSpawnTypes;                                             // 0x0010   (0x0020)  
	bool                                               AlwaysSpawn;                                                // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	float                                              Probability;                                                // 0x0034   (0x0004)  
	bool                                               UseItemZone;                                                // 0x0038   (0x0001)  
	bool                                               UseItemRarity;                                              // 0x0039   (0x0001)  
	bool                                               UseItemSpawnGroup;                                          // 0x003A   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x003B   (0x0001)  MISSED
	float                                              InitialDamage;                                              // 0x003C   (0x0004)  
	float                                              RandomizeDamage;                                            // 0x0040   (0x0004)  
	float                                              InitialUsage;                                               // 0x0044   (0x0004)  
	float                                              RandomizeUsage;                                             // 0x0048   (0x0004)  
	float                                              InitialDirtiness;                                           // 0x004C   (0x0004)  
	float                                              RandomizeDirtiness;                                         // 0x0050   (0x0004)  
	int32_t                                            MinAmmoCount;                                               // 0x0054   (0x0004)  
	int32_t                                            MaxAmmoCount;                                               // 0x0058   (0x0004)  
	int32_t                                            MinCashAmount;                                              // 0x005C   (0x0004)  
	int32_t                                            MaxCashAmount;                                              // 0x0060   (0x0004)  
	bool                                               UseCollisionTraceToAdjustSpawnLocation;                     // 0x0064   (0x0001)  
	bool                                               UseCollisionTraceToAdjustSpawnRotation;                     // 0x0065   (0x0001)  
	unsigned char                                      UnknownData02_5[0x2];                                       // 0x0066   (0x0002)  MISSED
	UClass*                                            PostItemsSpawnedActions;                                    // 0x0068   (0x0008)  
};

/// Struct /Script/ConZ.ItemLootTreeNodeTableRow
/// Size: 0x0018 (0x000020 - 0x000038)
struct FItemLootTreeNodeTableRow : FGameplayTagTableRow
{ 
	EItemRarity                                        Rarity;                                                     // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0021   (0x0007)  MISSED
	TArray<TWeakObjectPtr>                             PostSpawnActions;                                           // 0x0028   (0x0010)  
};

/// Struct /Script/ConZ.ItemSpawningParametersTableRow
/// Size: 0x0058 (0x000008 - 0x000060)
struct FItemSpawningParametersTableRow : FTableRowBase
{ 
	int32_t                                            MaxOccurrences;                                             // 0x0008   (0x0004)  
	FItemLocation                                      AllowedLocations;                                           // 0x000C   (0x000F)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x001B   (0x0001)  MISSED
	FFloatInterval                                     CooldownPerSquadMember;                                     // 0x001C   (0x0008)  
	bool                                               IsSubjectToAllowTrapsConfig;                                // 0x0024   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0025   (0x0003)  MISSED
	TArray<TWeakObjectPtr>                             Variations;                                                 // 0x0028   (0x0010)  
	bool                                               ShouldOverrideInitialAndRandomUsage;                        // 0x0038   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0039   (0x0003)  MISSED
	float                                              InitialUsageOverride;                                       // 0x003C   (0x0004)  
	float                                              RandomUsageOverride;                                        // 0x0040   (0x0004)  
	FVector                                            SpawnLocationOffset;                                        // 0x0044   (0x000C)  
	FRotator                                           SpawnRotationOffset;                                        // 0x0050   (0x000C)  
	float                                              SpawnRotationRandomization;                                 // 0x005C   (0x0004)  
};

/// Struct /Script/ConZ.RoomDefinition
/// Size: 0x0020 (0x000000 - 0x000020)
struct FRoomDefinition
{ 
	ADoor*                                             RoomDoor;                                                   // 0x0000   (0x0008)  
	UStaticMeshComponent*                              Locker;                                                     // 0x0008   (0x0008)  
	AKillBoxC4SpawnPoint*                              C4;                                                         // 0x0010   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0018   (0x0008)  MISSED
};

/// Struct /Script/ConZ.RoomDifficultyConfiguration
/// Size: 0x0038 (0x000000 - 0x000038)
struct FRoomDifficultyConfiguration
{ 
	TArray<UClass*>                                    Locks;                                                      // 0x0000   (0x0010)  
	TArray<UClass*>                                    Zappers;                                                    // 0x0010   (0x0010)  
	bool                                               IsC4Present;                                                // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0021   (0x0007)  MISSED
	TArray<FSpawnerConfiguration>                      PossibleSpawners;                                           // 0x0028   (0x0010)  
};

/// Struct /Script/ConZ.SpawnerConfiguration
/// Size: 0x0018 (0x000000 - 0x000018)
struct FSpawnerConfiguration
{ 
	UClass*                                            Spawner;                                                    // 0x0000   (0x0008)  
	UClass*                                            SpawnerPreset;                                              // 0x0008   (0x0008)  
	int32_t                                            MinimumItemsCount;                                          // 0x0010   (0x0004)  
	int32_t                                            MaximumItemsCount;                                          // 0x0014   (0x0004)  
};

/// Struct /Script/ConZ.LadderMarker
/// Size: 0x00A0 (0x000000 - 0x0000A0)
struct FLadderMarker
{ 
	FTransform                                         FirstStep;                                                  // 0x0000   (0x0030)  
	FVector                                            LastStep;                                                   // 0x0030   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x003C   (0x0004)  MISSED
	FTransform                                         Edge;                                                       // 0x0040   (0x0030)  
	FVector                                            CapsuleBias;                                                // 0x0070   (0x000C)  
	float                                              StepHeight;                                                 // 0x007C   (0x0004)  
	float                                              StepWidth;                                                  // 0x0080   (0x0004)  
	float                                              HitDetectionExtraAboveLastStep;                             // 0x0084   (0x0004)  
	float                                              HitDetectionExtraBelowFirstStep;                            // 0x0088   (0x0004)  
	float                                              HitDetectionExtraOnTheSides;                                // 0x008C   (0x0004)  
	bool                                               HasEdge;                                                    // 0x0090   (0x0001)  
	bool                                               IsNarrow;                                                   // 0x0091   (0x0001)  
	TEnumAsByte<EPhysicalSurface>                      PhysicalSurfaceForSounds;                                   // 0x0092   (0x0001)  
	unsigned char                                      UnknownData01_6[0xD];                                       // 0x0093   (0x000D)  MISSED
};

/// Struct /Script/ConZ.LandingEffectDataPerPhysicalSurface
/// Size: 0x0030 (0x000000 - 0x000030)
struct FLandingEffectDataPerPhysicalSurface
{ 
	FLandingEffectDataPerSeverity                      Light;                                                      // 0x0000   (0x0010)  
	FLandingEffectDataPerSeverity                      Medium;                                                     // 0x0010   (0x0010)  
	FLandingEffectDataPerSeverity                      Heavy;                                                      // 0x0020   (0x0010)  
};

/// Struct /Script/ConZ.LandingEffectDataPerSeverity
/// Size: 0x0010 (0x000000 - 0x000010)
struct FLandingEffectDataPerSeverity
{ 
	UParticleSystem*                                   ParticleSystem;                                             // 0x0000   (0x0008)  
	bool                                               SpawnParticlesInDirectionOfVelocity;                        // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
};

/// Struct /Script/ConZ.AerodynamicSurface
/// Size: 0x0080 (0x000000 - 0x000080)
struct FAerodynamicSurface
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0008   (0x0008)  MISSED
	FTransform                                         Transform;                                                  // 0x0010   (0x0030)  
	float                                              LiftSlope;                                                  // 0x0040   (0x0004)  
	float                                              SkinFriction;                                               // 0x0044   (0x0004)  
	float                                              ZeroLiftAoA;                                                // 0x0048   (0x0004)  
	float                                              StallAngleHigh;                                             // 0x004C   (0x0004)  
	float                                              StallAngleLow;                                              // 0x0050   (0x0004)  
	float                                              Chord;                                                      // 0x0054   (0x0004)  
	float                                              Span;                                                       // 0x0058   (0x0004)  
	float                                              AspectRatio;                                                // 0x005C   (0x0004)  
	float                                              FlapFraction;                                               // 0x0060   (0x0004)  
	bool                                               IsControlable;                                              // 0x0064   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0065   (0x0003)  MISSED
	float                                              FlapAngle;                                                  // 0x0068   (0x0004)  
	float                                              FlapAngleSensitivity;                                       // 0x006C   (0x0004)  
	float                                              MaxFlapAngle;                                               // 0x0070   (0x0004)  
	float                                              AreaMultiplier;                                             // 0x0074   (0x0004)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0078   (0x0008)  MISSED
};

/// Struct /Script/ConZ.CombinationLockGetCombinationRequestData
/// Size: 0x0014 (0x000000 - 0x000014)
struct FCombinationLockGetCombinationRequestData
{ 
	unsigned char                                      UnknownData00_1[0x14];                                      // 0x0000   (0x0014)  MISSED
};

/// Struct /Script/ConZ.CombinationLockUnlockAttemptRequestData
/// Size: 0x001C (0x000000 - 0x00001C)
struct FCombinationLockUnlockAttemptRequestData
{ 
	unsigned char                                      UnknownData00_1[0x1C];                                      // 0x0000   (0x001C)  MISSED
};

/// Struct /Script/ConZ.ThieverySkillExperienceAwards
/// Size: 0x0008 (0x000000 - 0x000008)
struct FThieverySkillExperienceAwards
{ 
	float                                              PointsForSuccessfulLockpicking;                             // 0x0000   (0x0004)  
	float                                              PointsForUnsuccessfulLockpicking;                           // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.VehicleMarkerData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FVehicleMarkerData
{ 
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0000   (0x0020)  MISSED
};

/// Struct /Script/ConZ.VehicleAttachmentAssociatedTradeables
/// Size: 0x0050 (0x000000 - 0x000050)
struct FVehicleAttachmentAssociatedTradeables
{ 
	TWeakObjectPtr<UClass*>                            RepairServiceClass;                                         // 0x0000   (0x0028)  
	TWeakObjectPtr<UClass*>                            InstallationServiceClass;                                   // 0x0028   (0x0028)  
};

/// Struct /Script/ConZ.VehicleAttachmentPriceDataPerClassMap
/// Size: 0x0050 (0x000000 - 0x000050)
struct FVehicleAttachmentPriceDataPerClassMap
{ 
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0000   (0x0050)  MISSED
};

/// Struct /Script/ConZ.MedicalSkillParametersPerSkillLevel
/// Size: 0x0008 (0x000000 - 0x000008)
struct FMedicalSkillParametersPerSkillLevel
{ 
	float                                              ManualBCUUpgradeSuccessChance;                              // 0x0000   (0x0004)  
	float                                              ExtractBloodSampleDurationMultiplier;                       // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.MeleeAction
/// Size: 0x0020 (0x000000 - 0x000020)
struct FMeleeAction
{ 
	EMeleeActionType                                   ActionType;                                                 // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	TWeakObjectPtr<UAnimMontage*>                      Montage;                                                    // 0x0004   (0x0008)  
	float                                              StartDelay;                                                 // 0x000C   (0x0004)  
	float                                              PlayRate;                                                   // 0x0010   (0x0004)  
	float                                              BlockDuration;                                              // 0x0014   (0x0004)  
	float                                              OrientToTargetSpeedFactor;                                  // 0x0018   (0x0004)  
	float                                              RegainControlDurationModifier;                              // 0x001C   (0x0004)  
};

/// Struct /Script/ConZ.MeleeDodge
/// Size: 0x0010 (0x000000 - 0x000010)
struct FMeleeDodge
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/ConZ.MeleeAttack
/// Size: 0x0020 (0x000000 - 0x000020)
struct FMeleeAttack
{ 
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0000   (0x0020)  MISSED
};

/// Struct /Script/ConZ.CheckMeleeAttackCapsuleCollisionData
/// Size: 0x00D0 (0x000000 - 0x0000D0)
struct FCheckMeleeAttackCapsuleCollisionData
{ 
	unsigned char                                      UnknownData00_1[0xD0];                                      // 0x0000   (0x00D0)  MISSED
};

/// Struct /Script/ConZ.AttackedByMeleeData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FAttackedByMeleeData
{ 
	TWeakObjectPtr<AActor*>                            attacker;                                                   // 0x0000   (0x0008)  
	TWeakObjectPtr<UAnimMontage*>                      Montage;                                                    // 0x0008   (0x0008)  
	float                                              PlayRate;                                                   // 0x0010   (0x0004)  
	float                                              Duration;                                                   // 0x0014   (0x0004)  
};

/// Struct /Script/ConZ.MeleeSkillExperienceAwards
/// Size: 0x0010 (0x000000 - 0x000010)
struct FMeleeSkillExperienceAwards
{ 
	float                                              PointsForHit;                                               // 0x0000   (0x0004)  
	float                                              PointsForKill;                                              // 0x0004   (0x0004)  
	float                                              SubsequentHitMultiplier;                                    // 0x0008   (0x0004)  
	float                                              SkillLevelBonusPoints;                                      // 0x000C   (0x0004)  
};

/// Struct /Script/ConZ.MeleeSkillParametersPerSkillLevel
/// Size: 0x0088 (0x000000 - 0x000088)
struct FMeleeSkillParametersPerSkillLevel
{ 
	FExperienceDependentFloat                          StartDelay;                                                 // 0x0000   (0x0008)  
	FExperienceDependentFloat                          StartDelayPenaltyPerStrengthShortage;                       // 0x0008   (0x0008)  
	FExperienceDependentFloat                          AnimationPlayRateModifier;                                  // 0x0010   (0x0008)  
	FExperienceDependentFloat                          AnimationPlayRatePenaltyPerStrengthShortage;                // 0x0018   (0x0008)  
	FExperienceDependentFloat                          RegainControlDurationModifier;                              // 0x0020   (0x0008)  
	FExperienceDependentFloat                          StaminaDrain;                                               // 0x0028   (0x0008)  
	FExperienceDependentFloat                          StaminaDrainPenaltyPerStrengthShortage;                     // 0x0030   (0x0008)  
	FExperienceDependentFloat                          StaminaRecoveryDelay;                                       // 0x0038   (0x0008)  
	FExperienceDependentFloat                          StaminaRecoveryDuration;                                    // 0x0040   (0x0008)  
	FExperienceDependentFloat                          StaminaInfluenceWindowMin;                                  // 0x0048   (0x0008)  
	FExperienceDependentFloat                          StaminaInfluenceWindowMax;                                  // 0x0050   (0x0008)  
	FExperienceDependentFloat                          StaminaInfluenceWindowLinearity;                            // 0x0058   (0x0008)  
	FExperienceDependentFloat                          StartDelayWhenExhausted;                                    // 0x0060   (0x0008)  
	FExperienceDependentFloat                          AnimationPlayRateModifierWhenExhausted;                     // 0x0068   (0x0008)  
	FExperienceDependentFloat                          RegainControlDurationModifierWhenExhausted;                 // 0x0070   (0x0008)  
	FExperienceDependentFloat                          StaminaMultiplierPerExcessGearWeight;                       // 0x0078   (0x0008)  
	FExperienceDependentFloat                          ComboCooldownDuration;                                      // 0x0080   (0x0008)  
};

/// Struct /Script/ConZ.MeleeSkillAnimations
/// Size: 0x0098 (0x000000 - 0x000098)
struct FMeleeSkillAnimations
{ 
	UAnimSequenceBase*                                 PrimaryIdleAnimationTP;                                     // 0x0000   (0x0008)  
	UAnimSequenceBase*                                 PrimaryIdleAnimationFP;                                     // 0x0008   (0x0008)  
	UAnimSequenceBase*                                 TiredIdleAnimationTP;                                       // 0x0010   (0x0008)  
	UAnimSequenceBase*                                 TiredIdleAnimationFP;                                       // 0x0018   (0x0008)  
	UAnimSequenceBase*                                 WalkingIdleAnimationTP;                                     // 0x0020   (0x0008)  
	UAnimSequenceBase*                                 WalkingIdleAnimationFP;                                     // 0x0028   (0x0008)  
	UAnimSequenceBase*                                 BlockIdleAnimationTP;                                       // 0x0030   (0x0008)  
	UAnimSequenceBase*                                 BlockIdleAnimationFP;                                       // 0x0038   (0x0008)  
	UBlendSpace*                                       AimOffsetBlendSpaceTP;                                      // 0x0040   (0x0008)  
	UBlendSpace*                                       AimOffsetBlendSpaceFP;                                      // 0x0048   (0x0008)  
	UAnimMontage*                                      EnterCombatModeMontage;                                     // 0x0050   (0x0008)  
	UAnimMontage*                                      LeaveCombatModeMontage;                                     // 0x0058   (0x0008)  
	TArray<UAnimSequenceBase*>                         InactivityIdleAnimations;                                   // 0x0060   (0x0010)  
	float                                              IdleToBlockBlendDuration;                                   // 0x0070   (0x0004)  
	float                                              BlockToIdleBlendDuration;                                   // 0x0074   (0x0004)  
	TArray<FMeleeSkillAttack>                          Attacks;                                                    // 0x0078   (0x0010)  
	TArray<FMeleeSkillDodge>                           Dodges;                                                     // 0x0088   (0x0010)  
};

/// Struct /Script/ConZ.MeleeSkillDodge
/// Size: 0x0018 (0x000000 - 0x000018)
struct FMeleeSkillDodge
{ 
	EDodgeDirectionType                                DodgeDirectionType;                                         // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	UAnimMontage*                                      Montage;                                                    // 0x0008   (0x0008)  
	float                                              RegainControlDurationMultiplier;                            // 0x0010   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/ConZ.MeleeSkillAttack
/// Size: 0x0078 (0x000000 - 0x000078)
struct FMeleeSkillAttack
{ 
	FGameplayTagContainer                              AttackTypes;                                                // 0x0000   (0x0020)  
	FGameplayTagContainer                              IgnoreReason;                                               // 0x0020   (0x0020)  
	UAnimMontage*                                      Montage;                                                    // 0x0040   (0x0008)  
	UAnimMontage*                                      MontageFP;                                                  // 0x0048   (0x0008)  
	FFloatInterval                                     PitchRange;                                                 // 0x0050   (0x0008)  
	float                                              MaxDistance;                                                // 0x0058   (0x0004)  
	float                                              MinDistance;                                                // 0x005C   (0x0004)  
	float                                              MinStamina;                                                 // 0x0060   (0x0004)  
	float                                              OrientToTargetSpeedFactor;                                  // 0x0064   (0x0004)  
	float                                              RegainControlDurationMultiplier;                            // 0x0068   (0x0004)  
	float                                              StaminaDrainMultiplier;                                     // 0x006C   (0x0004)  
	bool                                               CanBeUsedAsInitialAttack;                                   // 0x0070   (0x0001)  
	bool                                               CanBeUsedToCloseLargeDistanceToTarget;                      // 0x0071   (0x0001)  
	bool                                               Solo;                                                       // 0x0072   (0x0001)  
	bool                                               Mute;                                                       // 0x0073   (0x0001)  
	bool                                               IsAlwaysCandidate;                                          // 0x0074   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0075   (0x0003)  MISSED
};

/// Struct /Script/ConZ.MeshHitZone
/// Size: 0x001C (0x000000 - 0x00001C)
struct FMeshHitZone
{ 
	unsigned char                                      UnknownData00_1[0x1C];                                      // 0x0000   (0x001C)  MISSED
};

/// Struct /Script/ConZ.MeshInstanceId
/// Size: 0x0008 (0x000000 - 0x000008)
struct FMeshInstanceId
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/ConZ.MetabolismAPBFontStyle
/// Size: 0x0030 (0x000000 - 0x000030)
struct FMetabolismAPBFontStyle
{ 
	UFont*                                             Font;                                                       // 0x0000   (0x0008)  
	int32_t                                            FontSize;                                                   // 0x0008   (0x0004)  
	FMargin                                            TitlePadding;                                               // 0x000C   (0x0010)  
	FMargin                                            ValuePadding;                                               // 0x001C   (0x0010)  
	TEnumAsByte<EVerticalAlignment>                    TitleVerticalAlignment;                                     // 0x002C   (0x0001)  
	TEnumAsByte<EHorizontalAlignment>                  TitleHorizontalAlignment;                                   // 0x002D   (0x0001)  
	TEnumAsByte<EVerticalAlignment>                    ValueVerticalAlignment;                                     // 0x002E   (0x0001)  
	TEnumAsByte<EHorizontalAlignment>                  ValueHorizontalAlignment;                                   // 0x002F   (0x0001)  
};

/// Struct /Script/ConZ.MetabolismConfiguration
/// Size: 0x0460 (0x000000 - 0x000460)
struct FMetabolismConfiguration
{ 
	float                                              InitialAbsorbedEnergyRatio;                                 // 0x0000   (0x0004)  
	float                                              InitialAbsorbedWaterRatio;                                  // 0x0004   (0x0004)  
	float                                              InitialAbsorbedVitaminsRatio;                               // 0x0008   (0x0004)  
	float                                              InitialAbsorbedMineralsRatio;                               // 0x000C   (0x0004)  
	float                                              InitialColonFullness;                                       // 0x0010   (0x0004)  
	float                                              InitialBladderFullness;                                     // 0x0014   (0x0004)  
	float                                              MaxStomachVolume;                                           // 0x0018   (0x0004)  
	float                                              MaxIntestineVolume;                                         // 0x001C   (0x0004)  
	float                                              MaxColonVolume;                                             // 0x0020   (0x0004)  
	float                                              MaxBladderVolume;                                           // 0x0024   (0x0004)  
	float                                              EnergyAbsorptionCapacityMultiplier;                         // 0x0028   (0x0004)  
	float                                              WaterAbsorptionCapacityMultiplier;                          // 0x002C   (0x0004)  
	float                                              AlcoholAbsorptionBaseCapacity;                              // 0x0030   (0x0004)  
	float                                              AbsorbedAlcoholDiscardRate;                                 // 0x0034   (0x0004)  
	float                                              MaxEnergyToRecoverFromFatPerHour;                           // 0x0038   (0x0004)  
	float                                              MaxAbsorbedEnergyExcessToStoreAsFatPerHour;                 // 0x003C   (0x0004)  
	FSubstancesData                                    NutrientsAbsorptionRateModifier;                            // 0x0040   (0x00D0)  
	float                                              MinSubstancesToAbsorbRatio;                                 // 0x0110   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0114   (0x0004)  MISSED
	FSubstancesData                                    AbsorbedNonEnergyProvidingNutrientsExcessDiscardRateMultiplier; // 0x0118   (0x00D0)  
	FSubstancesData                                    AdditionalRequiredWaterPerNutrientAbsorbed;                 // 0x01E8   (0x00D0)  
	float                                              IntestineToColonFecesTransferRate;                          // 0x02B8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x02BC   (0x0004)  MISSED
	FSubstancesData                                    NutrientAbsorptionWasteFecesRatios;                         // 0x02C0   (0x00D0)  
	FSubstancesData                                    NutrientAbsorptionWasteUrineRatios;                         // 0x0390   (0x00D0)  
};

/// Struct /Script/ConZ.SubstancesData
/// Size: 0x00D0 (0x000000 - 0x0000D0)
struct FSubstancesData
{ 
	float                                              Nutrients;                                                  // 0x0000   (0x0080)  
	TMap<int32_t, float>                               ForeignSubstances;                                          // 0x0080   (0x0050)  
};

/// Struct /Script/ConZ.MetabolismRadialAttributeProgressBarColor
/// Size: 0x0030 (0x000000 - 0x000030)
struct FMetabolismRadialAttributeProgressBarColor
{ 
	FLinearColor                                       PositiveColor;                                              // 0x0000   (0x0010)  
	FLinearColor                                       NeutralColor;                                               // 0x0010   (0x0010)  
	FLinearColor                                       NegativeColor;                                              // 0x0020   (0x0010)  
};

/// Struct /Script/ConZ.MetabolismRadialProgressBarFontSettings
/// Size: 0x0014 (0x000000 - 0x000014)
struct FMetabolismRadialProgressBarFontSettings
{ 
	int32_t                                            FontSize;                                                   // 0x0000   (0x0004)  
	FMargin                                            FontPadding;                                                // 0x0004   (0x0010)  
};

/// Struct /Script/ConZ.MetabolismRadialProgressBarColorScheme
/// Size: 0x0080 (0x000000 - 0x000080)
struct FMetabolismRadialProgressBarColorScheme
{ 
	FLinearColor                                       BackgroundColor;                                            // 0x0000   (0x0010)  
	FLinearColor                                       PrimaryBarColor;                                            // 0x0010   (0x0010)  
	FLinearColor                                       PrimaryBarGlowColor;                                        // 0x0020   (0x0010)  
	FLinearColor                                       SecondaryBarColor;                                          // 0x0030   (0x0010)  
	FLinearColor                                       SecondaryBarGlowColor;                                      // 0x0040   (0x0010)  
	FLinearColor                                       FontColor;                                                  // 0x0050   (0x0010)  
	FLinearColor                                       FontInnerGlowColor;                                         // 0x0060   (0x0010)  
	FLinearColor                                       FontOuterGlowColor;                                         // 0x0070   (0x0010)  
};

/// Struct /Script/ConZ.DigestionItemSave
/// Size: 0x02C0 (0x000000 - 0x0002C0)
struct FDigestionItemSave
{ 
	FConsumableSave                                    Consumable;                                                 // 0x0000   (0x0100)  
	float                                              RemainingMassToConsume;                                     // 0x0100   (0x0004)  
	float                                              MassConsumed;                                               // 0x0104   (0x0004)  
	float                                              TotalMassConsumed;                                          // 0x0108   (0x0004)  
	float                                              MassAbsorbed;                                               // 0x010C   (0x0004)  
	FSubstancesData                                    SubstancesInStomach;                                        // 0x0110   (0x00D0)  
	FSubstancesData                                    SubstancesInIntestine;                                      // 0x01E0   (0x00D0)  
	TArray<FConsumableDigestionHandlerSave>            DigestionHandlers;                                          // 0x02B0   (0x0010)  
};

/// Struct /Script/ConZ.ConsumableDigestionHandlerSave
/// Size: 0x0010 (0x000000 - 0x000010)
struct FConsumableDigestionHandlerSave
{ 
	TArray<char>                                       Data;                                                       // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.ConsumableSave
/// Size: 0x0100 (0x000000 - 0x000100)
struct FConsumableSave
{ 
	float                                              MassToConsume;                                              // 0x0000   (0x0004)  
	float                                              ConsumptionDuration;                                        // 0x0004   (0x0004)  
	float                                              Density;                                                    // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	FSubstancesData                                    Substances;                                                 // 0x0010   (0x00D0)  
	TArray<FString>                                    ForeignSubstanceClasses;                                    // 0x00E0   (0x0010)  
	TArray<char>                                       UserData;                                                   // 0x00F0   (0x0010)  
};

/// Struct /Script/ConZ.ForeignSubstanceSave
/// Size: 0x0010 (0x000000 - 0x000010)
struct FForeignSubstanceSave
{ 
	TArray<char>                                       Data;                                                       // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.MetabolismSPBColorScheme
/// Size: 0x0050 (0x000000 - 0x000050)
struct FMetabolismSPBColorScheme
{ 
	FLinearColor                                       BaseColor;                                                  // 0x0000   (0x0010)  
	FLinearColor                                       FillColorBottom;                                            // 0x0010   (0x0010)  
	FLinearColor                                       FillColorTop;                                               // 0x0020   (0x0010)  
	FLinearColor                                       OutlineColorBottom;                                         // 0x0030   (0x0010)  
	FLinearColor                                       OutlineColorTop;                                            // 0x0040   (0x0010)  
};

/// Struct /Script/ConZ.MinigameToolRequestData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FMinigameToolRequestData
{ 
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/ConZ.MissionItemInfo
/// Size: 0x0038 (0x000000 - 0x000038)
struct FMissionItemInfo
{ 
	TWeakObjectPtr<AActor*>                            ItemLocation;                                               // 0x0000   (0x0028)  
	UClass*                                            ItemClass;                                                  // 0x0028   (0x0008)  
	bool                                               ShouldRemove;                                               // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	float                                              TimeToDestroy;                                              // 0x0034   (0x0004)  
};

/// Struct /Script/ConZ.MissionLevelInfo
/// Size: 0x0010 (0x000000 - 0x000010)
struct FMissionLevelInfo
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/ConZ.ActiveManagers
/// Size: 0x0010 (0x000000 - 0x000010)
struct FActiveManagers
{ 
	TArray<AMissionManager*>                           MissionManagers;                                            // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.MissionData
/// Size: 0x00B8 (0x000000 - 0x0000B8)
struct FMissionData
{ 
	FText                                              MissionName;                                                // 0x0000   (0x0018)  
	FText                                              MissionCategory;                                            // 0x0018   (0x0018)  
	FText                                              MissionDescription;                                         // 0x0030   (0x0018)  
	EMissionType                                       MissionType;                                                // 0x0048   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0049   (0x0003)  MISSED
	int32_t                                            MissionOrdinalNumber;                                       // 0x004C   (0x0004)  
	EMissionState                                      MissionState;                                               // 0x0050   (0x0001)  
	EFaction                                           MissionFaction;                                             // 0x0051   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x0052   (0x0006)  MISSED
	TArray<TWeakObjectPtr>                             MissionStartingLocations;                                   // 0x0058   (0x0010)  
	int32_t                                            IntendedNumberOfPlayers;                                    // 0x0068   (0x0004)  
	float                                              MissionCooldown;                                            // 0x006C   (0x0004)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x0070   (0x0008)  MISSED
	FString                                            MissionAssetId;                                             // 0x0078   (0x0010)  
	TArray<FObjectiveData>                             ObjectivesData;                                             // 0x0088   (0x0010)  
	FMissionReward                                     MissionReward;                                              // 0x0098   (0x0018)  
	UTexture2D*                                        MissionBannerImage;                                         // 0x00B0   (0x0008)  
};

/// Struct /Script/ConZ.MissionReward
/// Size: 0x0018 (0x000000 - 0x000018)
struct FMissionReward
{ 
	TArray<UClass*>                                    RewardItems;                                                // 0x0000   (0x0010)  
	float                                              RewardFamePoints;                                           // 0x0010   (0x0004)  
	bool                                               RewardReceived;                                             // 0x0014   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0015   (0x0003)  MISSED
};

/// Struct /Script/ConZ.ObjectiveData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FObjectiveData
{ 
	FString                                            ObjectiveAssetId;                                           // 0x0000   (0x0010)  
	EObjectiveState                                    ObjectiveState;                                             // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0011   (0x0007)  MISSED
	FText                                              Description;                                                // 0x0018   (0x0018)  
};

/// Struct /Script/ConZ.ObjectiveDataGroup
/// Size: 0x0018 (0x000000 - 0x000018)
struct FObjectiveDataGroup
{ 
	TArray<TWeakObjectPtr>                             RewardItems;                                                // 0x0000   (0x0010)  
	float                                              RewardFamePoints;                                           // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/ConZ.ModularTooltipSectionData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FModularTooltipSectionData
{ 
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0000   (0x0018)  MISSED
	TArray<UModularTooltipElementData*>                Elements;                                                   // 0x0018   (0x0010)  
};

/// Struct /Script/ConZ.MovingSplineSoundData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FMovingSplineSoundData
{ 
	UAkAudioEvent*                                     StartAudioEvent;                                            // 0x0000   (0x0008)  
	UAkAudioEvent*                                     StopAudioEvent;                                             // 0x0008   (0x0008)  
	float                                              LifetimeAfterStopping;                                      // 0x0010   (0x0004)  
	float                                              AudioMovementSpeed;                                         // 0x0014   (0x0004)  
};

/// Struct /Script/ConZ.MovableMeshComponentData
/// Size: 0x0014 (0x000000 - 0x000014)
struct FMovableMeshComponentData
{ 
	unsigned char                                      UnknownData00_1[0x14];                                      // 0x0000   (0x0014)  MISSED
};

/// Struct /Script/ConZ.MovableCollisionFieldState
/// Size: 0x0003 (0x000000 - 0x000003)
struct FMovableCollisionFieldState
{ 
	bool                                               IsTurnedOn;                                                 // 0x0000   (0x0001)  
	char                                               PackedCurrentPercentage;                                    // 0x0001   (0x0001)  
	EMovableCollisionFieldMoveType                     MoveType;                                                   // 0x0002   (0x0001)  
};

/// Struct /Script/ConZ.MovableCollisionFieldMoveInfo
/// Size: 0x0008 (0x000000 - 0x000008)
struct FMovableCollisionFieldMoveInfo
{ 
	float                                              Duration;                                                   // 0x0000   (0x0004)  
	EMovableCollisionFieldMovementCurveType            curveType;                                                  // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0005   (0x0003)  MISSED
};

/// Struct /Script/ConZ.NotificationDescriptionReplicationHelper
/// Size: 0x0018 (0x000000 - 0x000018)
struct FNotificationDescriptionReplicationHelper
{ 
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/ConZ.NotificationAndDelay
/// Size: 0x0010 (0x000000 - 0x000010)
struct FNotificationAndDelay
{ 
	UNotificationDescription*                          Notification;                                               // 0x0000   (0x0008)  
	float                                              Delay;                                                      // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.NutrientsRDA
/// Size: 0x006C (0x000000 - 0x00006C)
struct FNutrientsRDA
{ 
	float                                              MinProteinsPerLeanBodyMass;                                 // 0x0000   (0x0004)  
	float                                              MaxProteinsPerLeanBodyMass;                                 // 0x0004   (0x0004)  
	float                                              Fats;                                                       // 0x0008   (0x0004)  
	float                                              Water;                                                      // 0x000C   (0x0004)  
	float                                              VitaminA;                                                   // 0x0010   (0x0004)  
	float                                              VitaminB1;                                                  // 0x0014   (0x0004)  
	float                                              VitaminB2;                                                  // 0x0018   (0x0004)  
	float                                              VitaminB3;                                                  // 0x001C   (0x0004)  
	float                                              VitaminB4;                                                  // 0x0020   (0x0004)  
	float                                              VitaminB5;                                                  // 0x0024   (0x0004)  
	float                                              VitaminB6;                                                  // 0x0028   (0x0004)  
	float                                              VitaminB9;                                                  // 0x002C   (0x0004)  
	float                                              VitaminB12;                                                 // 0x0030   (0x0004)  
	float                                              VitaminC;                                                   // 0x0034   (0x0004)  
	float                                              VitaminD;                                                   // 0x0038   (0x0004)  
	float                                              VitaminE;                                                   // 0x003C   (0x0004)  
	float                                              VitaminK;                                                   // 0x0040   (0x0004)  
	float                                              Calcium;                                                    // 0x0044   (0x0004)  
	float                                              Magnesium;                                                  // 0x0048   (0x0004)  
	float                                              Potassium;                                                  // 0x004C   (0x0004)  
	float                                              Copper;                                                     // 0x0050   (0x0004)  
	float                                              Selenium;                                                   // 0x0054   (0x0004)  
	float                                              Iron;                                                       // 0x0058   (0x0004)  
	float                                              Phosphorus;                                                 // 0x005C   (0x0004)  
	float                                              Zinc;                                                       // 0x0060   (0x0004)  
	float                                              Manganese;                                                  // 0x0064   (0x0004)  
	float                                              Sodium;                                                     // 0x0068   (0x0004)  
};

/// Struct /Script/ConZ.ObjectiveTrackableData
/// Size: 0x0008 (0x000000 - 0x000008)
struct FObjectiveTrackableData
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/ConZ.ParachuteAnimParams
/// Size: 0x0010 (0x000000 - 0x000010)
struct FParachuteAnimParams
{ 
	UAnimSequence*                                     OpeningAnimation;                                           // 0x0000   (0x0008)  
	FFloatInterval                                     OpeningAnimationTimeRange;                                  // 0x0008   (0x0008)  
};

/// Struct /Script/ConZ.PhysicalSurfaceData
/// Size: 0x001C (0x000000 - 0x00001C)
struct FPhysicalSurfaceData
{ 
	float                                              DirtinessFactor;                                            // 0x0000   (0x0004)  
	float                                              WetnessFactor;                                              // 0x0004   (0x0004)  
	float                                              LandingImpactVelocityModifier;                              // 0x0008   (0x0004)  
	float                                              NoiseLoudnessModifier;                                      // 0x000C   (0x0004)  
	float                                              FootstepEnhancerChance;                                     // 0x0010   (0x0004)  
	float                                              FootwearDamageMultiplier;                                   // 0x0014   (0x0004)  
	float                                              FootAbrasionsMultiplier;                                    // 0x0018   (0x0004)  
};

/// Struct /Script/ConZ.PhysicalSurfaceEffectsData
/// Size: 0x0050 (0x000000 - 0x000050)
struct FPhysicalSurfaceEffectsData
{ 
	FPhysicalSurfaceVehicleEffectsData                 Vehicle;                                                    // 0x0000   (0x0050)  
};

/// Struct /Script/ConZ.PhysicalSurfaceVehicleEffectsData
/// Size: 0x0050 (0x000000 - 0x000050)
struct FPhysicalSurfaceVehicleEffectsData
{ 
	UParticleSystem*                                   ParticleTrail;                                              // 0x0000   (0x0008)  
	float                                              ParticleTrailSlipModifier;                                  // 0x0008   (0x0004)  
	float                                              ParticleTrailDestructionDelay;                              // 0x000C   (0x0004)  
	UParticleSystem*                                   ParticleWave;                                               // 0x0010   (0x0008)  
	float                                              ParticleWaveSlipModifier;                                   // 0x0018   (0x0004)  
	float                                              ParticleWaveDestructionDelay;                               // 0x001C   (0x0004)  
	FPhysicalSurfaceVehicleTireParticleData            SmallTireParticles;                                         // 0x0020   (0x0010)  
	FPhysicalSurfaceVehicleTireParticleData            MediumTireParticles;                                        // 0x0030   (0x0010)  
	FPhysicalSurfaceVehicleTireParticleData            LargeTireParticles;                                         // 0x0040   (0x0010)  
};

/// Struct /Script/ConZ.PhysicalSurfaceVehicleTireParticleData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPhysicalSurfaceVehicleTireParticleData
{ 
	UParticleSystem*                                   ParticleTrail;                                              // 0x0000   (0x0008)  
	UParticleSystem*                                   ParticleWave;                                               // 0x0008   (0x0008)  
};

/// Struct /Script/ConZ.PlaceableActorStateReplicationHelper
/// Size: 0x0008 (0x000000 - 0x000008)
struct FPlaceableActorStateReplicationHelper
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/ConZ.TilesData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FTilesData
{ 
	UHierarchicalInstancedStaticMeshComponent*         HISMComponentMain;                                          // 0x0000   (0x0008)  
	UHierarchicalInstancedStaticMeshComponent*         HISMComponentOutline;                                       // 0x0008   (0x0008)  
	UHierarchicalInstancedStaticMeshComponent*         HISMComponentDepth;                                         // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.SizeVariatedTilesData
/// Size: 0x0028 (0x000018 - 0x000040)
struct FSizeVariatedTilesData : FTilesData
{ 
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0018   (0x0028)  MISSED
};

/// Struct /Script/ConZ.LineTraceSocketPair
/// Size: 0x0010 (0x000000 - 0x000010)
struct FLineTraceSocketPair
{ 
	FName                                              TraceStart;                                                 // 0x0000   (0x0008)  
	FName                                              TraceEnd;                                                   // 0x0008   (0x0008)  
};

/// Struct /Script/ConZ.PlaceableIngredient
/// Size: 0x0050 (0x000000 - 0x000050)
struct FPlaceableIngredient
{ 
	TArray<UCraftingItemTag*>                          Tags;                                                       // 0x0000   (0x0010)  
	TArray<UClass*>                                    SpecificItems;                                              // 0x0010   (0x0010)  
	TArray<ECraftingType>                              TagsCraftingTypes;                                          // 0x0020   (0x0010)  
	TArray<ECraftingType>                              SpecificItemsCraftingTypes;                                 // 0x0030   (0x0010)  
	EPlaceableIngredientType                           Type;                                                       // 0x0040   (0x0001)  
	EQuantityScalingType                               ScalingType;                                                // 0x0041   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0042   (0x0002)  MISSED
	float                                              Required;                                                   // 0x0044   (0x0004)  
	float                                              Satisfied;                                                  // 0x0048   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x004C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.PlantGrowthStageData
/// Size: 0x0060 (0x000000 - 0x000060)
struct FPlantGrowthStageData
{ 
	float                                              MinWaterMililiters;                                         // 0x0000   (0x0004)  
	float                                              MinSunHours;                                                // 0x0004   (0x0004)  
	FFloatInterval                                     OptimalAvgTemperature;                                      // 0x0008   (0x0008)  
	float                                              WaterDeficiencyGrowthExtendHours;                           // 0x0010   (0x0004)  
	float                                              WaterDeficiencyDeathTimeHours;                              // 0x0014   (0x0004)  
	float                                              TemperatureDeficiencyGrowthExtendHours;                     // 0x0018   (0x0004)  
	float                                              TemperatureDeficiencyDeathTimeHours;                        // 0x001C   (0x0004)  
	float                                              SunDeficiencyGrowthExtendHours;                             // 0x0020   (0x0004)  
	float                                              PlantPestGrowthExtendPercentage;                            // 0x0024   (0x0004)  
	float                                              DeathFromPlantPestTimeHours;                                // 0x0028   (0x0004)  
	float                                              PlantDiseaseGrowthExendPercentage;                          // 0x002C   (0x0004)  
	float                                              DeathFromPlantDiseaseTimeHours;                             // 0x0030   (0x0004)  
	float                                              WeedGrowthExtendPercentage;                                 // 0x0034   (0x0004)  
	float                                              RecoveryTimeHours;                                          // 0x0038   (0x0004)  
	float                                              WeedHarvestingReductionPercentage;                          // 0x003C   (0x0004)  
	float                                              OrganicFertilizerHarvestingIncreasePercentage;              // 0x0040   (0x0004)  
	float                                              IndustrialFertilizerHarvestingIncreasePercentage;           // 0x0044   (0x0004)  
	float                                              WaterDeficiencyHarvestingDecreasePercentage;                // 0x0048   (0x0004)  
	float                                              TemperatureDeficiencyHarvestingDecreasePercentage;          // 0x004C   (0x0004)  
	float                                              WaterDeficiencyHarvestingSearchTimeIncrease;                // 0x0050   (0x0004)  
	float                                              TemperatureDeficiencyHarvestingSearchTimeIncrease;          // 0x0054   (0x0004)  
	float                                              PlantHealthAtWhichProduceStartsDecaying;                    // 0x0058   (0x0004)  
	float                                              HarvestedProduceMinHealthPercentage;                        // 0x005C   (0x0004)  
};

/// Struct /Script/ConZ.PlantMeshData
/// Size: 0x0070 (0x000000 - 0x000070)
struct FPlantMeshData
{ 
	bool                                               PlantGrowsUpright;                                          // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	FVector                                            Translation;                                                // 0x0004   (0x000C)  
	FFloatInterval                                     RandomVerticalOffsetInterval;                               // 0x0010   (0x0008)  
	FFloatInterval                                     RandomHorizontalOffsetInterval;                             // 0x0018   (0x0008)  
	FFloatInterval                                     RandomScaleInterval;                                        // 0x0020   (0x0008)  
	FPlantStageMeshData                                VegetatingPlantMesh;                                        // 0x0028   (0x0018)  
	FPlantStageMeshData                                FloweringPlantMesh;                                         // 0x0040   (0x0018)  
	FPlantStageMeshData                                RipeningPlantMesh;                                          // 0x0058   (0x0018)  
};

/// Struct /Script/ConZ.PlantStageMeshData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPlantStageMeshData
{ 
	bool                                               SkipStage;                                                  // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              ProduceReadyStagePercent;                                   // 0x0004   (0x0004)  
	TArray<FPlantMesh>                                 Meshes;                                                     // 0x0008   (0x0010)  
};

/// Struct /Script/ConZ.PlantMesh
/// Size: 0x0060 (0x000000 - 0x000060)
struct FPlantMesh
{ 
	FStaticMeshMaterialPair                            Mesh;                                                       // 0x0000   (0x0018)  
	FFloatInterval                                     StageMorphTargetInterpolationRange;                         // 0x0018   (0x0008)  
	FVector                                            GrowthExponents;                                            // 0x0020   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x002C   (0x0004)  MISSED
	FTransform                                         Transform;                                                  // 0x0030   (0x0030)  
};

/// Struct /Script/ConZ.StaticMeshMaterialPair
/// Size: 0x0018 (0x000000 - 0x000018)
struct FStaticMeshMaterialPair
{ 
	UStaticMesh*                                       Mesh;                                                       // 0x0000   (0x0008)  
	TArray<UMaterialInterface*>                        Materials;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/ConZ.PlayerRpcChannelServerDataResponseNetSerializer
/// Size: 0x0008 (0x000000 - 0x000008)
struct FPlayerRpcChannelServerDataResponseNetSerializer
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/ConZ.PlayerRpcChannelServerDataRequestNetSerializer
/// Size: 0x0008 (0x000000 - 0x000008)
struct FPlayerRpcChannelServerDataRequestNetSerializer
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/ConZ.PowerNodeConnector
/// Size: 0x0020 (0x000000 - 0x000020)
struct FPowerNodeConnector
{ 
	FName                                              SocketName;                                                 // 0x0000   (0x0008)  
	bool                                               ShouldHaveCable;                                            // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	int32_t                                            CableMeshIndex;                                             // 0x000C   (0x0004)  
	int32_t                                            TargetConnectorIndex;                                       // 0x0010   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	UStaticMeshComponent*                              CableMeshComponent;                                         // 0x0018   (0x0008)  
};

/// Struct /Script/ConZ.PowerCableMeshInfo
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPowerCableMeshInfo
{ 
	UStaticMesh*                                       Mesh;                                                       // 0x0000   (0x0008)  
	float                                              Length;                                                     // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.PrisonerFPWeaponFOVSettings
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPrisonerFPWeaponFOVSettings
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/ConZ.InstrumentEvent
/// Size: 0x0010 (0x000000 - 0x000010)
struct FInstrumentEvent
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/ConZ.PrisonerActionDifficultyCurve
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPrisonerActionDifficultyCurve
{ 
	float                                              _resting;                                                   // 0x0000   (0x0004)  
	float                                              _idle;                                                      // 0x0004   (0x0004)  
	float                                              _easy;                                                      // 0x0008   (0x0004)  
	float                                              _demanding;                                                 // 0x000C   (0x0004)  
	float                                              _veryDemanding;                                             // 0x0010   (0x0004)  
	float                                              _extremelyDemanding;                                        // 0x0014   (0x0004)  
};

/// Struct /Script/ConZ.VisualParameter
/// Size: 0x0014 (0x000000 - 0x000014)
struct FVisualParameter
{ 
	FName                                              MorphName;                                                  // 0x0000   (0x0008)  
	FName                                              MaterialParamName;                                          // 0x0008   (0x0008)  
	float                                              Value;                                                      // 0x0010   (0x0004)  
};

/// Struct /Script/ConZ.PrisonerAppearanceId
/// Size: 0x0008 (0x000000 - 0x000008)
struct FPrisonerAppearanceId
{ 
	EConZGender                                        Gender;                                                     // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            Index;                                                      // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.PrisonerAppearance_IrisVariation
/// Size: 0x0050 (0x000000 - 0x000050)
struct FPrisonerAppearance_IrisVariation
{ 
	TWeakObjectPtr<UTexture2D*>                        IrisHeight;                                                 // 0x0000   (0x0028)  
	TWeakObjectPtr<UTexture2D*>                        IrisMasks;                                                  // 0x0028   (0x0028)  
};

/// Struct /Script/ConZ.PrisonerAppearance_IrisColor
/// Size: 0x0030 (0x000000 - 0x000030)
struct FPrisonerAppearance_IrisColor
{ 
	FLinearColor                                       PreviewColor;                                               // 0x0000   (0x0010)  
	FVector4                                           IrisColor;                                                  // 0x0010   (0x0010)  
	EConZColor                                         ColorName;                                                  // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_6[0xF];                                       // 0x0021   (0x000F)  MISSED
};

/// Struct /Script/ConZ.PrisonerAppearance_SkinParams
/// Size: 0x0038 (0x000000 - 0x000038)
struct FPrisonerAppearance_SkinParams
{ 
	TArray<FPrisonerAppearance_FaceVariation>          FaceVariations;                                             // 0x0000   (0x0010)  
	TArray<FPrisonerAppearance_SkinTone>               SkinTones;                                                  // 0x0010   (0x0010)  
	TArray<FPrisonerAppearance_HairColorPreset>        HairColorPresets;                                           // 0x0020   (0x0010)  
	int32_t                                            DefaultSkinToneIndex;                                       // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Struct /Script/ConZ.PrisonerAppearance_HairColorPreset
/// Size: 0x008C (0x000000 - 0x00008C)
struct FPrisonerAppearance_HairColorPreset
{ 
	FLinearColor                                       PreviewColor;                                               // 0x0000   (0x0010)  
	EConZColor                                         ColorName;                                                  // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0011   (0x0003)  MISSED
	float                                              Brightness;                                                 // 0x0014   (0x0004)  
	FLinearColor                                       RootColor;                                                  // 0x0018   (0x0010)  
	FLinearColor                                       RootColorOnHead;                                            // 0x0028   (0x0010)  
	float                                              Roughness;                                                  // 0x0038   (0x0004)  
	float                                              Scatter;                                                    // 0x003C   (0x0004)  
	FLinearColor                                       TipColor;                                                   // 0x0040   (0x0010)  
	float                                              RandomHueVariation;                                         // 0x0050   (0x0004)  
	float                                              RandomValueVariation;                                       // 0x0054   (0x0004)  
	float                                              FacialHair_Brightness;                                      // 0x0058   (0x0004)  
	FLinearColor                                       FacialHair_RootColor;                                       // 0x005C   (0x0010)  
	float                                              FacialHair_Roughness;                                       // 0x006C   (0x0004)  
	float                                              FacialHair_Scatter;                                         // 0x0070   (0x0004)  
	FLinearColor                                       FacialHair_TipColor;                                        // 0x0074   (0x0010)  
	float                                              FacialHair_RandomHueVariation;                              // 0x0084   (0x0004)  
	float                                              FacialHair_RandomValueVariation;                            // 0x0088   (0x0004)  
};

/// Struct /Script/ConZ.PrisonerAppearance_SkinTone
/// Size: 0x0030 (0x000000 - 0x000030)
struct FPrisonerAppearance_SkinTone
{ 
	FLinearColor                                       PreviewColor;                                               // 0x0000   (0x0010)  
	FLinearColor                                       SkinColorOffset;                                            // 0x0010   (0x0010)  
	FLinearColor                                       AverageLipColor;                                            // 0x0020   (0x0010)  
};

/// Struct /Script/ConZ.PrisonerAppearance_FaceVariation
/// Size: 0x0050 (0x000000 - 0x000050)
struct FPrisonerAppearance_FaceVariation
{ 
	TWeakObjectPtr<UTexture2D*>                        SkinColor;                                                  // 0x0000   (0x0028)  
	TWeakObjectPtr<UTexture2D*>                        SkinNormal;                                                 // 0x0028   (0x0028)  
};

/// Struct /Script/ConZ.PrisonerAppearance_HairStyle
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPrisonerAppearance_HairStyle
{ 
	EDeluxeVersion                                     GameUpgradeRequired;                                        // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	UCharacterMesh*                                    Mesh;                                                       // 0x0008   (0x0008)  
	float                                              Haircontrast;                                               // 0x0010   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/ConZ.PrisonerAppearance_TattooArray
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPrisonerAppearance_TattooArray
{ 
	TArray<FPrisonerAppearance_Tattoo>                 Tattoos;                                                    // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.PrisonerAppearance_Tattoo
/// Size: 0x0058 (0x000000 - 0x000058)
struct FPrisonerAppearance_Tattoo
{ 
	EDeluxeVersion                                     GameUpgradeRequired;                                        // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	TMap<FName, TWeakObjectPtr>                        TattooTextures;                                             // 0x0008   (0x0050)  
};

/// Struct /Script/ConZ.Bandages
/// Size: 0x0018 (0x000000 - 0x000018)
struct FBandages
{ 
	float                                              _amount;                                                    // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	TArray<FBandage>                                   _bandages;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/ConZ.Bandage
/// Size: 0x0010 (0x000000 - 0x000010)
struct FBandage
{ 
	float                                              _ratio;                                                     // 0x0000   (0x0004)  
	float                                              _asepsis;                                                   // 0x0004   (0x0004)  
	float                                              _stabilizationDurationReduction;                            // 0x0008   (0x0004)  
	float                                              _recoveryDurationReduction;                                 // 0x000C   (0x0004)  
};

/// Struct /Script/ConZ.PrisonerBodyOrganGroupsVsSeverity
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPrisonerBodyOrganGroupsVsSeverity
{ 
	TArray<FPrisonerBodyOrganGroupsVsSeverityKey>      Keys;                                                       // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.PrisonerBodyOrganGroupsVsSeverityKey
/// Size: 0x0060 (0x000000 - 0x000060)
struct FPrisonerBodyOrganGroupsVsSeverityKey
{ 
	FFloatRange                                        SeverityRange;                                              // 0x0000   (0x0010)  
	TSet<EPrisonerBodyOrganGroup>                      Values;                                                     // 0x0010   (0x0050)  
};

/// Struct /Script/ConZ.PrisonerBodyMuscleGroupsVsSeverity
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPrisonerBodyMuscleGroupsVsSeverity
{ 
	TArray<FPrisonerBodyMuscleGroupsVsSeverityKey>     Keys;                                                       // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.PrisonerBodyMuscleGroupsVsSeverityKey
/// Size: 0x0060 (0x000000 - 0x000060)
struct FPrisonerBodyMuscleGroupsVsSeverityKey
{ 
	FFloatRange                                        SeverityRange;                                              // 0x0000   (0x0010)  
	TSet<EPrisonerBodyMuscleGroup>                     Values;                                                     // 0x0010   (0x0050)  
};

/// Struct /Script/ConZ.PrisonerBodyBoneGroupsVsSeverity
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPrisonerBodyBoneGroupsVsSeverity
{ 
	TArray<FPrisonerBodyBoneGroupsVsSeverityKey>       Keys;                                                       // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.PrisonerBodyBoneGroupsVsSeverityKey
/// Size: 0x0060 (0x000000 - 0x000060)
struct FPrisonerBodyBoneGroupsVsSeverityKey
{ 
	FFloatRange                                        SeverityRange;                                              // 0x0000   (0x0010)  
	TSet<EPrisonerBodyBoneGroup>                       Values;                                                     // 0x0010   (0x0050)  
};

/// Struct /Script/ConZ.PBCTI_ApplyBandagesOrDisinfect_ApplyBandagesData
/// Size: 0x0050 (0x000000 - 0x000050)
struct FPBCTI_ApplyBandagesOrDisinfect_ApplyBandagesData
{ 
	float                                              BaseActionDuration;                                         // 0x0000   (0x0004)  
	FFloatRange                                        ActionDurationLimits;                                       // 0x0004   (0x0010)  
	float                                              BaseExperienceGainVsSkillLevel;                             // 0x0014   (0x0014)  
	float                                              StabilizationDurationReductionVsSkillLevel;                 // 0x0028   (0x0014)  
	float                                              RecoveryDurationReductionVsSkillLevel;                      // 0x003C   (0x0014)  
};

/// Struct /Script/ConZ.PBCTI_ApplyBandagesOrDisinfect_DisinfectData
/// Size: 0x0038 (0x000000 - 0x000038)
struct FPBCTI_ApplyBandagesOrDisinfect_DisinfectData
{ 
	float                                              BaseActionDuration;                                         // 0x0000   (0x0004)  
	FFloatRange                                        ActionDurationLimits;                                       // 0x0004   (0x0010)  
	float                                              BaseExperienceGainVsSkillLevel;                             // 0x0014   (0x0014)  
	UAkAudioEvent*                                     BeginInteractionPatientAudioEvent;                          // 0x0028   (0x0008)  
	UAkAudioEvent*                                     EndInteractionPatientAudioEvent;                            // 0x0030   (0x0008)  
};

/// Struct /Script/ConZ.PBCTIIT_ApplyBandagesOrDisinfect_ApplyBandages_PerSkillData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPBCTIIT_ApplyBandagesOrDisinfect_ApplyBandages_PerSkillData
{ 
	TArray<int32_t>                                    NumUsesPerSeverityLevel;                                    // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.PBCTIIT_ApplyBandagesOrDisinfect_Disinfect_PerSkillData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPBCTIIT_ApplyBandagesOrDisinfect_Disinfect_PerSkillData
{ 
	TArray<int32_t>                                    NumUsesPerSeverityLevel;                                    // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.PBCTI_ApplyGelData
/// Size: 0x0038 (0x000000 - 0x000038)
struct FPBCTI_ApplyGelData
{ 
	float                                              BaseActionDuration;                                         // 0x0000   (0x0004)  
	FFloatRange                                        ActionDurationLimits;                                       // 0x0004   (0x0010)  
	float                                              BaseExperienceGainVsSkillLevel;                             // 0x0014   (0x0014)  
	UAkAudioEvent*                                     BeginInteractionPatientAudioEvent;                          // 0x0028   (0x0008)  
	UAkAudioEvent*                                     EndInteractionPatientAudioEvent;                            // 0x0030   (0x0008)  
};

/// Struct /Script/ConZ.PBCTIIT_ApplyGel_PerSkillData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPBCTIIT_ApplyGel_PerSkillData
{ 
	TArray<int32_t>                                    NumUsesPerSeverityLevel;                                    // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.PrisonerBodySimulationData_BodyPartMappingArray
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPrisonerBodySimulationData_BodyPartMappingArray
{ 
	TArray<EBodyPart>                                  BodyParts;                                                  // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.PrisonerBodySimulationData_ConsumableDigestionHandlersForValueRanges
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPrisonerBodySimulationData_ConsumableDigestionHandlersForValueRanges
{ 
	TArray<FPrisonerBodySimulationData_ConsumableDigestionHandlersForValueRange> ValueRanges;                      // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.PrisonerBodySimulationData_ConsumableDigestionHandlersForValueRange
/// Size: 0x0028 (0x000000 - 0x000028)
struct FPrisonerBodySimulationData_ConsumableDigestionHandlersForValueRange
{ 
	FFloatRange                                        ValueRange;                                                 // 0x0000   (0x0010)  
	bool                                               IsConstrainedByConsumptionMethod;                           // 0x0010   (0x0001)  
	EGameResourceConsumptionMethod                     ConsumptionMethodConstraint;                                // 0x0011   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0012   (0x0006)  MISSED
	TArray<UConsumableDigestionHandler*>               DigestionHandlers;                                          // 0x0018   (0x0010)  
};

/// Struct /Script/ConZ.PrisonerBodySimulationData_Effects
/// Size: 0x0058 (0x000000 - 0x000058)
struct FPrisonerBodySimulationData_Effects
{ 
	UClass*                                            Knockout;                                                   // 0x0000   (0x0008)  
	UClass*                                            BasicInjury;                                                // 0x0008   (0x0008)  
	UClass*                                            BleedingInjury;                                             // 0x0010   (0x0008)  
	UPrisonerBodyMuscleGroupToBurnInjuryClassMappings* DefaultMuscleGroupToBurnInjuryClassMappings;                // 0x0018   (0x0008)  
	UClass*                                            Choking;                                                    // 0x0020   (0x0008)  
	UClass*                                            FoodDisgust;                                                // 0x0028   (0x0008)  
	UClass*                                            TearGasExposure;                                            // 0x0030   (0x0008)  
	UClass*                                            Limping;                                                    // 0x0038   (0x0008)  
	FPrisonerBodySimulationData_Effects_ExhaustionChange ExhaustionChange;                                         // 0x0040   (0x0018)  
};

/// Struct /Script/ConZ.PrisonerBodySimulationData_Effects_ExhaustionChange
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPrisonerBodySimulationData_Effects_ExhaustionChange
{ 
	UClass*                                            Consumption;                                                // 0x0000   (0x0008)  
	UClass*                                            Resting;                                                    // 0x0008   (0x0008)  
	UClass*                                            Smoking;                                                    // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.PrisonerBodyEffectSave
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPrisonerBodyEffectSave
{ 
	TArray<char>                                       Data;                                                       // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.PrisonerMaxMovementPaceVsSeverity
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPrisonerMaxMovementPaceVsSeverity
{ 
	TArray<FPrisonerMaxMovementPaceVsSeverityKey>      Keys;                                                       // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.PrisonerMaxMovementPaceVsSeverityKey
/// Size: 0x0014 (0x000000 - 0x000014)
struct FPrisonerMaxMovementPaceVsSeverityKey
{ 
	FFloatRange                                        SeverityRange;                                              // 0x0000   (0x0010)  
	EPrisonerMovementPace                              MaxMovementPace;                                            // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0011   (0x0003)  MISSED
};

/// Struct /Script/ConZ.ControllerDigestionItem
/// Size: 0x0028 (0x000000 - 0x000028)
struct FControllerDigestionItem
{ 
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0000   (0x0028)  MISSED
};

/// Struct /Script/ConZ.PrisonerHallucinationIllusionInfo
/// Size: 0x0088 (0x000000 - 0x000088)
struct FPrisonerHallucinationIllusionInfo
{ 
	TWeakObjectPtr<UClass*>                            Class;                                                      // 0x0000   (0x0028)  
	TSet<TWeakObjectPtr>                               IncompatibleClasses;                                        // 0x0028   (0x0050)  
	FInt32Range                                        SeverityLevelConstraint;                                    // 0x0078   (0x0010)  
};

/// Struct /Script/ConZ.PrisonerHallucinationSymptomSeverityLevelParams
/// Size: 0x0004 (0x000000 - 0x000004)
struct FPrisonerHallucinationSymptomSeverityLevelParams
{ 
	int32_t                                            MaxNumHallucinationIllusions;                               // 0x0000   (0x0004)  
};

/// Struct /Script/ConZ.BasicPrisonerBodySymptomNotificationParameters
/// Size: 0x0028 (0x000000 - 0x000028)
struct FBasicPrisonerBodySymptomNotificationParameters
{ 
	FFloatRange                                        SeverityRange;                                              // 0x0000   (0x0010)  
	UClass*                                            Notification;                                               // 0x0010   (0x0008)  
	int32_t                                            MaxNumTriggers;                                             // 0x0018   (0x0004)  
	FFloatInterval                                     TriggerInterval;                                            // 0x001C   (0x0008)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/ConZ.PrisonerCharacterMeshDecayMultiplierData
/// Size: 0x002C (0x000000 - 0x00002C)
struct FPrisonerCharacterMeshDecayMultiplierData
{ 
	float                                              DamageMultiplierPerPace;                                    // 0x0000   (0x0010)  
	float                                              DamageMultiplierPerStance;                                  // 0x0010   (0x0010)  
	float                                              WetnessDamageThreshold;                                     // 0x0020   (0x0004)  
	float                                              WetnessDamageMultiplier;                                    // 0x0024   (0x0004)  
	bool                                               DamagedByFloor;                                             // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0029   (0x0003)  MISSED
};

/// Struct /Script/ConZ.WindowInfo
/// Size: 0x00D0 (0x000000 - 0x0000D0)
struct FWindowInfo
{ 
	FTransform                                         Transform;                                                  // 0x0000   (0x0030)  
	FTransform                                         TransformInverse;                                           // 0x0030   (0x0030)  
	FVector                                            Anchor;                                                     // 0x0060   (0x000C)  
	float                                              Width;                                                      // 0x006C   (0x0004)  
	float                                              Height;                                                     // 0x0070   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0074   (0x0004)  MISSED
	FWindowClimbingAnimationInfo                       AnimationInfo;                                              // 0x0078   (0x0048)  
	int32_t                                            AnimationIndex;                                             // 0x00C0   (0x0004)  
	unsigned char                                      UnknownData01_6[0xC];                                       // 0x00C4   (0x000C)  MISSED
};

/// Struct /Script/ConZ.WindowClimbingAnimationInfo
/// Size: 0x0048 (0x000000 - 0x000048)
struct FWindowClimbingAnimationInfo
{ 
	FVector                                            AnchorOffset;                                               // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	UAnimSequenceBase*                                 AnchoringAnimation;                                         // 0x0010   (0x0008)  
	float                                              AnchoringAnimationTime;                                     // 0x0018   (0x0004)  
	float                                              AnchoringDuration;                                          // 0x001C   (0x0004)  
	UAnimMontage*                                      ClimbingMontage;                                            // 0x0020   (0x0008)  
	float                                              MinWindowWidth;                                             // 0x0028   (0x0004)  
	float                                              MinWindowHeight;                                            // 0x002C   (0x0004)  
	float                                              MinSpacingToLeftWindowEdge;                                 // 0x0030   (0x0004)  
	float                                              MinSpacingToRightWindowEdge;                                // 0x0034   (0x0004)  
	float                                              MinWindowDistanceToFloor;                                   // 0x0038   (0x0004)  
	float                                              MaxWindowDistanceToFloor;                                   // 0x003C   (0x0004)  
	float                                              StaminaDrain;                                               // 0x0040   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Struct /Script/ConZ.WindowDetectionParams
/// Size: 0x0038 (0x000000 - 0x000038)
struct FWindowDetectionParams
{ 
	FVector                                            CharacterHeadLocation;                                      // 0x0000   (0x000C)  
	FVector                                            CharacterFeetLocation;                                      // 0x000C   (0x000C)  
	FVector                                            CharacterForwardVector;                                     // 0x0018   (0x000C)  
	float                                              MaxHorzDistanceToWindow;                                    // 0x0024   (0x0004)  
	float                                              MaxCharacterToWindowAngle;                                  // 0x0028   (0x0004)  
	float                                              HorzHitDetectionBias;                                       // 0x002C   (0x0004)  
	float                                              HitDetectionBiasBelowWindow;                                // 0x0030   (0x0004)  
	float                                              HitDetectionBiasAboveWindow;                                // 0x0034   (0x0004)  
};

/// Struct /Script/ConZ.LadderInfoRepData
/// Size: 0x0050 (0x000000 - 0x000050)
struct FLadderInfoRepData
{ 
	FTransform                                         LadderTransform;                                            // 0x0000   (0x0030)  
	FVector                                            CapsuleBias;                                                // 0x0030   (0x000C)  
	FVector                                            RootBoneOffset;                                             // 0x003C   (0x000C)  
	float                                              StepHeight;                                                 // 0x0048   (0x0004)  
	TEnumAsByte<EPhysicalSurface>                      PhysicalSurfaceForSounds;                                   // 0x004C   (0x0001)  
	char                                               NumberOfSteps;                                              // 0x004D   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x004E   (0x0002)  MISSED
};

/// Struct /Script/ConZ.LadderInfo
/// Size: 0x00B0 (0x000000 - 0x0000B0)
struct FLadderInfo
{ 
	FTransform                                         Transform;                                                  // 0x0000   (0x0030)  
	FTransform                                         TransformInverse;                                           // 0x0030   (0x0030)  
	FTransform                                         Edge;                                                       // 0x0060   (0x0030)  
	FVector                                            CapsuleBias;                                                // 0x0090   (0x000C)  
	float                                              StepHeight;                                                 // 0x009C   (0x0004)  
	float                                              StepWidth;                                                  // 0x00A0   (0x0004)  
	bool                                               HasEdge;                                                    // 0x00A4   (0x0001)  
	bool                                               IsNarrow;                                                   // 0x00A5   (0x0001)  
	TEnumAsByte<EPhysicalSurface>                      PhysicalSurfaceForSounds;                                   // 0x00A6   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x00A7   (0x0001)  MISSED
	int32_t                                            NumberOfSteps;                                              // 0x00A8   (0x0004)  
	int32_t                                            HitStepIndex;                                               // 0x00AC   (0x0004)  
};

/// Struct /Script/ConZ.LadderDetectionParams
/// Size: 0x0020 (0x000000 - 0x000020)
struct FLadderDetectionParams
{ 
	FVector                                            RayOrigin;                                                  // 0x0000   (0x000C)  
	FVector                                            RayDirection;                                               // 0x000C   (0x000C)  
	float                                              MaxHorzDistanceToLadder;                                    // 0x0018   (0x0004)  
	float                                              MaxRayToLadderAngle;                                        // 0x001C   (0x0004)  
};

/// Struct /Script/ConZ.ClimbableObstacleInfo
/// Size: 0x0088 (0x000000 - 0x000088)
struct FClimbableObstacleInfo
{ 
	FVector                                            EdgeLocationZero;                                           // 0x0000   (0x000C)  
	float                                              EdgeHeight;                                                 // 0x000C   (0x0004)  
	FVector                                            HWallNormal;                                                // 0x0010   (0x000C)  
	FVector                                            VWallNormal;                                                // 0x001C   (0x000C)  
	FVector                                            CapsuleLocationAtAnchorZero;                                // 0x0028   (0x000C)  
	FRotator                                           CapsuleRotationAtAnchor;                                    // 0x0034   (0x000C)  
	TWeakObjectPtr<UPrimitiveComponent*>               BaseComponent;                                              // 0x0040   (0x0008)  
	FPrisonerClimbAnimationInfo                        AnimationInfo;                                              // 0x0048   (0x0040)  
};

/// Struct /Script/ConZ.PrisonerClimbAnimationInfo
/// Size: 0x0040 (0x000000 - 0x000040)
struct FPrisonerClimbAnimationInfo
{ 
	float                                              MinEdgeHeight;                                              // 0x0000   (0x0004)  
	float                                              MaxEdgeHeight;                                              // 0x0004   (0x0004)  
	float                                              VaultDistance;                                              // 0x0008   (0x0004)  
	float                                              MaxVaultLandHeightError;                                    // 0x000C   (0x0004)  
	FVector                                            AnchorOffset;                                               // 0x0010   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x001C   (0x0004)  MISSED
	UAnimSequenceBase*                                 AnchoringAnimation;                                         // 0x0020   (0x0008)  
	float                                              AnchoringAnimationTime;                                     // 0x0028   (0x0004)  
	float                                              AnchoringDuration;                                          // 0x002C   (0x0004)  
	UAnimMontage*                                      ClimbingMontage;                                            // 0x0030   (0x0008)  
	float                                              StaminaDrain;                                               // 0x0038   (0x0004)  
	bool                                               RequiresEmptyLHand;                                         // 0x003C   (0x0001)  
	bool                                               RequiresEmptyRHand;                                         // 0x003D   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x003E   (0x0002)  MISSED
};

/// Struct /Script/ConZ.PrisonerCommonData_ResponseIdles
/// Size: 0x0008 (0x000000 - 0x000008)
struct FPrisonerCommonData_ResponseIdles
{ 
	UClass*                                            DirtyAfterProne;                                            // 0x0000   (0x0008)  
};

/// Struct /Script/ConZ.CorpsePoseData
/// Size: 0x0040 (0x000000 - 0x000040)
struct FCorpsePoseData
{ 
	FVector_NetQuantize                                Location;                                                   // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	FQuat                                              Rotation;                                                   // 0x0010   (0x0010)  
	FVector_NetQuantize                                LinearVelocity;                                             // 0x0020   (0x000C)  
	FVector_NetQuantize                                AngularVelocity;                                            // 0x002C   (0x000C)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Struct /Script/ConZ.CorpseSkeletalMeshRepData
/// Size: 0x0070 (0x000000 - 0x000070)
struct FCorpseSkeletalMeshRepData
{ 
	FName                                              DisplayName;                                                // 0x0000   (0x0008)  
	USkeletalMesh*                                     Mesh;                                                       // 0x0008   (0x0008)  
	TArray<UMaterialInterface*>                        Materials;                                                  // 0x0010   (0x0010)  
	bool                                               Visibility;                                                 // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_5[0xF];                                       // 0x0021   (0x000F)  MISSED
	FTransform                                         Transform;                                                  // 0x0030   (0x0030)  
	FName                                              AttachSocket;                                               // 0x0060   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0068   (0x0008)  MISSED
};

/// Struct /Script/ConZ.CorpseStaticMeshRepData
/// Size: 0x0070 (0x000000 - 0x000070)
struct FCorpseStaticMeshRepData
{ 
	FName                                              DisplayName;                                                // 0x0000   (0x0008)  
	UStaticMesh*                                       Mesh;                                                       // 0x0008   (0x0008)  
	TArray<UMaterialInterface*>                        Materials;                                                  // 0x0010   (0x0010)  
	bool                                               Visibility;                                                 // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_5[0xF];                                       // 0x0021   (0x000F)  MISSED
	FTransform                                         Transform;                                                  // 0x0030   (0x0030)  
	FName                                              AttachSocket;                                               // 0x0060   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0068   (0x0008)  MISSED
};

/// Struct /Script/ConZ.FirstPersonViewParameters
/// Size: 0x0028 (0x000000 - 0x000028)
struct FFirstPersonViewParameters
{ 
	FFloatInterval                                     MinMaxViewPitch;                                            // 0x0000   (0x0008)  
	FFloatInterval                                     MinMaxViewYaw;                                              // 0x0008   (0x0008)  
	FFloatInterval                                     MinMaxViewYawInCombatMode;                                  // 0x0010   (0x0008)  
	FFloatInterval                                     MinMaxViewYawIfBlocked;                                     // 0x0018   (0x0008)  
	UCurveLinearColor*                                 MinMaxViewPitchByYaw;                                       // 0x0020   (0x0008)  
};

/// Struct /Script/ConZ.PrisonerFirstPersonSubviewBlendOverride
/// Size: 0x0008 (0x000000 - 0x000008)
struct FPrisonerFirstPersonSubviewBlendOverride
{ 
	EPrisonerFirstPersonSubview                        Source;                                                     // 0x0000   (0x0001)  
	EPrisonerFirstPersonSubview                        Target;                                                     // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0002   (0x0002)  MISSED
	float                                              Duration;                                                   // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.PrisonerInitialSkillInfo
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPrisonerInitialSkillInfo
{ 
	USkill*                                            Skill;                                                      // 0x0000   (0x0008)  
	ESkillLevel                                        InitialLevel;                                               // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              InitialExperiencePoints;                                    // 0x000C   (0x0004)  
};

/// Struct /Script/ConZ.PrisonerConditionalSpawnEquipment
/// Size: 0x0078 (0x000000 - 0x000078)
struct FPrisonerConditionalSpawnEquipment
{ 
	FGameplayTagQuery                                  Condition;                                                  // 0x0000   (0x0048)  
	TWeakObjectPtr<UClass*>                            ItemClass;                                                  // 0x0048   (0x0028)  
	EPrisonerItemEquipType                             EquipType;                                                  // 0x0070   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0071   (0x0007)  MISSED
};

/// Struct /Script/ConZ.WaterForceWhenSwimmingParams
/// Size: 0x0014 (0x000000 - 0x000014)
struct FWaterForceWhenSwimmingParams
{ 
	float                                              DownstreamWaterForceMultiplier;                             // 0x0000   (0x0004)  
	float                                              UpstreamWaterForceMultiplier;                               // 0x0004   (0x0004)  
	float                                              ImpulseThreshold;                                           // 0x0008   (0x0004)  
	float                                              ImpulseMultiplier;                                          // 0x000C   (0x0004)  
	float                                              MinSpeedForUpstream;                                        // 0x0010   (0x0004)  
};

/// Struct /Script/ConZ.PrisonerMovementSettings_Water
/// Size: 0x0054 (0x000000 - 0x000054)
struct FPrisonerMovementSettings_Water
{ 
	FPrisonerWaterMovementParameters                   Slow;                                                       // 0x0000   (0x000C)  
	FPrisonerWaterMovementParameters                   Medium;                                                     // 0x000C   (0x000C)  
	FPrisonerWaterMovementParameters                   Fast;                                                       // 0x0018   (0x000C)  
	FPrisonerWaterMovementParameters                   DivingSlow;                                                 // 0x0024   (0x000C)  
	FPrisonerWaterMovementParameters                   DivingMedium;                                               // 0x0030   (0x000C)  
	FFloatInterval                                     MaxSpeedMultiplierVsPerformanceRatio;                       // 0x003C   (0x0008)  
	FFloatInterval                                     AccelerationMultiplierVsPerformanceRatio;                   // 0x0044   (0x0008)  
	FFloatInterval                                     DecelerationMultiplierVsPerformanceRatio;                   // 0x004C   (0x0008)  
};

/// Struct /Script/ConZ.PrisonerMovementSettings_Air
/// Size: 0x0140 (0x000000 - 0x000140)
struct FPrisonerMovementSettings_Air
{ 
	FPrisonerAirMovementParameters                     Fall;                                                       // 0x0000   (0x001C)  
	FPrisonerAirMovementParameters                     SkydiveSlow;                                                // 0x001C   (0x001C)  
	FPrisonerAirMovementParameters                     SkydiveFast;                                                // 0x0038   (0x001C)  
	FPrisonerAirMovementParameters                     DiveHeadFirst;                                              // 0x0054   (0x001C)  
	FPrisonerAirMovementParameters                     DiveFeetFirst;                                              // 0x0070   (0x001C)  
	FPrisonerAirMovementParameters                     HandsBound;                                                 // 0x008C   (0x001C)  
	TMap<FPrisonerFallingPosePair, FPrisonerFallingPoseTransitionParams> PoseTransitionParamsMap;                  // 0x00A8   (0x0050)  
	float                                              JumpZVelocity;                                              // 0x00F8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x3C];                                      // 0x00FC   (0x003C)  MISSED
	FFloatInterval                                     JumpZVelocityMultiplierVsPerformanceRatio;                  // 0x0138   (0x0008)  
};

/// Struct /Script/ConZ.PrisonerFallingPosePair
/// Size: 0x0002 (0x000000 - 0x000002)
struct FPrisonerFallingPosePair
{ 
	EPrisonerFallingPose                               poseA;                                                      // 0x0000   (0x0001)  
	EPrisonerFallingPose                               poseB;                                                      // 0x0001   (0x0001)  
};

/// Struct /Script/ConZ.PrisonerFallingPoseTransitionParams
/// Size: 0x0020 (0x000000 - 0x000020)
struct FPrisonerFallingPoseTransitionParams
{ 
	float                                              TransitionTime;                                             // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	UAnimSequence*                                     TransitionAnimation;                                        // 0x0008   (0x0008)  
	FFloatInterval                                     TransitionAnimationTimeRange;                               // 0x0010   (0x0008)  
	UCurveFloat*                                       TransitionPitchBlendOverrideCurve;                          // 0x0018   (0x0008)  
};

/// Struct /Script/ConZ.PrisonerAirMovementParameters
/// Size: 0x001C (0x000000 - 0x00001C)
struct FPrisonerAirMovementParameters
{ 
	float                                              TerminalVelocity;                                           // 0x0000   (0x0004)  
	float                                              LateralMaxSpeed;                                            // 0x0004   (0x0004)  
	float                                              LateralDrag;                                                // 0x0008   (0x0004)  
	float                                              DesiredPitch;                                               // 0x000C   (0x0004)  
	float                                              YawRotationRateFactor;                                      // 0x0010   (0x0004)  
	float                                              ControlChangeSpeed;                                         // 0x0014   (0x0004)  
	float                                              DragIntensity;                                              // 0x0018   (0x0004)  
};

/// Struct /Script/ConZ.PrisonerMovementSettings_Ground
/// Size: 0x016C (0x000000 - 0x00016C)
struct FPrisonerMovementSettings_Ground
{ 
	FPrisonerMovementSettings_Ground_Standing          Standing;                                                   // 0x0000   (0x00B4)  
	FPrisonerMovementSettings_Ground_Crouching         Crouching;                                                  // 0x00B4   (0x006C)  
	FPrisonerMovementSettings_Ground_Prone             Prone;                                                      // 0x0120   (0x0024)  
	FFloatInterval                                     MaxSpeedMultiplierVsPerformanceRatio;                       // 0x0144   (0x0008)  
	FFloatInterval                                     AccelerationMultiplierVsPerformanceRatio;                   // 0x014C   (0x0008)  
	FFloatInterval                                     DecelerationMultiplierVsPerformanceRatio;                   // 0x0154   (0x0008)  
	FFloatInterval                                     MaxSpeedWhenImmersedInWaterVsPerformanceRatio;              // 0x015C   (0x0008)  
	float                                              AccelerationMultiplierWhenImmersedInWater;                  // 0x0164   (0x0004)  
	float                                              DecelerationMultiplierWhenImmersedInWater;                  // 0x0168   (0x0004)  
};

/// Struct /Script/ConZ.PrisonerMovementSettings_Ground_Prone
/// Size: 0x0024 (0x000000 - 0x000024)
struct FPrisonerMovementSettings_Ground_Prone
{ 
	FPrisonerMovementSettings_Ground_Prone_Walking     Walking;                                                    // 0x0000   (0x0024)  
};

/// Struct /Script/ConZ.PrisonerMovementSettings_Ground_Prone_Walking
/// Size: 0x0024 (0x000000 - 0x000024)
struct FPrisonerMovementSettings_Ground_Prone_Walking
{ 
	FPrisonerGroundMovementParameters                  Default;                                                    // 0x0000   (0x000C)  
	FPrisonerGroundMovementParameters                  WeaponAiming;                                               // 0x000C   (0x000C)  
	FPrisonerGroundMovementParameters                  WeaponAimingDownTheSights;                                  // 0x0018   (0x000C)  
};

/// Struct /Script/ConZ.PrisonerMovementSettings_Ground_Crouching
/// Size: 0x006C (0x000000 - 0x00006C)
struct FPrisonerMovementSettings_Ground_Crouching
{ 
	FPrisonerMovementSettings_Ground_Crouching_Walking Walking;                                                    // 0x0000   (0x0024)  
	FPrisonerMovementSettings_Ground_Crouching_Walking WalkingFaster;                                              // 0x0024   (0x0024)  
	FPrisonerMovementSettings_Ground_Crouching_Walking WalkLimping;                                                // 0x0048   (0x0024)  
};

/// Struct /Script/ConZ.PrisonerMovementSettings_Ground_Crouching_Walking
/// Size: 0x0024 (0x000000 - 0x000024)
struct FPrisonerMovementSettings_Ground_Crouching_Walking
{ 
	FPrisonerGroundMovementParameters                  Default;                                                    // 0x0000   (0x000C)  
	FPrisonerGroundMovementParameters                  WeaponAiming;                                               // 0x000C   (0x000C)  
	FPrisonerGroundMovementParameters                  WeaponAimingDownTheSights;                                  // 0x0018   (0x000C)  
};

/// Struct /Script/ConZ.PrisonerMovementSettings_Ground_Standing
/// Size: 0x00B4 (0x000000 - 0x0000B4)
struct FPrisonerMovementSettings_Ground_Standing
{ 
	FPrisonerMovementSettings_Ground_Standing_Walking  Walking;                                                    // 0x0000   (0x0030)  
	FPrisonerMovementSettings_Ground_Standing_Walking  WalkLimping;                                                // 0x0030   (0x0030)  
	FPrisonerMovementSettings_Ground_Standing_Jogging  Jogging;                                                    // 0x0060   (0x0024)  
	FPrisonerMovementSettings_Ground_Standing_Jogging  JogLimping;                                                 // 0x0084   (0x0024)  
	FPrisonerMovementSettings_Ground_Standing_Running  Running;                                                    // 0x00A8   (0x000C)  
};

/// Struct /Script/ConZ.PrisonerMovementSettings_Ground_Standing_Running
/// Size: 0x000C (0x000000 - 0x00000C)
struct FPrisonerMovementSettings_Ground_Standing_Running
{ 
	FPrisonerGroundMovementParameters                  Default;                                                    // 0x0000   (0x000C)  
};

/// Struct /Script/ConZ.PrisonerMovementSettings_Ground_Standing_Jogging
/// Size: 0x0024 (0x000000 - 0x000024)
struct FPrisonerMovementSettings_Ground_Standing_Jogging
{ 
	FPrisonerGroundMovementParameters                  Default;                                                    // 0x0000   (0x000C)  
	FPrisonerGroundMovementParameters                  MeleeCombat;                                                // 0x000C   (0x000C)  
	FPrisonerGroundMovementParameters                  WeaponAiming;                                               // 0x0018   (0x000C)  
};

/// Struct /Script/ConZ.PrisonerMovementSettings_Ground_Standing_Walking
/// Size: 0x0030 (0x000000 - 0x000030)
struct FPrisonerMovementSettings_Ground_Standing_Walking
{ 
	FPrisonerGroundMovementParameters                  Default;                                                    // 0x0000   (0x000C)  
	FPrisonerGroundMovementParameters                  MeleeCombat;                                                // 0x000C   (0x000C)  
	FPrisonerGroundMovementParameters                  WeaponAiming;                                               // 0x0018   (0x000C)  
	FPrisonerGroundMovementParameters                  WeaponAimingDownTheSights;                                  // 0x0024   (0x000C)  
};

/// Struct /Script/ConZ.MusicPlayerPlaybackOptions
/// Size: 0x0028 (0x000000 - 0x000028)
struct FMusicPlayerPlaybackOptions
{ 
	TArray<FString>                                    MusicPlaylist;                                              // 0x0000   (0x0010)  
	int32_t                                            CurrentPlaylistIndex;                                       // 0x0010   (0x0004)  
	bool                                               PlaybackPaused;                                             // 0x0014   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0015   (0x0003)  MISSED
	float                                              CurrentPlaybackVolume;                                      // 0x0018   (0x0004)  
	bool                                               ShouldRepeatCurrent;                                        // 0x001C   (0x0001)  
	bool                                               ShouldLoop;                                                 // 0x001D   (0x0001)  
	bool                                               ShouldShuffle;                                              // 0x001E   (0x0001)  
	bool                                               ShouldPlayRadio;                                            // 0x001F   (0x0001)  
	bool                                               IsTurnedOn;                                                 // 0x0020   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0021   (0x0007)  MISSED
};

/// Struct /Script/ConZ.PrisonerNameChangeRequestData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FPrisonerNameChangeRequestData
{ 
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0000   (0x0020)  MISSED
};

/// Struct /Script/ConZ.PrisonerRestingDataAutonomous
/// Size: 0x001C (0x000000 - 0x00001C)
struct FPrisonerRestingDataAutonomous
{ 
	bool                                               HasDisabledMovement;                                        // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	FVector_NetQuantize                                Location;                                                   // 0x0004   (0x000C)  
	FVector_NetQuantize                                EulerRotation;                                              // 0x0010   (0x000C)  
};

/// Struct /Script/ConZ.PrisonerRestingData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPrisonerRestingData
{ 
	EPrisonerRestingMode                               mode;                                                       // 0x0000   (0x0001)  
	bool                                               IsRestingOnGround;                                          // 0x0001   (0x0001)  
	bool                                               HasChangedTransform;                                        // 0x0002   (0x0001)  
	bool                                               HasDisabledCapsuleCollision;                                // 0x0003   (0x0001)  
	bool                                               HasLockedRestingLocation;                                   // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0005   (0x0003)  MISSED
	TWeakObjectPtr<UAnimSequenceBase*>                 RestingAnimation;                                           // 0x0008   (0x0008)  
	float                                              FeetIKOffset;                                               // 0x0010   (0x0004)  
	bool                                               IsRestingOnBedroll;                                         // 0x0014   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0015   (0x0003)  MISSED
};

/// Struct /Script/ConZ.PrisonerRestingParameters
/// Size: 0x0060 (0x000000 - 0x000060)
struct FPrisonerRestingParameters
{ 
	EPrisonerRestingMode                               mode;                                                       // 0x0000   (0x0001)  
	bool                                               ShouldUpdateTransform;                                      // 0x0001   (0x0001)  
	bool                                               ShouldDisableMovement;                                      // 0x0002   (0x0001)  
	bool                                               ShouldDisableCapsuleCollision;                              // 0x0003   (0x0001)  
	bool                                               ShouldLockRestingLocation;                                  // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0005   (0x0003)  MISSED
	TWeakObjectPtr<UAnimSequenceBase*>                 RestingAnimation;                                           // 0x0008   (0x0008)  
	TArray<FVector>                                    EndRestLocations;                                           // 0x0010   (0x0010)  
	FTransform                                         Transform;                                                  // 0x0020   (0x0030)  
	bool                                               IsRestingOnGround;                                          // 0x0050   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0051   (0x0003)  MISSED
	float                                              FeetIKOffset;                                               // 0x0054   (0x0004)  
	TWeakObjectPtr<AItem*>                             Item;                                                       // 0x0058   (0x0008)  
};

/// Struct /Script/ConZ.ThrowingItemData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FThrowingItemData
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/ConZ.PrisonerDistanceTravelledContext
/// Size: 0x0020 (0x000000 - 0x000020)
struct FPrisonerDistanceTravelledContext
{ 
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0000   (0x0020)  MISSED
};

/// Struct /Script/ConZ.PrisonerViolation
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPrisonerViolation
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/ConZ.PrisonerMeleeAttackTypes
/// Size: 0x0088 (0x000000 - 0x000088)
struct FPrisonerMeleeAttackTypes
{ 
	FGameplayTag                                       PrimaryMeleeAttackTypeWhenNotMoving;                        // 0x0000   (0x0008)  
	FGameplayTag                                       PrimaryMeleeAttackTypeWhenWalking;                          // 0x0008   (0x0008)  
	FGameplayTag                                       PrimaryMeleeAttackTypeWhenJogging;                          // 0x0010   (0x0008)  
	FGameplayTag                                       PrimaryMeleeAttackTypeWhenRunning;                          // 0x0018   (0x0008)  
	FGameplayTag                                       PrimaryMeleeAttackTypeWhenFalling;                          // 0x0020   (0x0008)  
	FGameplayTag                                       SecondaryMeleeAttackTypeWhenNotMoving;                      // 0x0028   (0x0008)  
	FGameplayTag                                       SecondaryMeleeAttackTypeWhenWalking;                        // 0x0030   (0x0008)  
	FGameplayTag                                       SecondaryMeleeAttackTypeWhenJogging;                        // 0x0038   (0x0008)  
	FGameplayTag                                       SecondaryMeleeAttackTypeWhenRunning;                        // 0x0040   (0x0008)  
	FGameplayTag                                       SecondaryMeleeAttackTypeWhenFalling;                        // 0x0048   (0x0008)  
	FGameplayTag                                       ComboMeleeAttackTypeWhenNotMoving;                          // 0x0050   (0x0008)  
	FGameplayTag                                       ComboMeleeAttackTypeWhenWalking;                            // 0x0058   (0x0008)  
	FGameplayTag                                       ComboMeleeAttackTypeWhenJogging;                            // 0x0060   (0x0008)  
	FGameplayTag                                       ComboMeleeAttackTypeWhenRunning;                            // 0x0068   (0x0008)  
	FGameplayTag                                       ComboMeleeAttackTypeWhenFalling;                            // 0x0070   (0x0008)  
	FGameplayTag                                       BashMeleeAttackType;                                        // 0x0078   (0x0008)  
	FGameplayTag                                       WeaponBayonetMeleeAttackType;                               // 0x0080   (0x0008)  
};

/// Struct /Script/ConZ.PrisonerTurnMontageDescription
/// Size: 0x0030 (0x000000 - 0x000030)
struct FPrisonerTurnMontageDescription
{ 
	UAnimSequenceBase*                                 AnimationL90;                                               // 0x0000   (0x0008)  
	UAnimSequenceBase*                                 AnimationR90;                                               // 0x0008   (0x0008)  
	FName                                              TurnAngleCurveName;                                         // 0x0010   (0x0008)  
	FName                                              SlotName;                                                   // 0x0018   (0x0008)  
	float                                              BlendInTime;                                                // 0x0020   (0x0004)  
	float                                              BlendOutTime;                                               // 0x0024   (0x0004)  
	float                                              BlendOutTriggerTime;                                        // 0x0028   (0x0004)  
	float                                              PlayRate;                                                   // 0x002C   (0x0004)  
};

/// Struct /Script/ConZ.SkillExperienceChange
/// Size: 0x0008 (0x000000 - 0x000008)
struct FSkillExperienceChange
{ 
	float                                              ExperienceChange;                                           // 0x0000   (0x0004)  
	float                                              Time;                                                       // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.DerivedPrisonerSkillComponentUIData
/// Size: 0x0038 (0x000000 - 0x000038)
struct FDerivedPrisonerSkillComponentUIData
{ 
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0000   (0x0038)  MISSED
};

/// Struct /Script/ConZ.ActiveMovingThroughFoliageSounds
/// Size: 0x0020 (0x000000 - 0x000020)
struct FActiveMovingThroughFoliageSounds
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	UAkAudioEvent*                                     StartAudioEvent;                                            // 0x0008   (0x0008)  
	UAkAudioEvent*                                     StopAudioEvent;                                             // 0x0010   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0018   (0x0008)  MISSED
};

/// Struct /Script/ConZ.PrisonerThirdPersonSubviewBlendOverride
/// Size: 0x0008 (0x000000 - 0x000008)
struct FPrisonerThirdPersonSubviewBlendOverride
{ 
	EPrisonerThirdPersonSubview                        Source;                                                     // 0x0000   (0x0001)  
	EPrisonerThirdPersonSubview                        Target;                                                     // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0002   (0x0002)  MISSED
	float                                              Duration;                                                   // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.LocalOffsetCurves
/// Size: 0x0020 (0x000000 - 0x000020)
struct FLocalOffsetCurves
{ 
	UCurveLinearColor*                                 YawIdle;                                                    // 0x0000   (0x0008)  
	UCurveLinearColor*                                 YawMoving;                                                  // 0x0008   (0x0008)  
	UCurveLinearColor*                                 PitchIdle;                                                  // 0x0010   (0x0008)  
	UCurveLinearColor*                                 PitchMoving;                                                // 0x0018   (0x0008)  
};

/// Struct /Script/ConZ.BodyConditionSpriteData
/// Size: 0x0160 (0x000000 - 0x000160)
struct FBodyConditionSpriteData
{ 
	unsigned char                                      UnknownData00_1[0x160];                                     // 0x0000   (0x0160)  MISSED
};

/// Struct /Script/ConZ.PrisonerViewInfo
/// Size: 0x0020 (0x0005F0 - 0x000610)
struct FPrisonerViewInfo : FMinimalViewInfo
{ 
	float                                              WeaponFOV;                                                  // 0x05F0   (0x0004)  
	FVector                                            WeaponFoveationOffset;                                      // 0x05F4   (0x000C)  
	float                                              MinViewYaw;                                                 // 0x0600   (0x0004)  
	float                                              MaxViewYaw;                                                 // 0x0604   (0x0004)  
	float                                              MinViewPitch;                                               // 0x0608   (0x0004)  
	float                                              MaxViewPitch;                                               // 0x060C   (0x0004)  
};

/// Struct /Script/ConZ.ProjectileData
/// Size: 0x0060 (0x000000 - 0x000060)
struct FProjectileData
{ 
	FText                                              Caption;                                                    // 0x0000   (0x0018)  
	float                                              Caliber;                                                    // 0x0018   (0x0004)  
	float                                              Weight;                                                     // 0x001C   (0x0004)  
	float                                              MuzzleVelocity;                                             // 0x0020   (0x0004)  
	float                                              BallisticCoefficient;                                       // 0x0024   (0x0004)  
	EBallisticDragModel                                BallisticDragModel;                                         // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	float                                              InitialDamage;                                              // 0x002C   (0x0004)  
	float                                              InitialDamageInGameEvent;                                   // 0x0030   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	FTargetTypeDamageMultiplier                        TargetTypeMultiplier;                                       // 0x0038   (0x0010)  
	float                                              PenetrationFactor;                                          // 0x0048   (0x0004)  
	float                                              GlancingAngle;                                              // 0x004C   (0x0004)  
	bool                                               AllowGlanceOrForceBounce;                                   // 0x0050   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0051   (0x0003)  MISSED
	float                                              BounceAngle;                                                // 0x0054   (0x0004)  
	float                                              ArmorPiercingFactor;                                        // 0x0058   (0x0004)  
	bool                                               CanCauseHeadExplosion;                                      // 0x005C   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x005D   (0x0003)  MISSED
};

/// Struct /Script/ConZ.ProjectileArrowData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FProjectileArrowData
{ 
	UClass*                                            AmmunitionArrowClass;                                       // 0x0000   (0x0008)  
	float                                              ItemsHealth;                                                // 0x0008   (0x0004)  
	float                                              StiffnessFactor;                                            // 0x000C   (0x0004)  
	float                                              FlightRotationCorrectionSpeed;                              // 0x0010   (0x0004)  
	float                                              DeviationDegrees;                                           // 0x0014   (0x0004)  
	bool                                               IsPartOfEvent;                                              // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0019   (0x0007)  MISSED
};

/// Struct /Script/ConZ.ImpactEffectData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FImpactEffectData
{ 
	UParticleSystem*                                   ParticleSystem;                                             // 0x0000   (0x0008)  
	UNiagaraSystem*                                    NiagaraParticleSystem;                                      // 0x0008   (0x0008)  
	UMaterial*                                         Decal;                                                      // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.FiredShotDescriptionRep
/// Size: 0x0004 (0x000000 - 0x000004)
struct FFiredShotDescriptionRep
{ 
	uint32_t                                           PackedData;                                                 // 0x0000   (0x0004)  
};

/// Struct /Script/ConZ.RadiationSourceDescription
/// Size: 0x0060 (0x000000 - 0x000060)
struct FRadiationSourceDescription
{ 
	FTransform                                         Transform;                                                  // 0x0000   (0x0030)  
	FVector                                            Extents;                                                    // 0x0030   (0x000C)  
	FVector                                            EpicenterLocation;                                          // 0x003C   (0x000C)  
	float                                              EpicenterRadius;                                            // 0x0048   (0x0004)  
	float                                              MaxRadiationAmountIncreaseRate;                             // 0x004C   (0x0004)  
	float                                              RadiationAmountIncreaseRateFalloffExponent;                 // 0x0050   (0x0004)  
	float                                              RadiationNoiseAmountScale;                                  // 0x0054   (0x0004)  
	float                                              RadiationNoiseLocationScale;                                // 0x0058   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x005C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.RadioProgramData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FRadioProgramData
{ 
	UClass*                                            ProgramClass;                                               // 0x0000   (0x0008)  
	URadioProgram*                                     Program;                                                    // 0x0008   (0x0008)  
	float                                              Chance;                                                     // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/ConZ.ConnectionSaveData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FConnectionSaveData
{ 
	FEntityComponentId                                 ID;                                                         // 0x0000   (0x0010)  
	float                                              Amount;                                                     // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/ConZ.RangedWeaponSkillParametersPerSkillLevel
/// Size: 0x0004 (0x000000 - 0x000004)
struct FRangedWeaponSkillParametersPerSkillLevel
{ 
	float                                              CrosshairHidingDuration;                                    // 0x0000   (0x0004)  
};

/// Struct /Script/ConZ.RangedWeaponSkillExperienceAwards
/// Size: 0x0040 (0x000000 - 0x000040)
struct FRangedWeaponSkillExperienceAwards
{ 
	float                                              PointsPerShotDistance;                                      // 0x0000   (0x0004)  
	float                                              PointsPerSubsequentHit;                                     // 0x0004   (0x0004)  
	float                                              PointsForKill;                                              // 0x0008   (0x0004)  
	float                                              PointsForHeadshot;                                          // 0x000C   (0x0004)  
	float                                              PointsForLowWindSpeed;                                      // 0x0010   (0x0004)  
	float                                              PointsForMediumWindSpeed;                                   // 0x0014   (0x0004)  
	float                                              PointsForHighWindSpeed;                                     // 0x0018   (0x0004)  
	float                                              PointsForProne;                                             // 0x001C   (0x0004)  
	float                                              PointsForCrouching;                                         // 0x0020   (0x0004)  
	float                                              PointsForStanding;                                          // 0x0024   (0x0004)  
	float                                              ClearMalfunctionBadRound;                                   // 0x0028   (0x0004)  
	float                                              ClearMalfunctionStovePipe;                                  // 0x002C   (0x0004)  
	float                                              ClearMalfunctionRoundNotLoaded;                             // 0x0030   (0x0004)  
	float                                              ClearMalfunctionDoubleFeed;                                 // 0x0034   (0x0004)  
	float                                              ClearMalfunctionStuckBullet;                                // 0x0038   (0x0004)  
	float                                              ClearMalfunctionClipPartiallyEjected;                       // 0x003C   (0x0004)  
};

/// Struct /Script/ConZ.RazorDeathAnimationData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FRazorDeathAnimationData
{ 
	UAnimMontage*                                      AnimMontage;                                                // 0x0000   (0x0008)  
	FFloatInterval                                     TimeToRagdollRange;                                         // 0x0008   (0x0008)  
};

/// Struct /Script/ConZ.RazorUpperBodyPitchRangeData
/// Size: 0x0014 (0x000000 - 0x000014)
struct FRazorUpperBodyPitchRangeData
{ 
	FFloatRange                                        ActualPitchRange;                                           // 0x0000   (0x0010)  
	float                                              AppliedPitch;                                               // 0x0010   (0x0004)  
};

/// Struct /Script/ConZ.RazorAttackMontageDescription
/// Size: 0x0010 (0x000000 - 0x000010)
struct FRazorAttackMontageDescription
{ 
	UAnimMontage*                                      Montage;                                                    // 0x0000   (0x0008)  
	float                                              MaxCombatDistance;                                          // 0x0008   (0x0004)  
	float                                              MinCombatDistance;                                          // 0x000C   (0x0004)  
};

/// Struct /Script/ConZ.RazorTurnMontageDescription
/// Size: 0x0028 (0x000000 - 0x000028)
struct FRazorTurnMontageDescription
{ 
	UAnimMontage*                                      MontageL90;                                                 // 0x0000   (0x0008)  
	UAnimMontage*                                      MontageL180;                                                // 0x0008   (0x0008)  
	UAnimMontage*                                      MontageR90;                                                 // 0x0010   (0x0008)  
	UAnimMontage*                                      MontageR180;                                                // 0x0018   (0x0008)  
	FName                                              TurnAngleCurveName;                                         // 0x0020   (0x0008)  
};

/// Struct /Script/ConZ.EngineeringEventData
/// Size: 0x0008 (0x000000 - 0x000008)
struct FEngineeringEventData
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/ConZ.RepairToolItemParams
/// Size: 0x0058 (0x000000 - 0x000058)
struct FRepairToolItemParams
{ 
	FGameplayTagContainer                              RepairableItemTypes;                                        // 0x0000   (0x0020)  
	UAkAudioEvent*                                     StartRepairSound;                                           // 0x0020   (0x0008)  
	UAkAudioEvent*                                     StopRepairSound;                                            // 0x0028   (0x0008)  
	UAnimMontage*                                      StartRepairMontage;                                         // 0x0030   (0x0008)  
	UAnimMontage*                                      StopRepairMontage;                                          // 0x0038   (0x0008)  
	float                                              HealthGainPerUseMultiplier;                                 // 0x0040   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0044   (0x0004)  MISSED
	TArray<FRequiredRepairingItemTagParams>            RequiredRepairingItemTagsParms;                             // 0x0048   (0x0010)  
};

/// Struct /Script/ConZ.RequiredRepairingItemTagParams
/// Size: 0x0010 (0x000000 - 0x000010)
struct FRequiredRepairingItemTagParams
{ 
	UBaseItemTag*                                      ItemTag;                                                    // 0x0000   (0x0008)  
	int32_t                                            ItemUsageConsumption;                                       // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.RequiredItemForItemTagParams
/// Size: 0x000C (0x000000 - 0x00000C)
struct FRequiredItemForItemTagParams
{ 
	unsigned char                                      UnknownData00_1[0xC];                                       // 0x0000   (0x000C)  MISSED
};

/// Struct /Script/ConZ.RepairableParams
/// Size: 0x0038 (0x000000 - 0x000038)
struct FRepairableParams
{ 
	FGameplayTagContainer                              RepairableTypes;                                            // 0x0000   (0x0020)  
	float                                              HealthRepairedPerUse;                                       // 0x0020   (0x0004)  
	float                                              ExperienceAwardedPerHealthRepaired;                         // 0x0024   (0x0004)  
	float                                              MinRepairDuration;                                          // 0x0028   (0x0004)  
	float                                              MaxRepairDuration;                                          // 0x002C   (0x0004)  
	bool                                               ShouldRepairZeroHealth;                                     // 0x0030   (0x0001)  
	ESkillLevel                                        MinSkillLevelRequired;                                      // 0x0031   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0032   (0x0006)  MISSED
};

/// Struct /Script/ConZ.ReplenishableResource
/// Size: 0x00A0 (0x000000 - 0x0000A0)
struct FReplenishableResource
{ 
	unsigned char                                      UnknownData00_1[0xA0];                                      // 0x0000   (0x00A0)  MISSED
};

/// Struct /Script/ConZ.ReplenishableResourceDescription
/// Size: 0x0088 (0x000000 - 0x000088)
struct FReplenishableResourceDescription
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	UClass*                                            Type;                                                       // 0x0008   (0x0008)  
	FGameplayTagContainer                              InSocketTypes;                                              // 0x0010   (0x0020)  
	FGameplayTagContainer                              OutSocketTypes;                                             // 0x0030   (0x0020)  
	float                                              PricePerUnit;                                               // 0x0050   (0x0004)  
	bool                                               IsReplenishedPeriodically;                                  // 0x0054   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0055   (0x0003)  MISSED
	FPeriodicallyReplenishedResourceDescription        PeriodicReplenishment;                                      // 0x0058   (0x0010)  
	FProximityReplenishedResourceDescription           ProximityReplenishment;                                     // 0x0068   (0x0010)  
	unsigned char                                      UnknownData02_6[0x10];                                      // 0x0078   (0x0010)  MISSED
};

/// Struct /Script/ConZ.ProximityReplenishedResourceDescription
/// Size: 0x0010 (0x000000 - 0x000010)
struct FProximityReplenishedResourceDescription
{ 
	float                                              ReplenishChance;                                            // 0x0000   (0x0004)  
	FFloatInterval                                     ReplenishAmount;                                            // 0x0004   (0x0008)  
	float                                              ReplenishTimeout;                                           // 0x000C   (0x0004)  
};

/// Struct /Script/ConZ.PeriodicallyReplenishedResourceDescription
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPeriodicallyReplenishedResourceDescription
{ 
	float                                              InitialAmount;                                              // 0x0000   (0x0004)  
	float                                              MaxAmount;                                                  // 0x0004   (0x0004)  
	float                                              ReplenishInterval;                                          // 0x0008   (0x0004)  
	float                                              ReplenishAmount;                                            // 0x000C   (0x0004)  
};

/// Struct /Script/ConZ.ReplenishableResourceSlotDescription
/// Size: 0x001C (0x000000 - 0x00001C)
struct FReplenishableResourceSlotDescription
{ 
	unsigned char                                      UnknownData00_1[0x1C];                                      // 0x0000   (0x001C)  MISSED
};

/// Struct /Script/ConZ.RequestSpamFilter
/// Size: 0x0014 (0x000000 - 0x000014)
struct FRequestSpamFilter
{ 
	unsigned char                                      UnknownData00_1[0x14];                                      // 0x0000   (0x0014)  MISSED
};

/// Struct /Script/ConZ.AreaResourceLockNetwork
/// Size: 0x0020 (0x000000 - 0x000020)
struct FAreaResourceLockNetwork
{ 
	FResourceNetworkGUID                               LockOwnerGUID;                                              // 0x0000   (0x0004)  
	FBox                                               Area;                                                       // 0x0004   (0x001C)  
};

/// Struct /Script/ConZ.ResourceNetworkGUID
/// Size: 0x0004 (0x000000 - 0x000004)
struct FResourceNetworkGUID
{ 
	unsigned char                                      UnknownData00_1[0x4];                                       // 0x0000   (0x0004)  MISSED
};

/// Struct /Script/ConZ.ActorResourceLockNetwork
/// Size: 0x000C (0x000000 - 0x00000C)
struct FActorResourceLockNetwork
{ 
	FResourceNetworkGUID                               LockOwnerGUID;                                              // 0x0000   (0x0004)  
	FResourceNetworkGUID                               ResourceGUID;                                               // 0x0004   (0x0004)  
	int32_t                                            ResourceId;                                                 // 0x0008   (0x0004)  
};

/// Struct /Script/ConZ.MeshInstancesRestoreOptions
/// Size: 0x0004 (0x000000 - 0x000004)
struct FMeshInstancesRestoreOptions
{ 
	float                                              RestoreInterval;                                            // 0x0000   (0x0004)  
};

/// Struct /Script/ConZ.RestorableMeshInstanceId
/// Size: 0x0018 (0x000000 - 0x000018)
struct FRestorableMeshInstanceId
{ 
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/ConZ.RunningSkillParametersPerSkillLevel
/// Size: 0x0010 (0x000000 - 0x000010)
struct FRunningSkillParametersPerSkillLevel
{ 
	FExperienceDependentFloat                          MaxSpeedMultiplier;                                         // 0x0000   (0x0008)  
	FExperienceDependentFloat                          StaminaConsumptionMultiplier;                               // 0x0008   (0x0008)  
};

/// Struct /Script/ConZ.RunningSkillExperienceAwards
/// Size: 0x0008 (0x000000 - 0x000008)
struct FRunningSkillExperienceAwards
{ 
	float                                              PointsPerMinuteOfJogging;                                   // 0x0000   (0x0004)  
	float                                              PointsPerMinuteOfRunning;                                   // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.ScopeZoomLevelSettings
/// Size: 0x0570 (0x000000 - 0x000570)
struct FScopeZoomLevelSettings
{ 
	float                                              Magnification;                                              // 0x0000   (0x0004)  
	float                                              DisplayedMagnification;                                     // 0x0004   (0x0004)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0008   (0x0008)  MISSED
	FPostProcessSettings                               PostProcessSettings;                                        // 0x0010   (0x0560)  
};

/// Struct /Script/ConZ.SearchPerItemData
/// Size: 0x0048 (0x000000 - 0x000048)
struct FSearchPerItemData
{ 
	TWeakObjectPtr<UClass*>                            ItemClass;                                                  // 0x0000   (0x0028)  
	TArray<UPhysicalMaterial*>                         NeededMaterials;                                            // 0x0028   (0x0010)  
	float                                              Probability;                                                // 0x0038   (0x0004)  
	int32_t                                            MinQuantity;                                                // 0x003C   (0x0004)  
	int32_t                                            MaxQuantity;                                                // 0x0040   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Struct /Script/ConZ.SedentaryNPCHeadAnimationAndAudio
/// Size: 0x0018 (0x000000 - 0x000018)
struct FSedentaryNPCHeadAnimationAndAudio
{ 
	UAnimMontage*                                      HeadAnimation;                                              // 0x0000   (0x0008)  
	UAkAudioEvent*                                     AudioEvent;                                                 // 0x0008   (0x0008)  
	bool                                               OverrideNativeTrackingAnimations;                           // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
};

/// Struct /Script/ConZ.SedentaryNPCMarker
/// Size: 0x0070 (0x000000 - 0x000070)
struct FSedentaryNPCMarker
{ 
	TWeakObjectPtr<UClass*>                            SedentaryNPCClass;                                          // 0x0000   (0x0028)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0028   (0x0008)  MISSED
	FTransform                                         SpawnTransform;                                             // 0x0030   (0x0030)  
	bool                                               ShouldRaycastSpawnPosition;                                 // 0x0060   (0x0001)  
	unsigned char                                      UnknownData01_6[0xF];                                       // 0x0061   (0x000F)  MISSED
};

/// Struct /Script/ConZ.SentryDamageEffectData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FSentryDamageEffectData
{ 
	UNiagaraSystem*                                    ParticleSystem;                                             // 0x0000   (0x0008)  
	float                                              EffectsScaleDistanceStart;                                  // 0x0008   (0x0004)  
	float                                              EffectsScaleDistanceRange;                                  // 0x000C   (0x0004)  
	float                                              EffectsScaleByDistanceFactor;                               // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/ConZ.InPlaceTurningData
/// Size: 0x002C (0x000000 - 0x00002C)
struct FInPlaceTurningData
{ 
	FInPlaceTurnAnimationInfo                          LAnimationInfo;                                             // 0x0000   (0x0014)  
	FInPlaceTurnAnimationInfo                          RAnimationInfo;                                             // 0x0014   (0x0014)  
	float                                              BlendAlphaInterpolationSpeed;                               // 0x0028   (0x0004)  
};

/// Struct /Script/ConZ.InPlaceTurnAnimationInfo
/// Size: 0x0014 (0x000000 - 0x000014)
struct FInPlaceTurnAnimationInfo
{ 
	float                                              Duration;                                                   // 0x0000   (0x0004)  
	float                                              TurnSpeed;                                                  // 0x0004   (0x0004)  
	float                                              AnimationPlayRate;                                          // 0x0008   (0x0004)  
	float                                              BlendInDuration;                                            // 0x000C   (0x0004)  
	float                                              BlendOutDuration;                                           // 0x0010   (0x0004)  
};

/// Struct /Script/ConZ.SentryGlitchingPartInfo
/// Size: 0x0008 (0x000000 - 0x000008)
struct FSentryGlitchingPartInfo
{ 
	bool                                               IsGlitching;                                                // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              NextUpdateTime;                                             // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.SentryCombatBehaviorMode
/// Size: 0x0020 (0x000000 - 0x000020)
struct FSentryCombatBehaviorMode
{ 
	float                                              CombatVariationWeights;                                     // 0x0000   (0x0014)  
	float                                              GrenadeLaunchVariationWeights;                              // 0x0014   (0x000C)  
};

/// Struct /Script/ConZ.SentryMeleeAttackDescription
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSentryMeleeAttackDescription
{ 
	UAnimMontage*                                      AttackAnimation;                                            // 0x0000   (0x0008)  
	float                                              EnemyAngleMin;                                              // 0x0008   (0x0004)  
	float                                              EnemyAngleMax;                                              // 0x000C   (0x0004)  
};

/// Struct /Script/ConZ.SentryPatrolPoint
/// Size: 0x0020 (0x000000 - 0x000020)
struct FSentryPatrolPoint
{ 
	FVector                                            LocationRelativeToSentry;                                   // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_6[0x14];                                      // 0x000C   (0x0014)  MISSED
};

/// Struct /Script/ConZ.ServerCraftableItem
/// Size: 0x00A8 (0x000000 - 0x0000A8)
struct FServerCraftableItem
{ 
	uint32_t                                           ID;                                                         // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	UClass*                                            ItemClass;                                                  // 0x0008   (0x0008)  
	int32_t                                            CraftedItemCount;                                           // 0x0010   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	TArray<UClass*>                                    BonusItemClasses;                                           // 0x0018   (0x0010)  
	TArray<FServerUsedItem>                            MandatoryItems;                                             // 0x0028   (0x0010)  
	TArray<FServerUsedItem>                            MandatoryParts;                                             // 0x0038   (0x0010)  
	TArray<FServerUsedItem>                            OptionalItems;                                              // 0x0048   (0x0010)  
	TArray<FServerUsedItem>                            OptionalParts;                                              // 0x0058   (0x0010)  
	TArray<FServerUsedItem>                            ToolsNeeded;                                                // 0x0068   (0x0010)  
	UAnimMontage*                                      CustomCraftingMontage;                                      // 0x0078   (0x0008)  
	UAkAudioEvent*                                     StartCraftingAudioEvent;                                    // 0x0080   (0x0008)  
	UAkAudioEvent*                                     StopCraftingAudioEvent;                                     // 0x0088   (0x0008)  
	unsigned char                                      UnknownData02_6[0x18];                                      // 0x0090   (0x0018)  MISSED
};

/// Struct /Script/ConZ.ServerUsedItem
/// Size: 0x0018 (0x000000 - 0x000018)
struct FServerUsedItem
{ 
	AItem*                                             Item;                                                       // 0x0000   (0x0008)  
	int32_t                                            Quantity;                                                   // 0x0008   (0x0004)  
	int32_t                                            Usage;                                                      // 0x000C   (0x0004)  
	float                                              usageWeight;                                                // 0x0010   (0x0004)  
	ECraftingType                                      CraftingType;                                               // 0x0014   (0x0001)  
	bool                                               SpawnHere;                                                  // 0x0015   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0016   (0x0002)  MISSED
};

/// Struct /Script/ConZ.ServerInfo
/// Size: 0x0050 (0x000000 - 0x000050)
struct FServerInfo
{ 
	FString                                            Address;                                                    // 0x0000   (0x0010)  
	int32_t                                            Port;                                                       // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	FString                                            Name;                                                       // 0x0018   (0x0010)  
	char                                               PlayerCount;                                                // 0x0028   (0x0001)  
	char                                               MaxPlayerCount;                                             // 0x0029   (0x0001)  
	bool                                               PasswordProtected;                                          // 0x002A   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x002B   (0x0001)  MISSED
	float                                              ping;                                                       // 0x002C   (0x0004)  
	float                                              InGameTime;                                                 // 0x0030   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	FString                                            Version;                                                    // 0x0038   (0x0010)  
	bool                                               IsComplete;                                                 // 0x0048   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0049   (0x0007)  MISSED
};

/// Struct /Script/ConZ.PriceUpdateData
/// Size: 0x0090 (0x000000 - 0x000090)
struct FPriceUpdateData
{ 
	unsigned char                                      UnknownData00_1[0x90];                                      // 0x0000   (0x0090)  MISSED
};

/// Struct /Script/ConZ.DamageMultipliers
/// Size: 0x0018 (0x000000 - 0x000018)
struct FDamageMultipliers
{ 
	UClass*                                            DamageCauserClass;                                          // 0x0000   (0x0008)  
	TArray<FMultiplierByClass>                         DamageMultipliers;                                          // 0x0008   (0x0010)  
};

/// Struct /Script/ConZ.MultiplierByClass
/// Size: 0x0010 (0x000000 - 0x000010)
struct FMultiplierByClass
{ 
	UClass*                                            ObjectClass;                                                // 0x0000   (0x0008)  
	float                                              Multiplier;                                                 // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.ProjectileImpulseMultiplier
/// Size: 0x0010 (0x000000 - 0x000010)
struct FProjectileImpulseMultiplier
{ 
	UClass*                                            ActorClass;                                                 // 0x0000   (0x0008)  
	float                                              Multiplier;                                                 // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.SkillEventWeapon
/// Size: 0x0001 (0x000000 - 0x000001)
struct FSkillEventWeapon
{ 
	EWeaponCategory                                    WeaponCategory;                                             // 0x0000   (0x0001)  
};

/// Struct /Script/ConZ.SkillEventWeaponClearedMalfunction
/// Size: 0x0001 (0x000001 - 0x000002)
struct FSkillEventWeaponClearedMalfunction : FSkillEventWeapon
{ 
	EWeaponMalfunction                                 malfunction;                                                // 0x0001   (0x0001)  
};

/// Struct /Script/ConZ.SkillEventWeaponProjectileHitTarget
/// Size: 0x0027 (0x000001 - 0x000028)
struct FSkillEventWeaponProjectileHitTarget : FSkillEventWeapon
{ 
	unsigned char                                      UnknownData00_2[0x7];                                       // 0x0001   (0x0007)  MISSED
	AActor*                                            Target;                                                     // 0x0008   (0x0008)  
	float                                              Distance;                                                   // 0x0010   (0x0004)  
	float                                              EnergyRatio;                                                // 0x0014   (0x0004)  
	bool                                               IsHeadShot;                                                 // 0x0018   (0x0001)  
	bool                                               IsKill;                                                     // 0x0019   (0x0001)  
	bool                                               WasSniping;                                                 // 0x001A   (0x0001)  
	EPrisonerStance                                    stance;                                                     // 0x001B   (0x0001)  
	EWindSpeedCategory                                 WindSpeedCategory;                                          // 0x001C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x001D   (0x0003)  MISSED
	float                                              ExperienceMultiplier;                                       // 0x0020   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/ConZ.SkillEventWeaponReload
/// Size: 0x0000 (0x000001 - 0x000001)
struct FSkillEventWeaponReload : FSkillEventWeapon
{ 
};

/// Struct /Script/ConZ.SkillEventWeaponFireShot
/// Size: 0x0000 (0x000001 - 0x000001)
struct FSkillEventWeaponFireShot : FSkillEventWeapon
{ 
};

/// Struct /Script/ConZ.SkillRecord
/// Size: 0x0020 (0x000000 - 0x000020)
struct FSkillRecord
{ 
	ESkillReplicationID                                ID;                                                         // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              ExperiencePoints;                                           // 0x0004   (0x0004)  
	ESkillLevel                                        Level;                                                      // 0x0008   (0x0001)  
	int8_t                                             counter;                                                    // 0x0009   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x000A   (0x0006)  MISSED
	TArray<char>                                       SkillSpecificData;                                          // 0x0010   (0x0010)  
};

/// Struct /Script/ConZ.SliderWithLabelAndNumberStyle
/// Size: 0x0158 (0x000000 - 0x000158)
struct FSliderWithLabelAndNumberStyle
{ 
	FSlateBrush                                        FocusBackgroundImage;                                       // 0x0000   (0x0088)  
	FSliderWithLabelAndNumberTextStyle                 LabelText;                                                  // 0x0088   (0x0068)  
	FSliderWithLabelAndNumberTextStyle                 NumberText;                                                 // 0x00F0   (0x0068)  
};

/// Struct /Script/ConZ.SliderWithLabelAndNumberTextStyle
/// Size: 0x0068 (0x000000 - 0x000068)
struct FSliderWithLabelAndNumberTextStyle
{ 
	FSlateFontInfo                                     Font;                                                       // 0x0000   (0x0058)  
	FLinearColor                                       ColorAndOpacity;                                            // 0x0058   (0x0010)  
};

/// Struct /Script/ConZ.SmokableSubstance
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSmokableSubstance
{ 
	UClass*                                            InhalationPoisoningType;                                    // 0x0000   (0x0008)  
	float                                              Amount;                                                     // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.SnipingSkillExperienceAwards
/// Size: 0x0034 (0x000000 - 0x000034)
struct FSnipingSkillExperienceAwards
{ 
	float                                              PointsPerShotDistance;                                      // 0x0000   (0x0004)  
	float                                              PointsPerSubsequentHit;                                     // 0x0004   (0x0004)  
	float                                              PointsForKillUnderDistanceLimit;                            // 0x0008   (0x0004)  
	float                                              PointsForHeadshotUnderDistanceLimit;                        // 0x000C   (0x0004)  
	float                                              PointsForHit;                                               // 0x0010   (0x0004)  
	float                                              PointsForKill;                                              // 0x0014   (0x0004)  
	float                                              PointsForHeadshot;                                          // 0x0018   (0x0004)  
	float                                              PointsForLowWindSpeed;                                      // 0x001C   (0x0004)  
	float                                              PointsForMediumWindSpeed;                                   // 0x0020   (0x0004)  
	float                                              PointsForHighWindSpeed;                                     // 0x0024   (0x0004)  
	float                                              PointsForProne;                                             // 0x0028   (0x0004)  
	float                                              PointsForCrouching;                                         // 0x002C   (0x0004)  
	float                                              PointsForStanding;                                          // 0x0030   (0x0004)  
};

/// Struct /Script/ConZ.ParticleCollisionDecalData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FParticleCollisionDecalData
{ 
	UMaterialInterface*                                Decal;                                                      // 0x0000   (0x0008)  
	float                                              MinSize;                                                    // 0x0008   (0x0004)  
	float                                              MaxSize;                                                    // 0x000C   (0x0004)  
	float                                              MinLifetime;                                                // 0x0010   (0x0004)  
	float                                              MaxLifetime;                                                // 0x0014   (0x0004)  
};

/// Struct /Script/ConZ.StartLocationDescription
/// Size: 0x0050 (0x000000 - 0x000050)
struct FStartLocationDescription
{ 
	char                                               TypeFlags;                                                  // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0xF];                                       // 0x0001   (0x000F)  MISSED
	FTransform                                         Transform;                                                  // 0x0010   (0x0030)  
	bool                                               IsDisabled;                                                 // 0x0040   (0x0001)  
	unsigned char                                      UnknownData01_6[0xF];                                       // 0x0041   (0x000F)  MISSED
};

/// Struct /Script/ConZ.StealthSkillExperienceAwards
/// Size: 0x0008 (0x000000 - 0x000008)
struct FStealthSkillExperienceAwards
{ 
	float                                              PointsForCrouchedMovementPerSecond;                         // 0x0000   (0x0004)  
	float                                              PointsForProneMovementPerSecond;                            // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.CompassSkillParametersPerSkillLevel
/// Size: 0x0001 (0x000000 - 0x000001)
struct FCompassSkillParametersPerSkillLevel
{ 
	char                                               CompassSkillLevel;                                          // 0x0000   (0x0001)  
};

/// Struct /Script/ConZ.SwitchMaterialEmissiveColorProperties
/// Size: 0x002C (0x000000 - 0x00002C)
struct FSwitchMaterialEmissiveColorProperties
{ 
	FLinearColor                                       OnEmissiveColor;                                            // 0x0000   (0x0010)  
	FLinearColor                                       OffEmissiveColor;                                           // 0x0010   (0x0010)  
	int32_t                                            EmissiveMaterialIndex;                                      // 0x0020   (0x0004)  
	FName                                              EmissiveColorPropertyName;                                  // 0x0024   (0x0008)  
};

/// Struct /Script/ConZ.ConZWeaponDescRow
/// Size: 0x0030 (0x000008 - 0x000038)
struct FConZWeaponDescRow : FTableRowBase
{ 
	float                                              Damage;                                                     // 0x0008   (0x0004)  
	float                                              DamageInGameEvent;                                          // 0x000C   (0x0004)  
	FTargetTypeDamageMultiplier                        TargetTypeMultiplier;                                       // 0x0010   (0x0010)  
	float                                              Energy;                                                     // 0x0020   (0x0004)  
	float                                              SharpnessSlash;                                             // 0x0024   (0x0004)  
	float                                              SharpnessPierce;                                            // 0x0028   (0x0004)  
	ECharacterImpactSourceSoundCategory                ImpactSoundCategory;                                        // 0x002C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x002D   (0x0003)  MISSED
	UProjectileImpactEffects*                          ImpactEffects;                                              // 0x0030   (0x0008)  
};

/// Struct /Script/ConZ.ConZConsoleVariableRow
/// Size: 0x0020 (0x000008 - 0x000028)
struct FConZConsoleVariableRow : FTableRowBase
{ 
	FString                                            ConsoleVariable;                                            // 0x0008   (0x0010)  
	FString                                            Description;                                                // 0x0018   (0x0010)  
};

/// Struct /Script/ConZ.ConZDimensionRow
/// Size: 0x0018 (0x000008 - 0x000020)
struct FConZDimensionRow : FTableRowBase
{ 
	float                                              Value;                                                      // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	FString                                            Description;                                                // 0x0010   (0x0010)  
};

/// Struct /Script/ConZ.ConZFontRow
/// Size: 0x0068 (0x000008 - 0x000070)
struct FConZFontRow : FTableRowBase
{ 
	FSlateFontInfo                                     Font;                                                       // 0x0008   (0x0058)  
	FString                                            Description;                                                // 0x0060   (0x0010)  
};

/// Struct /Script/ConZ.ConZColorRow
/// Size: 0x0020 (0x000008 - 0x000028)
struct FConZColorRow : FTableRowBase
{ 
	FLinearColor                                       Color;                                                      // 0x0008   (0x0010)  
	FString                                            Description;                                                // 0x0018   (0x0010)  
};

/// Struct /Script/ConZ.TabMenuTabData
/// Size: 0x0040 (0x000000 - 0x000040)
struct FTabMenuTabData
{ 
	UClass*                                            LeftPanel;                                                  // 0x0000   (0x0008)  
	UClass*                                            CentralPanel;                                               // 0x0008   (0x0008)  
	UClass*                                            RightPanel;                                                 // 0x0010   (0x0008)  
	ETabMode                                           Type;                                                       // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0019   (0x0007)  MISSED
	FText                                              Name;                                                       // 0x0020   (0x0018)  
	int32_t                                            Index;                                                      // 0x0038   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x003C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.ItemFirstPersonUpperBodyAnimationsData
/// Size: 0x0050 (0x000000 - 0x000050)
struct FItemFirstPersonUpperBodyAnimationsData
{ 
	UAnimSequenceBase*                                 StandIdle;                                                  // 0x0000   (0x0008)  
	UBlendSpace1D*                                     StandWalk;                                                  // 0x0008   (0x0008)  
	UBlendSpace1D*                                     StandWalkLimping;                                           // 0x0010   (0x0008)  
	UBlendSpace1D*                                     StandJog;                                                   // 0x0018   (0x0008)  
	UBlendSpace1D*                                     StandJogLimping;                                            // 0x0020   (0x0008)  
	UAnimSequenceBase*                                 StandRun;                                                   // 0x0028   (0x0008)  
	UAnimSequenceBase*                                 CrouchIdle;                                                 // 0x0030   (0x0008)  
	UBlendSpace1D*                                     CrouchWalk;                                                 // 0x0038   (0x0008)  
	UBlendSpace1D*                                     CrouchWalkLimping;                                          // 0x0040   (0x0008)  
	UAnimSequenceBase*                                 ProneIdle;                                                  // 0x0048   (0x0008)  
};

/// Struct /Script/ConZ.HandsPoseCorrections
/// Size: 0x0040 (0x000000 - 0x000040)
struct FHandsPoseCorrections
{ 
	UAnimSequenceBase*                                 RightHand;                                                  // 0x0000   (0x0008)  
	UAnimSequenceBase*                                 RightFist;                                                  // 0x0008   (0x0008)  
	UAnimSequenceBase*                                 RightFistInCombatMode;                                      // 0x0010   (0x0008)  
	float                                              RightHandToIdleBlendAlpha;                                  // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x001C   (0x0004)  MISSED
	UAnimSequenceBase*                                 LeftHand;                                                   // 0x0020   (0x0008)  
	UAnimSequenceBase*                                 LeftFist;                                                   // 0x0028   (0x0008)  
	UAnimSequenceBase*                                 LeftFistInCombatMode;                                       // 0x0030   (0x0008)  
	float                                              LeftHandToIdleBlendAlpha;                                   // 0x0038   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x003C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.ObjectiveItem
/// Size: 0x0010 (0x000000 - 0x000010)
struct FObjectiveItem
{ 
	UClass*                                            ItemClass;                                                  // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0008   (0x0008)  MISSED
};

/// Struct /Script/ConZ.TeamDeathmatchParameters
/// Size: 0x0014 (0x000000 - 0x000014)
struct FTeamDeathmatchParameters
{ 
	int32_t                                            RoundScoreLimit;                                            // 0x0000   (0x0004)  
	float                                              AreaRestrictionInterval;                                    // 0x0004   (0x0004)  
	float                                              AreaRestrictionDuration;                                    // 0x0008   (0x0004)  
	float                                              AreaRestrictionStep;                                        // 0x000C   (0x0004)  
	float                                              BarrierHeatUpDuration;                                      // 0x0010   (0x0004)  
};

/// Struct /Script/ConZ.TeleportRepData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FTeleportRepData
{ 
	char                                               RequestID;                                                  // 0x0000   (0x0001)  
	bool                                               IsInProgress;                                               // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0002   (0x0002)  MISSED
	TWeakObjectPtr<AActor*>                            Subject;                                                    // 0x0004   (0x0008)  
	FVector                                            TargetLocation;                                             // 0x000C   (0x000C)  
	FRotator                                           TargetRotation;                                             // 0x0018   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0024   (0x0004)  MISSED
	FTeleportUserDataReplicator                        UserDataReplicator;                                         // 0x0028   (0x0008)  
};

/// Struct /Script/ConZ.TeleportUserDataReplicator
/// Size: 0x0008 (0x000000 - 0x000008)
struct FTeleportUserDataReplicator
{ 
	UTeleportUserData*                                 UserData;                                                   // 0x0000   (0x0008)  
};

/// Struct /Script/ConZ.TextBoxWithLabelStyle
/// Size: 0x0158 (0x000000 - 0x000158)
struct FTextBoxWithLabelStyle
{ 
	FSlateBrush                                        FocusBackgroundImage;                                       // 0x0000   (0x0088)  
	FTextBoxTextStyle                                  LabelText;                                                  // 0x0088   (0x0068)  
	FTextBoxTextStyle                                  InputBoxText;                                               // 0x00F0   (0x0068)  
};

/// Struct /Script/ConZ.TextBoxTextStyle
/// Size: 0x0068 (0x000000 - 0x000068)
struct FTextBoxTextStyle
{ 
	FSlateFontInfo                                     Font;                                                       // 0x0000   (0x0058)  
	FLinearColor                                       ColorAndOpacity;                                            // 0x0058   (0x0010)  
};

/// Struct /Script/ConZ.ThrowingAnimationSet
/// Size: 0x0020 (0x000000 - 0x000020)
struct FThrowingAnimationSet
{ 
	UAnimMontage*                                      PlayerLongThrowMontage;                                     // 0x0000   (0x0008)  
	UAnimMontage*                                      PlayerLongThrowLoopMontage;                                 // 0x0008   (0x0008)  
	UAnimMontage*                                      PlayerShortThrowMontage;                                    // 0x0010   (0x0008)  
	UAnimMontage*                                      PlayerThrowbackMontage;                                     // 0x0018   (0x0008)  
};

/// Struct /Script/ConZ.TireSurfaceAudioEntry
/// Size: 0x0018 (0x000000 - 0x000018)
struct FTireSurfaceAudioEntry
{ 
	UAkAudioEvent*                                     SoundGroup;                                                 // 0x0000   (0x0008)  
	TArray<TEnumAsByte>                                RelatedPhysicalSurfaces;                                    // 0x0008   (0x0010)  
};

/// Struct /Script/ConZ.TournamentStats
/// Size: 0x0030 (0x000000 - 0x000030)
struct FTournamentStats
{ 
	FDbIntegerId                                       UserProfileId;                                              // 0x0000   (0x0008)  
	FString                                            PlayerName;                                                 // 0x0008   (0x0010)  
	bool                                               online;                                                     // 0x0018   (0x0001)  
	bool                                               Alive;                                                      // 0x0019   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x001A   (0x0002)  MISSED
	int32_t                                            FamePoints;                                                 // 0x001C   (0x0004)  
	int32_t                                            Kills;                                                      // 0x0020   (0x0004)  
	int32_t                                            Deaths;                                                     // 0x0024   (0x0004)  
	FDateTime                                          LastDeathTime;                                              // 0x0028   (0x0008)  
};

/// Struct /Script/ConZ.TournamentParameters
/// Size: 0x0010 (0x000000 - 0x000010)
struct FTournamentParameters
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/ConZ.TradeOutpostManagerDescription
/// Size: 0x00B8 (0x000000 - 0x0000B8)
struct FTradeOutpostManagerDescription
{ 
	unsigned char                                      UnknownData00_1[0xB8];                                      // 0x0000   (0x00B8)  MISSED
};

/// Struct /Script/ConZ.SpawnedDepotsHelperStruct
/// Size: 0x0058 (0x000000 - 0x000058)
struct FSpawnedDepotsHelperStruct
{ 
	unsigned char                                      UnknownData00_1[0x58];                                      // 0x0000   (0x0058)  MISSED
};

/// Struct /Script/ConZ.TraderDropdownMenuEntry
/// Size: 0x0050 (0x000000 - 0x000050)
struct FTraderDropdownMenuEntry
{ 
	FText                                              Title;                                                      // 0x0000   (0x0018)  
	int32_t                                            IndentationLevel;                                           // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x001C   (0x0004)  MISSED
	FGameplayTagContainer                              TradeCategories;                                            // 0x0020   (0x0020)  
	UUserWidget*                                       RelatedCategoryButton;                                      // 0x0040   (0x0008)  
	UPanelWidget*                                      PanelToOpenOnClick;                                         // 0x0048   (0x0008)  
};

/// Struct /Script/ConZ.TraderLocationMarker
/// Size: 0x0040 (0x000000 - 0x000040)
struct FTraderLocationMarker
{ 
	ETraderLocationMarkerType                          MarkerType;                                                 // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0xC];                                       // 0x0004   (0x000C)  MISSED
	FTransform                                         Transform;                                                  // 0x0010   (0x0030)  
};

/// Struct /Script/ConZ.TraderMarker
/// Size: 0x0060 (0x000070 - 0x0000D0)
struct FTraderMarker : FSedentaryNPCMarker
{ 
	UTraderPersonalityDataAsset*                       TraderPersonality;                                          // 0x0068   (0x0008)  
	FTransform                                         PurchasedTradeablesSpawnTransform;                          // 0x0070   (0x0030)  
	FTransform                                         DepotSpawnTransform;                                        // 0x00A0   (0x0030)  
};

/// Struct /Script/ConZ.TraderMarkerTradeableOverrideStruct
/// Size: 0x0048 (0x000000 - 0x000048)
struct FTraderMarkerTradeableOverrideStruct
{ 
	TWeakObjectPtr<UClass*>                            TradeableClass;                                             // 0x0000   (0x0028)  
	int32_t                                            BasePlayerPurchasePrice;                                    // 0x0028   (0x0004)  
	ECurrencyType                                      PurchaseCurrencyType;                                       // 0x002C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x002D   (0x0003)  MISSED
	int32_t                                            PurchasePriceAlternateCurrencyPrice;                        // 0x0030   (0x0004)  
	int32_t                                            BasePlayerSellPrice;                                        // 0x0034   (0x0004)  
	float                                              DeltaPrice;                                                 // 0x0038   (0x0004)  
	bool                                               IsOverridingPurchaseAbility;                                // 0x003C   (0x0001)  
	bool                                               CanBePurchasedByPlayer;                                     // 0x003D   (0x0001)  
	bool                                               IsLocallyImmuneToUserOverrides;                             // 0x003E   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x003F   (0x0001)  MISSED
	int32_t                                            RequiredFamePoints;                                         // 0x0040   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Struct /Script/ConZ.TradeableClassAndQuantity
/// Size: 0x0030 (0x000000 - 0x000030)
struct FTradeableClassAndQuantity
{ 
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x0000   (0x0030)  MISSED
};

/// Struct /Script/ConZ.PendingTraderPersonalityDataHelperStruct
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPendingTraderPersonalityDataHelperStruct
{ 
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0000   (0x0010)  MISSED
	UTraderPersonalityDataAsset*                       Personality;                                                // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.EconomyManagerRequestData
/// Size: 0x00B0 (0x000000 - 0x0000B0)
struct FEconomyManagerRequestData
{ 
	unsigned char                                      UnknownData00_1[0xB0];                                      // 0x0000   (0x00B0)  MISSED
};

/// Struct /Script/ConZ.TradeablesResponseData
/// Size: 0x0050 (0x000000 - 0x000050)
struct FTradeablesResponseData
{ 
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0000   (0x0050)  MISSED
};

/// Struct /Script/ConZ.ConZTradeableDescRow
/// Size: 0x0160 (0x000008 - 0x000168)
struct FConZTradeableDescRow : FTableRowBase
{ 
	TWeakObjectPtr<UClass*>                            TradeableClass;                                             // 0x0008   (0x0028)  
	FPrimaryAssetId                                    PrimaryAssetId;                                             // 0x0030   (0x0010)  
	bool                                               CanBePurchasedByPlayer;                                     // 0x0040   (0x0001)  
	ETradeCategory                                     TradeCategory;                                              // 0x0041   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0042   (0x0006)  MISSED
	TSet<ETraderType>                                  TraderTypes;                                                // 0x0048   (0x0050)  
	float                                              BasePurchasePriceModifier;                                  // 0x0098   (0x0004)  
	float                                              BaseSalePriceReductionModifier;                             // 0x009C   (0x0004)  
	ECurrencyType                                      PurchaseCurrencyType;                                       // 0x00A0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x00A1   (0x0003)  MISSED
	int32_t                                            AlternateCurrencyPurchasePrice;                             // 0x00A4   (0x0004)  
	ETradeableSpawnType                                SpawnType;                                                  // 0x00A8   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x00A9   (0x0007)  MISSED
	FText                                              TradingEntryCaption;                                        // 0x00B0   (0x0018)  
	TWeakObjectPtr<UTexture2D*>                        TradingEntryIconTexture;                                    // 0x00C8   (0x0028)  
	int32_t                                            MaxAmountPurchasedAtOnce;                                   // 0x00F0   (0x0004)  
	bool                                               IsStockAmountUnlimited;                                     // 0x00F4   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x00F5   (0x0003)  MISSED
	FGameplayTag                                       TradeableFamePointPenaltyGroup;                             // 0x00F8   (0x0008)  
	int32_t                                            RequiredFamePoints;                                         // 0x0100   (0x0004)  
	FGameplayTag                                       TradeableRotationRarity;                                    // 0x0104   (0x0008)  
	bool                                               OnlyAvailableAfterPlayerSale;                               // 0x010C   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x010D   (0x0003)  MISSED
	int32_t                                            CustomStockAmountMin;                                       // 0x0110   (0x0004)  
	int32_t                                            CustomStockAmountMax;                                       // 0x0114   (0x0004)  
	UClass*                                            TradeableDiscountCondition;                                 // 0x0118   (0x0008)  
	FGameplayTagContainer                              TraderSearchTypes;                                          // 0x0120   (0x0020)  
	FGameplayTagContainer                              TraderSearchRelated;                                        // 0x0140   (0x0020)  
	bool                                               IsImmuneToUserOverrides;                                    // 0x0160   (0x0001)  
	EDeluxeVersion                                     RequiredDLC;                                                // 0x0161   (0x0001)  
	unsigned char                                      UnknownData05_6[0x6];                                       // 0x0162   (0x0006)  MISSED
};

/// Struct /Script/ConZ.TradeOutpostProsperityLevelInfo
/// Size: 0x0028 (0x000000 - 0x000028)
struct FTradeOutpostProsperityLevelInfo
{ 
	FString                                            ProsperityLevelName;                                        // 0x0000   (0x0010)  
	float                                              ProsperityLevelThreshold;                                   // 0x0010   (0x0004)  
	float                                              FundsChangeRatePerHour;                                     // 0x0014   (0x0004)  
	int32_t                                            ProsperityLevelThresholdGold;                               // 0x0018   (0x0004)  
	float                                              GBCRefreshRatePerHour;                                      // 0x001C   (0x0004)  
	float                                              GSCRefreshRatePerHour;                                      // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/ConZ.TradeableClassDataOverrideReplicationHelper
/// Size: 0x0070 (0x000000 - 0x000070)
struct FTradeableClassDataOverrideReplicationHelper
{ 
	unsigned char                                      UnknownData00_1[0x70];                                      // 0x0000   (0x0070)  MISSED
};

/// Struct /Script/ConZ.PerTraderOverrideDataHelper
/// Size: 0x0070 (0x000000 - 0x000070)
struct FPerTraderOverrideDataHelper
{ 
	unsigned char                                      UnknownData00_1[0x70];                                      // 0x0000   (0x0070)  MISSED
};

/// Struct /Script/ConZ.TradeableOverrideData
/// Size: 0x001C (0x000000 - 0x00001C)
struct FTradeableOverrideData
{ 
	unsigned char                                      UnknownData00_1[0x1C];                                      // 0x0000   (0x001C)  MISSED
};

/// Struct /Script/ConZ.LegalTender
/// Size: 0x0008 (0x000000 - 0x000008)
struct FLegalTender
{ 
	int32_t                                            Amount;                                                     // 0x0000   (0x0004)  
	ECurrencyType                                      Currency;                                                   // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0005   (0x0003)  MISSED
};

/// Struct /Script/ConZ.TrapTriggerParams
/// Size: 0x0010 (0x000000 - 0x000010)
struct FTrapTriggerParams
{ 
	AActor*                                            TriggeredActor;                                             // 0x0000   (0x0008)  
	float                                              DeltaTime;                                                  // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.TabTextStyle
/// Size: 0x0098 (0x000000 - 0x000098)
struct FTabTextStyle
{ 
	FMargin                                            Padding;                                                    // 0x0000   (0x0010)  
	TEnumAsByte<EHorizontalAlignment>                  HorizontalAlignment;                                        // 0x0010   (0x0001)  
	TEnumAsByte<EVerticalAlignment>                    VerticalAlignment;                                          // 0x0011   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0012   (0x0006)  MISSED
	FSlateFontInfo                                     Font;                                                       // 0x0018   (0x0058)  
	FLinearColor                                       Color;                                                      // 0x0070   (0x0010)  
	FVector2D                                          ShadowOffset;                                               // 0x0080   (0x0008)  
	FLinearColor                                       ShadowColorAndOpacity;                                      // 0x0088   (0x0010)  
};

/// Struct /Script/ConZ.TabButtonStyle
/// Size: 0x0288 (0x000000 - 0x000288)
struct FTabButtonStyle
{ 
	FVector2D                                          Size;                                                       // 0x0000   (0x0008)  
	TEnumAsByte<EHorizontalAlignment>                  HorizontalAlignment;                                        // 0x0008   (0x0001)  
	TEnumAsByte<EVerticalAlignment>                    VerticalAlignment;                                          // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x000A   (0x0006)  MISSED
	FButtonStyle                                       ButtonStyle;                                                // 0x0010   (0x0278)  
};

/// Struct /Script/ConZ.UsableObjectiveItem
/// Size: 0x0010 (0x000000 - 0x000010)
struct FUsableObjectiveItem
{ 
	UClass*                                            ItemClass;                                                  // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0008   (0x0008)  MISSED
};

/// Struct /Script/ConZ.UserProfileAuthorityInfo
/// Size: 0x0040 (0x000000 - 0x000040)
struct FUserProfileAuthorityInfo
{ 
	FString                                            Name;                                                       // 0x0000   (0x0010)  
	FString                                            Ip;                                                         // 0x0010   (0x0010)  
	int32_t                                            ResponsePort;                                               // 0x0020   (0x0004)  
	int32_t                                            GameplayPort;                                               // 0x0024   (0x0004)  
	FDbIntegerId                                       UserProfileId;                                              // 0x0028   (0x0008)  
	FString                                            AuthToken;                                                  // 0x0030   (0x0010)  
};

/// Struct /Script/ConZ.UserServerHistoryItem
/// Size: 0x0028 (0x000000 - 0x000028)
struct FUserServerHistoryItem
{ 
	FString                                            Name;                                                       // 0x0000   (0x0010)  
	FString                                            Host;                                                       // 0x0010   (0x0010)  
	int32_t                                            Port;                                                       // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/ConZ.VehicleAttachmentAlternatorSetup
/// Size: 0x0008 (0x000000 - 0x000008)
struct FVehicleAttachmentAlternatorSetup
{ 
	UCurveFloat*                                       RpmChargeCurve;                                             // 0x0000   (0x0008)  
};

/// Struct /Script/ConZ.VehicleAttachmentBatterySimulationData
/// Size: 0x0004 (0x000000 - 0x000004)
struct FVehicleAttachmentBatterySimulationData
{ 
	float                                              CurrentCharge;                                              // 0x0000   (0x0004)  
};

/// Struct /Script/ConZ.VehicleAttachmentBatterySetup
/// Size: 0x0030 (0x000000 - 0x000030)
struct FVehicleAttachmentBatterySetup
{ 
	UClass*                                            BatteryResourceType;                                        // 0x0000   (0x0008)  
	float                                              Charge;                                                     // 0x0008   (0x0004)  
	float                                              ChargingBaseDuration;                                       // 0x000C   (0x0004)  
	float                                              ChargingDurationPerAmountCharged;                           // 0x0010   (0x0004)  
	float                                              ExperienceAwardedPerAmountCharged;                          // 0x0014   (0x0004)  
	UAnimMontage*                                      PrisonerChargingMontage;                                    // 0x0018   (0x0008)  
	UAkAudioEvent*                                     StartChargingAudioEvent;                                    // 0x0020   (0x0008)  
	UAkAudioEvent*                                     StopChargingAudioEvent;                                     // 0x0028   (0x0008)  
};

/// Struct /Script/ConZ.VehicleServiceItemSlot
/// Size: 0x0018 (0x000000 - 0x000018)
struct FVehicleServiceItemSlot
{ 
	FName                                              ItemLocationSocketName;                                     // 0x0000   (0x0008)  
	FName                                              AttachPointSocketName;                                      // 0x0008   (0x0008)  
	FGameplayTag                                       ServiceTag;                                                 // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.VehicleAttachmentDoorSetup
/// Size: 0x0060 (0x000000 - 0x000060)
struct FVehicleAttachmentDoorSetup
{ 
	FRotator                                           OpenRotator;                                                // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	FTransform                                         PrisonerTransformToInteract;                                // 0x0010   (0x0030)  
	UAnimMontage*                                      PrisonerUnmountedOpenMontage;                               // 0x0040   (0x0008)  
	UAnimMontage*                                      PrisonerUnmountedCloseMontage;                              // 0x0048   (0x0008)  
	UAnimMontage*                                      PrisonerMountedOpenMontage;                                 // 0x0050   (0x0008)  
	UAnimMontage*                                      PrisonerMountedCloseMontage;                                // 0x0058   (0x0008)  
};

/// Struct /Script/ConZ.VehicleAttachmentEngineBlockSimulationData
/// Size: 0x002C (0x000000 - 0x00002C)
struct FVehicleAttachmentEngineBlockSimulationData
{ 
	EEngineBlockState                                  State;                                                      // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0xB];                                       // 0x0001   (0x000B)  MISSED
	float                                              IgnitionDurationMultiplier;                                 // 0x000C   (0x0004)  
	float                                              IgnitionFailureChance;                                      // 0x0010   (0x0004)  
	bool                                               StarterMotorTurnedOn;                                       // 0x0014   (0x0001)  
	bool                                               ShouldApplyTorque;                                          // 0x0015   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x0016   (0x0002)  MISSED
	float                                              CurrentRpm;                                                 // 0x0018   (0x0004)  
	float                                              Load;                                                       // 0x001C   (0x0004)  
	float                                              CurrentFuelCapacity;                                        // 0x0020   (0x0004)  
	float                                              TargetTemperature;                                          // 0x0024   (0x0004)  
	float                                              CurrentTemperature;                                         // 0x0028   (0x0004)  
};

/// Struct /Script/ConZ.VehicleAttachmentEngineBlockSetup
/// Size: 0x0158 (0x000000 - 0x000158)
struct FVehicleAttachmentEngineBlockSetup
{ 
	UCurveFloat*                                       AccelerationCurve;                                          // 0x0000   (0x0008)  
	UCurveFloat*                                       TorqueCurve;                                                // 0x0008   (0x0008)  
	float                                              RpmMax;                                                     // 0x0010   (0x0004)  
	float                                              RpmLimiter;                                                 // 0x0014   (0x0004)  
	float                                              RpmIdle;                                                    // 0x0018   (0x0004)  
	float                                              RpmRise;                                                    // 0x001C   (0x0004)  
	float                                              RpmFall;                                                    // 0x0020   (0x0004)  
	float                                              RpmCrank;                                                   // 0x0024   (0x0004)  
	float                                              FuelCapacity;                                               // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x002C   (0x0004)  MISSED
	UClass*                                            FuelResourceType;                                           // 0x0030   (0x0008)  
	UCurveFloat*                                       FuelConsumptionToRpmCurve;                                  // 0x0038   (0x0008)  
	float                                              FuelFillingBaseDuration;                                    // 0x0040   (0x0004)  
	float                                              FuelDrainingBaseDuration;                                   // 0x0044   (0x0004)  
	float                                              FillingDurationPerFuelAmountFilled;                         // 0x0048   (0x0004)  
	float                                              DrainingDurationPerFuelAmountDrained;                       // 0x004C   (0x0004)  
	float                                              ExperienceAwardedPerFuelAmountFilled;                       // 0x0050   (0x0004)  
	float                                              ExperienceAwardedPerFuelAmountDrained;                      // 0x0054   (0x0004)  
	UAnimMontage*                                      PrisonerFillingFuelMontage;                                 // 0x0058   (0x0008)  
	UAnimMontage*                                      PrisonerDrainingFuelMontage;                                // 0x0060   (0x0008)  
	FGameplayTagContainer                              InSocketTypes;                                              // 0x0068   (0x0020)  
	FGameplayTagContainer                              OutSocketTypes;                                             // 0x0088   (0x0020)  
	UAkAudioEvent*                                     StartFillingFuelAudioEvent;                                 // 0x00A8   (0x0008)  
	UAkAudioEvent*                                     StopFillingFuelAudioEvent;                                  // 0x00B0   (0x0008)  
	UAkAudioEvent*                                     StartFillingFuelWithReplenishableResourceAudioEvent;        // 0x00B8   (0x0008)  
	UAkAudioEvent*                                     StopFillingFuelWithReplenishableResourceAudioEvent;         // 0x00C0   (0x0008)  
	UAkAudioEvent*                                     StartDrainingFuelAudioEvent;                                // 0x00C8   (0x0008)  
	UAkAudioEvent*                                     StopDrainingFuelAudioEvent;                                 // 0x00D0   (0x0008)  
	FVector                                            ReplenishableFillSourceOverlapBoxExtent;                    // 0x00D8   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x00E4   (0x0004)  MISSED
	UAkAudioEvent*                                     RunningAudioEventStart;                                     // 0x00E8   (0x0008)  
	UAkAudioEvent*                                     RunningAudioEventStop;                                      // 0x00F0   (0x0008)  
	float                                              RTPCRpmMaxMultiplier;                                       // 0x00F8   (0x0004)  
	float                                              RTPCRpmMinMultiplier;                                       // 0x00FC   (0x0004)  
	float                                              RTPCRpmMultiplier;                                          // 0x0100   (0x0004)  
	float                                              RTPCRpmMultiplierReverse;                                   // 0x0104   (0x0004)  
	float                                              WorkingTemperature;                                         // 0x0108   (0x0004)  
	float                                              MaxTemperature;                                             // 0x010C   (0x0004)  
	UCurveFloat*                                       CoolantRatioToTemperatureRiseCurve;                         // 0x0110   (0x0008)  
	float                                              IgnitionBatteryDrainPerSecond;                              // 0x0118   (0x0004)  
	float                                              IgnitionDuration;                                           // 0x011C   (0x0004)  
	UAkAudioEvent*                                     IgnitionAudioEventStart;                                    // 0x0120   (0x0008)  
	UAkAudioEvent*                                     IgnitionAudioEventStop;                                     // 0x0128   (0x0008)  
	UAkAudioEvent*                                     IgnitionSuccessAudioEvent;                                  // 0x0130   (0x0008)  
	float                                              StallingDuration;                                           // 0x0138   (0x0004)  
	float                                              StallingRecoveryChance;                                     // 0x013C   (0x0004)  
	UAkAudioEvent*                                     StallingAudioEventStart;                                    // 0x0140   (0x0008)  
	UAkAudioEvent*                                     StallingAudioEventStop;                                     // 0x0148   (0x0008)  
	UAkAudioEvent*                                     RemovedAudioEventStart;                                     // 0x0150   (0x0008)  
};

/// Struct /Script/ConZ.VehicleAttachmentGearboxSimulationData
/// Size: 0x0014 (0x000000 - 0x000014)
struct FVehicleAttachmentGearboxSimulationData
{ 
	unsigned char                                      UnknownData00_2[0x4];                                       // 0x0000   (0x0004)  MISSED
	int32_t                                            CurrentGearIndex;                                           // 0x0004   (0x0004)  
	unsigned char                                      UnknownData01_6[0xC];                                       // 0x0008   (0x000C)  MISSED
};

/// Struct /Script/ConZ.VehicleAttachmentGearboxSetup
/// Size: 0x0018 (0x000000 - 0x000018)
struct FVehicleAttachmentGearboxSetup
{ 
	TArray<FVehicleGearSetup>                          Gears;                                                      // 0x0000   (0x0010)  
	bool                                               IsAutomatic;                                                // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0011   (0x0003)  MISSED
	float                                              GearChangeDelay;                                            // 0x0014   (0x0004)  
};

/// Struct /Script/ConZ.VehicleGearSetup
/// Size: 0x0014 (0x000000 - 0x000014)
struct FVehicleGearSetup
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	float                                              GearUpRatio;                                                // 0x0008   (0x0004)  
	float                                              GearDownRatio;                                              // 0x000C   (0x0004)  
	float                                              GearRatio;                                                  // 0x0010   (0x0004)  
};

/// Struct /Script/ConZ.VehicleLightsData
/// Size: 0x0098 (0x000000 - 0x000098)
struct FVehicleLightsData
{ 
	FGameplayTagContainer                              ToggleTags;                                                 // 0x0000   (0x0020)  
	FGameplayTagContainer                              EnableTags;                                                 // 0x0020   (0x0020)  
	FGameplayTagContainer                              DisableTags;                                                // 0x0040   (0x0020)  
	float                                              ElectricityConsumption;                                     // 0x0060   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0064   (0x0004)  MISSED
	TArray<FVehicleLightReference>                     LightReferences;                                            // 0x0068   (0x0010)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x0078   (0x0010)  MISSED
	TArray<FVATMaterialParam>                          MaterialParameters;                                         // 0x0088   (0x0010)  
};

/// Struct /Script/ConZ.VATMaterialParam
/// Size: 0x0018 (0x000000 - 0x000018)
struct FVATMaterialParam
{ 
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0000   (0x0010)  MISSED
	UMaterialInstanceDynamic*                          DynamicMaterial;                                            // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.VehicleLightReference
/// Size: 0x0018 (0x000000 - 0x000018)
struct FVehicleLightReference
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	EVehicleLightSourceType                            LightType;                                                  // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	FName                                              MaterialSlotName;                                           // 0x000C   (0x0008)  
	float                                              MaterialSlotFloatValue;                                     // 0x0014   (0x0004)  
};

/// Struct /Script/ConZ.LightsAttachmentSimulationData
/// Size: 0x0001 (0x000000 - 0x000001)
struct FLightsAttachmentSimulationData
{ 
	char                                               TurnedOnMask;                                               // 0x0000   (0x0001)  
};

/// Struct /Script/ConZ.VehicleAttachmentWheelSetup
/// Size: 0x0044 (0x000000 - 0x000044)
struct FVehicleAttachmentWheelSetup
{ 
	float                                              Radius;                                                     // 0x0000   (0x0004)  
	float                                              SteeringAngle;                                              // 0x0004   (0x0004)  
	bool                                               ApplyTorque;                                                // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              BrakeStrengthMultiplier;                                    // 0x000C   (0x0004)  
	bool                                               ApplyHandbrake;                                             // 0x0010   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0011   (0x0003)  MISSED
	float                                              SuspensionLength;                                           // 0x0014   (0x0004)  
	float                                              SuspensionStrength;                                         // 0x0018   (0x0004)  
	float                                              SuspensionDamping;                                          // 0x001C   (0x0004)  
	float                                              SuspensionRestLength;                                       // 0x0020   (0x0004)  
	float                                              SuspensionAngle;                                            // 0x0024   (0x0004)  
	FName                                              SteeringBoneName;                                           // 0x0028   (0x0008)  
	FName                                              SuspensionBoneName;                                         // 0x0030   (0x0008)  
	float                                              MinWobbleAngleDeg;                                          // 0x0038   (0x0004)  
	float                                              MaxWobbleAngleDeg;                                          // 0x003C   (0x0004)  
	bool                                               ShouldSpawnParticles;                                       // 0x0040   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0041   (0x0003)  MISSED
};

/// Struct /Script/ConZ.VehicleAttachmentSave
/// Size: 0x0010 (0x000000 - 0x000010)
struct FVehicleAttachmentSave
{ 
	TArray<char>                                       Data;                                                       // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.VehicleAttachmentSlot
/// Size: 0x0048 (0x000000 - 0x000048)
struct FVehicleAttachmentSlot
{ 
	TArray<FPrimaryAssetId>                            PossibleAttachmentAssetIds;                                 // 0x0000   (0x0010)  
	FGameplayTagContainer                              StateTags;                                                  // 0x0010   (0x0020)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0030   (0x0008)  MISSED
	UMaterialInstanceDynamic*                          ServiceModeMaterial;                                        // 0x0038   (0x0008)  
	UMeshComponent*                                    _previewMesh;                                               // 0x0040   (0x0008)  
};

/// Struct /Script/ConZ.DamageAdjacentAttachment
/// Size: 0x0004 (0x000000 - 0x000004)
struct FDamageAdjacentAttachment
{ 
	float                                              DamagePropagationMultiplier;                                // 0x0000   (0x0004)  
};

/// Struct /Script/ConZ.VehicleAttachmentAdditionalSocket
/// Size: 0x0040 (0x000000 - 0x000040)
struct FVehicleAttachmentAdditionalSocket
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0008   (0x0008)  MISSED
	FTransform                                         Transform;                                                  // 0x0010   (0x0030)  
};

/// Struct /Script/ConZ.VehicleAttachmentMeshSetup
/// Size: 0x0080 (0x000000 - 0x000080)
struct FVehicleAttachmentMeshSetup
{ 
	bool                                               ShouldCreate;                                               // 0x0000   (0x0001)  
	bool                                               ShouldCreateOnServer;                                       // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0002   (0x0006)  MISSED
	FSoftObjectPath                                    Mesh;                                                       // 0x0008   (0x0018)  
	UClass*                                            AnimationBlueprintClass;                                    // 0x0020   (0x0008)  
	bool                                               RefPoseAttach;                                              // 0x0028   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0029   (0x0007)  MISSED
	FTransform                                         Offset;                                                     // 0x0030   (0x0030)  
	float                                              Mass;                                                       // 0x0060   (0x0004)  
	bool                                               ShouldWeld;                                                 // 0x0064   (0x0001)  
	bool                                               SimulatePhysics;                                            // 0x0065   (0x0001)  
	bool                                               EnableGravity;                                              // 0x0066   (0x0001)  
	bool                                               ApplyImpulseOnDamage;                                       // 0x0067   (0x0001)  
	bool                                               CastShadow;                                                 // 0x0068   (0x0001)  
	bool                                               Visibility;                                                 // 0x0069   (0x0001)  
	bool                                               ShouldNotifyRigidBodyCollision;                             // 0x006A   (0x0001)  
	bool                                               CanEverAffectNavigation;                                    // 0x006B   (0x0001)  
	TEnumAsByte<ECollisionEnabled>                     CollisionEnabled;                                           // 0x006C   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x006D   (0x0003)  MISSED
	FName                                              CollisionProfileName;                                       // 0x0070   (0x0008)  
	UPhysicalMaterial*                                 PhysicalMaterialOverride;                                   // 0x0078   (0x0008)  
};

/// Struct /Script/ConZ.VehicleAttachmentSlotId
/// Size: 0x0018 (0x000000 - 0x000018)
struct FVehicleAttachmentSlotId
{ 
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/ConZ.ClientEffectData
/// Size: 0x00A4 (0x000000 - 0x0000A4)
struct FClientEffectData
{ 
	unsigned char                                      UnknownData00_1[0xA4];                                      // 0x0000   (0x00A4)  MISSED
};

/// Struct /Script/ConZ.VehicleBaseTickFunction
/// Size: 0x0008 (0x000028 - 0x000030)
struct FVehicleBaseTickFunction : FTickFunction
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Struct /Script/ConZ.VehicleCorpseBurningParticles
/// Size: 0x0070 (0x000000 - 0x000070)
struct FVehicleCorpseBurningParticles
{ 
	UParticleSystem*                                   Particles;                                                  // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0008   (0x0008)  MISSED
	FTransform                                         ParticlesTransform;                                         // 0x0010   (0x0030)  
	FHeatSourceParameters                              DEPRECATED_HeatSourceParameters;                            // 0x0040   (0x0024)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0064   (0x0004)  MISSED
	FDbIntegerId                                       DEPRECATED_HeatSourceId;                                    // 0x0068   (0x0008)  
};

/// Struct /Script/ConZ.VehicleDamageHandlerParams
/// Size: 0x0010 (0x000000 - 0x000010)
struct FVehicleDamageHandlerParams
{ 
	TArray<FGameplayTag>                               DamageRegions;                                              // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.VehicleForcePushParams
/// Size: 0x0038 (0x000000 - 0x000038)
struct FVehicleForcePushParams
{ 
	FText                                              InteractionName;                                            // 0x0000   (0x0018)  
	float                                              ActionDuration;                                             // 0x0018   (0x0004)  
	bool                                               IsRadialImpulse;                                            // 0x001C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x001D   (0x0003)  MISSED
	FVector                                            Impulse;                                                    // 0x0020   (0x000C)  
	FVector                                            Location;                                                   // 0x002C   (0x000C)  
};

/// Struct /Script/ConZ.VehicleHandlingExperienceAwards
/// Size: 0x0008 (0x000000 - 0x000008)
struct FVehicleHandlingExperienceAwards
{ 
	float                                              PointsForStartingEngine;                                    // 0x0000   (0x0004)  
	float                                              PointsPerDrivenDistanceInKm;                                // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.VehicleHitZoneData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FVehicleHitZoneData
{ 
	UStaticMesh*                                       HitMesh;                                                    // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0008   (0x0008)  MISSED
	FName                                              SocketName;                                                 // 0x0010   (0x0008)  
	UMaterialInterface*                                HitZoneMaterial;                                            // 0x0018   (0x0008)  
	UMaterialInterface*                                DeactivatedHitZoneMaterial;                                 // 0x0020   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0028   (0x0004)  MISSED
	bool                                               IsHitMeshAttached;                                          // 0x002C   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x002D   (0x0003)  MISSED
};

/// Struct /Script/ConZ.AirplaneWingHitZoneData
/// Size: 0x0008 (0x000030 - 0x000038)
struct FAirplaneWingHitZoneData : FVehicleHitZoneData
{ 
	EAerodynamicSurfaceType                            Type;                                                       // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Struct /Script/ConZ.VehiclePartDescription
/// Size: 0x000C (0x000000 - 0x00000C)
struct FVehiclePartDescription
{ 
	FGameplayTag                                       PartType;                                                   // 0x0000   (0x0008)  
	float                                              health;                                                     // 0x0008   (0x0004)  
};

/// Struct /Script/ConZ.VehicleServiceRequest_InstallAttachment
/// Size: 0x0001 (0x000000 - 0x000001)
struct FVehicleServiceRequest_InstallAttachment
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/ConZ.VehicleServiceData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FVehicleServiceData
{ 
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0000   (0x0010)  MISSED
	UVehicleServiceStationSaveObject*                  ServiceStationSaveObject;                                   // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.VehicleWeaponAimingStanceData
/// Size: 0x0078 (0x000000 - 0x000078)
struct FVehicleWeaponAimingStanceData
{ 
	TArray<FVehicleWeaponAimingStanceTransitionMontages> StanceTransitionMontages;                                 // 0x0000   (0x0010)  
	TArray<FVehicleWeaponAimingStanceTransitionCurves> SupportedAnglesForTransition;                               // 0x0010   (0x0010)  
	FVehicleWeaponAimingFirstPersonData                FirstPerson;                                                // 0x0020   (0x0048)  
	FVehicleWeaponAimingThirdPersonData                ThirdPerson;                                                // 0x0068   (0x0010)  
};

/// Struct /Script/ConZ.VehicleWeaponAimingThirdPersonData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FVehicleWeaponAimingThirdPersonData
{ 
	TArray<FVehicleThirdPersonWeaponTypeData>          WeaponTypeData;                                             // 0x0000   (0x0010)  
};

/// Struct /Script/ConZ.VehicleThirdPersonWeaponTypeData
/// Size: 0x0038 (0x000000 - 0x000038)
struct FVehicleThirdPersonWeaponTypeData
{ 
	EWeaponType                                        WeaponType;                                                 // 0x0000   (0x0001)  
	bool                                               alwaysIgnorePreMountAimOffsets;                             // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0002   (0x0006)  MISSED
	FBasePoseAimOffsetPair                             IdlePoseAndAimOffset;                                       // 0x0008   (0x0030)  
};

/// Struct /Script/ConZ.BasePoseAimOffsetPair
/// Size: 0x0018 (0x000000 - 0x000018)
struct FBasePoseAimOffsetPair
{ 
	UAnimSequenceBase*                                 UpperBodyPose;                                              // 0x0000   (0x0008)  
	UAnimSequenceBase*                                 LowerBodyPose;                                              // 0x0008   (0x0008)  
	UBlendSpace*                                       AimOffset;                                                  // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.VehicleWeaponAimingFirstPersonData
/// Size: 0x0048 (0x000000 - 0x000048)
struct FVehicleWeaponAimingFirstPersonData
{ 
	FFirstPersonViewParameters                         ViewParameters;                                             // 0x0000   (0x0028)  
	FVector                                            LocationOffset;                                             // 0x0028   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	UCurveVector*                                      LocationOffsetByYaw;                                        // 0x0038   (0x0008)  
	UCurveVector*                                      LocationOffsetByPitch;                                      // 0x0040   (0x0008)  
};

/// Struct /Script/ConZ.VehicleWeaponAimingStanceTransitionCurves
/// Size: 0x0010 (0x000000 - 0x000010)
struct FVehicleWeaponAimingStanceTransitionCurves
{ 
	EVehicleWeaponAimingStance                         stance;                                                     // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	UCurveFloat*                                       SupportedYawAngles;                                         // 0x0008   (0x0008)  
};

/// Struct /Script/ConZ.VehicleWeaponAimingStanceTransitionMontages
/// Size: 0x0018 (0x000000 - 0x000018)
struct FVehicleWeaponAimingStanceTransitionMontages
{ 
	EVehicleWeaponAimingStance                         stance;                                                     // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	TArray<FWeaponTypeMontage>                         WeaponTypeMontages;                                         // 0x0008   (0x0010)  
};

/// Struct /Script/ConZ.WeaponTypeMontage
/// Size: 0x0018 (0x000000 - 0x000018)
struct FWeaponTypeMontage
{ 
	EWeaponType                                        WeaponType;                                                 // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	UAnimMontage*                                      Montage;                                                    // 0x0008   (0x0008)  
	UCurveFloat*                                       SupportedYawAngles;                                         // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.VehicleTireEffectProperties
/// Size: 0x0014 (0x000000 - 0x000014)
struct FVehicleTireEffectProperties
{ 
	FVector                                            TireLocalOffset;                                            // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x000C   (0x0008)  MISSED
};

/// Struct /Script/ConZ.VehicleMaterialParameterDescription
/// Size: 0x0010 (0x000000 - 0x000010)
struct FVehicleMaterialParameterDescription
{ 
	FName                                              ParameterName;                                              // 0x0000   (0x0008)  
	float                                              MinValue;                                                   // 0x0008   (0x0004)  
	float                                              MaxValue;                                                   // 0x000C   (0x0004)  
};

/// Struct /Script/ConZ.VehicleEngineStallingParameters
/// Size: 0x0058 (0x000000 - 0x000058)
struct FVehicleEngineStallingParameters
{ 
	float                                              MinDuration;                                                // 0x0000   (0x0004)  
	float                                              MaxDuration;                                                // 0x0004   (0x0004)  
	float                                              StopEngineChance;                                           // 0x0008   (0x0004)  
	bool                                               ShouldStallingStopOnThrottleOrBreakRelease;                 // 0x000C   (0x0001)  
	bool                                               ShouldEngineStopOnThrottleOrBreakRelease;                   // 0x000D   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x000E   (0x0002)  MISSED
	UCurveFloat*                                       ThrottleCurve;                                              // 0x0010   (0x0008)  
	float                                              ThrottleCurveFrequencyMultiplier;                           // 0x0018   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x001C   (0x0004)  MISSED
	UCurveFloat*                                       BrakeCurve;                                                 // 0x0020   (0x0008)  
	float                                              BrakeCurveFrequencyMultiplier;                              // 0x0028   (0x0004)  
	float                                              ForceMagnitudeScale;                                        // 0x002C   (0x0004)  
	UCurveFloat*                                       ForceMagnitudeScaleCurve;                                   // 0x0030   (0x0008)  
	float                                              ForceMagnitudeScaleCurveFrequencyMultiplier;                // 0x0038   (0x0004)  
	float                                              ForceDirectionRandomizationAngle;                           // 0x003C   (0x0004)  
	UAkAudioEvent*                                     AudioEvent;                                                 // 0x0040   (0x0008)  
	TArray<float>                                      AudioEventTriggerTimeRatios;                                // 0x0048   (0x0010)  
};

/// Struct /Script/ConZ.VehicleImpactEffects
/// Size: 0x0038 (0x000000 - 0x000038)
struct FVehicleImpactEffects
{ 
	float                                              HitImpulseThreshold;                                        // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	UParticleSystem*                                   ParticleSystem;                                             // 0x0008   (0x0008)  
	FVector                                            ParticlesScale;                                             // 0x0010   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x001C   (0x0004)  MISSED
	UAkAudioEvent*                                     AudioEvent;                                                 // 0x0020   (0x0008)  
	UClass*                                            CameraShake;                                                // 0x0028   (0x0008)  
	float                                              CameraShakeScale;                                           // 0x0030   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Struct /Script/ConZ.VehicleExhaustEffects
/// Size: 0x0048 (0x000000 - 0x000048)
struct FVehicleExhaustEffects
{ 
	TArray<FVehicleExhaustParticles>                   Particles;                                                  // 0x0000   (0x0010)  
	float                                              ThrottleImpulseMinValue;                                    // 0x0010   (0x0004)  
	float                                              ThrottleImpulseMaxValue;                                    // 0x0014   (0x0004)  
	float                                              ThrottleImpulseSpeedTermMaxValue;                           // 0x0018   (0x0004)  
	float                                              ThrottleImpulseAttackDuration;                              // 0x001C   (0x0004)  
	float                                              ThrottleImpulseSustainDuration;                             // 0x0020   (0x0004)  
	float                                              ThrottleImpulseReleaseDuration;                             // 0x0024   (0x0004)  
	float                                              ParticlesDestructionDelay;                                  // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_6[0x1C];                                      // 0x002C   (0x001C)  MISSED
};

/// Struct /Script/ConZ.VehicleExhaustParticles
/// Size: 0x0018 (0x000000 - 0x000018)
struct FVehicleExhaustParticles
{ 
	FName                                              AttachSocketName;                                           // 0x0000   (0x0008)  
	UParticleSystem*                                   ParticleSystem;                                             // 0x0008   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0010   (0x0008)  MISSED
};

/// Struct /Script/ConZ.VehicleExhaustEffectsParameters
/// Size: 0x0070 (0x000000 - 0x000070)
struct FVehicleExhaustEffectsParameters
{ 
	FTransform                                         Transform;                                                  // 0x0000   (0x0030)  
	UParticleSystem*                                   EngineStartedParticleSystem;                                // 0x0030   (0x0008)  
	UParticleSystem*                                   EngineIdleParticleSystem;                                   // 0x0038   (0x0008)  
	UParticleSystem*                                   ThrottlePressedParticleSystem;                              // 0x0040   (0x0008)  
	UAkAudioEvent*                                     ThrottlePressedAudioEvent;                                  // 0x0048   (0x0008)  
	float                                              MinDurationBetweenThrottlePressedEffects;                   // 0x0050   (0x0004)  
	float                                              DeactivationDelay;                                          // 0x0054   (0x0004)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0058   (0x0018)  MISSED
};

/// Struct /Script/ConZ.VehicleDamagedEffectsParameters
/// Size: 0x0060 (0x000000 - 0x000060)
struct FVehicleDamagedEffectsParameters
{ 
	FFloatRange                                        HealthRatioRange;                                           // 0x0000   (0x0010)  
	FTransform                                         Transform;                                                  // 0x0010   (0x0030)  
	UParticleSystem*                                   ParticleSystem;                                             // 0x0040   (0x0008)  
	UAkAudioEvent*                                     StartAudioEvent;                                            // 0x0048   (0x0008)  
	UAkAudioEvent*                                     StopAudioEvent;                                             // 0x0050   (0x0008)  
	float                                              DeactivationDelay;                                          // 0x0058   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x005C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.VehicleSpawnerMarker
/// Size: 0x0040 (0x000000 - 0x000040)
struct FVehicleSpawnerMarker
{ 
	FTransform                                         Transform;                                                  // 0x0000   (0x0030)  
	UVehicleGroupSpawningPreset*                       VehicleGroupSpawningPreset;                                 // 0x0030   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0038   (0x0008)  MISSED
};

/// Struct /Script/ConZ.VehicleManualSpawnPresetArray
/// Size: 0x0020 (0x000000 - 0x000020)
struct FVehicleManualSpawnPresetArray
{ 
	UVehiclePreset*                                    PresetPerSpawnType;                                         // 0x0000   (0x0020)  
};

/// Struct /Script/ConZ.VehicleSpawnerInfo
/// Size: 0x0080 (0x000000 - 0x000080)
struct FVehicleSpawnerInfo
{ 
	FEntityId                                          VehicleEntityId;                                            // 0x0000   (0x0008)  
	FPrimaryAssetId                                    VehicleAssetId;                                             // 0x0008   (0x0010)  
	FEntityId                                          ContainerId;                                                // 0x0018   (0x0008)  
	TWeakObjectPtr<AVehicleBase*>                      VehicleBase;                                                // 0x0020   (0x0008)  
	FString                                            VehicleAlias;                                               // 0x0028   (0x0010)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0038   (0x0008)  MISSED
	FTransform                                         VehicleTransform;                                           // 0x0040   (0x0030)  
	int64_t                                            VehicleLastAccessTime;                                      // 0x0070   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0078   (0x0008)  MISSED
};

/// Struct /Script/ConZ.VehicleSpawnPointData
/// Size: 0x0040 (0x000000 - 0x000040)
struct FVehicleSpawnPointData
{ 
	FTransform                                         SpawnTransform;                                             // 0x0000   (0x0030)  
	TArray<UVehiclePreset*>                            VehicleSpawnPresets;                                        // 0x0030   (0x0010)  
};

/// Struct /Script/ConZ.Version
/// Size: 0x0010 (0x000000 - 0x000010)
struct FVersion
{ 
	int32_t                                            Major;                                                      // 0x0000   (0x0004)  
	int32_t                                            Minor;                                                      // 0x0004   (0x0004)  
	int32_t                                            Build;                                                      // 0x0008   (0x0004)  
	int32_t                                            Revision;                                                   // 0x000C   (0x0004)  
};

/// Struct /Script/ConZ.ClassesArray
/// Size: 0x0020 (0x000000 - 0x000020)
struct FClassesArray
{ 
	TArray<UClass*>                                    Classes;                                                    // 0x0000   (0x0010)  
	TArray<UClass*>                                    ProhibitedClasses;                                          // 0x0010   (0x0010)  
};

/// Struct /Script/ConZ.VoltageMatchingElementRow
/// Size: 0x0018 (0x000000 - 0x000018)
struct FVoltageMatchingElementRow
{ 
	TArray<FName>                                      ElementSockets;                                             // 0x0000   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0010   (0x0008)  MISSED
};

/// Struct /Script/ConZ.VoltageMatchingSwitchElementsPairing
/// Size: 0x0018 (0x000000 - 0x000018)
struct FVoltageMatchingSwitchElementsPairing
{ 
	FGameplayTag                                       SwitchTag;                                                  // 0x0000   (0x0008)  
	TArray<FName>                                      ElementSockets;                                             // 0x0008   (0x0010)  
};

/// Struct /Script/ConZ.VoltageMatchingElementIndicator
/// Size: 0x0010 (0x000000 - 0x000010)
struct FVoltageMatchingElementIndicator
{ 
	FName                                              SocketId;                                                   // 0x0000   (0x0008)  
	FName                                              IndicatorWidgetName;                                        // 0x0008   (0x0008)  
};

/// Struct /Script/ConZ.MessageStruct
/// Size: 0x0030 (0x000000 - 0x000030)
struct FMessageStruct
{ 
	FText                                              Text;                                                       // 0x0000   (0x0018)  
	float                                              Duration;                                                   // 0x0018   (0x0004)  
	FLinearColor                                       Color;                                                      // 0x001C   (0x0010)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.WashItemData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FWashItemData
{ 
	UClass*                                            CleanItem;                                                  // 0x0000   (0x0008)  
	int32_t                                            WashItemUsage;                                              // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.MeshMaterialPair
/// Size: 0x0010 (0x000000 - 0x000010)
struct FMeshMaterialPair
{ 
	USkeletalMesh*                                     SkeletalMesh;                                               // 0x0000   (0x0008)  
	UMaterialInstance*                                 EquippedMaterialOverride;                                   // 0x0008   (0x0008)  
};

/// Struct /Script/ConZ.WeaponBowArmsShake
/// Size: 0x0030 (0x000000 - 0x000030)
struct FWeaponBowArmsShake
{ 
	UAnimSequenceBase*                                 ThirdPerson;                                                // 0x0000   (0x0018)  
	UAnimSequenceBase*                                 FirstPerson;                                                // 0x0018   (0x0018)  
};

/// Struct /Script/ConZ.WeaponBowAimOffsets
/// Size: 0x0018 (0x000000 - 0x000018)
struct FWeaponBowAimOffsets
{ 
	UBlendSpace*                                       DrawPercentage;                                             // 0x0000   (0x0018)  
};

/// Struct /Script/ConZ.WeaponBowStateDataReplicated
/// Size: 0x000C (0x000000 - 0x00000C)
struct FWeaponBowStateDataReplicated
{ 
	EBowDrawPercentage                                 BowDrawPercentage;                                          // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              HoldTimeInFullDraw;                                         // 0x0004   (0x0004)  
	EWeaponBowState                                    WeaponBowState;                                             // 0x0008   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0009   (0x0003)  MISSED
};

/// Struct /Script/ConZ.WeaponBowDrawData
/// Size: 0x000C (0x000000 - 0x00000C)
struct FWeaponBowDrawData
{ 
	unsigned char                                      UnknownData00_1[0xC];                                       // 0x0000   (0x000C)  MISSED
};

/// Struct /Script/ConZ.ClearMalfunctionData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FClearMalfunctionData
{ 
	bool                                               ShouldClearMalfunction;                                     // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	FBodyWeaponAnimation                               Animations;                                                 // 0x0008   (0x0010)  
};

/// Struct /Script/ConZ.WeaponMalfunctionProbabilityCurves
/// Size: 0x03B8 (0x000000 - 0x0003B8)
struct FWeaponMalfunctionProbabilityCurves
{ 
	FRuntimeFloatCurve                                 ProbabilityCurve;                                           // 0x0000   (0x03B8)  
};

/// Struct /Script/ConZ.WeaponPaintjobPatternParams
/// Size: 0x0030 (0x000000 - 0x000030)
struct FWeaponPaintjobPatternParams
{ 
	FText                                              Name;                                                       // 0x0000   (0x0018)  
	UTexture2D*                                        Texture;                                                    // 0x0018   (0x0008)  
	int32_t                                            ColorCount;                                                 // 0x0020   (0x0004)  
	float                                              ScaleMultiplier;                                            // 0x0024   (0x0004)  
	EDeluxeVersion                                     DeluxeVersionRequired;                                      // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0029   (0x0007)  MISSED
};

/// Struct /Script/ConZ.WeaponTypeAimOffset
/// Size: 0x0018 (0x000000 - 0x000018)
struct FWeaponTypeAimOffset
{ 
	EWeaponType                                        WeaponType;                                                 // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	UBlendSpace*                                       AimOffset;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/ConZ.WeaponCheckAmmoData
/// Size: 0x0008 (0x000000 - 0x000008)
struct FWeaponCheckAmmoData
{ 
	UClass*                                            ActionSequenceClass;                                        // 0x0000   (0x0008)  
};

/// Struct /Script/ConZ.WeaponUnloadAmmoData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FWeaponUnloadAmmoData
{ 
	UClass*                                            ActionSequenceClass;                                        // 0x0000   (0x0008)  
	int32_t                                            AmmoCount;                                                  // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.MultistageRandomRoll
/// Size: 0x0068 (0x000000 - 0x000068)
struct FMultistageRandomRoll
{ 
	FFloatInterval                                     _valueRange;                                                // 0x0000   (0x0008)  
	bool                                               _shouldWrapValue;                                           // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	TArray<FRandomRollStage>                           _baseValueRollStages;                                       // 0x0010   (0x0010)  
	bool                                               _isVarianceEnabled;                                         // 0x0020   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0021   (0x0003)  MISSED
	FFloatInterval                                     _varianceRollInterval;                                      // 0x0024   (0x0008)  
	FFloatInterval                                     _varianceTargetInterval;                                    // 0x002C   (0x0008)  
	float                                              _varianceTargetInterpSpeed;                                 // 0x0034   (0x0004)  
	unsigned char                                      UnknownData02_5[0x2C];                                      // 0x0038   (0x002C)  MISSED
	int32_t                                            _baseValueStageToSetWhenForcingBaseValue;                   // 0x0064   (0x0004)  
};

/// Struct /Script/ConZ.RandomRollStage
/// Size: 0x0098 (0x000000 - 0x000098)
struct FRandomRollStage
{ 
	FFloatInterval                                     BaseValueRollInterval;                                      // 0x0000   (0x0008)  
	FRuntimeFloatCurve                                 BaseValueTargetCurve;                                       // 0x0008   (0x0088)  
	float                                              BaseValueTargetInterpSpeed;                                 // 0x0090   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0094   (0x0004)  MISSED
};

/// Struct /Script/ConZ.WeatherReplicatedStateSnapshot
/// Size: 0x0034 (0x000000 - 0x000034)
struct FWeatherReplicatedStateSnapshot
{ 
	unsigned char                                      UnknownData00_1[0x34];                                      // 0x0000   (0x0034)  MISSED
};

/// Struct /Script/ConZ.WheelBarrowParametersPerMovementPace
/// Size: 0x0020 (0x000000 - 0x000020)
struct FWheelBarrowParametersPerMovementPace
{ 
	bool                                               IsValid;                                                    // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              BaseMaxForwardSpeed;                                        // 0x0004   (0x0004)  
	float                                              BaseMaxForwardSpeedLimping;                                 // 0x0008   (0x0004)  
	bool                                               CanReverse;                                                 // 0x000C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x000D   (0x0003)  MISSED
	float                                              BaseMaxReverseSpeed;                                        // 0x0010   (0x0004)  
	float                                              BaseMaxReverseSpeedLimping;                                 // 0x0014   (0x0004)  
	float                                              BaseMaxLoad;                                                // 0x0018   (0x0004)  
	float                                              MinPrisonerStrength;                                        // 0x001C   (0x0004)  
};

/// Struct /Script/ConZ.WindowMarker
/// Size: 0x0050 (0x000000 - 0x000050)
struct FWindowMarker
{ 
	bool                                               IsVaultable;                                                // 0x0000   (0x0001)  
	bool                                               IsFortifiable;                                              // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0002   (0x0006)  MISSED
	UWindowFortificationsType*                         WindowFortificationsType;                                   // 0x0008   (0x0008)  
	TArray<int32_t>                                    AdditionalMarkerIndicesToModify;                            // 0x0010   (0x0010)  
	bool                                               DidIFailToCorrectlyPlaceWindowMarkers;                      // 0x0020   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0021   (0x0003)  MISSED
	FVector                                            Vertex1;                                                    // 0x0024   (0x000C)  
	FVector                                            Vertex2;                                                    // 0x0030   (0x000C)  
	float                                              FortificationOffset;                                        // 0x003C   (0x0004)  
	float                                              CollisionBoxVertBias;                                       // 0x0040   (0x0004)  
	float                                              CollisionBoxHorzBias;                                       // 0x0044   (0x0004)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0048   (0x0008)  MISSED
};

/// Struct /Script/ConZ.WorldEventDrawData
/// Size: 0x0050 (0x000000 - 0x000050)
struct FWorldEventDrawData
{ 
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0000   (0x0050)  MISSED
};

/// Struct /Script/ConZ.ZombieCombatStanceVariation2
/// Size: 0x0030 (0x000000 - 0x000030)
struct FZombieCombatStanceVariation2
{ 
	FZombieCombatStanceAnimations                      Animations;                                                 // 0x0000   (0x0018)  
	float                                              RunAcceleration;                                            // 0x0018   (0x0004)  
	float                                              RunDeceleration;                                            // 0x001C   (0x0004)  
	float                                              RunSpeed;                                                   // 0x0020   (0x0004)  
	float                                              RunSpeedInAnimation;                                        // 0x0024   (0x0004)  
	float                                              RunTurnRate;                                                // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.ZombieCombatStanceAnimations
/// Size: 0x0018 (0x000000 - 0x000018)
struct FZombieCombatStanceAnimations
{ 
	UAnimSequenceBase*                                 RunStartAnimation;                                          // 0x0000   (0x0008)  
	UAnimSequenceBase*                                 RunLoopAnimation;                                           // 0x0008   (0x0008)  
	UAnimSequenceBase*                                 RunStopAnimation;                                           // 0x0010   (0x0008)  
};

/// Struct /Script/ConZ.ZombieRelaxedStanceVariation2
/// Size: 0x0020 (0x000000 - 0x000020)
struct FZombieRelaxedStanceVariation2
{ 
	FZombieRelaxedStanceAnimations                     Animations;                                                 // 0x0000   (0x0008)  
	float                                              WalkAcceleration;                                           // 0x0008   (0x0004)  
	float                                              WalkDeceleration;                                           // 0x000C   (0x0004)  
	float                                              WalkSpeed;                                                  // 0x0010   (0x0004)  
	float                                              WalkSpeedInAnimation;                                       // 0x0014   (0x0004)  
	float                                              WalkTurnRate;                                               // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.ZombieRelaxedStanceAnimations
/// Size: 0x0008 (0x000000 - 0x000008)
struct FZombieRelaxedStanceAnimations
{ 
	UAnimSequenceBase*                                 WalkLoopAnimation;                                          // 0x0000   (0x0008)  
};

/// Struct /Script/ConZ.ZombieMeshVariation2
/// Size: 0x0010 (0x000000 - 0x000010)
struct FZombieMeshVariation2
{ 
	USkeletalMesh*                                     DressedMesh;                                                // 0x0000   (0x0008)  
	USkeletalMesh*                                     StrippedMesh;                                               // 0x0008   (0x0008)  
};

/// Struct /Script/ConZ.ZombieAttackDescription
/// Size: 0x0020 (0x000000 - 0x000020)
struct FZombieAttackDescription
{ 
	UAnimMontage*                                      Montage;                                                    // 0x0000   (0x0008)  
	FFloatInterval                                     PitchRange;                                                 // 0x0008   (0x0008)  
	float                                              MinDistance;                                                // 0x0010   (0x0004)  
	float                                              MaxDistance;                                                // 0x0014   (0x0004)  
	float                                              RegainControlMultiplier;                                    // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/ConZ.ZombieRagdollAutoRecovery
/// Size: 0x0008 (0x000000 - 0x000008)
struct FZombieRagdollAutoRecovery
{ 
	EZombieRagdollAutoRecoveryType                     Type;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              Timespan;                                                   // 0x0004   (0x0004)  
};

/// Struct /Script/ConZ.ZombieTurnMontageDescription
/// Size: 0x0028 (0x000000 - 0x000028)
struct FZombieTurnMontageDescription
{ 
	UAnimMontage*                                      MontageL90;                                                 // 0x0000   (0x0008)  
	UAnimMontage*                                      MontageL180;                                                // 0x0008   (0x0008)  
	UAnimMontage*                                      MontageR90;                                                 // 0x0010   (0x0008)  
	UAnimMontage*                                      MontageR180;                                                // 0x0018   (0x0008)  
	FName                                              TurnAngleCurveName;                                         // 0x0020   (0x0008)  
};

/// Struct /Script/ConZ.ZoneConfiguration
/// Size: 0x0018 (0x000000 - 0x000018)
struct FZoneConfiguration
{ 
	bool                                               IsOutpost;                                                  // 0x0000   (0x0001)  
	bool                                               IsItemPlacementAllowed;                                     // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0002   (0x0006)  MISSED
	TArray<EInteractionType>                           InteractionsToDisable;                                      // 0x0008   (0x0010)  
};

/// Enum /Script/ConZ.EPrisonerMontage
/// Size: 0x136
enum EPrisonerMontage : uint8_t
{
	EPrisonerMontage__None                                                           = 0,
	EPrisonerMontage__WeaponEquipRifle                                               = 1,
	EPrisonerMontage__WeaponUnequipRifle                                             = 2,
	EPrisonerMontage__WeaponEquipHandgun                                             = 3,
	EPrisonerMontage__WeaponUnequipHandgun                                           = 4,
	EPrisonerMontage__Urinate                                                        = 5,
	EPrisonerMontage__UrinateForced                                                  = 6,
	EPrisonerMontage__Defecate                                                       = 7,
	EPrisonerMontage__DefecateForced                                                 = 8,
	EPrisonerMontage__Vomit                                                          = 9,
	EPrisonerMontage__VomitForced                                                    = 10,
	EPrisonerMontage__SearchObject                                                   = 11,
	EPrisonerMontage__SearchPrisoner                                                 = 12,
	EPrisonerMontage__SearchZombie                                                   = 13,
	EPrisonerMontage__PatchWounds                                                    = 14,
	EPrisonerMontage__PatchWoundsEnd                                                 = 15,
	EPrisonerMontage__DrinkInteraction                                               = 16,
	EPrisonerMontage__WashEyes                                                       = 17,
	EPrisonerMontage__Eat                                                            = 18,
	EPrisonerMontage__EatCan                                                         = 19,
	EPrisonerMontage__Drink                                                          = 20,
	EPrisonerMontage__Throw                                                          = 21,
	EPrisonerMontage__LongThrow                                                      = 22,
	EPrisonerMontage__LongThrowLoop                                                  = 23,
	EPrisonerMontage__ShortThrow                                                     = 24,
	EPrisonerMontage__ThrowbackGrenade                                               = 25,
	EPrisonerMontage__SwapWeapons                                                    = 26,
	EPrisonerMontage__ChopTree                                                       = 27,
	EPrisonerMontage__ChopTreeEnd                                                    = 28,
	EPrisonerMontage__ChopLog                                                        = 29,
	EPrisonerMontage__ChopLogEnd                                                     = 30,
	EPrisonerMontage__BreakStone                                                     = 31,
	EPrisonerMontage__BreakStoneEnd                                                  = 32,
	EPrisonerMontage__SwapItemsNotWeaponToNotWeapon                                  = 33,
	EPrisonerMontage__SwapItemsWeaponToWeapon                                        = 34,
	EPrisonerMontage__SwapItemsNotWeaponToWeapon                                     = 35,
	EPrisonerMontage__SwapItemsWeaponToNotWeapon                                     = 36,
	EPrisonerMontage__SwapItemsThrowingItemToWeapon                                  = 37,
	EPrisonerMontage__SwapItemsWeaponToThrowingItem                                  = 38,
	EPrisonerMontage__Craft                                                          = 39,
	EPrisonerMontage__Uncraft                                                        = 40,
	EPrisonerMontage__CheckTime                                                      = 41,
	EPrisonerMontage__CheckTimeWhileItemInHands                                      = 42,
	EPrisonerMontage__CheckTimeWhileWeaponInHands                                    = 43,
	EPrisonerMontage__CheckTemperature                                               = 44,
	EPrisonerMontage__GestureShowFinger                                              = 45,
	EPrisonerMontage__GestureStandSurrender                                          = 46,
	EPrisonerMontage__GestureWaveHi                                                  = 47,
	EPrisonerMontage__GestureYouAreDead                                              = 48,
	EPrisonerMontage__GestureFY                                                      = 49,
	EPrisonerMontage__GesturePoint                                                   = 50,
	EPrisonerMontage__GestureHeart                                                   = 51,
	EPrisonerMontage__GestureBallpalm                                                = 52,
	EPrisonerMontage__GestureFacepalm                                                = 53,
	EPrisonerMontage__GestureFingerGun                                               = 54,
	EPrisonerMontage__GestureLaughing                                                = 55,
	EPrisonerMontage__GestureSmellWave                                               = 56,
	EPrisonerMontage__GestureSquat                                                   = 57,
	EPrisonerMontage__GestureCharge                                                  = 58,
	EPrisonerMontage__GestureFreeze                                                  = 59,
	EPrisonerMontage__GestureGetDown                                                 = 60,
	EPrisonerMontage__GestureGetUp                                                   = 61,
	EPrisonerMontage__GestureHalt                                                    = 62,
	EPrisonerMontage__GestureHurryUp                                                 = 63,
	EPrisonerMontage__GesturePointMe                                                 = 64,
	EPrisonerMontage__GesturePointYou                                                = 65,
	EPrisonerMontage__GestureRally                                                   = 66,
	EPrisonerMontage__GestureThumbsUp                                                = 67,
	EPrisonerMontage__GestureThumbsDown                                              = 68,
	EPrisonerMontage__GestureUnderstandNot                                           = 69,
	EPrisonerMontage__GestureUnderstandYes                                           = 70,
	EPrisonerMontage__CommitSuicide                                                  = 71,
	EPrisonerMontage__CommitSuicideRare                                              = 72,
	EPrisonerMontage__CommitSuicideCaptured                                          = 73,
	EPrisonerMontage__LockpickRegular                                                = 74,
	EPrisonerMontage__Whistle                                                        = 75,
	EPrisonerMontage__TuneBow                                                        = 76,
	EPrisonerMontage__RepairVehicle                                                  = 77,
	EPrisonerMontage__WashCloth                                                      = 78,
	EPrisonerMontage__Bury                                                           = 79,
	EPrisonerMontage__BuryRest                                                       = 80,
	EPrisonerMontage__ResumeBury                                                     = 81,
	EPrisonerMontage__SitOnGroundStart                                               = 82,
	EPrisonerMontage__SitOnGroundEnd                                                 = 83,
	EPrisonerMontage__LayOnGroundStart                                               = 84,
	EPrisonerMontage__LayOnGroundEnd                                                 = 85,
	EPrisonerMontage__IgniteFlare                                                    = 86,
	EPrisonerMontage__ArmTrap                                                        = 87,
	EPrisonerMontage__FishingEnter                                                   = 88,
	EPrisonerMontage__FishingLeave                                                   = 89,
	EPrisonerMontage__FishingCast                                                    = 90,
	EPrisonerMontage__FishingLongCastEnd                                             = 91,
	EPrisonerMontage__FishingShortCastEnd                                            = 92,
	EPrisonerMontage__FishingPullStart                                               = 93,
	EPrisonerMontage__FishingPullEnd                                                 = 94,
	EPrisonerMontage__FishingFishCaught                                              = 95,
	EPrisonerMontage__FishingKeepFish                                                = 96,
	EPrisonerMontage__FishingDiscardFish                                             = 97,
	EPrisonerMontage__FishingWireBreak                                               = 98,
	EPrisonerMontage__ForceUnlockStanding                                            = 99,
	EPrisonerMontage__ForceUnlockStandingEnd                                         = 100,
	EPrisonerMontage__ForceUnlockStandingStop                                        = 101,
	EPrisonerMontage__ManualUnlockStanding                                           = 102,
	EPrisonerMontage__ManualUnlockStandingEnd                                        = 103,
	EPrisonerMontage__ManualUnlockStandingStop                                       = 104,
	EPrisonerMontage__Spill                                                          = 105,
	EPrisonerMontage__BlowAirIntoFire                                                = 106,
	EPrisonerMontage__BlowAirIntoLowFire                                             = 107,
	EPrisonerMontage__StompOutFire                                                   = 108,
	EPrisonerMontage__RemoveWeed                                                     = 109,
	EPrisonerMontage__RemoveWeedWithHoe                                              = 110,
	EPrisonerMontage__ApplyPesticide                                                 = 111,
	EPrisonerMontage__AddFertilizer                                                  = 112,
	EPrisonerMontage__PlantSeed                                                      = 113,
	EPrisonerMontage__RemovePlant                                                    = 114,
	EPrisonerMontage__DestroyGarden                                                  = 115,
	EPrisonerMontage__BasicDance1                                                    = 116,
	EPrisonerMontage__BasicDance2                                                    = 117,
	EPrisonerMontage__BasicDance3                                                    = 118,
	EPrisonerMontage__BasicDance4                                                    = 119,
	EPrisonerMontage__BasicDance5                                                    = 120,
	EPrisonerMontage__AdvanceDance1                                                  = 121,
	EPrisonerMontage__AdvanceDance2                                                  = 122,
	EPrisonerMontage__AdvanceDance3                                                  = 123,
	EPrisonerMontage__AdvanceDance4                                                  = 124,
	EPrisonerMontage__AdvanceDance5                                                  = 125,
	EPrisonerMontage__AdvanceDance6                                                  = 126,
	EPrisonerMontage__AdvanceDance7                                                  = 127,
	EPrisonerMontage__InjectSelf                                                     = 128,
	EPrisonerMontage__InjectOther                                                    = 129,
	EPrisonerMontage__HalloweenGesture1                                              = 130,
	EPrisonerMontage__HalloweenGesture2                                              = 131,
	EPrisonerMontage__HalloweenGesture3                                              = 132,
	EPrisonerMontage__HalloweenGesture4                                              = 133,
	EPrisonerMontage__Count                                                          = 134,
	EPrisonerMontage__EPrisonerMontage_MAX                                           = 135
};

/// Enum /Script/ConZ.EPrisonerAnimationSet
/// Size: 0x24
enum EPrisonerAnimationSet : uint8_t
{
	EPrisonerAnimationSet__Base                                                      = 0,
	EPrisonerAnimationSet__Rifle                                                     = 1,
	EPrisonerAnimationSet__RifleRelaxed                                              = 2,
	EPrisonerAnimationSet__UnarmedCombat                                             = 3,
	EPrisonerAnimationSet__Handgun                                                   = 4,
	EPrisonerAnimationSet__BowRelaxed                                                = 5,
	EPrisonerAnimationSet__Bow                                                       = 6,
	EPrisonerAnimationSet__CarryingItem                                              = 7,
	EPrisonerAnimationSet__HandsBound                                                = 8,
	EPrisonerAnimationSet__BaseLimping                                               = 9,
	EPrisonerAnimationSet__RifleLimping                                              = 10,
	EPrisonerAnimationSet__RifleRelaxedLimping                                       = 11,
	EPrisonerAnimationSet__UnarmedCombatLimping                                      = 12,
	EPrisonerAnimationSet__HandgunLimping                                            = 13,
	EPrisonerAnimationSet__BowRelaxedLimping                                         = 14,
	EPrisonerAnimationSet__BowLimping                                                = 15,
	EPrisonerAnimationSet__CarryingItemLimping                                       = 16,
	EPrisonerAnimationSet__HandsBoundLimping                                         = 17,
	EPrisonerAnimationSet__ChainsawRelaxed                                           = 18,
	EPrisonerAnimationSet__ChainsawRelaxedLimping                                    = 19,
	EPrisonerAnimationSet__Chainsaw                                                  = 20,
	EPrisonerAnimationSet__ChainsawLimping                                           = 21,
	EPrisonerAnimationSet__Count                                                     = 22,
	EPrisonerAnimationSet__EPrisonerAnimationSet_MAX                                 = 23
};

/// Enum /Script/ConZ.EWidgetDisplayInfoType
/// Size: 0x04
enum EWidgetDisplayInfoType : uint8_t
{
	EWidgetDisplayInfoType__None                                                     = 0,
	EWidgetDisplayInfoType__FirstOverSecond                                          = 1,
	EWidgetDisplayInfoType__Single                                                   = 2,
	EWidgetDisplayInfoType__EWidgetDisplayInfoType_MAX                               = 3
};

/// Enum /Script/ConZ.EInteractionType
/// Size: 0x256
enum EInteractionType : uint8_t
{
	EInteractionType__None                                                           = 0,
	EInteractionType__Search                                                         = 1,
	EInteractionType__Examine                                                        = 2,
	EInteractionType__PickUp                                                         = 3,
	EInteractionType__PickUpAllExamined                                              = 4,
	EInteractionType__PickUpAllSelected                                              = 5,
	EInteractionType__Use                                                            = 6,
	EInteractionType__Operate                                                        = 7,
	EInteractionType__Drop                                                           = 8,
	EInteractionType__DropAllSelected                                                = 9,
	EInteractionType__Throw                                                          = 10,
	EInteractionType__Open                                                           = 11,
	EInteractionType__Close                                                          = 12,
	EInteractionType__Lock                                                           = 13,
	EInteractionType__SetAndConnectBCULock                                           = 14,
	EInteractionType__RemoveBCULockNormal                                            = 15,
	EInteractionType__RemoveBCULockWithEnemyBCU                                      = 16,
	EInteractionType__BCUConnectLock                                                 = 17,
	EInteractionType__BCUDisconnectLock                                              = 18,
	EInteractionType__Unlock                                                         = 19,
	EInteractionType__SetLockCombination                                             = 20,
	EInteractionType__Push                                                           = 21,
	EInteractionType__ForcePush                                                      = 22,
	EInteractionType__GodModeFill                                                    = 23,
	EInteractionType__Fill                                                           = 24,
	EInteractionType__AdjustHeight                                                   = 25,
	EInteractionType__ConfirmHeight                                                  = 26,
	EInteractionType__Tank                                                           = 27,
	EInteractionType__Craft                                                          = 28,
	EInteractionType__Uncraft                                                        = 29,
	EInteractionType__Create                                                         = 30,
	EInteractionType__FixTire                                                        = 31,
	EInteractionType__Fix                                                            = 32,
	EInteractionType__CheckFuel                                                      = 33,
	EInteractionType__Refuel                                                         = 34,
	EInteractionType__RefuelGasStation                                               = 35,
	EInteractionType__Charge                                                         = 36,
	EInteractionType__InsertResource                                                 = 37,
	EInteractionType__RemoveResource                                                 = 38,
	EInteractionType__FillResourceContainer                                          = 39,
	EInteractionType__Eat                                                            = 40,
	EInteractionType__EatAll                                                         = 41,
	EInteractionType__Drink                                                          = 42,
	EInteractionType__DrinkAll                                                       = 43,
	EInteractionType__Inject                                                         = 44,
	EInteractionType__CheckTaste                                                     = 45,
	EInteractionType__Equip                                                          = 46,
	EInteractionType__UnEquip                                                        = 47,
	EInteractionType__Cut                                                            = 48,
	EInteractionType__Collect                                                        = 49,
	EInteractionType__LightFire                                                      = 50,
	EInteractionType__PullPin                                                        = 51,
	EInteractionType__AddFuel                                                        = 52,
	EInteractionType__Extinguish                                                     = 53,
	EInteractionType__Prepare                                                        = 54,
	EInteractionType__Cook                                                           = 55,
	EInteractionType__Chop                                                           = 56,
	EInteractionType__SmokeFood                                                      = 57,
	EInteractionType__Destroy                                                        = 58,
	EInteractionType__Store                                                          = 59,
	EInteractionType__TakeInHands                                                    = 60,
	EInteractionType__Clean                                                          = 61,
	EInteractionType__Decontaminate                                                  = 62,
	EInteractionType__DecontaminateAll                                               = 63,
	EInteractionType__WashCloth                                                      = 64,
	EInteractionType__WashClothAll                                                   = 65,
	EInteractionType__WashEyes                                                       = 66,
	EInteractionType__RemoveFromHands                                                = 67,
	EInteractionType__CarryItem                                                      = 68,
	EInteractionType__AddToQuickAccess                                               = 69,
	EInteractionType__AddToThrowAccess                                               = 70,
	EInteractionType__RemoveFromQuickAccess                                          = 71,
	EInteractionType__RemoveFromThrowAccess                                          = 72,
	EInteractionType__ChamberBullet                                                  = 73,
	EInteractionType__LoadAmmo                                                       = 74,
	EInteractionType__UnloadAmmo                                                     = 75,
	EInteractionType__CheckAmmo                                                      = 76,
	EInteractionType__Swap                                                           = 77,
	EInteractionType__Tune                                                           = 78,
	EInteractionType__Treat                                                          = 79,
	EInteractionType__Join                                                           = 80,
	EInteractionType__Split                                                          = 81,
	EInteractionType__Unpack                                                         = 82,
	EInteractionType__Anchor                                                         = 83,
	EInteractionType__CheckTemperature                                               = 84,
	EInteractionType__RollRevolverDrum                                               = 85,
	EInteractionType__CommitSuicide                                                  = 86,
	EInteractionType__ModifyWeaponPaintjob                                           = 87,
	EInteractionType__TreatPatient                                                   = 88,
	EInteractionType__InviteToSquad                                                  = 89,
	EInteractionType__RemoveFromSquad                                                = 90,
	EInteractionType__LeaveSquad                                                     = 91,
	EInteractionType__Urinate                                                        = 92,
	EInteractionType__Defecate                                                       = 93,
	EInteractionType__Vomit                                                          = 94,
	EInteractionType__CheckTime                                                      = 95,
	EInteractionType__AddWristwatchAlarm                                             = 96,
	EInteractionType__Resuscitate                                                    = 97,
	EInteractionType__BindHands                                                      = 98,
	EInteractionType__TightenBinds                                                   = 99,
	EInteractionType__RemoveBinds                                                    = 100,
	EInteractionType__LoosenBinds                                                    = 101,
	EInteractionType__BreakBinds                                                     = 102,
	EInteractionType__Bury                                                           = 103,
	EInteractionType__Unbury                                                         = 104,
	EInteractionType__Rest                                                           = 105,
	EInteractionType__SitOnGround                                                    = 106,
	EInteractionType__LayOnGround                                                    = 107,
	EInteractionType__ExamineInventory                                               = 108,
	EInteractionType__Loot                                                           = 109,
	EInteractionType__ClaimKill                                                      = 110,
	EInteractionType__Disarm                                                         = 111,
	EInteractionType__GestureShowFinger                                              = 112,
	EInteractionType__GestureStandSurrender                                          = 113,
	EInteractionType__GestureWaveHi                                                  = 114,
	EInteractionType__GestureYouAreDead                                              = 115,
	EInteractionType__GestureFY                                                      = 116,
	EInteractionType__GesturePoint                                                   = 117,
	EInteractionType__GestureHeart                                                   = 118,
	EInteractionType__GestureBallpalm                                                = 119,
	EInteractionType__GestureFacepalm                                                = 120,
	EInteractionType__GestureFingerGun                                               = 121,
	EInteractionType__GestureLaughing                                                = 122,
	EInteractionType__GestureSmellWave                                               = 123,
	EInteractionType__GestureSquat                                                   = 124,
	EInteractionType__GestureCharge                                                  = 125,
	EInteractionType__GestureFreeze                                                  = 126,
	EInteractionType__GestureGetDown                                                 = 127,
	EInteractionType__GestureGetUp                                                   = 128,
	EInteractionType__GestureHalt                                                    = 129,
	EInteractionType__GestureHurryUp                                                 = 130,
	EInteractionType__GesturePointMe                                                 = 131,
	EInteractionType__GesturePointYou                                                = 132,
	EInteractionType__GestureRally                                                   = 133,
	EInteractionType__GestureThumbsUp                                                = 134,
	EInteractionType__GestureThumbsDown                                              = 135,
	EInteractionType__GestureUnderstandNot                                           = 136,
	EInteractionType__GestureUnderstandYes                                           = 137,
	EInteractionType__PlayInstrument                                                 = 138,
	EInteractionType__Whistle                                                        = 139,
	EInteractionType__EnterPhotoMode                                                 = 140,
	EInteractionType__EnterVehicle                                                   = 141,
	EInteractionType__ServiceVehicle                                                 = 142,
	EInteractionType__InstallVehicleAttachment                                       = 143,
	EInteractionType__RemoveVehicleAttachment                                        = 144,
	EInteractionType__RepairVehicleAttachment                                        = 145,
	EInteractionType__BuyAndInstallVehicleAttachment                                 = 146,
	EInteractionType__RemoveAndSellVehicleAttachment                                 = 147,
	EInteractionType__SetVehicleServicePaymentPreferrence                            = 148,
	EInteractionType__Buy                                                            = 149,
	EInteractionType__Maintain                                                       = 150,
	EInteractionType__Lockpick                                                       = 151,
	EInteractionType__RemoveLocks                                                    = 152,
	EInteractionType__RemoveLocksAdmin                                               = 153,
	EInteractionType__ForceUnlock                                                    = 154,
	EInteractionType__AddUpgrade                                                     = 155,
	EInteractionType__RadioTurnOn                                                    = 156,
	EInteractionType__RadioTurnOff                                                   = 157,
	EInteractionType__RadioIncreaseVolume                                            = 158,
	EInteractionType__RadioDecreaseVolume                                            = 159,
	EInteractionType__RadioChangeRadioStation                                        = 160,
	EInteractionType__StackAdd                                                       = 161,
	EInteractionType__StackSplit                                                     = 162,
	EInteractionType__RepairBaseElement                                              = 163,
	EInteractionType__RepairBaseElementArea                                          = 164,
	EInteractionType__RepairBaseElementsUnder25Percent                               = 165,
	EInteractionType__RepairBaseElementsUnder50Percent                               = 166,
	EInteractionType__RepairBaseElementsUnder75Percent                               = 167,
	EInteractionType__ClaimBase                                                      = 168,
	EInteractionType__ShowBaseFlagInfluence                                          = 169,
	EInteractionType__HideBaseFlagInfluence                                          = 170,
	EInteractionType__StartBaseFlagOvertake                                          = 171,
	EInteractionType__StopBaseFlagOvertake                                           = 172,
	EInteractionType__UpgradeBaseElement                                             = 173,
	EInteractionType__FlipPlaceable                                                  = 174,
	EInteractionType__AddFlagExpansion                                               = 175,
	EInteractionType__OpenContainer                                                  = 176,
	EInteractionType__ChangeItemText                                                 = 177,
	EInteractionType__CommitItemText                                                 = 178,
	EInteractionType__TurnOn                                                         = 179,
	EInteractionType__TurnOff                                                        = 180,
	EInteractionType__IncreaseAngle                                                  = 181,
	EInteractionType__DecreaseAngle                                                  = 182,
	EInteractionType__IncreaseLightIntensity                                         = 183,
	EInteractionType__DecreaseLightIntensity                                         = 184,
	EInteractionType__AddMotionTrigger                                               = 185,
	EInteractionType__AddLaserTrigger                                                = 186,
	EInteractionType__AddTripwireTrigger                                             = 187,
	EInteractionType__AddTimedTrigger                                                = 188,
	EInteractionType__RemoveTrigger                                                  = 189,
	EInteractionType__ShowTrigger                                                    = 190,
	EInteractionType__ArmTrap                                                        = 191,
	EInteractionType__DisarmTrap                                                     = 192,
	EInteractionType__RefuelTrap                                                     = 193,
	EInteractionType__StartFishing                                                   = 194,
	EInteractionType__ActivateKillbox                                                = 195,
	EInteractionType__FillItemWithReplenishableResource                              = 196,
	EInteractionType__FillItemWithInfiniteResource                                   = 197,
	EInteractionType__DrinkFromReplenishableResource                                 = 198,
	EInteractionType__DecontaminateWithReplenishableResource                         = 199,
	EInteractionType__DecontaminateAllWithReplenishableResource                      = 200,
	EInteractionType__WashClothWithReplenishableResource                             = 201,
	EInteractionType__WashClothAllWithReplenishableResource                          = 202,
	EInteractionType__WashEyesWithReplenishableResource                              = 203,
	EInteractionType__Spill                                                          = 204,
	EInteractionType__CheckResourceType                                              = 205,
	EInteractionType__RemoveWeed                                                     = 206,
	EInteractionType__ApplyPesticide                                                 = 207,
	EInteractionType__AddFertilizer                                                  = 208,
	EInteractionType__PlantSeed                                                      = 209,
	EInteractionType__CollectSeeds                                                   = 210,
	EInteractionType__RemovePlant                                                    = 211,
	EInteractionType__DestroyGarden                                                  = 212,
	EInteractionType__OpenCookPanel                                                  = 213,
	EInteractionType__SetPrivateAccess                                               = 214,
	EInteractionType__SetPublicAccess                                                = 215,
	EInteractionType__SetRank1Access                                                 = 216,
	EInteractionType__SetRank2Access                                                 = 217,
	EInteractionType__SetRank3Access                                                 = 218,
	EInteractionType__SetRank4Access                                                 = 219,
	EInteractionType__MusicPlayerTurnOn                                              = 220,
	EInteractionType__MusicPlayerPlay                                                = 221,
	EInteractionType__MusicPlayerNext                                                = 222,
	EInteractionType__MusicPlayerPrevious                                            = 223,
	EInteractionType__MusicPlayerShuffle                                             = 224,
	EInteractionType__MusicPlayerRepeat                                              = 225,
	EInteractionType__MusicPlayerIncreaseVolume                                      = 226,
	EInteractionType__MusicPlayerDecreaseVolume                                      = 227,
	EInteractionType__MusicPlayerRadio                                               = 228,
	EInteractionType__BasicDance1                                                    = 229,
	EInteractionType__BasicDance2                                                    = 230,
	EInteractionType__BasicDance3                                                    = 231,
	EInteractionType__BasicDance4                                                    = 232,
	EInteractionType__BasicDance5                                                    = 233,
	EInteractionType__AdvanceDance1                                                  = 234,
	EInteractionType__AdvanceDance2                                                  = 235,
	EInteractionType__AdvanceDance3                                                  = 236,
	EInteractionType__AdvanceDance4                                                  = 237,
	EInteractionType__AdvanceDance5                                                  = 238,
	EInteractionType__AdvanceDance6                                                  = 239,
	EInteractionType__AdvanceDance7                                                  = 240,
	EInteractionType__TradeBuy                                                       = 241,
	EInteractionType__TradeSell                                                      = 242,
	EInteractionType__UseATM                                                         = 243,
	EInteractionType__Pair                                                           = 244,
	EInteractionType__Unpair                                                         = 245,
	EInteractionType__SayVoiceline                                                   = 246,
	EInteractionType__HalloweenGesture1                                              = 247,
	EInteractionType__HalloweenGesture2                                              = 248,
	EInteractionType__HalloweenGesture3                                              = 249,
	EInteractionType__HalloweenGesture4                                              = 250,
	EInteractionType__AttachTrap                                                     = 251,
	EInteractionType__TrackAnimal                                                    = 252,
	EInteractionType__ShowRange                                                      = 253,
	EInteractionType__HideRange                                                      = 254,
	EInteractionType__EInteractionType_MAX                                           = 255
};

/// Enum /Script/ConZ.ENoiseLevel
/// Size: 0x08
enum ENoiseLevel : uint8_t
{
	ENoiseLevel__Mute                                                                = 0,
	ENoiseLevel__VerySilent                                                          = 1,
	ENoiseLevel__Silent                                                              = 2,
	ENoiseLevel__Moderate                                                            = 3,
	ENoiseLevel__Loud                                                                = 4,
	ENoiseLevel__VeryLoud                                                            = 5,
	ENoiseLevel__Count                                                               = 6,
	ENoiseLevel__ENoiseLevel_MAX                                                     = 7
};

/// Enum /Script/ConZ.EItemRarity
/// Size: 0x08
enum EItemRarity : uint8_t
{
	EItemRarity__ExtremelyRare                                                       = 0,
	EItemRarity__VeryRare                                                            = 1,
	EItemRarity__Rare                                                                = 2,
	EItemRarity__Uncommon                                                            = 3,
	EItemRarity__Common                                                              = 4,
	EItemRarity__Abundant                                                            = 5,
	EItemRarity__Count                                                               = 6,
	EItemRarity__EItemRarity_MAX                                                     = 7
};

/// Enum /Script/ConZ.EItemExhausted
/// Size: 0x04
enum EItemExhausted : uint8_t
{
	EItemExhausted__DoNothing                                                        = 0,
	EItemExhausted__Destroy                                                          = 1,
	EItemExhausted__Uncraft                                                          = 2,
	EItemExhausted__EItemExhausted_MAX                                               = 3
};

/// Enum /Script/ConZ.ERawByteStreamType
/// Size: 0x05
enum ERawByteStreamType : uint8_t
{
	ERawByteStreamType__Generic                                                      = 0,
	ERawByteStreamType__AdminCommandSquadInfoDump                                    = 1,
	ERawByteStreamType__AdminCommandLootDump                                         = 2,
	ERawByteStreamType__AdminCommandItemSpawnLocationsDump                           = 3,
	ERawByteStreamType__ERawByteStreamType_MAX                                       = 4
};

/// Enum /Script/ConZ.ERespawnOption
/// Size: 0x05
enum ERespawnOption : uint8_t
{
	ERespawnOption__Random                                                           = 0,
	ERespawnOption__Sector                                                           = 1,
	ERespawnOption__Shelter                                                          = 2,
	ERespawnOption__Squad                                                            = 3,
	ERespawnOption__ERespawnOption_MAX                                               = 4
};

/// Enum /Script/ConZ.ECharacterModificationType
/// Size: 0x04
enum ECharacterModificationType : uint8_t
{
	ECharacterModificationType__None                                                 = 0,
	ECharacterModificationType__PlasticSurgery                                       = 1,
	ECharacterModificationType__Haircut                                              = 2,
	ECharacterModificationType__ECharacterModificationType_MAX                       = 3
};

/// Enum /Script/ConZ.EConZSquadMemberRank
/// Size: 0x06
enum EConZSquadMemberRank : uint8_t
{
	EConZSquadMemberRank__None                                                       = 0,
	EConZSquadMemberRank__Member                                                     = 1,
	EConZSquadMemberRank__Enforcer                                                   = 2,
	EConZSquadMemberRank__Underboss                                                  = 3,
	EConZSquadMemberRank__Boss                                                       = 4,
	EConZSquadMemberRank__EConZSquadMemberRank_MAX                                   = 5
};

/// Enum /Script/ConZ.EFishSpecies
/// Size: 0x17
enum EFishSpecies : uint8_t
{
	EFishSpecies__None                                                               = 0,
	EFishSpecies__Bass                                                               = 1,
	EFishSpecies__Catfish                                                            = 2,
	EFishSpecies__Pike                                                               = 3,
	EFishSpecies__Carp                                                               = 4,
	EFishSpecies__Amur                                                               = 5,
	EFishSpecies__Bleak                                                              = 6,
	EFishSpecies__Chub                                                               = 7,
	EFishSpecies__Ruffe                                                              = 8,
	EFishSpecies__PrussianCarp                                                       = 9,
	EFishSpecies__CrucianCarp                                                        = 10,
	EFishSpecies__Sardine                                                            = 11,
	EFishSpecies__Dentex                                                             = 12,
	EFishSpecies__Orata                                                              = 13,
	EFishSpecies__Tuna                                                               = 14,
	EFishSpecies__Count                                                              = 15,
	EFishSpecies__EFishSpecies_MAX                                                   = 16
};

/// Enum /Script/ConZ.ECurrencyType
/// Size: 0x05
enum ECurrencyType : uint8_t
{
	ECurrencyType__None                                                              = 0,
	ECurrencyType__Normal                                                            = 1,
	ECurrencyType__Gold                                                              = 2,
	ECurrencyType__Count                                                             = 3,
	ECurrencyType__ECurrencyType_MAX                                                 = 4
};

/// Enum /Script/ConZ.ESkillLevel
/// Size: 0x07
enum ESkillLevel : uint8_t
{
	ESkillLevel__NoSkill                                                             = 0,
	ESkillLevel__Basic                                                               = 1,
	ESkillLevel__Medium                                                              = 2,
	ESkillLevel__Advanced                                                            = 3,
	ESkillLevel__AboveAdvanced                                                       = 4,
	ESkillLevel__Count                                                               = 5,
	ESkillLevel__ESkillLevel_MAX                                                     = 6
};

/// Enum /Script/ConZ.ESkillAttribute
/// Size: 0x05
enum ESkillAttribute : uint8_t
{
	ESkillAttribute__Constitution                                                    = 0,
	ESkillAttribute__Dexterity                                                       = 1,
	ESkillAttribute__Intelligence                                                    = 2,
	ESkillAttribute__Strength                                                        = 3,
	ESkillAttribute__ESkillAttribute_MAX                                             = 4
};

/// Enum /Script/ConZ.EConZGender
/// Size: 0x05
enum EConZGender : uint8_t
{
	EConZGender__Unspecified                                                         = 0,
	EConZGender__Female                                                              = 1,
	EConZGender__Male                                                                = 2,
	EConZGender__Count                                                               = 3,
	EConZGender__EConZGender_MAX                                                     = 4
};

/// Enum /Script/ConZ.ESortOrder
/// Size: 0x03
enum ESortOrder : uint8_t
{
	ESortOrder__Ascending                                                            = 0,
	ESortOrder__Descending                                                           = 1,
	ESortOrder__ESortOrder_MAX                                                       = 2
};

/// Enum /Script/ConZ.EEventsRankingStatsOrderByField
/// Size: 0x05
enum EEventsRankingStatsOrderByField : uint8_t
{
	EEventsRankingStatsOrderByField__FamePoints                                      = 0,
	EEventsRankingStatsOrderByField__EventScore                                      = 1,
	EEventsRankingStatsOrderByField__EventKills                                      = 2,
	EEventsRankingStatsOrderByField__EventDeaths                                     = 3,
	EEventsRankingStatsOrderByField__EEventsRankingStatsOrderByField_MAX             = 4
};

/// Enum /Script/ConZ.EBodyPart
/// Size: 0x14
enum EBodyPart : uint8_t
{
	EBodyPart__Unknown                                                               = 0,
	EBodyPart__Head                                                                  = 1,
	EBodyPart__Chest                                                                 = 2,
	EBodyPart__Abdomen                                                               = 3,
	EBodyPart__ArmLeftLower                                                          = 4,
	EBodyPart__ArmLeftUpper                                                          = 5,
	EBodyPart__ArmRightLower                                                         = 6,
	EBodyPart__ArmRightUpper                                                         = 7,
	EBodyPart__LegLeftLower                                                          = 8,
	EBodyPart__LegLeftUpper                                                          = 9,
	EBodyPart__LegRightLower                                                         = 10,
	EBodyPart__LegRightUpper                                                         = 11,
	EBodyPart__Count                                                                 = 12,
	EBodyPart__EBodyPart_MAX                                                         = 13
};

/// Enum /Script/ConZ.EEnvironmentClass
/// Size: 0x06
enum EEnvironmentClass : uint8_t
{
	EEnvironmentClass__Indoor_Small                                                  = 0,
	EEnvironmentClass__Indoor_Medium                                                 = 1,
	EEnvironmentClass__Indoor_Large                                                  = 2,
	EEnvironmentClass__Outdoor_Large                                                 = 3,
	EEnvironmentClass__Count                                                         = 4,
	EEnvironmentClass__EEnvironmentClass_MAX                                         = 5
};

/// Enum /Script/ConZ.EDetectHitCollisionType
/// Size: 0x05
enum EDetectHitCollisionType : uint8_t
{
	EDetectHitCollisionType__None                                                    = 0,
	EDetectHitCollisionType__Head                                                    = 1,
	EDetectHitCollisionType__Body                                                    = 2,
	EDetectHitCollisionType__Legs                                                    = 3,
	EDetectHitCollisionType__EDetectHitCollisionType_MAX                             = 4
};

/// Enum /Script/ConZ.ECharacterActionEndState
/// Size: 0x07
enum ECharacterActionEndState : uint8_t
{
	ECharacterActionEndState__None                                                   = 0,
	ECharacterActionEndState__Regular                                                = 1,
	ECharacterActionEndState__ConditionNotMet                                        = 2,
	ECharacterActionEndState__Canceled                                               = 3,
	ECharacterActionEndState__Failed                                                 = 4,
	ECharacterActionEndState__Terminated                                             = 5,
	ECharacterActionEndState__ECharacterActionEndState_MAX                           = 6
};

/// Enum /Script/ConZ.ECharacterActionAckType
/// Size: 0x04
enum ECharacterActionAckType : uint8_t
{
	ECharacterActionAckType__None                                                    = 0,
	ECharacterActionAckType__Begin                                                   = 1,
	ECharacterActionAckType__End                                                     = 2,
	ECharacterActionAckType__ECharacterActionAckType_MAX                             = 3
};

/// Enum /Script/ConZ.EAttackType
/// Size: 0x03
enum EAttackType : uint8_t
{
	EAttackType__Slash                                                               = 0,
	EAttackType__Pierce                                                              = 1,
	EAttackType__EAttackType_MAX                                                     = 2
};

/// Enum /Script/ConZ.EHitSeverity
/// Size: 0x07
enum EHitSeverity : uint8_t
{
	EHitSeverity__VeryLight                                                          = 0,
	EHitSeverity__Light                                                              = 1,
	EHitSeverity__Medium                                                             = 2,
	EHitSeverity__Heavy                                                              = 3,
	EHitSeverity__VeryHeavy                                                          = 4,
	EHitSeverity__Count                                                              = 5,
	EHitSeverity__EHitSeverity_MAX                                                   = 6
};

/// Enum /Script/ConZ.ECharacterImpactSourceSoundCategory
/// Size: 0x11
enum ECharacterImpactSourceSoundCategory : uint8_t
{
	ECharacterImpactSourceSoundCategory__Any                                         = 0,
	ECharacterImpactSourceSoundCategory__Head_Bare                                   = 1,
	ECharacterImpactSourceSoundCategory__Hands_Bare                                  = 2,
	ECharacterImpactSourceSoundCategory__Hands_Gloved                                = 3,
	ECharacterImpactSourceSoundCategory__Legs_Bare                                   = 4,
	ECharacterImpactSourceSoundCategory__Claws                                       = 5,
	ECharacterImpactSourceSoundCategory__Jaws                                        = 6,
	ECharacterImpactSourceSoundCategory__Blunt_Wood                                  = 7,
	ECharacterImpactSourceSoundCategory__Blunt_Metal                                 = 8,
	ECharacterImpactSourceSoundCategory__Sharp_Metal                                 = 9,
	ECharacterImpactSourceSoundCategory__ECharacterImpactSourceSoundCategory_MAX     = 10
};

/// Enum /Script/ConZ.EAITeam
/// Size: 0x11
enum EAITeam : uint8_t
{
	EAITeam__Prisoner                                                                = 0,
	EAITeam__Zombie                                                                  = 1,
	EAITeam__Animal                                                                  = 2,
	EAITeam__TEC1                                                                    = 3,
	EAITeam__Vehicle                                                                 = 4,
	EAITeam__Neutral                                                                 = 5,
	EAITeam__ZombieImpersonator                                                      = 6,
	EAITeam__Monster                                                                 = 7,
	EAITeam__Num                                                                     = 8,
	EAITeam__None                                                                    = 255,
	EAITeam__EAITeam_MAX                                                             = 256
};

/// Enum /Script/ConZ.EConZPxDominanceGroup
/// Size: 0x04
enum EConZPxDominanceGroup : uint8_t
{
	EConZPxDominanceGroup__Default                                                   = 0,
	EConZPxDominanceGroup__MediumPawns                                               = 1,
	EConZPxDominanceGroup__LargePawns                                                = 2,
	EConZPxDominanceGroup__EConZPxDominanceGroup_MAX                                 = 3
};

/// Enum /Script/ConZ.EPrisonerBorderCrossingPenalty
/// Size: 0x07
enum EPrisonerBorderCrossingPenalty : uint8_t
{
	EPrisonerBorderCrossingPenalty__None                                             = 0,
	EPrisonerBorderCrossingPenalty__Penalty1                                         = 1,
	EPrisonerBorderCrossingPenalty__Penalty2                                         = 2,
	EPrisonerBorderCrossingPenalty__Penalty3                                         = 3,
	EPrisonerBorderCrossingPenalty__Penalty4                                         = 4,
	EPrisonerBorderCrossingPenalty__DeadPenalty                                      = 5,
	EPrisonerBorderCrossingPenalty__EPrisonerBorderCrossingPenalty_MAX               = 6
};

/// Enum /Script/ConZ.EPrisonerCommonSpawnLocation
/// Size: 0x07
enum EPrisonerCommonSpawnLocation : uint8_t
{
	EPrisonerCommonSpawnLocation__None                                               = 0,
	EPrisonerCommonSpawnLocation__Random                                             = 1,
	EPrisonerCommonSpawnLocation__Sector                                             = 2,
	EPrisonerCommonSpawnLocation__Home                                               = 3,
	EPrisonerCommonSpawnLocation__Squad                                              = 4,
	EPrisonerCommonSpawnLocation__Event                                              = 5,
	EPrisonerCommonSpawnLocation__EPrisonerCommonSpawnLocation_MAX                   = 6
};

/// Enum /Script/ConZ.EWeaponMalfunction
/// Size: 0x09
enum EWeaponMalfunction : uint8_t
{
	EWeaponMalfunction__None                                                         = 0,
	EWeaponMalfunction__BadRound                                                     = 1,
	EWeaponMalfunction__StovePipe                                                    = 2,
	EWeaponMalfunction__RoundNotLoaded                                               = 3,
	EWeaponMalfunction__DoubleFeed                                                   = 4,
	EWeaponMalfunction__StuckBullet                                                  = 5,
	EWeaponMalfunction__ClipPartiallyEjected                                         = 6,
	EWeaponMalfunction__Count                                                        = 7,
	EWeaponMalfunction__EWeaponMalfunction_MAX                                       = 8
};

/// Enum /Script/ConZ.EAmmunitionCartridgeState
/// Size: 0x05
enum EAmmunitionCartridgeState : uint8_t
{
	EAmmunitionCartridgeState__Default                                               = 0,
	EAmmunitionCartridgeState__Used                                                  = 1,
	EAmmunitionCartridgeState__Bad                                                   = 2,
	EAmmunitionCartridgeState__BadAndUsed                                            = 3,
	EAmmunitionCartridgeState__EAmmunitionCartridgeState_MAX                         = 4
};

/// Enum /Script/ConZ.EThrowingAnimationType
/// Size: 0x05
enum EThrowingAnimationType : uint8_t
{
	EThrowingAnimationType__Default                                                  = 0,
	EThrowingAnimationType__FromWeapon                                               = 1,
	EThrowingAnimationType__FromCombat                                               = 2,
	EThrowingAnimationType__FromIdle                                                 = 3,
	EThrowingAnimationType__EThrowingAnimationType_MAX                               = 4
};

/// Enum /Script/ConZ.EPrisonerMovementPace
/// Size: 0x08
enum EPrisonerMovementPace : uint8_t
{
	EPrisonerMovementPace__NotMoving                                                 = 0,
	EPrisonerMovementPace__Slow                                                      = 1,
	EPrisonerMovementPace__Medium                                                    = 2,
	EPrisonerMovementPace__Fast                                                      = 3,
	EPrisonerMovementPace__Count                                                     = 4,
	EPrisonerMovementPace__First                                                     = 1,
	EPrisonerMovementPace__Last                                                      = 3,
	EPrisonerMovementPace__EPrisonerMovementPace_MAX                                 = 5
};

/// Enum /Script/ConZ.EPrisonerNearbyFoliageType
/// Size: 0x04
enum EPrisonerNearbyFoliageType : uint8_t
{
	EPrisonerNearbyFoliageType__None                                                 = 0,
	EPrisonerNearbyFoliageType__Tree                                                 = 1,
	EPrisonerNearbyFoliageType__Bush                                                 = 2,
	EPrisonerNearbyFoliageType__EPrisonerNearbyFoliageType_MAX                       = 3
};

/// Enum /Script/ConZ.EPrisonerCombatMode
/// Size: 0x05
enum EPrisonerCombatMode : uint8_t
{
	EPrisonerCombatMode__None                                                        = 0,
	EPrisonerCombatMode__MeleeUnarmed                                                = 1,
	EPrisonerCombatMode__MeleeWeapon                                                 = 2,
	EPrisonerCombatMode__Firearm                                                     = 3,
	EPrisonerCombatMode__EPrisonerCombatMode_MAX                                     = 4
};

/// Enum /Script/ConZ.EHoldBreathState
/// Size: 0x08
enum EHoldBreathState : uint8_t
{
	EHoldBreathState__None                                                           = 0,
	EHoldBreathState__BreathIn                                                       = 1,
	EHoldBreathState__HoldBreath                                                     = 2,
	EHoldBreathState__BreathOut                                                      = 3,
	EHoldBreathState__Breathless                                                     = 4,
	EHoldBreathState__BreathInRecovery                                               = 5,
	EHoldBreathState__Count                                                          = 6,
	EHoldBreathState__EHoldBreathState_MAX                                           = 7
};

/// Enum /Script/ConZ.EPrisonerWettablePart
/// Size: 0x06
enum EPrisonerWettablePart : uint8_t
{
	EPrisonerWettablePart__Head                                                      = 0,
	EPrisonerWettablePart__UpperBody                                                 = 1,
	EPrisonerWettablePart__LowerBody                                                 = 2,
	EPrisonerWettablePart__Feet                                                      = 3,
	EPrisonerWettablePart__Count                                                     = 4,
	EPrisonerWettablePart__EPrisonerWettablePart_MAX                                 = 5
};

/// Enum /Script/ConZ.EPrisonerMeleeTargetSelectionMode
/// Size: 0x04
enum EPrisonerMeleeTargetSelectionMode : uint8_t
{
	EPrisonerMeleeTargetSelectionMode__Manual                                        = 0,
	EPrisonerMeleeTargetSelectionMode__SemiAutomatic                                 = 1,
	EPrisonerMeleeTargetSelectionMode__Automatic                                     = 2,
	EPrisonerMeleeTargetSelectionMode__EPrisonerMeleeTargetSelectionMode_MAX         = 3
};

/// Enum /Script/ConZ.EMotionIntensity
/// Size: 0x05
enum EMotionIntensity : uint8_t
{
	EMotionIntensity__None                                                           = 0,
	EMotionIntensity__Light                                                          = 1,
	EMotionIntensity__Medium                                                         = 2,
	EMotionIntensity__Heavy                                                          = 3,
	EMotionIntensity__EMotionIntensity_MAX                                           = 4
};

/// Enum /Script/ConZ.EPrisonerStance
/// Size: 0x06
enum EPrisonerStance : uint8_t
{
	EPrisonerStance__Standing                                                        = 0,
	EPrisonerStance__Crouching                                                       = 1,
	EPrisonerStance__Prone                                                           = 2,
	EPrisonerStance__Swimming                                                        = 3,
	EPrisonerStance__Count                                                           = 4,
	EPrisonerStance__EPrisonerStance_MAX                                             = 5
};

/// Enum /Script/ConZ.EVehicleWeaponAimingStance
/// Size: 0x04
enum EVehicleWeaponAimingStance : uint8_t
{
	EVehicleWeaponAimingStance__Default                                              = 0,
	EVehicleWeaponAimingStance__Leaning                                              = 1,
	EVehicleWeaponAimingStance__Count                                                = 2,
	EVehicleWeaponAimingStance__EVehicleWeaponAimingStance_MAX                       = 3
};

/// Enum /Script/ConZ.EDeluxeVersion
/// Size: 0x09
enum EDeluxeVersion : uint8_t
{
	EDeluxeVersion__SupporterPack1                                                   = 0,
	EDeluxeVersion__SupporterPack2                                                   = 1,
	EDeluxeVersion__PremiumHairstyles1                                               = 2,
	EDeluxeVersion__Character_DannyTrejo                                             = 3,
	EDeluxeVersion__Character_LuisMoncada                                            = 4,
	EDeluxeVersion__WeaponPaintjobs                                                  = 5,
	EDeluxeVersion__WeaponCharms                                                     = 6,
	EDeluxeVersion__None                                                             = 7,
	EDeluxeVersion__EDeluxeVersion_MAX                                               = 8
};

/// Enum /Script/ConZ.EPlayableInstrumentTone
/// Size: 0x15
enum EPlayableInstrumentTone : uint8_t
{
	EPlayableInstrumentTone__C                                                       = 0,
	EPlayableInstrumentTone__Db                                                      = 1,
	EPlayableInstrumentTone__D                                                       = 2,
	EPlayableInstrumentTone__Eb                                                      = 3,
	EPlayableInstrumentTone__E                                                       = 4,
	EPlayableInstrumentTone__F                                                       = 5,
	EPlayableInstrumentTone__Gb                                                      = 6,
	EPlayableInstrumentTone__G                                                       = 7,
	EPlayableInstrumentTone__Ab                                                      = 8,
	EPlayableInstrumentTone__A                                                       = 9,
	EPlayableInstrumentTone__Bb                                                      = 10,
	EPlayableInstrumentTone__B                                                       = 11,
	EPlayableInstrumentTone__C2                                                      = 12,
	EPlayableInstrumentTone__Count                                                   = 13,
	EPlayableInstrumentTone__EPlayableInstrumentTone_MAX                             = 14
};

/// Enum /Script/ConZ.EHandsHolstersType
/// Size: 0x04
enum EHandsHolstersType : uint8_t
{
	EHandsHolstersType__Hands                                                        = 0,
	EHandsHolstersType__HolsterLeft                                                  = 1,
	EHandsHolstersType__HolsterRight                                                 = 2,
	EHandsHolstersType__EHandsHolstersType_MAX                                       = 3
};

/// Enum /Script/ConZ.EDamageChannel
/// Size: 0x20
enum EDamageChannel : uint8_t
{
	EDamageChannel__UncategorizedDamage                                              = 0,
	EDamageChannel__FallDamage                                                       = 1,
	EDamageChannel__PuppetDamage                                                     = 2,
	EDamageChannel__SuicidePuppetDamage                                              = 3,
	EDamageChannel__SentryDamage                                                     = 4,
	EDamageChannel__AnimalDamage                                                     = 5,
	EDamageChannel__BaseDefenseDamage                                                = 6,
	EDamageChannel__VehicleDamage                                                    = 7,
	EDamageChannel__BoxingDamage                                                     = 8,
	EDamageChannel__MeleeWeaponDamage                                                = 9,
	EDamageChannel__ThrowingDamage                                                   = 10,
	EDamageChannel__ProjectileDamage                                                 = 11,
	EDamageChannel__ExplosiveDamage                                                  = 12,
	EDamageChannel__TrapDamage                                                       = 13,
	EDamageChannel__BurnDamage                                                       = 14,
	EDamageChannel__DamageToBases                                                    = 15,
	EDamageChannel__DamageToVehicles                                                 = 16,
	EDamageChannel__RazorDamage                                                      = 17,
	EDamageChannel__Count                                                            = 18,
	EDamageChannel__EDamageChannel_MAX                                               = 19
};

/// Enum /Script/ConZ.ECarryingItemState
/// Size: 0x03
enum ECarryingItemState : uint8_t
{
	ECarryingItemState__None                                                         = 0,
	ECarryingItemState__Idle                                                         = 1,
	ECarryingItemState__ECarryingItemState_MAX                                       = 2
};

/// Enum /Script/ConZ.EPlayingInstrumentState
/// Size: 0x05
enum EPlayingInstrumentState : uint8_t
{
	EPlayingInstrumentState__None                                                    = 0,
	EPlayingInstrumentState__Exiting                                                 = 1,
	EPlayingInstrumentState__Idle                                                    = 2,
	EPlayingInstrumentState__Playing                                                 = 3,
	EPlayingInstrumentState__EPlayingInstrumentState_MAX                             = 4
};

/// Enum /Script/ConZ.EScopingWithItemInHandsState
/// Size: 0x06
enum EScopingWithItemInHandsState : uint8_t
{
	EScopingWithItemInHandsState__None                                               = 0,
	EScopingWithItemInHandsState__Starting                                           = 1,
	EScopingWithItemInHandsState__Scoping                                            = 2,
	EScopingWithItemInHandsState__StoppingWithEffect                                 = 3,
	EScopingWithItemInHandsState__StoppingNoEffect                                   = 4,
	EScopingWithItemInHandsState__EScopingWithItemInHandsState_MAX                   = 5
};

/// Enum /Script/ConZ.EWeaponFiringMode
/// Size: 0x05
enum EWeaponFiringMode : uint8_t
{
	EWeaponFiringMode__Automatic                                                     = 0,
	EWeaponFiringMode__SingleShot                                                    = 1,
	EWeaponFiringMode__Burst                                                         = 2,
	EWeaponFiringMode__Count                                                         = 3,
	EWeaponFiringMode__EWeaponFiringMode_MAX                                         = 4
};

/// Enum /Script/ConZ.EWeaponAimingType
/// Size: 0x04
enum EWeaponAimingType : uint8_t
{
	EWeaponAimingType__None                                                          = 0,
	EWeaponAimingType__Hip                                                           = 1,
	EWeaponAimingType__DownTheSights                                                 = 2,
	EWeaponAimingType__EWeaponAimingType_MAX                                         = 3
};

/// Enum /Script/ConZ.EDodgeDirectionType
/// Size: 0x05
enum EDodgeDirectionType : uint8_t
{
	EDodgeDirectionType__Front                                                       = 0,
	EDodgeDirectionType__Back                                                        = 1,
	EDodgeDirectionType__Left                                                        = 2,
	EDodgeDirectionType__Right                                                       = 3,
	EDodgeDirectionType__EDodgeDirectionType_MAX                                     = 4
};

/// Enum /Script/ConZ.ETabMode
/// Size: 0x13
enum ETabMode : uint8_t
{
	ETabMode__None                                                                   = 0,
	ETabMode__Inventory                                                              = 1,
	ETabMode__Crafting                                                               = 2,
	ETabMode__Building                                                               = 3,
	ETabMode__Metabolism                                                             = 4,
	ETabMode__Metabolism_Health                                                      = 5,
	ETabMode__Metabolism_Stats                                                       = 6,
	ETabMode__Journal                                                                = 7,
	ETabMode__Squad                                                                  = 8,
	ETabMode__Events                                                                 = 9,
	ETabMode__Cooking                                                                = 10,
	ETabMode__Trading                                                                = 11,
	ETabMode__ETabMode_MAX                                                           = 12
};

/// Enum /Script/ConZ.EPrisonerMountSlotFlags
/// Size: 0x04
enum EPrisonerMountSlotFlags : uint8_t
{
	EPrisonerMountSlotFlags__None                                                    = 0,
	EPrisonerMountSlotFlags__HasMountedSlot                                          = 1,
	EPrisonerMountSlotFlags__ShouldHideAttachedItems                                 = 2,
	EPrisonerMountSlotFlags__EPrisonerMountSlotFlags_MAX                             = 3
};

/// Enum /Script/ConZ.EDoorStateFlags
/// Size: 0x09
enum EDoorStateFlags : uint8_t
{
	EDoorStateFlags__None                                                            = 0,
	EDoorStateFlags__Open                                                            = 1,
	EDoorStateFlags__Locked                                                          = 2,
	EDoorStateFlags__Empty                                                           = 4,
	EDoorStateFlags__ChangeSide                                                      = 8,
	EDoorStateFlags__HasLock                                                         = 16,
	EDoorStateFlags__SelfClosing                                                     = 32,
	EDoorStateFlags__HardLocked                                                      = 64,
	EDoorStateFlags__EDoorStateFlags_MAX                                             = 65
};

/// Enum /Script/ConZ.EOpenStateNavigationControl
/// Size: 0x06
enum EOpenStateNavigationControl : uint8_t
{
	EOpenStateNavigationControl__Unchanged                                           = 0,
	EOpenStateNavigationControl__AffectsNavigationWhenOpen                           = 1,
	EOpenStateNavigationControl__AffectsNavigationWhenClosed                         = 2,
	EOpenStateNavigationControl__AffectsNavigationAlways                             = 3,
	EOpenStateNavigationControl__AffectsNavigationNever                              = 4,
	EOpenStateNavigationControl__EOpenStateNavigationControl_MAX                     = 5
};

/// Enum /Script/ConZ.EDoorType
/// Size: 0x03
enum EDoorType : uint8_t
{
	EDoorType__Regular                                                               = 0,
	EDoorType__BaseDoor                                                              = 1,
	EDoorType__EDoorType_MAX                                                         = 2
};

/// Enum /Script/ConZ.EAnimalAction
/// Size: 0x10
enum EAnimalAction : uint8_t
{
	EAnimalAction__None                                                              = 0,
	EAnimalAction__Eat                                                               = 1,
	EAnimalAction__Rest                                                              = 2,
	EAnimalAction__Attack                                                            = 3,
	EAnimalAction__Sit                                                               = 4,
	EAnimalAction__Wait                                                              = 5,
	EAnimalAction__Intimidate                                                        = 6,
	EAnimalAction__Alert                                                             = 7,
	EAnimalAction__Turn                                                              = 8,
	EAnimalAction__EAnimalAction_MAX                                                 = 9
};

/// Enum /Script/ConZ.EFishingState
/// Size: 0x21
enum EFishingState : uint8_t
{
	EFishingState__None                                                              = 0,
	EFishingState__Idle                                                              = 1,
	EFishingState__EnterActive                                                       = 2,
	EFishingState__Active                                                            = 3,
	EFishingState__LeaveActive                                                       = 4,
	EFishingState__CastInitiated                                                     = 5,
	EFishingState__LongCast                                                          = 6,
	EFishingState__ShortCast                                                         = 7,
	EFishingState__LongCasting                                                       = 8,
	EFishingState__ShortCasting                                                      = 9,
	EFishingState__LongCastingEnd                                                    = 10,
	EFishingState__ShortCastingEnd                                                   = 11,
	EFishingState__Bait                                                              = 12,
	EFishingState__PullStart                                                         = 13,
	EFishingState__PullEnd                                                           = 14,
	EFishingState__Hook                                                              = 15,
	EFishingState__FishCaught                                                        = 16,
	EFishingState__KeepFish                                                          = 17,
	EFishingState__DiscardFish                                                       = 18,
	EFishingState__WireBreak                                                         = 19,
	EFishingState__EFishingState_MAX                                                 = 20
};

/// Enum /Script/ConZ.EFishingActionNotifyType
/// Size: 0x17
enum EFishingActionNotifyType : uint8_t
{
	EFishingActionNotifyType__None                                                   = 0,
	EFishingActionNotifyType__EnterActive                                            = 1,
	EFishingActionNotifyType__LeaveActive                                            = 2,
	EFishingActionNotifyType__StartCastEnd                                           = 3,
	EFishingActionNotifyType__CastingThreshold                                       = 4,
	EFishingActionNotifyType__ShortRelease                                           = 5,
	EFishingActionNotifyType__Release                                                = 6,
	EFishingActionNotifyType__LongCastEnd                                            = 7,
	EFishingActionNotifyType__ShortCastEnd                                           = 8,
	EFishingActionNotifyType__FishingActionEnd                                       = 9,
	EFishingActionNotifyType__PullStartFinished                                      = 10,
	EFishingActionNotifyType__PullEndFinished                                        = 11,
	EFishingActionNotifyType__ShowCaughtFish                                         = 12,
	EFishingActionNotifyType__KeepFish                                               = 13,
	EFishingActionNotifyType__DiscardFish                                            = 14,
	EFishingActionNotifyType__WireBreakEnd                                           = 15,
	EFishingActionNotifyType__EFishingActionNotifyType_MAX                           = 16
};

/// Enum /Script/ConZ.EWeaponMalfunctionEvent
/// Size: 0x08
enum EWeaponMalfunctionEvent : uint8_t
{
	EWeaponMalfunctionEvent__RoundAdded                                              = 0,
	EWeaponMalfunctionEvent__ChamberOpened                                           = 1,
	EWeaponMalfunctionEvent__ChamberOpenedCasingEjected                              = 2,
	EWeaponMalfunctionEvent__ChamberOpenedRoundEjected                               = 3,
	EWeaponMalfunctionEvent__ChamberClosed                                           = 4,
	EWeaponMalfunctionEvent__ChamberClosedRoundLoaded                                = 5,
	EWeaponMalfunctionEvent__AttachmentAdded                                         = 6,
	EWeaponMalfunctionEvent__EWeaponMalfunctionEvent_MAX                             = 7
};

/// Enum /Script/ConZ.EWeaponType
/// Size: 0x05
enum EWeaponType : uint8_t
{
	EWeaponType__Rifle                                                               = 0,
	EWeaponType__Handgun                                                             = 1,
	EWeaponType__Bow                                                                 = 2,
	EWeaponType__Count                                                               = 3,
	EWeaponType__EWeaponType_MAX                                                     = 4
};

/// Enum /Script/ConZ.EWeaponActionNotifyType
/// Size: 0x23
enum EWeaponActionNotifyType : uint8_t
{
	EWeaponActionNotifyType__None                                                    = 0,
	EWeaponActionNotifyType__ChamberOpened                                           = 1,
	EWeaponActionNotifyType__ChamberClosed                                           = 2,
	EWeaponActionNotifyType__ChamberOpenedClosed                                     = 3,
	EWeaponActionNotifyType__BowInsertArrow                                          = 4,
	EWeaponActionNotifyType__BowRemoveArrow                                          = 5,
	EWeaponActionNotifyType__CompoundBowTuneDrawWeight                               = 6,
	EWeaponActionNotifyType__StaminaDrained                                          = 7,
	EWeaponActionNotifyType__DropMagazine                                            = 8,
	EWeaponActionNotifyType__ClearMalfunction                                        = 9,
	EWeaponActionNotifyType__ChamberOpenedSync                                       = 10,
	EWeaponActionNotifyType__ChamberClosedSync                                       = 11,
	EWeaponActionNotifyType__ChamberOpenedClosedSync                                 = 12,
	EWeaponActionNotifyType__ClearMalfunctionRoundNotLoaded                          = 13,
	EWeaponActionNotifyType__ShowEjectCasing                                         = 14,
	EWeaponActionNotifyType__ShowEjectLiveRound                                      = 15,
	EWeaponActionNotifyType__CrossbowCock                                            = 16,
	EWeaponActionNotifyType__Fire                                                    = 17,
	EWeaponActionNotifyType__SetupForReload                                          = 18,
	EWeaponActionNotifyType__DrumRolled                                              = 19,
	EWeaponActionNotifyType__Arm                                                     = 20,
	EWeaponActionNotifyType__Unarm                                                   = 21,
	EWeaponActionNotifyType__EWeaponActionNotifyType_MAX                             = 22
};

/// Enum /Script/ConZ.EWeaponBehaviourMode
/// Size: 0x03
enum EWeaponBehaviourMode : uint8_t
{
	EWeaponBehaviourMode__Default                                                    = 0,
	EWeaponBehaviourMode__Inspect                                                    = 1,
	EWeaponBehaviourMode__EWeaponBehaviourMode_MAX                                   = 2
};

/// Enum /Script/ConZ.EWeaponMuzzleEffectsSpawType
/// Size: 0x03
enum EWeaponMuzzleEffectsSpawType : uint8_t
{
	EWeaponMuzzleEffectsSpawType__AttachedToBarrel                                   = 0,
	EWeaponMuzzleEffectsSpawType__AtLocation                                         = 1,
	EWeaponMuzzleEffectsSpawType__EWeaponMuzzleEffectsSpawType_MAX                   = 2
};

/// Enum /Script/ConZ.EWeaponCategory
/// Size: 0x13
enum EWeaponCategory : uint8_t
{
	EWeaponCategory__ThrowingWeapons                                                 = 0,
	EWeaponCategory__RangedWeapons                                                   = 1,
	EWeaponCategory__Handguns                                                        = 2,
	EWeaponCategory__SubmachineGuns                                                  = 3,
	EWeaponCategory__Rifles                                                          = 4,
	EWeaponCategory__Shotguns                                                        = 5,
	EWeaponCategory__AutomaticRifles                                                 = 6,
	EWeaponCategory__SniperRifles                                                    = 7,
	EWeaponCategory__Bow                                                             = 8,
	EWeaponCategory__Count                                                           = 9,
	EWeaponCategory__FirstFirearm                                                    = 2,
	EWeaponCategory__LastFirearm                                                     = 7,
	EWeaponCategory__EWeaponCategory_MAX                                             = 10
};

/// Enum /Script/ConZ.EWeaponFiringStateType
/// Size: 0x04
enum EWeaponFiringStateType : uint8_t
{
	EWeaponFiringStateType__Automatic                                                = 0,
	EWeaponFiringStateType__SemiAutomatic                                            = 1,
	EWeaponFiringStateType__Manual                                                   = 2,
	EWeaponFiringStateType__EWeaponFiringStateType_MAX                               = 3
};

/// Enum /Script/ConZ.EPrisonerHUDMode
/// Size: 0x06
enum EPrisonerHUDMode : uint8_t
{
	EPrisonerHUDMode__Normal                                                         = 0,
	EPrisonerHUDMode__Target                                                         = 1,
	EPrisonerHUDMode__Map                                                            = 2,
	EPrisonerHUDMode__DroneNormal                                                    = 3,
	EPrisonerHUDMode__DroneMap                                                       = 4,
	EPrisonerHUDMode__EPrisonerHUDMode_MAX                                           = 5
};

/// Enum /Script/ConZ.EClothesPart
/// Size: 0x13
enum EClothesPart : uint8_t
{
	EClothesPart__None                                                               = 0,
	EClothesPart__BodyUpper                                                          = 1,
	EClothesPart__BodyLower                                                          = 2,
	EClothesPart__Head                                                               = 3,
	EClothesPart__Eyes                                                               = 4,
	EClothesPart__Neck                                                               = 5,
	EClothesPart__Hands                                                              = 6,
	EClothesPart__ArmUpper                                                           = 7,
	EClothesPart__ArmLower                                                           = 8,
	EClothesPart__Legs                                                               = 9,
	EClothesPart__Feet                                                               = 10,
	EClothesPart__Count                                                              = 11,
	EClothesPart__EClothesPart_MAX                                                   = 12
};

/// Enum /Script/ConZ.ERecipeAvailabilityState
/// Size: 0x06
enum ERecipeAvailabilityState : uint8_t
{
	ERecipeAvailabilityState__None                                                   = 0,
	ERecipeAvailabilityState__SkillLow                                               = 1,
	ERecipeAvailabilityState__NoIngredients                                          = 2,
	ERecipeAvailabilityState__SomeIngredients                                        = 3,
	ERecipeAvailabilityState__AllIngredients                                         = 4,
	ERecipeAvailabilityState__ERecipeAvailabilityState_MAX                           = 5
};

/// Enum /Script/ConZ.EInventoryNodeWidgetType
/// Size: 0x10
enum EInventoryNodeWidgetType : uint8_t
{
	EInventoryNodeWidgetType__None                                                   = 0,
	EInventoryNodeWidgetType__Inventory                                              = 1,
	EInventoryNodeWidgetType__InventoryContainer                                     = 2,
	EInventoryNodeWidgetType__HandsAndHolsters                                       = 3,
	EInventoryNodeWidgetType__QuickAccess                                            = 4,
	EInventoryNodeWidgetType__ClothesSideLayer                                       = 5,
	EInventoryNodeWidgetType__ToolTip                                                = 6,
	EInventoryNodeWidgetType__Vicinity                                               = 7,
	EInventoryNodeWidgetType__VicinityContainer                                      = 8,
	EInventoryNodeWidgetType__EInventoryNodeWidgetType_MAX                           = 9
};

/// Enum /Script/ConZ.EDoorManualOpenMethod
/// Size: 0x05
enum EDoorManualOpenMethod : uint8_t
{
	EDoorManualOpenMethod__CircularLever                                             = 1,
	EDoorManualOpenMethod__Crowbar                                                   = 2,
	EDoorManualOpenMethod__HackingDayAndNight                                        = 4,
	EDoorManualOpenMethod__HackingDayOnly                                            = 8,
	EDoorManualOpenMethod__EDoorManualOpenMethod_MAX                                 = 9
};

/// Enum /Script/ConZ.EDoorOpenMethod
/// Size: 0x04
enum EDoorOpenMethod : uint8_t
{
	EDoorOpenMethod__KeycardLocked                                                   = 0,
	EDoorOpenMethod__DialPadLocked                                                   = 1,
	EDoorOpenMethod__PoweredOnly                                                     = 2,
	EDoorOpenMethod__EDoorOpenMethod_MAX                                             = 3
};

/// Enum /Script/ConZ.EBunkerLightControlType
/// Size: 0x04
enum EBunkerLightControlType : uint8_t
{
	EBunkerLightControlType__NotControlled                                           = 0,
	EBunkerLightControlType__Regular                                                 = 1,
	EBunkerLightControlType__Alarm                                                   = 2,
	EBunkerLightControlType__EBunkerLightControlType_MAX                             = 3
};

/// Enum /Script/ConZ.ESwitchboardPowerState
/// Size: 0x03
enum ESwitchboardPowerState : uint8_t
{
	ESwitchboardPowerState__Powered                                                  = 0,
	ESwitchboardPowerState__Blackout                                                 = 1,
	ESwitchboardPowerState__ESwitchboardPowerState_MAX                               = 2
};

/// Enum /Script/ConZ.EAbandonedBunkerNoiseAccumulationLevel
/// Size: 0x05
enum EAbandonedBunkerNoiseAccumulationLevel : uint8_t
{
	EAbandonedBunkerNoiseAccumulationLevel__None                                     = 0,
	EAbandonedBunkerNoiseAccumulationLevel__Commotion                                = 1,
	EAbandonedBunkerNoiseAccumulationLevel__EnemyActivation                          = 2,
	EAbandonedBunkerNoiseAccumulationLevel__Count                                    = 3,
	EAbandonedBunkerNoiseAccumulationLevel__EAbandonedBunkerNoiseAccumulationLevel_MAX = 4
};

/// Enum /Script/ConZ.EItemLootTreeToExport
/// Size: 0x03
enum EItemLootTreeToExport : uint8_t
{
	EItemLootTreeToExport__Default                                                   = 0,
	EItemLootTreeToExport__Current                                                   = 1,
	EItemLootTreeToExport__EItemLootTreeToExport_MAX                                 = 2
};

/// Enum /Script/ConZ.EItemSpawnLocationsSearchType
/// Size: 0x04
enum EItemSpawnLocationsSearchType : uint8_t
{
	EItemSpawnLocationsSearchType__VehicleAttachments                                = 0,
	EItemSpawnLocationsSearchType__Pumpkins                                          = 1,
	EItemSpawnLocationsSearchType__Count                                             = 2,
	EItemSpawnLocationsSearchType__EItemSpawnLocationsSearchType_MAX                 = 3
};

/// Enum /Script/ConZ.EListSpawnedVehiclesAdminCommandVehicleCategory
/// Size: 0x10
enum EListSpawnedVehiclesAdminCommandVehicleCategory : uint8_t
{
	EListSpawnedVehiclesAdminCommandVehicleCategory__MotorizedVehicles               = 0,
	EListSpawnedVehiclesAdminCommandVehicleCategory__HumanPoweredVehicles            = 1,
	EListSpawnedVehiclesAdminCommandVehicleCategory__SUVs                            = 2,
	EListSpawnedVehiclesAdminCommandVehicleCategory__Quads                           = 3,
	EListSpawnedVehiclesAdminCommandVehicleCategory__Pickups                         = 4,
	EListSpawnedVehiclesAdminCommandVehicleCategory__Tractors                        = 5,
	EListSpawnedVehiclesAdminCommandVehicleCategory__Wheelbarrows                    = 6,
	EListSpawnedVehiclesAdminCommandVehicleCategory__Motorcycles                     = 7,
	EListSpawnedVehiclesAdminCommandVehicleCategory__Count                           = 8,
	EListSpawnedVehiclesAdminCommandVehicleCategory__EListSpawnedVehiclesAdminCommandVehicleCategory_MAX = 9
};

/// Enum /Script/ConZ.EVehicleSpawnProperty
/// Size: 0x03
enum EVehicleSpawnProperty : uint8_t
{
	EVehicleSpawnProperty__Location                                                  = 0,
	EVehicleSpawnProperty__Modifier                                                  = 1,
	EVehicleSpawnProperty__EVehicleSpawnProperty_MAX                                 = 2
};

/// Enum /Script/ConZ.EFlyingFindPathFailureResponse
/// Size: 0x05
enum EFlyingFindPathFailureResponse : uint8_t
{
	EFlyingFindPathFailureResponse__None                                             = 0,
	EFlyingFindPathFailureResponse__RandomNewDestination                             = 1,
	EFlyingFindPathFailureResponse__ReturnToPrevious                                 = 2,
	EFlyingFindPathFailureResponse__ForceMovement                                    = 3,
	EFlyingFindPathFailureResponse__EFlyingFindPathFailureResponse_MAX               = 4
};

/// Enum /Script/ConZ.EAnimalSpecies
/// Size: 0x18
enum EAnimalSpecies : uint8_t
{
	EAnimalSpecies__None                                                             = 0,
	EAnimalSpecies__Bear                                                             = 1,
	EAnimalSpecies__Bird                                                             = 2,
	EAnimalSpecies__Boar                                                             = 3,
	EAnimalSpecies__Chicken                                                          = 4,
	EAnimalSpecies__Cow                                                              = 5,
	EAnimalSpecies__Crow                                                             = 6,
	EAnimalSpecies__Deer                                                             = 7,
	EAnimalSpecies__Donkey                                                           = 8,
	EAnimalSpecies__Goat                                                             = 9,
	EAnimalSpecies__Horse                                                            = 10,
	EAnimalSpecies__Pig                                                              = 11,
	EAnimalSpecies__Rabbit                                                           = 12,
	EAnimalSpecies__Seagull                                                          = 13,
	EAnimalSpecies__Sheep                                                            = 14,
	EAnimalSpecies__Wolf                                                             = 15,
	EAnimalSpecies__Count                                                            = 16,
	EAnimalSpecies__EAnimalSpecies_MAX                                               = 17
};

/// Enum /Script/ConZ.EAnimalStance
/// Size: 0x05
enum EAnimalStance : uint8_t
{
	EAnimalStance__Breathing                                                         = 0,
	EAnimalStance__Idle                                                              = 1,
	EAnimalStance__Agressive                                                         = 2,
	EAnimalStance__Alerted                                                           = 3,
	EAnimalStance__EAnimalStance_MAX                                                 = 4
};

/// Enum /Script/ConZ.EAnimalActivityCycle
/// Size: 0x04
enum EAnimalActivityCycle : uint8_t
{
	EAnimalActivityCycle__Diurnal                                                    = 0,
	EAnimalActivityCycle__Nocturnal                                                  = 1,
	EAnimalActivityCycle__Both                                                       = 2,
	EAnimalActivityCycle__EAnimalActivityCycle_MAX                                   = 3
};

/// Enum /Script/ConZ.EAnimal2Sound
/// Size: 0x09
enum EAnimal2Sound : uint8_t
{
	EAnimal2Sound__None                                                              = 0,
	EAnimal2Sound__Idle                                                              = 1,
	EAnimal2Sound__Angry                                                             = 2,
	EAnimal2Sound__Attack                                                            = 3,
	EAnimal2Sound__TakeDamage                                                        = 4,
	EAnimal2Sound__Kill                                                              = 5,
	EAnimal2Sound__Scared                                                            = 6,
	EAnimal2Sound__Alerted                                                           = 7,
	EAnimal2Sound__EAnimal2Sound_MAX                                                 = 8
};

/// Enum /Script/ConZ.EDesiredParent
/// Size: 0x03
enum EDesiredParent : uint8_t
{
	EDesiredParent__Hands                                                            = 0,
	EDesiredParent__EquipmentSlot                                                    = 1,
	EDesiredParent__EDesiredParent_MAX                                               = 2
};

/// Enum /Script/ConZ.EAnimNotifyStaminDrainType
/// Size: 0x03
enum EAnimNotifyStaminDrainType : uint8_t
{
	EAnimNotifyStaminDrainType__OnBegin                                              = 0,
	EAnimNotifyStaminDrainType__Continous                                            = 1,
	EAnimNotifyStaminDrainType__EAnimNotifyStaminDrainType_MAX                       = 2
};

/// Enum /Script/ConZ.AnimNotifyState_FadeForAction
/// Size: 0x04
enum AnimNotifyState_FadeForAction : uint8_t
{
	AnimNotifyState_FadeForAction__All                                               = 0,
	AnimNotifyState_FadeForAction__InFirstPersonView                                 = 1,
	AnimNotifyState_FadeForAction__InThirdPersonView                                 = 2,
	AnimNotifyState_FadeForAction__AnimNotifyState_MAX                               = 3
};

/// Enum /Script/ConZ.EWaterZoneType
/// Size: 0x05
enum EWaterZoneType : uint8_t
{
	EWaterZoneType__None                                                             = 0,
	EWaterZoneType__Shallow                                                          = 1,
	EWaterZoneType__Deep                                                             = 2,
	EWaterZoneType__Weeds                                                            = 3,
	EWaterZoneType__EWaterZoneType_MAX                                               = 4
};

/// Enum /Script/ConZ.EButtonEventType
/// Size: 0x07
enum EButtonEventType : uint8_t
{
	EButtonEventType__None                                                           = 0,
	EButtonEventType__Hover                                                          = 1,
	EButtonEventType__ButtonPressed                                                  = 2,
	EButtonEventType__ButtonReleased                                                 = 3,
	EButtonEventType__ButtonAlerted                                                  = 4,
	EButtonEventType__Default                                                        = 0,
	EButtonEventType__EButtonEventType_MAX                                           = 5
};

/// Enum /Script/ConZ.EGridOccupancyFlag
/// Size: 0x06
enum EGridOccupancyFlag : uint8_t
{
	EGridOccupancyFlag__None                                                         = 0,
	EGridOccupancyFlag__BB_FlagArea                                                  = 1,
	EGridOccupancyFlag__Water                                                        = 2,
	EGridOccupancyFlag__TEC1Facility                                                 = 4,
	EGridOccupancyFlag__Default                                                      = 0,
	EGridOccupancyFlag__EGridOccupancyFlag_MAX                                       = 5
};

/// Enum /Script/ConZ.EBankCardType
/// Size: 0x06
enum EBankCardType : uint8_t
{
	EBankCardType__None                                                              = 0,
	EBankCardType__Starter                                                           = 1,
	EBankCardType__Classic                                                           = 2,
	EBankCardType__Gold                                                              = 3,
	EBankCardType__Count                                                             = 4,
	EBankCardType__EBankCardType_MAX                                                 = 5
};

/// Enum /Script/ConZ.EBankMinigameInitiatorType
/// Size: 0x06
enum EBankMinigameInitiatorType : uint8_t
{
	EBankMinigameInitiatorType__None                                                 = 0,
	EBankMinigameInitiatorType__ATM                                                  = 1,
	EBankMinigameInitiatorType__Banker                                               = 2,
	EBankMinigameInitiatorType__Defalut                                              = 1,
	EBankMinigameInitiatorType__Count                                                = 2,
	EBankMinigameInitiatorType__EBankMinigameInitiatorType_MAX                       = 3
};

/// Enum /Script/ConZ.ECardManagementOperation
/// Size: 0x04
enum ECardManagementOperation : uint8_t
{
	ECardManagementOperation__None                                                   = 0,
	ECardManagementOperation__Renewal                                                = 1,
	ECardManagementOperation__Cancellation                                           = 2,
	ECardManagementOperation__ECardManagementOperation_MAX                           = 3
};

/// Enum /Script/ConZ.ECardRenewalDisabledReason
/// Size: 0x04
enum ECardRenewalDisabledReason : uint8_t
{
	ECardRenewalDisabledReason__None                                                 = 0,
	ECardRenewalDisabledReason__AtATM                                                = 1,
	ECardRenewalDisabledReason__NoFreeRenewalsRemaining                              = 2,
	ECardRenewalDisabledReason__ECardRenewalDisabledReason_MAX                       = 3
};

/// Enum /Script/ConZ.EPinEntryReason
/// Size: 0x04
enum EPinEntryReason : uint8_t
{
	EPinEntryReason__None                                                            = 0,
	EPinEntryReason__CardCreation                                                    = 1,
	EPinEntryReason__CardUnlocking                                                   = 2,
	EPinEntryReason__EPinEntryReason_MAX                                             = 3
};

/// Enum /Script/ConZ.EBankATMCardUIType
/// Size: 0x05
enum EBankATMCardUIType : uint8_t
{
	EBankATMCardUIType__None                                                         = 0,
	EBankATMCardUIType__Starter                                                      = 1,
	EBankATMCardUIType__Classic                                                      = 2,
	EBankATMCardUIType__Gold                                                         = 3,
	EBankATMCardUIType__EBankATMCardUIType_MAX                                       = 4
};

/// Enum /Script/ConZ.ECraftingRecipeCategory
/// Size: 0x10
enum ECraftingRecipeCategory : uint8_t
{
	ECraftingRecipeCategory__None                                                    = 0,
	ECraftingRecipeCategory__Tools                                                   = 1,
	ECraftingRecipeCategory__Weapons                                                 = 2,
	ECraftingRecipeCategory__Drinks                                                  = 3,
	ECraftingRecipeCategory__Food                                                    = 4,
	ECraftingRecipeCategory__Clothes                                                 = 5,
	ECraftingRecipeCategory__BaseBuilding                                            = 6,
	ECraftingRecipeCategory__Fortifications                                          = 7,
	ECraftingRecipeCategory__Security                                                = 8,
	ECraftingRecipeCategory__ECraftingRecipeCategory_MAX                             = 9
};

/// Enum /Script/ConZ.EBlowAirAnimHeight
/// Size: 0x03
enum EBlowAirAnimHeight : uint8_t
{
	EBlowAirAnimHeight__Low                                                          = 0,
	EBlowAirAnimHeight__High                                                         = 1,
	EBlowAirAnimHeight__EBlowAirAnimHeight_MAX                                       = 2
};

/// Enum /Script/ConZ.EBlueprintItemActionType
/// Size: 0x04
enum EBlueprintItemActionType : uint8_t
{
	EBlueprintItemActionType__BlueprintPlaced                                        = 0,
	EBlueprintItemActionType__BlueprintFilled                                        = 1,
	EBlueprintItemActionType__BlueprintCompleted                                     = 2,
	EBlueprintItemActionType__EBlueprintItemActionType_MAX                           = 3
};

/// Enum /Script/ConZ.EBoatSDFType
/// Size: 0x04
enum EBoatSDFType : uint8_t
{
	EBoatSDFType__None                                                               = 0,
	EBoatSDFType__SM_MotorBoat_01                                                    = 1,
	EBoatSDFType__SM_MotorBoat_02                                                    = 2,
	EBoatSDFType__EBoatSDFType_MAX                                                   = 3
};

/// Enum /Script/ConZ.EBoatSailsState
/// Size: 0x04
enum EBoatSailsState : uint8_t
{
	EBoatSailsState__Folded                                                          = 0,
	EBoatSailsState__Deployed                                                        = 1,
	EBoatSailsState__Broken                                                          = 2,
	EBoatSailsState__EBoatSailsState_MAX                                             = 3
};

/// Enum /Script/ConZ.EBoatControlType
/// Size: 0x05
enum EBoatControlType : uint8_t
{
	EBoatControlType__MotorProppeled                                                 = 0,
	EBoatControlType__Rowing                                                         = 1,
	EBoatControlType__Paddling                                                       = 2,
	EBoatControlType__Sailing                                                        = 3,
	EBoatControlType__EBoatControlType_MAX                                           = 4
};

/// Enum /Script/ConZ.ESplineAxis
/// Size: 0x04
enum ESplineAxis : uint8_t
{
	ESplineAxis__X                                                                   = 0,
	ESplineAxis__Y                                                                   = 1,
	ESplineAxis__Z                                                                   = 2,
	ESplineAxis__ESplineAxis_MAX                                                     = 3
};

/// Enum /Script/ConZ.EWireType
/// Size: 0x05
enum EWireType : uint8_t
{
	EWireType__Green                                                                 = 0,
	EWireType__Yellow                                                                = 1,
	EWireType__Red                                                                   = 2,
	EWireType__Count                                                                 = 3,
	EWireType__EWireType_MAX                                                         = 4
};

/// Enum /Script/ConZ.EBoundBodyPart
/// Size: 0x04
enum EBoundBodyPart : uint8_t
{
	EBoundBodyPart__Hands                                                            = 0,
	EBoundBodyPart__Feet                                                             = 1,
	EBoundBodyPart__HandsInitial                                                     = 2,
	EBoundBodyPart__EBoundBodyPart_MAX                                               = 3
};

/// Enum /Script/ConZ.EBrennerStimulusTag
/// Size: 0x05
enum EBrennerStimulusTag : uint8_t
{
	EBrennerStimulusTag__Generic                                                     = 0,
	EBrennerStimulusTag__Alarm                                                       = 1,
	EBrennerStimulusTag__Target                                                      = 2,
	EBrennerStimulusTag__Count                                                       = 3,
	EBrennerStimulusTag__EBrennerStimulusTag_MAX                                     = 4
};

/// Enum /Script/ConZ.EBrennerAnimation
/// Size: 0x07
enum EBrennerAnimation : uint8_t
{
	EBrennerAnimation__ExitHibernationChamber                                        = 0,
	EBrennerAnimation__InvestigateArea                                               = 1,
	EBrennerAnimation__OpenDoubleDoors                                               = 2,
	EBrennerAnimation__Rage                                                          = 3,
	EBrennerAnimation__Twitch                                                        = 4,
	EBrennerAnimation__Count                                                         = 5,
	EBrennerAnimation__EBrennerAnimation_MAX                                         = 6
};

/// Enum /Script/ConZ.EBrennerAttackType
/// Size: 0x08
enum EBrennerAttackType : uint8_t
{
	EBrennerAttackType__Front                                                        = 0,
	EBrennerAttackType__Back                                                         = 1,
	EBrennerAttackType__Leg                                                          = 2,
	EBrennerAttackType__AllAround                                                    = 3,
	EBrennerAttackType__Charge                                                       = 4,
	EBrennerAttackType__Flamethrower                                                 = 5,
	EBrennerAttackType__Count                                                        = 6,
	EBrennerAttackType__EBrennerAttackType_MAX                                       = 7
};

/// Enum /Script/ConZ.EBrennerMovementPace
/// Size: 0x05
enum EBrennerMovementPace : uint8_t
{
	EBrennerMovementPace__Slow                                                       = 0,
	EBrennerMovementPace__Medium                                                     = 1,
	EBrennerMovementPace__Fast                                                       = 2,
	EBrennerMovementPace__Count                                                      = 3,
	EBrennerMovementPace__EBrennerMovementPace_MAX                                   = 4
};

/// Enum /Script/ConZ.EBrennerState
/// Size: 0x12
enum EBrennerState : uint8_t
{
	EBrennerState__None                                                              = 0,
	EBrennerState__Hibernate                                                         = 1,
	EBrennerState__ExitChamber                                                       = 2,
	EBrennerState__Alerted                                                           = 3,
	EBrennerState__InvestigateArea                                                   = 4,
	EBrennerState__Combat                                                            = 5,
	EBrennerState__OpenDoor                                                          = 6,
	EBrennerState__ReturnToHibernation                                               = 7,
	EBrennerState__Rage                                                              = 8,
	EBrennerState__HitReact                                                          = 9,
	EBrennerState__Count                                                             = 10,
	EBrennerState__EBrennerState_MAX                                                 = 11
};

/// Enum /Script/ConZ.EBruiseZone
/// Size: 0x05
enum EBruiseZone : uint8_t
{
	EBruiseZone__Left                                                                = 0,
	EBruiseZone__Middle                                                              = 1,
	EBruiseZone__Right                                                               = 2,
	EBruiseZone__Count                                                               = 3,
	EBruiseZone__EBruiseZone_MAX                                                     = 4
};

/// Enum /Script/ConZ.EBruiseLayer
/// Size: 0x05
enum EBruiseLayer : uint8_t
{
	EBruiseLayer__Light                                                              = 0,
	EBruiseLayer__Medium                                                             = 1,
	EBruiseLayer__Hard                                                               = 2,
	EBruiseLayer__Count                                                              = 3,
	EBruiseLayer__EBruiseLayer_MAX                                                   = 4
};

/// Enum /Script/ConZ.ECardinalDirection
/// Size: 0x06
enum ECardinalDirection : uint8_t
{
	ECardinalDirection__None                                                         = 0,
	ECardinalDirection__North                                                        = 1,
	ECardinalDirection__East                                                         = 2,
	ECardinalDirection__South                                                        = 3,
	ECardinalDirection__West                                                         = 4,
	ECardinalDirection__ECardinalDirection_MAX                                       = 5
};

/// Enum /Script/ConZ.EChainsawEngineState
/// Size: 0x03
enum EChainsawEngineState : uint8_t
{
	EChainsawEngineState__TurnedOff                                                  = 0,
	EChainsawEngineState__TurnedOn                                                   = 1,
	EChainsawEngineState__EChainsawEngineState_MAX                                   = 2
};

/// Enum /Script/ConZ.EChainsawOwnerRelatedFunctionalityState
/// Size: 0x05
enum EChainsawOwnerRelatedFunctionalityState : uint8_t
{
	EChainsawOwnerRelatedFunctionalityState__Default                                 = 0,
	EChainsawOwnerRelatedFunctionalityState__PlayingSound                            = 1,
	EChainsawOwnerRelatedFunctionalityState__PendingTurnOn                           = 2,
	EChainsawOwnerRelatedFunctionalityState__PendingTurnOff                          = 3,
	EChainsawOwnerRelatedFunctionalityState__EChainsawOwnerRelatedFunctionalityState_MAX = 4
};

/// Enum /Script/ConZ.ERotateOnArrivalMode
/// Size: 0x04
enum ERotateOnArrivalMode : uint8_t
{
	ERotateOnArrivalMode__DoNotRotate                                                = 0,
	ERotateOnArrivalMode__SetToGoalRotation                                          = 1,
	ERotateOnArrivalMode__RotateTowardsGoalLocation                                  = 2,
	ERotateOnArrivalMode__ERotateOnArrivalMode_MAX                                   = 3
};

/// Enum /Script/ConZ.ECharacterActionActivity
/// Size: 0x03
enum ECharacterActionActivity : uint8_t
{
	ECharacterActionActivity__None                                                   = 0,
	ECharacterActionActivity__AimDownTheSights                                       = 1,
	ECharacterActionActivity__ECharacterActionActivity_MAX                           = 2
};

/// Enum /Script/ConZ.ECharacterActionTerminatingEvent
/// Size: 0x05
enum ECharacterActionTerminatingEvent : uint8_t
{
	ECharacterActionTerminatingEvent__Generic                                        = 0,
	ECharacterActionTerminatingEvent__InputKeyEsc                                    = 1,
	ECharacterActionTerminatingEvent__ToolUnavailable                                = 2,
	ECharacterActionTerminatingEvent__FirePressed                                    = 3,
	ECharacterActionTerminatingEvent__ECharacterActionTerminatingEvent_MAX           = 4
};

/// Enum /Script/ConZ.ECharacterActionNotifyType
/// Size: 0x32
enum ECharacterActionNotifyType : uint8_t
{
	ECharacterActionNotifyType__None                                                 = 0,
	ECharacterActionNotifyType__AddMagazine                                          = 1,
	ECharacterActionNotifyType__RemoveMagazine                                       = 2,
	ECharacterActionNotifyType__InsertCartridge                                      = 3,
	ECharacterActionNotifyType__InsertCartridgeAtFront                               = 4,
	ECharacterActionNotifyType__SwapWeapons                                          = 5,
	ECharacterActionNotifyType__Chop                                                 = 6,
	ECharacterActionNotifyType__CommitSuicide                                        = 7,
	ECharacterActionNotifyType__IgniteFlare                                          = 8,
	ECharacterActionNotifyType__BuryBreach                                           = 9,
	ECharacterActionNotifyType__BuryDump                                             = 10,
	ECharacterActionNotifyType__ThrowFPReleased                                      = 11,
	ECharacterActionNotifyType__ThrowTPReleased                                      = 12,
	ECharacterActionNotifyType__ThrowFinished                                        = 13,
	ECharacterActionNotifyType__StopUsingHandCorrections                             = 14,
	ECharacterActionNotifyType__PinPulled                                            = 15,
	ECharacterActionNotifyType__Unmount                                              = 16,
	ECharacterActionNotifyType__ChangeWeaponFiringMode                               = 17,
	ECharacterActionNotifyType__OpenDoor                                             = 18,
	ECharacterActionNotifyType__CloseDoor                                            = 19,
	ECharacterActionNotifyType__RemoveAmmoFromWeapon                                 = 20,
	ECharacterActionNotifyType__CheckWeaponAmmo                                      = 21,
	ECharacterActionNotifyType__CheckWeaponFiringMode                                = 22,
	ECharacterActionNotifyType__ChainsawStartEngineLoop                              = 23,
	ECharacterActionNotifyType__ShowItemStatus                                       = 24,
	ECharacterActionNotifyType__SpawnParticles                                       = 25,
	ECharacterActionNotifyType__DestroyParticles                                     = 26,
	ECharacterActionNotifyType__StartFire                                            = 27,
	ECharacterActionNotifyType__Urinate                                              = 28,
	ECharacterActionNotifyType__ShowPenis                                            = 29,
	ECharacterActionNotifyType__HidePenis                                            = 30,
	ECharacterActionNotifyType__ECharacterActionNotifyType_MAX                       = 31
};

/// Enum /Script/ConZ.ECharacterActionState
/// Size: 0x05
enum ECharacterActionState : uint8_t
{
	ECharacterActionState__None                                                      = 0,
	ECharacterActionState__WaitingBeginOnServer                                      = 1,
	ECharacterActionState__Executing                                                 = 2,
	ECharacterActionState__Ended                                                     = 3,
	ECharacterActionState__ECharacterActionState_MAX                                 = 4
};

/// Enum /Script/ConZ.ECharacterActionFlags
/// Size: 0x05
enum ECharacterActionFlags : uint8_t
{
	ECharacterActionFlags__None                                                      = 0,
	ECharacterActionFlags__ClientWaitBeginOnServer                                   = 1,
	ECharacterActionFlags__AllWaitEndOnOwningClient                                  = 2,
	ECharacterActionFlags__CanBeAborted                                              = 4,
	ECharacterActionFlags__ECharacterActionFlags_MAX                                 = 5
};

/// Enum /Script/ConZ.ECharacterActionConstraint
/// Size: 0x08
enum ECharacterActionConstraint : uint8_t
{
	ECharacterActionConstraint__None                                                 = 0,
	ECharacterActionConstraint__Move                                                 = 1,
	ECharacterActionConstraint__Turn                                                 = 2,
	ECharacterActionConstraint__Stance                                               = 8,
	ECharacterActionConstraint__ProneInOut                                           = 16,
	ECharacterActionConstraint__Lean                                                 = 32,
	ECharacterActionConstraint__ControlVehicle                                       = 64,
	ECharacterActionConstraint__ECharacterActionConstraint_MAX                       = 65
};

/// Enum /Script/ConZ.ECharacterLegsImpactSoundCategory
/// Size: 0x05
enum ECharacterLegsImpactSoundCategory : uint8_t
{
	ECharacterLegsImpactSoundCategory__Any                                           = 0,
	ECharacterLegsImpactSoundCategory__Bare                                          = 1,
	ECharacterLegsImpactSoundCategory__Blocked                                       = 2,
	ECharacterLegsImpactSoundCategory__LightlyClothed                                = 3,
	ECharacterLegsImpactSoundCategory__ECharacterLegsImpactSoundCategory_MAX         = 4
};

/// Enum /Script/ConZ.ECharacterArmsImpactSoundCategory
/// Size: 0x05
enum ECharacterArmsImpactSoundCategory : uint8_t
{
	ECharacterArmsImpactSoundCategory__Any                                           = 0,
	ECharacterArmsImpactSoundCategory__Bare                                          = 1,
	ECharacterArmsImpactSoundCategory__Blocked                                       = 2,
	ECharacterArmsImpactSoundCategory__LightlyClothed                                = 3,
	ECharacterArmsImpactSoundCategory__ECharacterArmsImpactSoundCategory_MAX         = 4
};

/// Enum /Script/ConZ.ECharacterTorsoImpactSoundCategory
/// Size: 0x05
enum ECharacterTorsoImpactSoundCategory : uint8_t
{
	ECharacterTorsoImpactSoundCategory__Any                                          = 0,
	ECharacterTorsoImpactSoundCategory__Bare                                         = 1,
	ECharacterTorsoImpactSoundCategory__Blocked                                      = 2,
	ECharacterTorsoImpactSoundCategory__LightlyClothed                               = 3,
	ECharacterTorsoImpactSoundCategory__ECharacterTorsoImpactSoundCategory_MAX       = 4
};

/// Enum /Script/ConZ.ECharacterHeadImpactSoundCategory
/// Size: 0x05
enum ECharacterHeadImpactSoundCategory : uint8_t
{
	ECharacterHeadImpactSoundCategory__Any                                           = 0,
	ECharacterHeadImpactSoundCategory__Bare                                          = 1,
	ECharacterHeadImpactSoundCategory__Blocked                                       = 2,
	ECharacterHeadImpactSoundCategory__Helmet                                        = 3,
	ECharacterHeadImpactSoundCategory__ECharacterHeadImpactSoundCategory_MAX         = 4
};

/// Enum /Script/ConZ.ECharacterPainSoundSeverity
/// Size: 0x07
enum ECharacterPainSoundSeverity : uint8_t
{
	ECharacterPainSoundSeverity__Light                                               = 0,
	ECharacterPainSoundSeverity__Medium                                              = 1,
	ECharacterPainSoundSeverity__Heavy                                               = 2,
	ECharacterPainSoundSeverity__Stun                                                = 3,
	ECharacterPainSoundSeverity__Knockout                                            = 4,
	ECharacterPainSoundSeverity__Death                                               = 5,
	ECharacterPainSoundSeverity__ECharacterPainSoundSeverity_MAX                     = 6
};

/// Enum /Script/ConZ.ECharacterSpawnerRange
/// Size: 0x03
enum ECharacterSpawnerRange : uint8_t
{
	ECharacterSpawnerRange__Long                                                     = 0,
	ECharacterSpawnerRange__Short                                                    = 1,
	ECharacterSpawnerRange__ECharacterSpawnerRange_MAX                               = 2
};

/// Enum /Script/ConZ.ESpawnType
/// Size: 0x04
enum ESpawnType : uint8_t
{
	ESpawnType__POI                                                                  = 0,
	ESpawnType__Exterior                                                             = 1,
	ESpawnType__Interior                                                             = 2,
	ESpawnType__ESpawnType_MAX                                                       = 3
};

/// Enum /Script/ConZ.ECharacterStatsOrderByField
/// Size: 0x05
enum ECharacterStatsOrderByField : uint8_t
{
	ECharacterStatsOrderByField__FamePoints                                          = 0,
	ECharacterStatsOrderByField__EventScore                                          = 1,
	ECharacterStatsOrderByField__EventKills                                          = 2,
	ECharacterStatsOrderByField__EventDeaths                                         = 3,
	ECharacterStatsOrderByField__ECharacterStatsOrderByField_MAX                     = 4
};

/// Enum /Script/ConZ.ESpamSeverity
/// Size: 0x06
enum ESpamSeverity : uint8_t
{
	ESpamSeverity__None                                                              = 0,
	ESpamSeverity__Mild                                                              = 1,
	ESpamSeverity__Medium                                                            = 2,
	ESpamSeverity__Severe                                                            = 3,
	ESpamSeverity__Extreme                                                           = 4,
	ESpamSeverity__Max                                                               = 4
};

/// Enum /Script/ConZ.EChatType
/// Size: 0x09
enum EChatType : uint8_t
{
	EChatType__Default                                                               = 0,
	EChatType__Local                                                                 = 1,
	EChatType__Global                                                                = 2,
	EChatType__Squad                                                                 = 3,
	EChatType__Admin                                                                 = 4,
	EChatType__CommandsOnly                                                          = 5,
	EChatType__ServerMessage                                                         = 6,
	EChatType__Error                                                                 = 7,
	EChatType__EChatType_MAX                                                         = 8
};

/// Enum /Script/ConZ.EMusicPlayerCommandType
/// Size: 0x04
enum EMusicPlayerCommandType : uint8_t
{
	EMusicPlayerCommandType__TurnOnOff                                               = 0,
	EMusicPlayerCommandType__PlayPause                                               = 1,
	EMusicPlayerCommandType__RadioMusicPlayer                                        = 2,
	EMusicPlayerCommandType__EMusicPlayerCommandType_MAX                             = 3
};

/// Enum /Script/ConZ.EInteractionTargetType
/// Size: 0x04
enum EInteractionTargetType : uint8_t
{
	EInteractionTargetType__Self                                                     = 0,
	EInteractionTargetType__HoveredInteractable                                      = 1,
	EInteractionTargetType__Specified                                                = 2,
	EInteractionTargetType__EInteractionTargetType_MAX                               = 3
};

/// Enum /Script/ConZ.EClothesDamageVisualState
/// Size: 0x06
enum EClothesDamageVisualState : uint8_t
{
	EClothesDamageVisualState__None                                                  = 0,
	EClothesDamageVisualState__SmallDamage                                           = 1,
	EClothesDamageVisualState__BigDamage                                             = 2,
	EClothesDamageVisualState__SmallPatches                                          = 4,
	EClothesDamageVisualState__BigPatches                                            = 8,
	EClothesDamageVisualState__EClothesDamageVisualState_MAX                         = 9
};

/// Enum /Script/ConZ.ECollisionDamageType
/// Size: 0x06
enum ECollisionDamageType : uint8_t
{
	ECollisionDamageType__Undefined                                                  = 0,
	ECollisionDamageType__PhysicalCollision                                          = 1,
	ECollisionDamageType__Melee                                                      = 2,
	ECollisionDamageType__Projectile                                                 = 3,
	ECollisionDamageType__Throw                                                      = 4,
	ECollisionDamageType__ECollisionDamageType_MAX                                   = 5
};

/// Enum /Script/ConZ.ECompassType
/// Size: 0x07
enum ECompassType : uint8_t
{
	ECompassType__None                                                               = 0,
	ECompassType__NorthOnly                                                          = 1,
	ECompassType__CardinalOnly                                                       = 2,
	ECompassType__CardinalAndIntercardinal                                           = 3,
	ECompassType__Everything                                                         = 4,
	ECompassType__Count                                                              = 5,
	ECompassType__ECompassType_MAX                                                   = 6
};

/// Enum /Script/ConZ.EAnimalMovementPace
/// Size: 0x05
enum EAnimalMovementPace : uint8_t
{
	EAnimalMovementPace__Sneak                                                       = 0,
	EAnimalMovementPace__Walk                                                        = 1,
	EAnimalMovementPace__Trot                                                        = 2,
	EAnimalMovementPace__Run                                                         = 3,
	EAnimalMovementPace__EAnimalMovementPace_MAX                                     = 4
};

/// Enum /Script/ConZ.EAnimalAgressivness
/// Size: 0x04
enum EAnimalAgressivness : uint8_t
{
	EAnimalAgressivness__Timid                                                       = 0,
	EAnimalAgressivness__Moderate                                                    = 1,
	EAnimalAgressivness__Agressive                                                   = 2,
	EAnimalAgressivness__EAnimalAgressivness_MAX                                     = 3
};

/// Enum /Script/ConZ.EAnimalMode
/// Size: 0x08
enum EAnimalMode : uint8_t
{
	EAnimalMode__None                                                                = 0,
	EAnimalMode__Roam                                                                = 1,
	EAnimalMode__Alert                                                               = 2,
	EAnimalMode__Observe                                                             = 3,
	EAnimalMode__TrotAway                                                            = 4,
	EAnimalMode__Aggro                                                               = 5,
	EAnimalMode__Flee                                                                = 6,
	EAnimalMode__EAnimalMode_MAX                                                     = 7
};

/// Enum /Script/ConZ.EBaseBuildingDebugMode
/// Size: 0x06
enum EBaseBuildingDebugMode : uint8_t
{
	EBaseBuildingDebugMode__None                                                     = 0,
	EBaseBuildingDebugMode__Basic                                                    = 1,
	EBaseBuildingDebugMode__RadialDamage                                             = 2,
	EBaseBuildingDebugMode__InteractionZones                                         = 3,
	EBaseBuildingDebugMode__BaseBounds                                               = 4,
	EBaseBuildingDebugMode__EBaseBuildingDebugMode_MAX                               = 5
};

/// Enum /Script/ConZ.EConZBaseErrorMessage
/// Size: 0x11
enum EConZBaseErrorMessage : uint8_t
{
	EConZBaseErrorMessage__None                                                      = 0,
	EConZBaseErrorMessage__CantPlaceAreaRestricted                                   = 1,
	EConZBaseErrorMessage__CantPlaceDuplicateFlag                                    = 2,
	EConZBaseErrorMessage__CantPlaceEnemyFlag                                        = 3,
	EConZBaseErrorMessage__CantPlaceMustBeOnFoundation                               = 4,
	EConZBaseErrorMessage__CantPlaceOnOtherElements                                  = 5,
	EConZBaseErrorMessage__CantPlaceNoBase                                           = 6,
	EConZBaseErrorMessage__CantPlaceNoFlag                                           = 7,
	EConZBaseErrorMessage__CantPlaceMaxInstances                                     = 8,
	EConZBaseErrorMessage__CantPlaceNotSquadLeaderToPlaceFlag                        = 9,
	EConZBaseErrorMessage__EConZBaseErrorMessage_MAX                                 = 10
};

/// Enum /Script/ConZ.EConZBaseEventType
/// Size: 0x04
enum EConZBaseEventType : uint8_t
{
	EConZBaseEventType__None                                                         = 0,
	EConZBaseEventType__ElementConstructed                                           = 1,
	EConZBaseEventType__ElementRepaired                                              = 2,
	EConZBaseEventType__EConZBaseEventType_MAX                                       = 3
};

/// Enum /Script/ConZ.EConZPlacementHeightType
/// Size: 0x04
enum EConZPlacementHeightType : uint8_t
{
	EConZPlacementHeightType__LowestPointHeight                                      = 0,
	EConZPlacementHeightType__HighestPointHeight                                     = 1,
	EConZPlacementHeightType__AveragePointHeight                                     = 2,
	EConZPlacementHeightType__EConZPlacementHeightType_MAX                           = 3
};

/// Enum /Script/ConZ.FConZBaseFlagType
/// Size: 0x04
enum FConZBaseFlagType : uint8_t
{
	FConZBaseFlagType__None                                                          = 0,
	FConZBaseFlagType__Friendly                                                      = 1,
	FConZBaseFlagType__Enemy                                                         = 2,
	FConZBaseFlagType__FConZBaseFlagType_MAX                                         = 3
};

/// Enum /Script/ConZ.EDestroyElementReason
/// Size: 0x07
enum EDestroyElementReason : uint8_t
{
	EDestroyElementReason__None                                                      = 0,
	EDestroyElementReason__User                                                      = 1,
	EDestroyElementReason__Upgrade                                                   = 2,
	EDestroyElementReason__Internal                                                  = 3,
	EDestroyElementReason__Damage                                                    = 4,
	EDestroyElementReason__Decay                                                     = 5,
	EDestroyElementReason__EDestroyElementReason_MAX                                 = 6
};

/// Enum /Script/ConZ.ECreateElementReason
/// Size: 0x03
enum ECreateElementReason : uint8_t
{
	ECreateElementReason__Default                                                    = 0,
	ECreateElementReason__Load                                                       = 1,
	ECreateElementReason__ECreateElementReason_MAX                                   = 2
};

/// Enum /Script/ConZ.ESnapMarkerOverrideType
/// Size: 0x05
enum ESnapMarkerOverrideType : uint8_t
{
	ESnapMarkerOverrideType__LeaveAll                                                = 0,
	ESnapMarkerOverrideType__LeaveAllButSpecified                                    = 1,
	ESnapMarkerOverrideType__RemoveAll                                               = 2,
	ESnapMarkerOverrideType__RemoveAllButSpecified                                   = 3,
	ESnapMarkerOverrideType__ESnapMarkerOverrideType_MAX                             = 4
};

/// Enum /Script/ConZ.EElementSnapMarkerSocketType
/// Size: 0x18
enum EElementSnapMarkerSocketType : uint32_t
{
	EElementSnapMarkerSocketType__None                                               = 0,
	EElementSnapMarkerSocketType__Horizontal                                         = 1,
	EElementSnapMarkerSocketType__VerticalTop                                        = 2,
	EElementSnapMarkerSocketType__VerticalBottom                                     = 4,
	EElementSnapMarkerSocketType__TowerLevel1                                        = 8,
	EElementSnapMarkerSocketType__TowerLevel2                                        = 16,
	EElementSnapMarkerSocketType__Door                                               = 32,
	EElementSnapMarkerSocketType__WallSocket                                         = 64,
	EElementSnapMarkerSocketType__CeilingSocket                                      = 128,
	EElementSnapMarkerSocketType__Stairs                                             = 256,
	EElementSnapMarkerSocketType__WallPlatform                                       = 512,
	EElementSnapMarkerSocketType__BedTop                                             = 1024,
	EElementSnapMarkerSocketType__HorizontalLeft                                     = 2048,
	EElementSnapMarkerSocketType__HorizontalRight                                    = 4096,
	EElementSnapMarkerSocketType__EmptySocket13                                      = 8192,
	EElementSnapMarkerSocketType__EmptySocket14                                      = 16384,
	EElementSnapMarkerSocketType__EmptySocket15                                      = 32768,
	EElementSnapMarkerSocketType__EElementSnapMarkerSocketType_MAX                   = 32769
};

/// Enum /Script/ConZ.EBaseElementType
/// Size: 0x21
enum EBaseElementType : uint32_t
{
	EBaseElementType__None                                                           = 0,
	EBaseElementType__Default                                                        = 1,
	EBaseElementType__WoodenPalisade                                                 = 2,
	EBaseElementType__SandBox                                                        = 4,
	EBaseElementType__Door                                                           = 8,
	EBaseElementType__Well                                                           = 16,
	EBaseElementType__Platform                                                       = 32,
	EBaseElementType__Watchtower                                                     = 64,
	EBaseElementType__GunRack                                                        = 128,
	EBaseElementType__Foundation                                                     = 256,
	EBaseElementType__Flag                                                           = 512,
	EBaseElementType__WallOrnament                                                   = 1024,
	EBaseElementType__CeilingOrnament                                                = 2048,
	EBaseElementType__Cabin                                                          = 4096,
	EBaseElementType__Stairs                                                         = 8192,
	EBaseElementType__NewWalls                                                       = 16384,
	EBaseElementType__WallGunRack                                                    = 32768,
	EBaseElementType__Modular                                                        = 65536,
	EBaseElementType__ModularFoundation                                              = 65792,
	EBaseElementType__All                                                            = 1048575,
	EBaseElementType__EBaseElementType_MAX                                           = 1048576
};

/// Enum /Script/ConZ.EBoatSailsState_Deprecated
/// Size: 0x04
enum EBoatSailsState_Deprecated : uint8_t
{
	EBoatSailsState_Deprecated__Folded                                               = 0,
	EBoatSailsState_Deprecated__Deployed                                             = 1,
	EBoatSailsState_Deprecated__Broken                                               = 2,
	EBoatSailsState_Deprecated__EBoatSailsState_MAX                                  = 3
};

/// Enum /Script/ConZ.EBoatMountControlType_Deprecated
/// Size: 0x05
enum EBoatMountControlType_Deprecated : uint8_t
{
	EBoatMountControlType_Deprecated__MotorProppeled                                 = 0,
	EBoatMountControlType_Deprecated__Rowing                                         = 1,
	EBoatMountControlType_Deprecated__Paddling                                       = 2,
	EBoatMountControlType_Deprecated__Sailing                                        = 3,
	EBoatMountControlType_Deprecated__EBoatMountControlType_MAX                      = 4
};

/// Enum /Script/ConZ.EBorderSizes
/// Size: 0x04
enum EBorderSizes : uint8_t
{
	EBorderSizes__OneByOne                                                           = 0,
	EBorderSizes__TwoByTwo                                                           = 1,
	EBorderSizes__FourByFour                                                         = 2,
	EBorderSizes__EBorderSizes_MAX                                                   = 3
};

/// Enum /Script/ConZ.ECharacterHostileState
/// Size: 0x05
enum ECharacterHostileState : uint8_t
{
	ECharacterHostileState__None                                                     = 0,
	ECharacterHostileState__Idle                                                     = 1,
	ECharacterHostileState__AlertedWithoutLineOfSight                                = 2,
	ECharacterHostileState__AlertedWithLineOfSight                                   = 3,
	ECharacterHostileState__ECharacterHostileState_MAX                               = 4
};

/// Enum /Script/ConZ.EMultiplayerDisabledReason
/// Size: 0x04
enum EMultiplayerDisabledReason : uint8_t
{
	EMultiplayerDisabledReason__None                                                 = 0,
	EMultiplayerDisabledReason__FileIntegrityCompromised                             = 1,
	EMultiplayerDisabledReason__DllIntegrityCompromised                              = 2,
	EMultiplayerDisabledReason__EMultiplayerDisabledReason_MAX                       = 3
};

/// Enum /Script/ConZ.EPlayPreparationsState
/// Size: 0x11
enum EPlayPreparationsState : uint8_t
{
	EPlayPreparationsState__StreamingCheck                                           = 0,
	EPlayPreparationsState__AuthSend                                                 = 1,
	EPlayPreparationsState__AuthReceive                                              = 2,
	EPlayPreparationsState__InitialSyncSend                                          = 3,
	EPlayPreparationsState__InitialSyncReceive                                       = 4,
	EPlayPreparationsState__ProcessInitialSync                                       = 5,
	EPlayPreparationsState__SucceededSyncSend                                        = 6,
	EPlayPreparationsState__SucceededSyncReceive                                     = 7,
	EPlayPreparationsState__Succeeded                                                = 8,
	EPlayPreparationsState__Failed                                                   = 9,
	EPlayPreparationsState__EPlayPreparationsState_MAX                               = 10
};

/// Enum /Script/ConZ.EGameplayLogCategory
/// Size: 0x07
enum EGameplayLogCategory : uint8_t
{
	EGameplayLogCategory__None                                                       = 0,
	EGameplayLogCategory__LogMinigame                                                = 1,
	EGameplayLogCategory__LogTrap                                                    = 2,
	EGameplayLogCategory__LogBaseBuilding                                            = 3,
	EGameplayLogCategory__LogExplosives                                              = 4,
	EGameplayLogCategory__LogBCU                                                     = 5,
	EGameplayLogCategory__EGameplayLogCategory_MAX                                   = 6
};

/// Enum /Script/ConZ.EConZWaterSplineType
/// Size: 0x06
enum EConZWaterSplineType : uint8_t
{
	EConZWaterSplineType__None                                                       = 0,
	EConZWaterSplineType__River                                                      = 1,
	EConZWaterSplineType__Lake                                                       = 2,
	EConZWaterSplineType__Ocean                                                      = 3,
	EConZWaterSplineType__Island                                                     = 4,
	EConZWaterSplineType__EConZWaterSplineType_MAX                                   = 5
};

/// Enum /Script/ConZ.ECookingControlButtonVisual
/// Size: 0x05
enum ECookingControlButtonVisual : uint8_t
{
	ECookingControlButtonVisual__Disabled                                            = 0,
	ECookingControlButtonVisual__Normal                                              = 1,
	ECookingControlButtonVisual__Hovered                                             = 2,
	ECookingControlButtonVisual__Clicked                                             = 3,
	ECookingControlButtonVisual__ECookingControlButtonVisual_MAX                     = 4
};

/// Enum /Script/ConZ.ECookingControlButtonState
/// Size: 0x08
enum ECookingControlButtonState : uint8_t
{
	ECookingControlButtonState__RemoveRecipe                                         = 0,
	ECookingControlButtonState__RemoveRecipeUnavailable                              = 1,
	ECookingControlButtonState__Cook                                                 = 2,
	ECookingControlButtonState__CookCancel                                           = 3,
	ECookingControlButtonState__CookUnavailable                                      = 4,
	ECookingControlButtonState__Timer                                                = 5,
	ECookingControlButtonState__Throbber                                             = 6,
	ECookingControlButtonState__ECookingControlButtonState_MAX                       = 7
};

/// Enum /Script/ConZ.ECookingDialDetailLevel
/// Size: 0x06
enum ECookingDialDetailLevel : uint8_t
{
	ECookingDialDetailLevel__NoSkill                                                 = 0,
	ECookingDialDetailLevel__Basic                                                   = 1,
	ECookingDialDetailLevel__Medium                                                  = 2,
	ECookingDialDetailLevel__Advanced                                                = 3,
	ECookingDialDetailLevel__AdvancedPlus                                            = 3,
	ECookingDialDetailLevel__ECookingDialDetailLevel_MAX                             = 4
};

/// Enum /Script/ConZ.ECookingIngredientQuantityType
/// Size: 0x03
enum ECookingIngredientQuantityType : uint8_t
{
	ECookingIngredientQuantityType__Solid                                            = 0,
	ECookingIngredientQuantityType__Liquid                                           = 1,
	ECookingIngredientQuantityType__ECookingIngredientQuantityType_MAX               = 2
};

/// Enum /Script/ConZ.ECookingTemperatureControlType
/// Size: 0x04
enum ECookingTemperatureControlType : uint8_t
{
	ECookingTemperatureControlType__Linear                                           = 0,
	ECookingTemperatureControlType__Radial                                           = 1,
	ECookingTemperatureControlType__NotAvailable                                     = 2,
	ECookingTemperatureControlType__ECookingTemperatureControlType_MAX               = 3
};

/// Enum /Script/ConZ.ECookingIngredientNecessity
/// Size: 0x04
enum ECookingIngredientNecessity : uint8_t
{
	ECookingIngredientNecessity__None                                                = 0,
	ECookingIngredientNecessity__Main                                                = 1,
	ECookingIngredientNecessity__Optional                                            = 2,
	ECookingIngredientNecessity__ECookingIngredientNecessity_MAX                     = 3
};

/// Enum /Script/ConZ.EFoodCookLevel
/// Size: 0x06
enum EFoodCookLevel : uint8_t
{
	EFoodCookLevel__Raw                                                              = 0,
	EFoodCookLevel__Undercooked                                                      = 1,
	EFoodCookLevel__Cooked                                                           = 2,
	EFoodCookLevel__Overcooked                                                       = 3,
	EFoodCookLevel__Burned                                                           = 4,
	EFoodCookLevel__EFoodCookLevel_MAX                                               = 5
};

/// Enum /Script/ConZ.EFoodCookQuality
/// Size: 0x07
enum EFoodCookQuality : uint8_t
{
	EFoodCookQuality__Ruined                                                         = 0,
	EFoodCookQuality__Bad                                                            = 1,
	EFoodCookQuality__Poor                                                           = 2,
	EFoodCookQuality__Good                                                           = 3,
	EFoodCookQuality__Excellent                                                      = 4,
	EFoodCookQuality__Perfect                                                        = 5,
	EFoodCookQuality__EFoodCookQuality_MAX                                           = 6
};

/// Enum /Script/ConZ.ECookingRecipesSort
/// Size: 0x04
enum ECookingRecipesSort : uint8_t
{
	ECookingRecipesSort__Default                                                     = 0,
	ECookingRecipesSort__AlphabeticalAscending                                       = 1,
	ECookingRecipesSort__AlphabeticalDescending                                      = 2,
	ECookingRecipesSort__ECookingRecipesSort_MAX                                     = 3
};

/// Enum /Script/ConZ.ECookingUtilityOverviewPage
/// Size: 0x06
enum ECookingUtilityOverviewPage : uint8_t
{
	ECookingUtilityOverviewPage__AddRecipe                                           = 0,
	ECookingUtilityOverviewPage__IngredientsForRecipe                                = 1,
	ECookingUtilityOverviewPage__CookingProgress                                     = 2,
	ECookingUtilityOverviewPage__CookingFinished                                     = 3,
	ECookingUtilityOverviewPage__None                                                = 4,
	ECookingUtilityOverviewPage__ECookingUtilityOverviewPage_MAX                     = 5
};

/// Enum /Script/ConZ.ECraftingItemCategory
/// Size: 0x05
enum ECraftingItemCategory : uint8_t
{
	ECraftingItemCategory__None                                                      = 0,
	ECraftingItemCategory__ToolsAndWeapons                                           = 1,
	ECraftingItemCategory__Items                                                     = 2,
	ECraftingItemCategory__BaseBuilding                                              = 3,
	ECraftingItemCategory__ECraftingItemCategory_MAX                                 = 4
};

/// Enum /Script/ConZ.EOptionalState
/// Size: 0x04
enum EOptionalState : uint8_t
{
	EOptionalState__None                                                             = 0,
	EOptionalState__Add                                                              = 1,
	EOptionalState__Remove                                                           = 2,
	EOptionalState__EOptionalState_MAX                                               = 3
};

/// Enum /Script/ConZ.ECraftingIngredientConsumptionHint
/// Size: 0x04
enum ECraftingIngredientConsumptionHint : uint8_t
{
	ECraftingIngredientConsumptionHint__None                                         = 0,
	ECraftingIngredientConsumptionHint__Use                                          = 1,
	ECraftingIngredientConsumptionHint__Destroy                                      = 2,
	ECraftingIngredientConsumptionHint__ECraftingIngredientConsumptionHint_MAX       = 3
};

/// Enum /Script/ConZ.ECraftingType
/// Size: 0x05
enum ECraftingType : uint8_t
{
	ECraftingType__Use                                                               = 0,
	ECraftingType__Assemble                                                          = 1,
	ECraftingType__Destroy                                                           = 2,
	ECraftingType__Attach                                                            = 3,
	ECraftingType__ECraftingType_MAX                                                 = 4
};

/// Enum /Script/ConZ.ECustomZoneEvent
/// Size: 0x22
enum ECustomZoneEvent : uint8_t
{
	ECustomZoneEvent__FallDamage                                                     = 0,
	ECustomZoneEvent__PuppetDamage                                                   = 1,
	ECustomZoneEvent__SuicidePuppetDamage                                            = 2,
	ECustomZoneEvent__SentryDamage                                                   = 3,
	ECustomZoneEvent__AnimalDamage                                                   = 4,
	ECustomZoneEvent__BaseDefenseDamage                                              = 5,
	ECustomZoneEvent__VehicleDamage                                                  = 6,
	ECustomZoneEvent__BoxingDamage                                                   = 7,
	ECustomZoneEvent__MeleeWeaponDamage                                              = 8,
	ECustomZoneEvent__ThrowingDamage                                                 = 9,
	ECustomZoneEvent__ProjectileDamage                                               = 10,
	ECustomZoneEvent__ExplosiveDamage                                                = 11,
	ECustomZoneEvent__TrapDamage                                                     = 12,
	ECustomZoneEvent__BurnDamage                                                     = 13,
	ECustomZoneEvent__DamageToBases                                                  = 14,
	ECustomZoneEvent__DamageToVehicles                                               = 15,
	ECustomZoneEvent__PlayerLockpicking                                              = 16,
	ECustomZoneEvent__WorldLockpicking                                               = 17,
	ECustomZoneEvent__BaseBuilding                                                   = 18,
	ECustomZoneEvent__VehicleParking                                                 = 19,
	ECustomZoneEvent__Count                                                          = 20,
	ECustomZoneEvent__ECustomZoneEvent_MAX                                           = 21
};

/// Enum /Script/ConZ.EDefaultCustomZoneState
/// Size: 0x05
enum EDefaultCustomZoneState : uint8_t
{
	EDefaultCustomZoneState__NotDefault                                              = 0,
	EDefaultCustomZoneState__Unmodified                                              = 1,
	EDefaultCustomZoneState__Modified                                                = 2,
	EDefaultCustomZoneState__Deleted                                                 = 3,
	EDefaultCustomZoneState__EDefaultCustomZoneState_MAX                             = 4
};

/// Enum /Script/ConZ.ECustomZoneShape
/// Size: 0x03
enum ECustomZoneShape : uint8_t
{
	ECustomZoneShape__Circle                                                         = 0,
	ECustomZoneShape__Rectangle                                                      = 1,
	ECustomZoneShape__ECustomZoneShape_MAX                                           = 2
};

/// Enum /Script/ConZ.ECustomZoneEventHandlingMethod
/// Size: 0x05
enum ECustomZoneEventHandlingMethod : uint8_t
{
	ECustomZoneEventHandlingMethod__Ignore                                           = 0,
	ECustomZoneEventHandlingMethod__Allow                                            = 1,
	ECustomZoneEventHandlingMethod__Block                                            = 2,
	ECustomZoneEventHandlingMethod__Count                                            = 3,
	ECustomZoneEventHandlingMethod__ECustomZoneEventHandlingMethod_MAX               = 4
};

/// Enum /Script/ConZ.ECustomZoneSettingsMapMode
/// Size: 0x05
enum ECustomZoneSettingsMapMode : uint8_t
{
	ECustomZoneSettingsMapMode__None                                                 = 0,
	ECustomZoneSettingsMapMode__AddCircleRegion                                      = 1,
	ECustomZoneSettingsMapMode__AddRectangleRegion                                   = 2,
	ECustomZoneSettingsMapMode__RemoveRegion                                         = 3,
	ECustomZoneSettingsMapMode__ECustomZoneSettingsMapMode_MAX                       = 4
};

/// Enum /Script/ConZ.EDamageTargetType
/// Size: 0x08
enum EDamageTargetType : uint8_t
{
	EDamageTargetType__Player                                                        = 0,
	EDamageTargetType__Animal                                                        = 1,
	EDamageTargetType__Puppet                                                        = 2,
	EDamageTargetType__Vehicle                                                       = 3,
	EDamageTargetType__BaseBuilding                                                  = 4,
	EDamageTargetType__Sentry                                                        = 5,
	EDamageTargetType__Count                                                         = 6,
	EDamageTargetType__EDamageTargetType_MAX                                         = 7
};

/// Enum /Script/ConZ.EDamageMagnitudeType
/// Size: 0x05
enum EDamageMagnitudeType : uint8_t
{
	EDamageMagnitudeType__Small                                                      = 0,
	EDamageMagnitudeType__Medium                                                     = 1,
	EDamageMagnitudeType__Large                                                      = 2,
	EDamageMagnitudeType__Knockout                                                   = 3,
	EDamageMagnitudeType__EDamageMagnitudeType_MAX                                   = 4
};

/// Enum /Script/ConZ.EHitDirectionType
/// Size: 0x05
enum EHitDirectionType : uint8_t
{
	EHitDirectionType__Front                                                         = 0,
	EHitDirectionType__Left                                                          = 1,
	EHitDirectionType__Back                                                          = 2,
	EHitDirectionType__Right                                                         = 3,
	EHitDirectionType__EHitDirectionType_MAX                                         = 4
};

/// Enum /Script/ConZ.EDayPeriod
/// Size: 0x06
enum EDayPeriod : uint8_t
{
	EDayPeriod__Nighttime                                                            = 0,
	EDayPeriod__Dawn                                                                 = 1,
	EDayPeriod__Daytime                                                              = 2,
	EDayPeriod__Dusk                                                                 = 3,
	EDayPeriod__Count                                                                = 4,
	EDayPeriod__EDayPeriod_MAX                                                       = 5
};

/// Enum /Script/ConZ.EDialLayoutDirection
/// Size: 0x03
enum EDialLayoutDirection : uint8_t
{
	Up                                                                               = 0,
	Right                                                                            = 1,
	EDialLayoutDirection_MAX                                                         = 2
};

/// Enum /Script/ConZ.EDialogAnimationState
/// Size: 0x04
enum EDialogAnimationState : uint8_t
{
	EDialogAnimationState__None                                                      = 0,
	EDialogAnimationState__Show                                                      = 1,
	EDialogAnimationState__Hide                                                      = 2,
	EDialogAnimationState__EDialogAnimationState_MAX                                 = 3
};

/// Enum /Script/ConZ.EDialPadButtonType
/// Size: 0x06
enum EDialPadButtonType : uint8_t
{
	EDialPadButtonType__None                                                         = 0,
	EDialPadButtonType__Input                                                        = 1,
	EDialPadButtonType__Enter                                                        = 2,
	EDialPadButtonType__Delete                                                       = 3,
	EDialPadButtonType__Count                                                        = 4,
	EDialPadButtonType__EDialPadButtonType_MAX                                       = 5
};

/// Enum /Script/ConZ.EDisposition
/// Size: 0x04
enum EDisposition : uint8_t
{
	EDisposition__Neutral                                                            = 0,
	EDisposition__Good                                                               = 1,
	EDisposition__Bad                                                                = 2,
	EDisposition__EDisposition_MAX                                                   = 3
};

/// Enum /Script/ConZ.EDistantMeshStreamingBehavior
/// Size: 0x03
enum EDistantMeshStreamingBehavior : uint8_t
{
	EDistantMeshStreamingBehavior__Default                                           = 0,
	EDistantMeshStreamingBehavior__LoadAsSoonAsPossible                              = 1,
	EDistantMeshStreamingBehavior__EDistantMeshStreamingBehavior_MAX                 = 2
};

/// Enum /Script/ConZ.EDoorUnlockDataType
/// Size: 0x04
enum EDoorUnlockDataType : uint8_t
{
	EDoorUnlockDataType__Default                                                     = 0,
	EDoorUnlockDataType__Killbox                                                     = 1,
	EDoorUnlockDataType__AbandonedBunker                                             = 2,
	EDoorUnlockDataType__EDoorUnlockDataType_MAX                                     = 3
};

/// Enum /Script/ConZ.ESlotType
/// Size: 0x06
enum ESlotType : uint8_t
{
	ESlotType__None                                                                  = 0,
	ESlotType__LockSlot                                                              = 1,
	ESlotType__ZapperSlot                                                            = 2,
	ESlotType__RemoteSensorSlot                                                      = 3,
	ESlotType__BCULockSlot                                                           = 4,
	ESlotType__ESlotType_MAX                                                         = 5
};

/// Enum /Script/ConZ.EDroneSound
/// Size: 0x05
enum EDroneSound : uint8_t
{
	EDroneSound__None                                                                = 0,
	EDroneSound__Idle                                                                = 1,
	EDroneSound__Attack                                                              = 2,
	EDroneSound__Kill                                                                = 3,
	EDroneSound__EDroneSound_MAX                                                     = 4
};

/// Enum /Script/ConZ.EDroneSightingMode
/// Size: 0x05
enum EDroneSightingMode : uint8_t
{
	EDroneSightingMode__Follow                                                       = 0,
	EDroneSightingMode__Flyby                                                        = 1,
	EDroneSightingMode__Crashing                                                     = 2,
	EDroneSightingMode__Num                                                          = 3,
	EDroneSightingMode__EDroneSightingMode_MAX                                       = 4
};

/// Enum /Script/ConZ.EDroneState
/// Size: 0x08
enum EDroneState : uint8_t
{
	EDroneState__Initial                                                             = 0,
	EDroneState__Leaving                                                             = 1,
	EDroneState__Approaching                                                         = 2,
	EDroneState__Following                                                           = 3,
	EDroneState__Flybying                                                            = 4,
	EDroneState__Crashing                                                            = 5,
	EDroneState__Num                                                                 = 6,
	EDroneState__EDroneState_MAX                                                     = 7
};

/// Enum /Script/ConZ.EDropZoneGameEventPhase
/// Size: 0x05
enum EDropZoneGameEventPhase : uint8_t
{
	EDropZoneGameEventPhase__Warmup                                                  = 0,
	EDropZoneGameEventPhase__Search                                                  = 1,
	EDropZoneGameEventPhase__Drop                                                    = 2,
	EDropZoneGameEventPhase__Capture                                                 = 3,
	EDropZoneGameEventPhase__EDropZoneGameEventPhase_MAX                             = 4
};

/// Enum /Script/ConZ.EFertilizerType
/// Size: 0x04
enum EFertilizerType : uint8_t
{
	EFertilizerType__None                                                            = 0,
	EFertilizerType__Organic                                                         = 1,
	EFertilizerType__Industrial                                                      = 2,
	EFertilizerType__EFertilizerType_MAX                                             = 3
};

/// Enum /Script/ConZ.EFishBehavior
/// Size: 0x09
enum EFishBehavior : uint8_t
{
	EFishBehavior__None                                                              = 0,
	EFishBehavior__Normal                                                            = 1,
	EFishBehavior__Fleeing                                                           = 2,
	EFishBehavior__Aggressive                                                        = 3,
	EFishBehavior__Attacking                                                         = 4,
	EFishBehavior__Alerted                                                           = 5,
	EFishBehavior__ForcedMovement                                                    = 6,
	EFishBehavior__Count                                                             = 7,
	EFishBehavior__EFishBehavior_MAX                                                 = 8
};

/// Enum /Script/ConZ.EFloatingWidgetVisionMode
/// Size: 0x05
enum EFloatingWidgetVisionMode : uint8_t
{
	EFloatingWidgetVisionMode__None                                                  = 0,
	EFloatingWidgetVisionMode__General                                               = 1,
	EFloatingWidgetVisionMode__FocusMode                                             = 2,
	EFloatingWidgetVisionMode__Inventory                                             = 4,
	EFloatingWidgetVisionMode__EFloatingWidgetVisionMode_MAX                         = 5
};

/// Enum /Script/ConZ.ESelectSource
/// Size: 0x04
enum ESelectSource : uint8_t
{
	ESelectSource__Child                                                             = 0,
	ESelectSource__Parent                                                            = 1,
	ESelectSource__Unknown                                                           = 2,
	ESelectSource__ESelectSource_MAX                                                 = 3
};

/// Enum /Script/ConZ.EGameEventPlayerRoundResult
/// Size: 0x05
enum EGameEventPlayerRoundResult : uint8_t
{
	EGameEventPlayerRoundResult__None                                                = 0,
	EGameEventPlayerRoundResult__Win                                                 = 1,
	EGameEventPlayerRoundResult__Lose                                                = 2,
	EGameEventPlayerRoundResult__Draw                                                = 3,
	EGameEventPlayerRoundResult__EGameEventPlayerRoundResult_MAX                     = 4
};

/// Enum /Script/ConZ.EGameEventNotificationType
/// Size: 0x07
enum EGameEventNotificationType : uint8_t
{
	EGameEventNotificationType__EventStarted                                         = 0,
	EGameEventNotificationType__EventCanceled                                        = 1,
	EGameEventNotificationType__EventEnded                                           = 2,
	EGameEventNotificationType__NotEnoughParticipants                                = 3,
	EGameEventNotificationType__ParticipantJoined                                    = 4,
	EGameEventNotificationType__ParticipantLeft                                      = 5,
	EGameEventNotificationType__EGameEventNotificationType_MAX                       = 6
};

/// Enum /Script/ConZ.EGameEventParticipantState
/// Size: 0x06
enum EGameEventParticipantState : uint8_t
{
	EGameEventParticipantState__Registered                                           = 0,
	EGameEventParticipantState__Spawning                                             = 1,
	EGameEventParticipantState__Alive                                                = 2,
	EGameEventParticipantState__Dead                                                 = 3,
	EGameEventParticipantState__Left                                                 = 4,
	EGameEventParticipantState__EGameEventParticipantState_MAX                       = 5
};

/// Enum /Script/ConZ.EGameEventState
/// Size: 0x05
enum EGameEventState : uint8_t
{
	EGameEventState__Announced                                                       = 0,
	EGameEventState__RoundStarted                                                    = 1,
	EGameEventState__RoundEnded                                                      = 2,
	EGameEventState__Ended                                                           = 3,
	EGameEventState__EGameEventState_MAX                                             = 4
};

/// Enum /Script/ConZ.EGameEventBorderState
/// Size: 0x04
enum EGameEventBorderState : uint8_t
{
	EGameEventBorderState__Off                                                       = 0,
	EGameEventBorderState__On                                                        = 1,
	EGameEventBorderState__Bright                                                    = 2,
	EGameEventBorderState__EGameEventBorderState_MAX                                 = 3
};

/// Enum /Script/ConZ.EGameEventTransportState
/// Size: 0x06
enum EGameEventTransportState : uint8_t
{
	EGameEventTransportState__StandBy                                                = 0,
	EGameEventTransportState__Travelling                                             = 1,
	EGameEventTransportState__Leaving                                                = 2,
	EGameEventTransportState__Landing                                                = 3,
	EGameEventTransportState__LiftOff                                                = 4,
	EGameEventTransportState__EGameEventTransportState_MAX                           = 5
};

/// Enum /Script/ConZ.EGameResourceConsumptionMethod
/// Size: 0x04
enum EGameResourceConsumptionMethod : uint8_t
{
	EGameResourceConsumptionMethod__Eating                                           = 0,
	EGameResourceConsumptionMethod__Drinking                                         = 1,
	EGameResourceConsumptionMethod__NonConsumable                                    = 2,
	EGameResourceConsumptionMethod__EGameResourceConsumptionMethod_MAX               = 3
};

/// Enum /Script/ConZ.EGrappleEndType
/// Size: 0x04
enum EGrappleEndType : uint8_t
{
	EGrappleEndType__VictimDied                                                      = 0,
	EGrappleEndType__VictimEscaped                                                   = 1,
	EGrappleEndType__Interrupted                                                     = 2,
	EGrappleEndType__EGrappleEndType_MAX                                             = 3
};

/// Enum /Script/ConZ.EGrappleActionMeshDetachmentRule
/// Size: 0x04
enum EGrappleActionMeshDetachmentRule : uint8_t
{
	EGrappleActionMeshDetachmentRule__None                                           = 0,
	EGrappleActionMeshDetachmentRule__GrapplerDetaches                               = 1,
	EGrappleActionMeshDetachmentRule__VictimDetaches                                 = 2,
	EGrappleActionMeshDetachmentRule__EGrappleActionMeshDetachmentRule_MAX           = 3
};

/// Enum /Script/ConZ.EGrappleActionPerspectiveSwitchType
/// Size: 0x04
enum EGrappleActionPerspectiveSwitchType : uint8_t
{
	EGrappleActionPerspectiveSwitchType__None                                        = 0,
	EGrappleActionPerspectiveSwitchType__ThirdPerson                                 = 1,
	EGrappleActionPerspectiveSwitchType__FirstPerson                                 = 2,
	EGrappleActionPerspectiveSwitchType__EGrappleActionPerspectiveSwitchType_MAX     = 3
};

/// Enum /Script/ConZ.ERagdollTransitionState
/// Size: 0x05
enum ERagdollTransitionState : uint8_t
{
	ERagdollTransitionState__None                                                    = 0,
	ERagdollTransitionState__GoTo                                                    = 1,
	ERagdollTransitionState__RecoverFrom                                             = 2,
	ERagdollTransitionState__RecoverFromImmediately                                  = 3,
	ERagdollTransitionState__ERagdollTransitionState_MAX                             = 4
};

/// Enum /Script/ConZ.EHitReactState
/// Size: 0x07
enum EHitReactState : uint8_t
{
	EHitReactState__None                                                             = 0,
	EHitReactState__Hit                                                              = 1,
	EHitReactState__Stun                                                             = 2,
	EHitReactState__Knockout                                                         = 3,
	EHitReactState__GettingUp                                                        = 4,
	EHitReactState__Ragdoll                                                          = 5,
	EHitReactState__EHitReactState_MAX                                               = 6
};

/// Enum /Script/ConZ.EGoToRagdollCaller
/// Size: 0x03
enum EGoToRagdollCaller : uint8_t
{
	EGoToRagdollCaller__Default                                                      = 0,
	EGoToRagdollCaller__Montage                                                      = 1,
	EGoToRagdollCaller__EGoToRagdollCaller_MAX                                       = 2
};

/// Enum /Script/ConZ.EHUDVisibilityFlag
/// Size: 0x06
enum EHUDVisibilityFlag : uint8_t
{
	EHUDVisibilityFlag__None                                                         = 0,
	EHUDVisibilityFlag__UserInput                                                    = 1,
	EHUDVisibilityFlag__IntroCinematic                                               = 2,
	EHUDVisibilityFlag__CharacterModification                                        = 4,
	EHUDVisibilityFlag__All                                                          = 255,
	EHUDVisibilityFlag__EHUDVisibilityFlag_MAX                                       = 256
};

/// Enum /Script/ConZ.EHUDMessageType
/// Size: 0x03
enum EHUDMessageType : uint8_t
{
	EHUDMessageType__Regular                                                         = 0,
	EHUDMessageType__Important                                                       = 1,
	EHUDMessageType__EHUDMessageType_MAX                                             = 2
};

/// Enum /Script/ConZ.EWarningType
/// Size: 0x06
enum EWarningType : uint8_t
{
	EWarningType__Danger                                                             = 0,
	EWarningType__Explosion                                                          = 1,
	EWarningType__LifeThreat                                                         = 2,
	EWarningType__Watching                                                           = 3,
	EWarningType__Traps                                                              = 4,
	EWarningType__EWarningType_MAX                                                   = 5
};

/// Enum /Script/ConZ.EIgnitableItemState
/// Size: 0x06
enum EIgnitableItemState : uint8_t
{
	EIgnitableItemState__None                                                        = 0,
	EIgnitableItemState__Start                                                       = 1,
	EIgnitableItemState__Burning                                                     = 2,
	EIgnitableItemState__Extinguish                                                  = 3,
	EIgnitableItemState__Finished                                                    = 4,
	EIgnitableItemState__EIgnitableItemState_MAX                                     = 5
};

/// Enum /Script/ConZ.EInteractionState
/// Size: 0x05
enum EInteractionState : uint8_t
{
	EInteractionState__Busy                                                          = 0,
	EInteractionState__NoInteractionDefined                                          = 1,
	EInteractionState__CanInteract                                                   = 2,
	EInteractionState__UnableToInteract                                              = 3,
	EInteractionState__EInteractionState_MAX                                         = 4
};

/// Enum /Script/ConZ.EInventoryNodeWidgetDataType
/// Size: 0x07
enum EInventoryNodeWidgetDataType : uint8_t
{
	EInventoryNodeWidgetDataType__Number                                             = 0,
	EInventoryNodeWidgetDataType__Text                                               = 1,
	EInventoryNodeWidgetDataType__Icon                                               = 2,
	EInventoryNodeWidgetDataType__Visibility                                         = 3,
	EInventoryNodeWidgetDataType__Animation                                          = 4,
	EInventoryNodeWidgetDataType__WidgetSwitcher                                     = 5,
	EInventoryNodeWidgetDataType__EInventoryNodeWidgetDataType_MAX                   = 6
};

/// Enum /Script/ConZ.EBodySlot
/// Size: 0x06
enum EBodySlot : uint8_t
{
	EBodySlot__Head                                                                  = 0,
	EBodySlot__Chest                                                                 = 1,
	EBodySlot__Legs                                                                  = 2,
	EBodySlot__Feet                                                                  = 3,
	EBodySlot__Count                                                                 = 4,
	EBodySlot__EBodySlot_MAX                                                         = 5
};

/// Enum /Script/ConZ.EItemDebugMode
/// Size: 0x04
enum EItemDebugMode : uint8_t
{
	EItemDebugMode__None                                                             = 0,
	EItemDebugMode__Basic                                                            = 1,
	EItemDebugMode__Count                                                            = 2,
	EItemDebugMode__EItemDebugMode_MAX                                               = 3
};

/// Enum /Script/ConZ.EItemFlags
/// Size: 0x09
enum EItemFlags : uint8_t
{
	EItemFlags__None                                                                 = 0,
	EItemFlags__IsCrafted                                                            = 1,
	EItemFlags__IsBusy                                                               = 2,
	EItemFlags__Examined                                                             = 4,
	EItemFlags__IsPartOfEvent                                                        = 8,
	EItemFlags__BlinkOnSpawn                                                         = 16,
	EItemFlags__ShouldBeVisibleInVicinity                                            = 32,
	EItemFlags__All                                                                  = 255,
	EItemFlags__EItemFlags_MAX                                                       = 256
};

/// Enum /Script/ConZ.EItemDropPlaceholderDebugMode
/// Size: 0x04
enum EItemDropPlaceholderDebugMode : uint8_t
{
	EItemDropPlaceholderDebugMode__None                                              = 0,
	EItemDropPlaceholderDebugMode__Basic                                             = 1,
	EItemDropPlaceholderDebugMode__Count                                             = 2,
	EItemDropPlaceholderDebugMode__EItemDropPlaceholderDebugMode_MAX                 = 3
};

/// Enum /Script/ConZ.EItemActionKeyInput
/// Size: 0x08
enum EItemActionKeyInput : uint8_t
{
	EItemActionKeyInput__ToggleLight                                                 = 0,
	EItemActionKeyInput__ToggleNightVisionScope                                      = 1,
	EItemActionKeyInput__IncrementScopeDisplayBrightnessMultiplier                   = 2,
	EItemActionKeyInput__DecrementScopeDisplayBrightnessMultiplier                   = 3,
	EItemActionKeyInput__ReloadWeapon                                                = 4,
	EItemActionKeyInput__CheckStatus                                                 = 5,
	EItemActionKeyInput__CancelAllActions                                            = 6,
	EItemActionKeyInput__EItemActionKeyInput_MAX                                     = 7
};

/// Enum /Script/ConZ.ERPCType
/// Size: 0x05
enum ERPCType : uint8_t
{
	ERPCType__None                                                                   = 0,
	ERPCType__Client                                                                 = 1,
	ERPCType__Server                                                                 = 2,
	ERPCType__NetMulticast                                                           = 3,
	ERPCType__ERPCType_MAX                                                           = 4
};

/// Enum /Script/ConZ.ETooltipPanelType
/// Size: 0x03
enum ETooltipPanelType : uint8_t
{
	ETooltipPanelType__Overview                                                      = 0,
	ETooltipPanelType__Additional                                                    = 1,
	ETooltipPanelType__ETooltipPanelType_MAX                                         = 2
};

/// Enum /Script/ConZ.ELockPickingDifficulty
/// Size: 0x04
enum ELockPickingDifficulty : uint8_t
{
	ELockPickingDifficulty__Normal                                                   = 0,
	ELockPickingDifficulty__Medium                                                   = 1,
	ELockPickingDifficulty__Hard                                                     = 2,
	ELockPickingDifficulty__ELockPickingDifficulty_MAX                               = 3
};

/// Enum /Script/ConZ.EAccessLevel
/// Size: 0x08
enum EAccessLevel : uint8_t
{
	EAccessLevel__Public                                                             = 0,
	EAccessLevel__Private                                                            = 1,
	EAccessLevel__Rank1                                                              = 2,
	EAccessLevel__Rank2                                                              = 3,
	EAccessLevel__Rank3                                                              = 4,
	EAccessLevel__Rank4                                                              = 5,
	EAccessLevel__Num                                                                = 6,
	EAccessLevel__EAccessLevel_MAX                                                   = 7
};

/// Enum /Script/ConZ.ELockDifficulty
/// Size: 0x06
enum ELockDifficulty : uint8_t
{
	ELockDifficulty__VeryEasy                                                        = 0,
	ELockDifficulty__Basic                                                           = 1,
	ELockDifficulty__Medium                                                          = 2,
	ELockDifficulty__Advanced                                                        = 3,
	ELockDifficulty__Num                                                             = 4,
	ELockDifficulty__ELockDifficulty_MAX                                             = 5
};

/// Enum /Script/ConZ.EConZMenu
/// Size: 0x13
enum EConZMenu : uint8_t
{
	EConZMenu__None                                                                  = 0,
	EConZMenu__Main                                                                  = 1,
	EConZMenu__Pause                                                                 = 2,
	EConZMenu__ServerBrowser                                                         = 3,
	EConZMenu__ClientSettings                                                        = 4,
	EConZMenu__ServerSettings                                                        = 5,
	EConZMenu__CustomZoneSettings                                                    = 6,
	EConZMenu__PlayerManagement                                                      = 7,
	EConZMenu__CharacterSelection                                                    = 8,
	EConZMenu__CharacterCreation                                                     = 9,
	EConZMenu__Statistics                                                            = 10,
	EConZMenu__Count                                                                 = 11,
	EConZMenu__EConZMenu_MAX                                                         = 12
};

/// Enum /Script/ConZ.EMSCServerEnrollReason
/// Size: 0x05
enum EMSCServerEnrollReason : uint8_t
{
	EMSCServerEnrollReason__Unspecified                                              = 0,
	EMSCServerEnrollReason__Startup                                                  = 1,
	EMSCServerEnrollReason__ServerSettingsChanged                                    = 2,
	EMSCServerEnrollReason__MasterServerRequested                                    = 3,
	EMSCServerEnrollReason__EMSCServerEnrollReason_MAX                               = 4
};

/// Enum /Script/ConZ.EMSPPlaystyle
/// Size: 0x09
enum EMSPPlaystyle : uint8_t
{
	EMSPPlaystyle__PVE                                                               = 0,
	EMSPPlaystyle__PVP                                                               = 1,
	EMSPPlaystyle__PVPVE                                                             = 2,
	EMSPPlaystyle__RPPVP                                                             = 3,
	EMSPPlaystyle__RPPVE                                                             = 4,
	EMSPPlaystyle__Other                                                             = 5,
	EMSPPlaystyle__First                                                             = 0,
	EMSPPlaystyle__Last                                                              = 5,
	EMSPPlaystyle__EMSPPlaystyle_MAX                                                 = 6
};

/// Enum /Script/ConZ.EMedicationRepeatedAbuseReaction
/// Size: 0x04
enum EMedicationRepeatedAbuseReaction : uint8_t
{
	EMedicationRepeatedAbuseReaction__None                                           = 0,
	EMedicationRepeatedAbuseReaction__Vomiting                                       = 1,
	EMedicationRepeatedAbuseReaction__Diarrhea                                       = 2,
	EMedicationRepeatedAbuseReaction__EMedicationRepeatedAbuseReaction_MAX           = 3
};

/// Enum /Script/ConZ.EMedicationType
/// Size: 0x06
enum EMedicationType : uint8_t
{
	EMedicationType__Painkillers                                                     = 0,
	EMedicationType__Sedatives                                                       = 1,
	EMedicationType__Antibiotics                                                     = 2,
	EMedicationType__Antiparasitics                                                  = 3,
	EMedicationType__Stimulants                                                      = 4,
	EMedicationType__EMedicationType_MAX                                             = 5
};

/// Enum /Script/ConZ.EMedicationUsage
/// Size: 0x04
enum EMedicationUsage : uint8_t
{
	EMedicationUsage__Pills                                                          = 0,
	EMedicationUsage__Injections                                                     = 1,
	EMedicationUsage__Infusions                                                      = 2,
	EMedicationUsage__EMedicationUsage_MAX                                           = 3
};

/// Enum /Script/ConZ.EMeleeActionType
/// Size: 0x06
enum EMeleeActionType : uint8_t
{
	EMeleeActionType__None                                                           = 0,
	EMeleeActionType__Attack                                                         = 1,
	EMeleeActionType__PrepareForBlockOrDodge                                         = 2,
	EMeleeActionType__Block                                                          = 3,
	EMeleeActionType__Dodge                                                          = 4,
	EMeleeActionType__EMeleeActionType_MAX                                           = 5
};

/// Enum /Script/ConZ.EMeleeState
/// Size: 0x07
enum EMeleeState : uint8_t
{
	EMeleeState__Idle                                                                = 0,
	EMeleeState__Attacking                                                           = 1,
	EMeleeState__PreparedForBlockOrDodge                                             = 2,
	EMeleeState__Block                                                               = 3,
	EMeleeState__Dodge                                                               = 4,
	EMeleeState__HitReact                                                            = 5,
	EMeleeState__EMeleeState_MAX                                                     = 6
};

/// Enum /Script/ConZ.EAttackCollisionType
/// Size: 0x09
enum EAttackCollisionType : uint8_t
{
	EAttackCollisionType__None                                                       = 0,
	EAttackCollisionType__WeaponLeftHand                                             = 1,
	EAttackCollisionType__WeaponRightHand                                            = 2,
	EAttackCollisionType__Head                                                       = 3,
	EAttackCollisionType__LeftHand                                                   = 4,
	EAttackCollisionType__RightHand                                                  = 5,
	EAttackCollisionType__LeftLeg                                                    = 6,
	EAttackCollisionType__RightLeg                                                   = 7,
	EAttackCollisionType__EAttackCollisionType_MAX                                   = 8
};

/// Enum /Script/ConZ.EHumanBodyPanelSegmentGenderGroup
/// Size: 0x05
enum EHumanBodyPanelSegmentGenderGroup : uint8_t
{
	EHumanBodyPanelSegmentGenderGroup__Male                                          = 0,
	EHumanBodyPanelSegmentGenderGroup__Female                                        = 1,
	EHumanBodyPanelSegmentGenderGroup__Both                                          = 2,
	EHumanBodyPanelSegmentGenderGroup__Count                                         = 3,
	EHumanBodyPanelSegmentGenderGroup__EHumanBodyPanelSegmentGenderGroup_MAX         = 4
};

/// Enum /Script/ConZ.EMinigameState
/// Size: 0x06
enum EMinigameState : uint8_t
{
	EMinigameState__None                                                             = 0,
	EMinigameState__Intro                                                            = 1,
	EMinigameState__WaitingForPlayer                                                 = 2,
	EMinigameState__Game                                                             = 3,
	EMinigameState__Outro                                                            = 4,
	EMinigameState__EMinigameState_MAX                                               = 5
};

/// Enum /Script/ConZ.EEndMinigameReason
/// Size: 0x04
enum EEndMinigameReason : uint8_t
{
	EEndMinigameReason__Success                                                      = 0,
	EEndMinigameReason__Fail                                                         = 1,
	EEndMinigameReason__Cancel                                                       = 2,
	EEndMinigameReason__EEndMinigameReason_MAX                                       = 3
};

/// Enum /Script/ConZ.EObjectiveAnimationState
/// Size: 0x04
enum EObjectiveAnimationState : uint8_t
{
	EObjectiveAnimationState__None                                                   = 0,
	EObjectiveAnimationState__Start                                                  = 1,
	EObjectiveAnimationState__Complete                                               = 2,
	EObjectiveAnimationState__EObjectiveAnimationState_MAX                           = 3
};

/// Enum /Script/ConZ.EMissionManagerState
/// Size: 0x08
enum EMissionManagerState : uint8_t
{
	EMissionManagerState__None                                                       = 0,
	EMissionManagerState__MainStorySuccess                                           = 1,
	EMissionManagerState__SideStorySuccess                                           = 2,
	EMissionManagerState__TutorialSuccess                                            = 3,
	EMissionManagerState__MainStoryFailed                                            = 4,
	EMissionManagerState__SideStoryFailed                                            = 5,
	EMissionManagerState__TutorialFailed                                             = 6,
	EMissionManagerState__EMissionManagerState_MAX                                   = 7
};

/// Enum /Script/ConZ.EDialogType
/// Size: 0x04
enum EDialogType : uint8_t
{
	EDialogType__Subtitle                                                            = 0,
	EDialogType__Action                                                              = 1,
	EDialogType__Wait                                                                = 2,
	EDialogType__EDialogType_MAX                                                     = 3
};

/// Enum /Script/ConZ.EDialogEvent
/// Size: 0x06
enum EDialogEvent : uint8_t
{
	EDialogEvent__Intro                                                              = 0,
	EDialogEvent__OpenInteface                                                       = 1,
	EDialogEvent__OpenCraftingInterface                                              = 2,
	EDialogEvent__ChooseKnife                                                        = 3,
	EDialogEvent__OpenCraftingInterface_Bag                                          = 4,
	EDialogEvent__EDialogEvent_MAX                                                   = 5
};

/// Enum /Script/ConZ.EFaction
/// Size: 0x04
enum EFaction : uint8_t
{
	EFaction__None                                                                   = 0,
	EFaction__Rebel                                                                  = 1,
	EFaction__TEC                                                                    = 2,
	EFaction__EFaction_MAX                                                           = 3
};

/// Enum /Script/ConZ.EObjectiveState
/// Size: 0x07
enum EObjectiveState : uint8_t
{
	EObjectiveState__None                                                            = 0,
	EObjectiveState__Initialized                                                     = 1,
	EObjectiveState__Started                                                         = 2,
	EObjectiveState__Completed                                                       = 3,
	EObjectiveState__Failed                                                          = 4,
	EObjectiveState__Belated                                                         = 5,
	EObjectiveState__EObjectiveState_MAX                                             = 6
};

/// Enum /Script/ConZ.EMissionType
/// Size: 0x05
enum EMissionType : uint8_t
{
	EMissionType__None                                                               = 0,
	EMissionType__MainStory                                                          = 1,
	EMissionType__SideStory                                                          = 2,
	EMissionType__Tutorial                                                           = 3,
	EMissionType__EMissionType_MAX                                                   = 4
};

/// Enum /Script/ConZ.EMissionState
/// Size: 0x07
enum EMissionState : uint8_t
{
	EMissionState__Available                                                         = 0,
	EMissionState__Unavailable                                                       = 1,
	EMissionState__Started                                                           = 2,
	EMissionState__Completed                                                         = 3,
	EMissionState__Failed                                                            = 4,
	EMissionState__Belated                                                           = 5,
	EMissionState__EMissionState_MAX                                                 = 6
};

/// Enum /Script/ConZ.EMovableCollisionFieldMovementCurveType
/// Size: 0x04
enum EMovableCollisionFieldMovementCurveType : uint8_t
{
	EMovableCollisionFieldMovementCurveType__Linear                                  = 0,
	EMovableCollisionFieldMovementCurveType__SquareRoot                              = 1,
	EMovableCollisionFieldMovementCurveType__Exponential                             = 2,
	EMovableCollisionFieldMovementCurveType__EMovableCollisionFieldMovementCurveType_MAX = 3
};

/// Enum /Script/ConZ.EMovableCollisionFieldMoveType
/// Size: 0x05
enum EMovableCollisionFieldMoveType : uint8_t
{
	EMovableCollisionFieldMoveType__TowardsStart                                     = 0,
	EMovableCollisionFieldMoveType__TowardsEnd                                       = 1,
	EMovableCollisionFieldMoveType__None                                             = 2,
	EMovableCollisionFieldMoveType__Count                                            = 3,
	EMovableCollisionFieldMoveType__EMovableCollisionFieldMoveType_MAX               = 4
};

/// Enum /Script/ConZ.RestState
/// Size: 0x03
enum RestState : uint8_t
{
	RestState__AT_REST                                                               = 0,
	RestState__MOVING                                                                = 1,
	RestState__RestState_MAX                                                         = 2
};

/// Enum /Script/ConZ.SyncMode
/// Size: 0x09
enum SyncMode : uint8_t
{
	SyncMode__XYZ                                                                    = 0,
	SyncMode__XY                                                                     = 1,
	SyncMode__XZ                                                                     = 2,
	SyncMode__YZ                                                                     = 3,
	SyncMode__X                                                                      = 4,
	SyncMode__Y                                                                      = 5,
	SyncMode__Z                                                                      = 6,
	SyncMode__NONE                                                                   = 7,
	SyncMode__SyncMode_MAX                                                           = 8
};

/// Enum /Script/ConZ.ENotificationTarget
/// Size: 0x03
enum ENotificationTarget : uint8_t
{
	ENotificationTarget__Everybody                                                   = 0,
	ENotificationTarget__SingleClient                                                = 1,
	ENotificationTarget__ENotificationTarget_MAX                                     = 2
};

/// Enum /Script/ConZ.ENutrient
/// Size: 0x34
enum ENutrient : uint8_t
{
	ENutrient__Protein                                                               = 0,
	ENutrient__SaturatedFat                                                          = 1,
	ENutrient__OtherFats                                                             = 2,
	ENutrient__Fiber                                                                 = 3,
	ENutrient__Sugars                                                                = 4,
	ENutrient__OtherCarbs                                                            = 5,
	ENutrient__Alcohol                                                               = 6,
	ENutrient__Water                                                                 = 7,
	ENutrient__VitaminA                                                              = 8,
	ENutrient__VitaminB1                                                             = 9,
	ENutrient__VitaminB2                                                             = 10,
	ENutrient__VitaminB3                                                             = 11,
	ENutrient__VitaminB4                                                             = 12,
	ENutrient__VitaminB5                                                             = 13,
	ENutrient__VitaminB6                                                             = 14,
	ENutrient__VitaminB9                                                             = 15,
	ENutrient__VitaminB12                                                            = 16,
	ENutrient__VitaminC                                                              = 17,
	ENutrient__VitaminD                                                              = 18,
	ENutrient__VitaminE                                                              = 19,
	ENutrient__VitaminK                                                              = 20,
	ENutrient__Calcium                                                               = 21,
	ENutrient__Magnesium                                                             = 22,
	ENutrient__Potassium                                                             = 23,
	ENutrient__Copper                                                                = 24,
	ENutrient__Selenium                                                              = 25,
	ENutrient__Iron                                                                  = 26,
	ENutrient__Phosphorus                                                            = 27,
	ENutrient__Zinc                                                                  = 28,
	ENutrient__Manganese                                                             = 29,
	ENutrient__Sodium                                                                = 30,
	ENutrient__Other                                                                 = 31,
	ENutrient__Count                                                                 = 32,
	ENutrient__ENutrient_MAX                                                         = 33
};

/// Enum /Script/ConZ.EPesticideType
/// Size: 0x04
enum EPesticideType : uint8_t
{
	EPesticideType__Insecticide                                                      = 0,
	EPesticideType__Fungicide                                                        = 1,
	EPesticideType__Herbicide                                                        = 2,
	EPesticideType__EPesticideType_MAX                                               = 3
};

/// Enum /Script/ConZ.EPickupItemOperation
/// Size: 0x04
enum EPickupItemOperation : uint8_t
{
	EPickupItemOperation__PickupOnly                                                 = 0,
	EPickupItemOperation__PickupAndEat                                               = 1,
	EPickupItemOperation__PickupAndEatAll                                            = 2,
	EPickupItemOperation__EPickupItemOperation_MAX                                   = 3
};

/// Enum /Script/ConZ.EPlaceableActorDebugMode
/// Size: 0x06
enum EPlaceableActorDebugMode : uint8_t
{
	EPlaceableActorDebugMode__None                                                   = 0,
	EPlaceableActorDebugMode__Basic                                                  = 1,
	EPlaceableActorDebugMode__GroundedCheck                                          = 2,
	EPlaceableActorDebugMode__Walls                                                  = 3,
	EPlaceableActorDebugMode__Count                                                  = 4,
	EPlaceableActorDebugMode__EPlaceableActorDebugMode_MAX                           = 5
};

/// Enum /Script/ConZ.EStateFlags
/// Size: 0x04
enum EStateFlags : uint8_t
{
	EStateFlags__None                                                                = 0,
	EStateFlags__Flipped                                                             = 1,
	EStateFlags__Snapping                                                            = 2,
	EStateFlags__EStateFlags_MAX                                                     = 3
};

/// Enum /Script/ConZ.EPlacementBaseBuildingState
/// Size: 0x04
enum EPlacementBaseBuildingState : uint8_t
{
	EPlacementBaseBuildingState__Placing                                             = 0,
	EPlacementBaseBuildingState__PlacingSecondPoint                                  = 1,
	EPlacementBaseBuildingState__Placed                                              = 2,
	EPlacementBaseBuildingState__EPlacementBaseBuildingState_MAX                     = 3
};

/// Enum /Script/ConZ.EGardenPlacementState
/// Size: 0x04
enum EGardenPlacementState : uint8_t
{
	EGardenPlacementState__None                                                      = 0,
	EGardenPlacementState__FirstPointPlaced                                          = 1,
	EGardenPlacementState__FinalPointPlaced                                          = 2,
	EGardenPlacementState__EGardenPlacementState_MAX                                 = 3
};

/// Enum /Script/ConZ.EPlaceableStatusFlags
/// Size: 0x05
enum EPlaceableStatusFlags : uint8_t
{
	EPlaceableStatusFlags__None                                                      = 0,
	EPlaceableStatusFlags__PlacementAllowed                                          = 1,
	EPlaceableStatusFlags__PlacingOnWater                                            = 2,
	EPlaceableStatusFlags__All                                                       = 255,
	EPlaceableStatusFlags__EPlaceableStatusFlags_MAX                                 = 256
};

/// Enum /Script/ConZ.EPlacementTraceHitActor
/// Size: 0x06
enum EPlacementTraceHitActor : uint8_t
{
	EPlacementTraceHitActor__None                                                    = 0,
	EPlacementTraceHitActor__Item                                                    = 1,
	EPlacementTraceHitActor__BaseElement                                             = 2,
	EPlacementTraceHitActor__VehicleCorpse                                           = 4,
	EPlacementTraceHitActor__All                                                     = 255,
	EPlacementTraceHitActor__EPlacementTraceHitActor_MAX                             = 256
};

/// Enum /Script/ConZ.EQuantityScalingType
/// Size: 0x06
enum EQuantityScalingType : uint8_t
{
	EQuantityScalingType__NoScaling                                                  = 0,
	EQuantityScalingType__Length                                                     = 1,
	EQuantityScalingType__Circumference                                              = 2,
	EQuantityScalingType__Area                                                       = 3,
	EQuantityScalingType__Volume                                                     = 4,
	EQuantityScalingType__EQuantityScalingType_MAX                                   = 5
};

/// Enum /Script/ConZ.EPlaceableIngredientType
/// Size: 0x03
enum EPlaceableIngredientType : uint8_t
{
	EPlaceableIngredientType__Mandatory                                              = 0,
	EPlaceableIngredientType__Tool                                                   = 1,
	EPlaceableIngredientType__EPlaceableIngredientType_MAX                           = 2
};

/// Enum /Script/ConZ.EPlacementAllowedStatus
/// Size: 0x48
enum EPlacementAllowedStatus : uint8_t
{
	EPlacementAllowedStatus__None                                                    = 0,
	EPlacementAllowedStatus__Allowed                                                 = 1,
	EPlacementAllowedStatus__NotAllowedGeneric                                       = 2,
	EPlacementAllowedStatus__NotAllowedPlacementLineTraceFailed                      = 3,
	EPlacementAllowedStatus__NotAllowedNormalTestFailed                              = 4,
	EPlacementAllowedStatus__NotAllowedInteractionDistance                           = 5,
	EPlacementAllowedStatus__NotAllowedReachability                                  = 6,
	EPlacementAllowedStatus__NotAllowedWater                                         = 7,
	EPlacementAllowedStatus__NotAllowedAngle                                         = 8,
	EPlacementAllowedStatus__NotAllowedMeshOverlap                                   = 9,
	EPlacementAllowedStatus__NotAllowedTopOverlap                                    = 10,
	EPlacementAllowedStatus__NotAllowedTopOverlapSimple                              = 11,
	EPlacementAllowedStatus__NotAllowedBottomOverlap                                 = 12,
	EPlacementAllowedStatus__NotAllowedFullBoxOverlap                                = 13,
	EPlacementAllowedStatus__NotAllowedExtendedOverlap                               = 14,
	EPlacementAllowedStatus__NotAllowedFloating                                      = 15,
	EPlacementAllowedStatus__NotAllowedTeleportSpot                                  = 16,
	EPlacementAllowedStatus__NotAllowedHitCharacter                                  = 17,
	EPlacementAllowedStatus__NotAllowedHitItem                                       = 18,
	EPlacementAllowedStatus__NotAllowedHitVehicle                                    = 19,
	EPlacementAllowedStatus__NotAllowedMapRegion                                     = 20,
	EPlacementAllowedStatus__NotAllowedNotSnapping                                   = 21,
	EPlacementAllowedStatus__NotAllowedCantPlaceAtLocation                           = 22,
	EPlacementAllowedStatus__NotAllowedLocationAreaRestricted                        = 23,
	EPlacementAllowedStatus__NotAllowedLocationDupFlag                               = 24,
	EPlacementAllowedStatus__NotAllowedLocationEnemyFlag                             = 25,
	EPlacementAllowedStatus__NotAllowedLocationFoundation                            = 26,
	EPlacementAllowedStatus__NotAllowedLocationOtherElement                          = 27,
	EPlacementAllowedStatus__NotAllowedLocationNoBase                                = 28,
	EPlacementAllowedStatus__NotAllowedLocationNoFlag                                = 29,
	EPlacementAllowedStatus__NotAllowedLocationMaxInstances                          = 30,
	EPlacementAllowedStatus__NotAllowedEnemyFlag                                     = 31,
	EPlacementAllowedStatus__NotAllowedBaseBuildingMask                              = 32,
	EPlacementAllowedStatus__NotAllowedInBuilding                                    = 33,
	EPlacementAllowedStatus__NotAllowedActorTag                                      = 34,
	EPlacementAllowedStatus__NotAllowedVehicleCorpse                                 = 35,
	EPlacementAllowedStatus__NotAllowedPointsTooClose                                = 36,
	EPlacementAllowedStatus__NotAllowedTwoPointsConstaints                           = 37,
	EPlacementAllowedStatus__NotAllowedHeightDifference                              = 38,
	EPlacementAllowedStatus__NotAllowedTopSweep                                      = 39,
	EPlacementAllowedStatus__NotAllowedMidSweep                                      = 40,
	EPlacementAllowedStatus__NotAllowedTilesNotGrounded                              = 41,
	EPlacementAllowedStatus__NotAllowedPlacedDistance                                = 42,
	EPlacementAllowedStatus__NotAllowedFoundationPillarsNotTouchingGround            = 43,
	EPlacementAllowedStatus__NotAllowedWeakStability                                 = 44,
	EPlacementAllowedStatus__NotAllowedNotSquadLeaderToPlaceFlag                     = 45,
	EPlacementAllowedStatus__NotAllowedUnknown                                       = 46,
	EPlacementAllowedStatus__EPlacementAllowedStatus_MAX                             = 47
};

/// Enum /Script/ConZ.EPlacementAlgorithm
/// Size: 0x03
enum EPlacementAlgorithm : uint8_t
{
	EPlacementAlgorithm__Classic                                                     = 0,
	EPlacementAlgorithm__New                                                         = 1,
	EPlacementAlgorithm__EPlacementAlgorithm_MAX                                     = 2
};

/// Enum /Script/ConZ.EPlacementBaseState
/// Size: 0x05
enum EPlacementBaseState : uint8_t
{
	EPlacementBaseState__None                                                        = 0,
	EPlacementBaseState__Placing                                                     = 1,
	EPlacementBaseState__Placed                                                      = 2,
	EPlacementBaseState__HeightAdjustment                                            = 3,
	EPlacementBaseState__EPlacementBaseState_MAX                                     = 4
};

/// Enum /Script/ConZ.EFertilizerUIType
/// Size: 0x04
enum EFertilizerUIType : uint8_t
{
	EFertilizerUIType__None                                                          = 0,
	EFertilizerUIType__Organic                                                       = 1,
	EFertilizerUIType__Industrial                                                    = 2,
	EFertilizerUIType__EFertilizerUIType_MAX                                         = 3
};

/// Enum /Script/ConZ.EPlantGrowthStage
/// Size: 0x06
enum EPlantGrowthStage : uint8_t
{
	EPlantGrowthStage__None                                                          = 0,
	EPlantGrowthStage__Seeding                                                       = 1,
	EPlantGrowthStage__Vegetating                                                    = 2,
	EPlantGrowthStage__Flowering                                                     = 3,
	EPlantGrowthStage__Ripening                                                      = 4,
	EPlantGrowthStage__EPlantGrowthStage_MAX                                         = 5
};

/// Enum /Script/ConZ.EPlayableInstrumentView
/// Size: 0x03
enum EPlayableInstrumentView : uint8_t
{
	EPlayableInstrumentView__FirstPerson                                             = 0,
	EPlayableInstrumentView__ThirdPerson                                             = 1,
	EPlayableInstrumentView__EPlayableInstrumentView_MAX                             = 2
};

/// Enum /Script/ConZ.EPlayableInstrumentChord
/// Size: 0x02
enum EPlayableInstrumentChord : uint8_t
{
	EPlayableInstrumentChord__Count                                                  = 0,
	EPlayableInstrumentChord__EPlayableInstrumentChord_MAX                           = 1
};

/// Enum /Script/ConZ.EDroneVisibility
/// Size: 0x04
enum EDroneVisibility : uint8_t
{
	EDroneVisibility__Visible                                                        = 0,
	EDroneVisibility__Invisible                                                      = 1,
	EDroneVisibility__Hidden                                                         = 2,
	EDroneVisibility__EDroneVisibility_MAX                                           = 3
};

/// Enum /Script/ConZ.EInstrumentEventType
/// Size: 0x03
enum EInstrumentEventType : uint8_t
{
	EInstrumentEventType__PlayTone                                                   = 0,
	EInstrumentEventType__StopTone                                                   = 1,
	EInstrumentEventType__EInstrumentEventType_MAX                                   = 2
};

/// Enum /Script/ConZ.EStanceChangeFlag
/// Size: 0x03
enum EStanceChangeFlag : uint8_t
{
	EStanceChangeFlag__Exact                                                         = 0,
	EStanceChangeFlag__Min                                                           = 1,
	EStanceChangeFlag__Max                                                           = 2
};

/// Enum /Script/ConZ.EModifyWeaponPaintjobActionSubtype
/// Size: 0x06
enum EModifyWeaponPaintjobActionSubtype : uint8_t
{
	EModifyWeaponPaintjobActionSubtype__ClearPaintjob                                = 0,
	EModifyWeaponPaintjobActionSubtype__RefreshPaintjob                              = 1,
	EModifyWeaponPaintjobActionSubtype__PaintSolidColor                              = 2,
	EModifyWeaponPaintjobActionSubtype__SetPattern                                   = 3,
	EModifyWeaponPaintjobActionSubtype__SetColor                                     = 4,
	EModifyWeaponPaintjobActionSubtype__EModifyWeaponPaintjobActionSubtype_MAX       = 5
};

/// Enum /Script/ConZ.ESwapItemsType
/// Size: 0x08
enum ESwapItemsType : uint8_t
{
	ESwapItemsType__None                                                             = 0,
	ESwapItemsType__NotWeaponToNotWeapon                                             = 1,
	ESwapItemsType__WeaponToWeapon                                                   = 2,
	ESwapItemsType__NotWeaponToWeapon                                                = 3,
	ESwapItemsType__WeaponToNotWeapon                                                = 4,
	ESwapItemsType__WeaponToThrowingItem                                             = 5,
	ESwapItemsType__ThrowingItemToWeapon                                             = 6,
	ESwapItemsType__ESwapItemsType_MAX                                               = 7
};

/// Enum /Script/ConZ.EPrisonerAnimationCurve
/// Size: 0x31
enum EPrisonerAnimationCurve : uint8_t
{
	EPrisonerAnimationCurve__LegsPose                                                = 0,
	EPrisonerAnimationCurve__CanStartGoToLoop                                        = 1,
	EPrisonerAnimationCurve__CanStartGoToStopLU                                      = 2,
	EPrisonerAnimationCurve__CanStartGoToStopRU                                      = 3,
	EPrisonerAnimationCurve__DistanceToPivot                                         = 4,
	EPrisonerAnimationCurve__DistanceToApex                                          = 5,
	EPrisonerAnimationCurve__CanLandGoToLoop                                         = 6,
	EPrisonerAnimationCurve__CanFireWeapon                                           = 7,
	EPrisonerAnimationCurve__LeftHandIK                                              = 8,
	EPrisonerAnimationCurve__MoveInputScale                                          = 9,
	EPrisonerAnimationCurve__MoveInputModifierScale                                  = 10,
	EPrisonerAnimationCurve__MoveInputModifierCourseAngle                            = 11,
	EPrisonerAnimationCurve__IgnoreMoveInput                                         = 12,
	EPrisonerAnimationCurve__IgnoreTurnInput                                         = 13,
	EPrisonerAnimationCurve__IsStanceTransitionActive                                = 14,
	EPrisonerAnimationCurve__MeshOffsetWhenInWater                                   = 15,
	EPrisonerAnimationCurve__ViewRoll                                                = 16,
	EPrisonerAnimationCurve__ViewPitch                                               = 17,
	EPrisonerAnimationCurve__ViewYaw                                                 = 18,
	EPrisonerAnimationCurve__IgnoreAimOffset                                         = 19,
	EPrisonerAnimationCurve__IgnoreFistCorrections                                   = 20,
	EPrisonerAnimationCurve__IgnoreRotation                                          = 21,
	EPrisonerAnimationCurve__IgnoreFPBoneRotation                                    = 22,
	EPrisonerAnimationCurve__BikePickupRotation                                      = 23,
	EPrisonerAnimationCurve__BikePickupTranslation                                   = 24,
	EPrisonerAnimationCurve__BikePedalRotation                                       = 25,
	EPrisonerAnimationCurve__VehicleAttachmentRotation_Yaw                           = 26,
	EPrisonerAnimationCurve__VehicleAttachmentRotation_Pitch                         = 27,
	EPrisonerAnimationCurve__VehicleAttachmentRotation_Roll                          = 28,
	EPrisonerAnimationCurve__Count                                                   = 29,
	EPrisonerAnimationCurve__EPrisonerAnimationCurve_MAX                             = 30
};

/// Enum /Script/ConZ.EPrisonerAnimationMountType
/// Size: 0x09
enum EPrisonerAnimationMountType : uint8_t
{
	EPrisonerAnimationMountType__None                                                = 0,
	EPrisonerAnimationMountType__Car                                                 = 1,
	EPrisonerAnimationMountType__Sledge                                              = 2,
	EPrisonerAnimationMountType__WheelBarrow                                         = 3,
	EPrisonerAnimationMountType__Boat                                                = 4,
	EPrisonerAnimationMountType__Bike                                                = 5,
	EPrisonerAnimationMountType__Airplane                                            = 6,
	EPrisonerAnimationMountType__Count                                               = 7,
	EPrisonerAnimationMountType__EPrisonerAnimationMountType_MAX                     = 8
};

/// Enum /Script/ConZ.EPrisonerAnimationState
/// Size: 0x26
enum EPrisonerAnimationState : uint8_t
{
	EPrisonerAnimationState__Unknown                                                 = 0,
	EPrisonerAnimationState__Entry                                                   = 1,
	EPrisonerAnimationState__StandIdle                                               = 2,
	EPrisonerAnimationState__StandIdleToCrouchIdle                                   = 3,
	EPrisonerAnimationState__StandIdleToProneIdle                                    = 4,
	EPrisonerAnimationState__StandWalkStart                                          = 5,
	EPrisonerAnimationState__StandWalkLoop                                           = 6,
	EPrisonerAnimationState__StandWalkStop                                           = 7,
	EPrisonerAnimationState__StandJogStart                                           = 8,
	EPrisonerAnimationState__StandJogLoop                                            = 9,
	EPrisonerAnimationState__StandJogStop                                            = 10,
	EPrisonerAnimationState__StandRunStart                                           = 11,
	EPrisonerAnimationState__StandRunLoop                                            = 12,
	EPrisonerAnimationState__StandRunStop                                            = 13,
	EPrisonerAnimationState__CrouchIdle                                              = 14,
	EPrisonerAnimationState__CrouchIdleToStandIdle                                   = 15,
	EPrisonerAnimationState__CrouchIdleToProneIdle                                   = 16,
	EPrisonerAnimationState__CrouchWalkStart                                         = 17,
	EPrisonerAnimationState__CrouchWalkLoop                                          = 18,
	EPrisonerAnimationState__CrouchWalkStop                                          = 19,
	EPrisonerAnimationState__ProneIdle                                               = 20,
	EPrisonerAnimationState__ProneIdleToStandIdle                                    = 21,
	EPrisonerAnimationState__ProneIdleToCrouchIdle                                   = 22,
	EPrisonerAnimationState__ProneWalkLoop                                           = 23,
	EPrisonerAnimationState__Count                                                   = 24,
	EPrisonerAnimationState__EPrisonerAnimationState_MAX                             = 25
};

/// Enum /Script/ConZ.EPrisonerBodyConditionState
/// Size: 0x06
enum EPrisonerBodyConditionState : uint8_t
{
	EPrisonerBodyConditionState__Incubating                                          = 0,
	EPrisonerBodyConditionState__Untreated                                           = 1,
	EPrisonerBodyConditionState__Stabilizing                                         = 2,
	EPrisonerBodyConditionState__Recovering                                          = 3,
	EPrisonerBodyConditionState__Count                                               = 4,
	EPrisonerBodyConditionState__EPrisonerBodyConditionState_MAX                     = 5
};

/// Enum /Script/ConZ.EPrisonerBodyConditionTissueGroup
/// Size: 0x06
enum EPrisonerBodyConditionTissueGroup : uint8_t
{
	EPrisonerBodyConditionTissueGroup__Unspecified                                   = 0,
	EPrisonerBodyConditionTissueGroup__Muscle                                        = 1,
	EPrisonerBodyConditionTissueGroup__Bone                                          = 2,
	EPrisonerBodyConditionTissueGroup__Organ                                         = 3,
	EPrisonerBodyConditionTissueGroup__Count                                         = 4,
	EPrisonerBodyConditionTissueGroup__EPrisonerBodyConditionTissueGroup_MAX         = 5
};

/// Enum /Script/ConZ.EPrisonerBodyOrganGroup
/// Size: 0x20
enum EPrisonerBodyOrganGroup : uint8_t
{
	EPrisonerBodyOrganGroup__Unspecified                                             = 0,
	EPrisonerBodyOrganGroup__SpinalCord                                              = 1,
	EPrisonerBodyOrganGroup__Lungs                                                   = 2,
	EPrisonerBodyOrganGroup__RespiratorySystem                                       = 3,
	EPrisonerBodyOrganGroup__CirculatorySystem                                       = 4,
	EPrisonerBodyOrganGroup__Colon                                                   = 5,
	EPrisonerBodyOrganGroup__Intestine                                               = 6,
	EPrisonerBodyOrganGroup__Bladder                                                 = 7,
	EPrisonerBodyOrganGroup__Liver                                                   = 8,
	EPrisonerBodyOrganGroup__Kidneys                                                 = 9,
	EPrisonerBodyOrganGroup__AdrenalGlands                                           = 10,
	EPrisonerBodyOrganGroup__Gallbladder                                             = 11,
	EPrisonerBodyOrganGroup__Pancreas                                                = 12,
	EPrisonerBodyOrganGroup__Stomach                                                 = 13,
	EPrisonerBodyOrganGroup__Heart                                                   = 14,
	EPrisonerBodyOrganGroup__Spleen                                                  = 15,
	EPrisonerBodyOrganGroup__Brain                                                   = 16,
	EPrisonerBodyOrganGroup__Reproductive                                            = 17,
	EPrisonerBodyOrganGroup__Count                                                   = 18,
	EPrisonerBodyOrganGroup__EPrisonerBodyOrganGroup_MAX                             = 19
};

/// Enum /Script/ConZ.EPrisonerBodyMuscleGroup
/// Size: 0x27
enum EPrisonerBodyMuscleGroup : uint8_t
{
	EPrisonerBodyMuscleGroup__Unspecified                                            = 0,
	EPrisonerBodyMuscleGroup__Head                                                   = 1,
	EPrisonerBodyMuscleGroup__Neck                                                   = 2,
	EPrisonerBodyMuscleGroup__Trapezius                                              = 3,
	EPrisonerBodyMuscleGroup__Chest                                                  = 4,
	EPrisonerBodyMuscleGroup__UpperAbdomen                                           = 5,
	EPrisonerBodyMuscleGroup__LowerAbdomen                                           = 6,
	EPrisonerBodyMuscleGroup__LeftEar                                                = 7,
	EPrisonerBodyMuscleGroup__RightEar                                               = 8,
	EPrisonerBodyMuscleGroup__LeftThigh                                              = 9,
	EPrisonerBodyMuscleGroup__RightThigh                                             = 10,
	EPrisonerBodyMuscleGroup__LeftLeg                                                = 11,
	EPrisonerBodyMuscleGroup__RightLeg                                               = 12,
	EPrisonerBodyMuscleGroup__LeftFoot                                               = 13,
	EPrisonerBodyMuscleGroup__RightFoot                                              = 14,
	EPrisonerBodyMuscleGroup__LeftShoulder                                           = 15,
	EPrisonerBodyMuscleGroup__RightShoulder                                          = 16,
	EPrisonerBodyMuscleGroup__LeftArm                                                = 17,
	EPrisonerBodyMuscleGroup__RightArm                                               = 18,
	EPrisonerBodyMuscleGroup__LeftForearm                                            = 19,
	EPrisonerBodyMuscleGroup__RightForearm                                           = 20,
	EPrisonerBodyMuscleGroup__LeftHand                                               = 21,
	EPrisonerBodyMuscleGroup__RightHand                                              = 22,
	EPrisonerBodyMuscleGroup__LeftKneecap                                            = 23,
	EPrisonerBodyMuscleGroup__RightKneecap                                           = 24,
	EPrisonerBodyMuscleGroup__Count                                                  = 25,
	EPrisonerBodyMuscleGroup__EPrisonerBodyMuscleGroup_MAX                           = 26
};

/// Enum /Script/ConZ.EPrisonerBodyBoneGroup
/// Size: 0x21
enum EPrisonerBodyBoneGroup : uint8_t
{
	EPrisonerBodyBoneGroup__Unspecified                                              = 0,
	EPrisonerBodyBoneGroup__Ribcage                                                  = 1,
	EPrisonerBodyBoneGroup__Spine                                                    = 2,
	EPrisonerBodyBoneGroup__Skull                                                    = 3,
	EPrisonerBodyBoneGroup__Pelvis                                                   = 4,
	EPrisonerBodyBoneGroup__LeftThigh                                                = 5,
	EPrisonerBodyBoneGroup__RightThigh                                               = 6,
	EPrisonerBodyBoneGroup__LeftLeg                                                  = 7,
	EPrisonerBodyBoneGroup__RightLeg                                                 = 8,
	EPrisonerBodyBoneGroup__LeftFoot                                                 = 9,
	EPrisonerBodyBoneGroup__RightFoot                                                = 10,
	EPrisonerBodyBoneGroup__LeftShoulder                                             = 11,
	EPrisonerBodyBoneGroup__RightShoulder                                            = 12,
	EPrisonerBodyBoneGroup__LeftArm                                                  = 13,
	EPrisonerBodyBoneGroup__RightArm                                                 = 14,
	EPrisonerBodyBoneGroup__LeftForearm                                              = 15,
	EPrisonerBodyBoneGroup__RightForearm                                             = 16,
	EPrisonerBodyBoneGroup__LeftHand                                                 = 17,
	EPrisonerBodyBoneGroup__RightHand                                                = 18,
	EPrisonerBodyBoneGroup__Count                                                    = 19,
	EPrisonerBodyBoneGroup__EPrisonerBodyBoneGroup_MAX                               = 20
};

/// Enum /Script/ConZ.EPrisonerBodyRegion
/// Size: 0x09
enum EPrisonerBodyRegion : uint8_t
{
	EPrisonerBodyRegion__Unspecified                                                 = 0,
	EPrisonerBodyRegion__Head                                                        = 1,
	EPrisonerBodyRegion__Torso                                                       = 2,
	EPrisonerBodyRegion__LeftArm                                                     = 3,
	EPrisonerBodyRegion__RightArm                                                    = 4,
	EPrisonerBodyRegion__LeftLeg                                                     = 5,
	EPrisonerBodyRegion__RightLeg                                                    = 6,
	EPrisonerBodyRegion__Count                                                       = 7,
	EPrisonerBodyRegion__EPrisonerBodyRegion_MAX                                     = 8
};

/// Enum /Script/ConZ.EPrisonerBodyState
/// Size: 0x16
enum EPrisonerBodyState : uint8_t
{
	EPrisonerBodyState__UnableToMove                                                 = 0,
	EPrisonerBodyState__Unconscious                                                  = 1,
	EPrisonerBodyState__Comatose                                                     = 2,
	EPrisonerBodyState__Dead                                                         = 3,
	EPrisonerBodyState__AbleToConsume                                                = 4,
	EPrisonerBodyState__Consuming                                                    = 5,
	EPrisonerBodyState__AbleToVomit                                                  = 6,
	EPrisonerBodyState__Vomiting                                                     = 7,
	EPrisonerBodyState__AbleToUrinate                                                = 8,
	EPrisonerBodyState__Urinating                                                    = 9,
	EPrisonerBodyState__AbleToDefecate                                               = 10,
	EPrisonerBodyState__Defecating                                                   = 11,
	EPrisonerBodyState__ShallDefecateDiarrhea                                        = 12,
	EPrisonerBodyState__CannotBeRevivedWithPhoenixTears                              = 13,
	EPrisonerBodyState__Count                                                        = 14,
	EPrisonerBodyState__EPrisonerBodyState_MAX                                       = 15
};

/// Enum /Script/ConZ.EBuryState
/// Size: 0x06
enum EBuryState : uint8_t
{
	EBuryState__None                                                                 = 0,
	EBuryState__Bury                                                                 = 1,
	EBuryState__ResumeBury                                                           = 2,
	EBuryState__Rest                                                                 = 3,
	EBuryState__Finish                                                               = 4,
	EBuryState__EBuryState_MAX                                                       = 5
};

/// Enum /Script/ConZ.EPrisonerFacialExpression
/// Size: 0x16
enum EPrisonerFacialExpression : uint8_t
{
	EPrisonerFacialExpression__None                                                  = 0,
	EPrisonerFacialExpression__Angry1                                                = 1,
	EPrisonerFacialExpression__Angry2                                                = 2,
	EPrisonerFacialExpression__Hit                                                   = 3,
	EPrisonerFacialExpression__Punching                                              = 4,
	EPrisonerFacialExpression__Fear1                                                 = 5,
	EPrisonerFacialExpression__Fear2                                                 = 6,
	EPrisonerFacialExpression__Fear3                                                 = 7,
	EPrisonerFacialExpression__WhatTheHell1                                          = 8,
	EPrisonerFacialExpression__WhatTheHell2                                          = 9,
	EPrisonerFacialExpression__Whistling1                                            = 10,
	EPrisonerFacialExpression__Whistling2                                            = 11,
	EPrisonerFacialExpression__Ouch1                                                 = 12,
	EPrisonerFacialExpression__Ouch2                                                 = 13,
	EPrisonerFacialExpression__Count                                                 = 14,
	EPrisonerFacialExpression__EPrisonerFacialExpression_MAX                         = 15
};

/// Enum /Script/ConZ.EPrisonerFirstPersonSubview
/// Size: 0x19
enum EPrisonerFirstPersonSubview : uint8_t
{
	EPrisonerFirstPersonSubview__Standing                                            = 0,
	EPrisonerFirstPersonSubview__Crouching                                           = 1,
	EPrisonerFirstPersonSubview__Prone                                               = 2,
	EPrisonerFirstPersonSubview__StandingMelee                                       = 3,
	EPrisonerFirstPersonSubview__StandingAiming                                      = 4,
	EPrisonerFirstPersonSubview__CrouchingAiming                                     = 5,
	EPrisonerFirstPersonSubview__ProneAiming                                         = 6,
	EPrisonerFirstPersonSubview__StandingAimingDownTheSights                         = 7,
	EPrisonerFirstPersonSubview__CrouchingAimingDownTheSights                        = 8,
	EPrisonerFirstPersonSubview__ProneAimingDownTheSights                            = 9,
	EPrisonerFirstPersonSubview__ClimbingWindow                                      = 10,
	EPrisonerFirstPersonSubview__Mounted                                             = 11,
	EPrisonerFirstPersonSubview__Lying                                               = 12,
	EPrisonerFirstPersonSubview__MountedDefaultStanceAiming                          = 13,
	EPrisonerFirstPersonSubview__MountedLeaningStanceAiming                          = 14,
	EPrisonerFirstPersonSubview__MountedDefaultStanceAimingDownTheSights             = 15,
	EPrisonerFirstPersonSubview__MountedLeaningStanceAimingDownTheSights             = 16,
	EPrisonerFirstPersonSubview__Count                                               = 17,
	EPrisonerFirstPersonSubview__EPrisonerFirstPersonSubview_MAX                     = 18
};

/// Enum /Script/ConZ.EPrisonerVicinityItemSets
/// Size: 0x05
enum EPrisonerVicinityItemSets : uint8_t
{
	EPrisonerVicinityItemSets__None                                                  = 0,
	EPrisonerVicinityItemSets__Items                                                 = 1,
	EPrisonerVicinityItemSets__Containers                                            = 2,
	EPrisonerVicinityItemSets__All                                                   = 3,
	EPrisonerVicinityItemSets__EPrisonerVicinityItemSets_MAX                         = 4
};

/// Enum /Script/ConZ.EPrisonerInventoryItemSets
/// Size: 0x05
enum EPrisonerInventoryItemSets : uint8_t
{
	EPrisonerInventoryItemSets__None                                                 = 0,
	EPrisonerInventoryItemSets__EquippedClothes                                      = 1,
	EPrisonerInventoryItemSets__ContainedItems                                       = 2,
	EPrisonerInventoryItemSets__All                                                  = 3,
	EPrisonerInventoryItemSets__EPrisonerInventoryItemSets_MAX                       = 4
};

/// Enum /Script/ConZ.EPrisonerItemEquipType
/// Size: 0x04
enum EPrisonerItemEquipType : uint8_t
{
	EPrisonerItemEquipType__Inventory                                                = 0,
	EPrisonerItemEquipType__Hands                                                    = 1,
	EPrisonerItemEquipType__Holsters                                                 = 2,
	EPrisonerItemEquipType__EPrisonerItemEquipType_MAX                               = 3
};

/// Enum /Script/ConZ.EPrisonerDivingState
/// Size: 0x04
enum EPrisonerDivingState : uint8_t
{
	EPrisonerDivingState__None                                                       = 0,
	EPrisonerDivingState__WantsToDive                                                = 1,
	EPrisonerDivingState__Diving                                                     = 2,
	EPrisonerDivingState__EPrisonerDivingState_MAX                                   = 3
};

/// Enum /Script/ConZ.EPrisonerMovementMode
/// Size: 0x09
enum EPrisonerMovementMode : uint8_t
{
	EPrisonerMovementMode__None                                                      = 0,
	EPrisonerMovementMode__Climbing_Anchoring                                        = 1,
	EPrisonerMovementMode__Climbing_PlayingMontage                                   = 2,
	EPrisonerMovementMode__ClimbingLadder                                            = 3,
	EPrisonerMovementMode__ClimbingWindow_Anchoring                                  = 4,
	EPrisonerMovementMode__ClimbingWindow_PlayingMontage                             = 5,
	EPrisonerMovementMode__Anchoring                                                 = 6,
	EPrisonerMovementMode__RootMotionOnly                                            = 7,
	EPrisonerMovementMode__EPrisonerMovementMode_MAX                                 = 8
};

/// Enum /Script/ConZ.EPrisonerNameChangeErrorType
/// Size: 0x10
enum EPrisonerNameChangeErrorType : uint8_t
{
	EPrisonerNameChangeErrorType__None                                               = 0,
	EPrisonerNameChangeErrorType__NameTooShort                                       = 1,
	EPrisonerNameChangeErrorType__NameTooLong                                        = 2,
	EPrisonerNameChangeErrorType__IllegalCharacterPresent                            = 3,
	EPrisonerNameChangeErrorType__NameChangeOnCooldown                               = 4,
	EPrisonerNameChangeErrorType__NameTaken                                          = 5,
	EPrisonerNameChangeErrorType__NameBlacklisted                                    = 6,
	EPrisonerNameChangeErrorType__InsufficientFunds                                  = 7,
	EPrisonerNameChangeErrorType__Other                                              = 8,
	EPrisonerNameChangeErrorType__EPrisonerNameChangeErrorType_MAX                   = 9
};

/// Enum /Script/ConZ.EPrisonerPhotoModePoseGroup
/// Size: 0x05
enum EPrisonerPhotoModePoseGroup : uint8_t
{
	EPrisonerPhotoModePoseGroup__Unarmed                                             = 0,
	EPrisonerPhotoModePoseGroup__Rifle                                               = 1,
	EPrisonerPhotoModePoseGroup__Handgun                                             = 2,
	EPrisonerPhotoModePoseGroup__Melee                                               = 3,
	EPrisonerPhotoModePoseGroup__EPrisonerPhotoModePoseGroup_MAX                     = 4
};

/// Enum /Script/ConZ.EPrisonWalletChoiceType
/// Size: 0x04
enum EPrisonWalletChoiceType : uint8_t
{
	EPrisonWalletChoiceType__JustFirst                                               = 0,
	EPrisonWalletChoiceType__PickRandom                                              = 1,
	EPrisonWalletChoiceType__AllOfThem                                               = 2,
	EPrisonWalletChoiceType__EPrisonWalletChoiceType_MAX                             = 3
};

/// Enum /Script/ConZ.EPrisonerRestingMode
/// Size: 0x05
enum EPrisonerRestingMode : uint8_t
{
	EPrisonerRestingMode__None                                                       = 0,
	EPrisonerRestingMode__Sitting                                                    = 1,
	EPrisonerRestingMode__Lying                                                      = 2,
	EPrisonerRestingMode__Count                                                      = 3,
	EPrisonerRestingMode__EPrisonerRestingMode_MAX                                   = 4
};

/// Enum /Script/ConZ.EThrowingType
/// Size: 0x06
enum EThrowingType : uint8_t
{
	EThrowingType__None                                                              = 0,
	EThrowingType__Near                                                              = 1,
	EThrowingType__Far                                                               = 2,
	EThrowingType__Aim                                                               = 3,
	EThrowingType__Throwback                                                         = 4,
	EThrowingType__EThrowingType_MAX                                                 = 5
};

/// Enum /Script/ConZ.EPrisonerVisibilityFlag
/// Size: 0x06
enum EPrisonerVisibilityFlag : uint8_t
{
	EPrisonerVisibilityFlag__None                                                    = 0,
	EPrisonerVisibilityFlag__Default                                                 = 1,
	EPrisonerVisibilityFlag__View                                                    = 2,
	EPrisonerVisibilityFlag__Awareness                                               = 4,
	EPrisonerVisibilityFlag__All                                                     = 255,
	EPrisonerVisibilityFlag__EPrisonerVisibilityFlag_MAX                             = 256
};

/// Enum /Script/ConZ.EPrisonerAimOffsetType
/// Size: 0x09
enum EPrisonerAimOffsetType : uint8_t
{
	EPrisonerAimOffsetType__Standing                                                 = 0,
	EPrisonerAimOffsetType__Crouching                                                = 1,
	EPrisonerAimOffsetType__Prone                                                    = 2,
	EPrisonerAimOffsetType__ProneMoving                                              = 3,
	EPrisonerAimOffsetType__FirstPersonView                                          = 4,
	EPrisonerAimOffsetType__FirstPersonViewProne                                     = 5,
	EPrisonerAimOffsetType__AimingDownTheSights                                      = 6,
	EPrisonerAimOffsetType__Count                                                    = 7,
	EPrisonerAimOffsetType__EPrisonerAimOffsetType_MAX                               = 8
};

/// Enum /Script/ConZ.EPrisonerMontageBlendType
/// Size: 0x04
enum EPrisonerMontageBlendType : uint8_t
{
	EPrisonerMontageBlendType__All                                                   = 0,
	EPrisonerMontageBlendType__LeftHand                                              = 1,
	EPrisonerMontageBlendType__RightHand                                             = 2,
	EPrisonerMontageBlendType__EPrisonerMontageBlendType_MAX                         = 3
};

/// Enum /Script/ConZ.EPrisonerPostTeleportBehavior
/// Size: 0x04
enum EPrisonerPostTeleportBehavior : uint8_t
{
	EPrisonerPostTeleportBehavior__None                                              = 0,
	EPrisonerPostTeleportBehavior__ReviveIfDead                                      = 1,
	EPrisonerPostTeleportBehavior__GameEventLoadout                                  = 2,
	EPrisonerPostTeleportBehavior__EPrisonerPostTeleportBehavior_MAX                 = 3
};

/// Enum /Script/ConZ.EPrisonerHolsterSide
/// Size: 0x04
enum EPrisonerHolsterSide : uint8_t
{
	EPrisonerHolsterSide__None                                                       = 0,
	EPrisonerHolsterSide__LeftShoulder                                               = 1,
	EPrisonerHolsterSide__RightShoulder                                              = 2,
	EPrisonerHolsterSide__EPrisonerHolsterSide_MAX                                   = 3
};

/// Enum /Script/ConZ.EWeaponAnimationPose
/// Size: 0x09
enum EWeaponAnimationPose : uint8_t
{
	EWeaponAnimationPose__None                                                       = 0,
	EWeaponAnimationPose__Relaxed                                                    = 1,
	EWeaponAnimationPose__AimingHip                                                  = 2,
	EWeaponAnimationPose__AimingDownTheSights                                        = 3,
	EWeaponAnimationPose__AimingDownTheSightsStill                                   = 4,
	EWeaponAnimationPose__AimingDownTheSightsWalking                                 = 5,
	EWeaponAnimationPose__AimingDownTheSightsLimpingWalking                          = 6,
	EWeaponAnimationPose__Count                                                      = 7,
	EWeaponAnimationPose__EWeaponAnimationPose_MAX                                   = 8
};

/// Enum /Script/ConZ.EPrisonerFallingPose
/// Size: 0x15
enum EPrisonerFallingPose : uint8_t
{
	EPrisonerFallingPose__None                                                       = 0,
	EPrisonerFallingPose__JumpNormal                                                 = 1,
	EPrisonerFallingPose__JumpDive                                                   = 2,
	EPrisonerFallingPose__FallShort                                                  = 3,
	EPrisonerFallingPose__FallLong                                                   = 4,
	EPrisonerFallingPose__SkydiveSlow                                                = 5,
	EPrisonerFallingPose__SkydiveFast                                                = 6,
	EPrisonerFallingPose__DiveHeadFirst                                              = 7,
	EPrisonerFallingPose__DiveFeetFirst                                              = 8,
	EPrisonerFallingPose__Parachute                                                  = 9,
	EPrisonerFallingPose__HandsBound                                                 = 10,
	EPrisonerFallingPose__RagdollRecovery                                            = 11,
	EPrisonerFallingPose__JumpSuper                                                  = 12,
	EPrisonerFallingPose__Count                                                      = 13,
	EPrisonerFallingPose__EPrisonerFallingPose_MAX                                   = 14
};

/// Enum /Script/ConZ.EPrisonerReplicatedComponent
/// Size: 0x07
enum EPrisonerReplicatedComponent : uint8_t
{
	EPrisonerReplicatedComponent__SkillComponent                                     = 0,
	EPrisonerReplicatedComponent__InventoryComponent                                 = 1,
	EPrisonerReplicatedComponent__HitReactComponent                                  = 2,
	EPrisonerReplicatedComponent__InteractionComponent                               = 3,
	EPrisonerReplicatedComponent__BodySimulationComponent                            = 4,
	EPrisonerReplicatedComponent__Count                                              = 5,
	EPrisonerReplicatedComponent__EPrisonerReplicatedComponent_MAX                   = 6
};

/// Enum /Script/ConZ.EPrisonerThirdPersonSubview
/// Size: 0x18
enum EPrisonerThirdPersonSubview : uint8_t
{
	EPrisonerThirdPersonSubview__Standing                                            = 0,
	EPrisonerThirdPersonSubview__Crouching                                           = 1,
	EPrisonerThirdPersonSubview__Prone                                               = 2,
	EPrisonerThirdPersonSubview__StandingMelee                                       = 3,
	EPrisonerThirdPersonSubview__StandingAiming                                      = 4,
	EPrisonerThirdPersonSubview__CrouchingAiming                                     = 5,
	EPrisonerThirdPersonSubview__ProneAiming                                         = 6,
	EPrisonerThirdPersonSubview__Ragdoll                                             = 7,
	EPrisonerThirdPersonSubview__Grappled                                            = 8,
	EPrisonerThirdPersonSubview__NarrowLadder                                        = 9,
	EPrisonerThirdPersonSubview__Swimming                                            = 10,
	EPrisonerThirdPersonSubview__Diving                                              = 11,
	EPrisonerThirdPersonSubview__ClimbingWindow                                      = 12,
	EPrisonerThirdPersonSubview__Defecating                                          = 13,
	EPrisonerThirdPersonSubview__Throwing                                            = 14,
	EPrisonerThirdPersonSubview__Falling                                             = 15,
	EPrisonerThirdPersonSubview__Count                                               = 16,
	EPrisonerThirdPersonSubview__EPrisonerThirdPersonSubview_MAX                     = 17
};

/// Enum /Script/ConZ.EPlayerSideView
/// Size: 0x04
enum EPlayerSideView : uint8_t
{
	EPlayerSideView__Left                                                            = 0,
	EPlayerSideView__Right                                                           = 1,
	EPlayerSideView__Count                                                           = 2,
	EPlayerSideView__EPlayerSideView_MAX                                             = 3
};

/// Enum /Script/ConZ.EThrowingState
/// Size: 0x09
enum EThrowingState : uint8_t
{
	EThrowingState__None                                                             = 0,
	EThrowingState__Cancelled                                                        = 1,
	EThrowingState__Aiming                                                           = 2,
	EThrowingState__ThrowFromAim                                                     = 3,
	EThrowingState__Throwing                                                         = 4,
	EThrowingState__Lobbing                                                          = 5,
	EThrowingState__Throwback                                                        = 6,
	EThrowingState__Finish                                                           = 7,
	EThrowingState__EThrowingState_MAX                                               = 8
};

/// Enum /Script/ConZ.EPrisonerUITooltipSectionName
/// Size: 0x07
enum EPrisonerUITooltipSectionName : uint8_t
{
	EPrisonerUITooltipSectionName__None                                              = 0,
	EPrisonerUITooltipSectionName__Affects                                           = 1,
	EPrisonerUITooltipSectionName__AffectedBy                                        = 2,
	EPrisonerUITooltipSectionName__CausedBy                                          = 3,
	EPrisonerUITooltipSectionName__Symptoms                                          = 4,
	EPrisonerUITooltipSectionName__Count                                             = 5,
	EPrisonerUITooltipSectionName__EPrisonerUITooltipSectionName_MAX                 = 6
};

/// Enum /Script/ConZ.EPrisonerUIAttribute
/// Size: 0x86
enum EPrisonerUIAttribute : uint8_t
{
	EPrisonerUIAttribute__CA_Strength                                                = 0,
	EPrisonerUIAttribute__CA_Constitution                                            = 1,
	EPrisonerUIAttribute__CA_Dexterity                                               = 2,
	EPrisonerUIAttribute__CA_Intelligence                                            = 3,
	EPrisonerUIAttribute__BI_Age                                                     = 4,
	EPrisonerUIAttribute__BI_Lifetime                                                = 5,
	EPrisonerUIAttribute__BI_Weight                                                  = 6,
	EPrisonerUIAttribute__BI_Health                                                  = 7,
	EPrisonerUIAttribute__BI_Teeth                                                   = 8,
	EPrisonerUIAttribute__BI_BloodType                                               = 9,
	EPrisonerUIAttribute__BI_BloodVolume                                             = 10,
	EPrisonerUIAttribute__BI_Temperature                                             = 11,
	EPrisonerUIAttribute__PD_Stamina                                                 = 12,
	EPrisonerUIAttribute__PD_StaminaChangeRate                                       = 13,
	EPrisonerUIAttribute__PD_Unused1                                                 = 14,
	EPrisonerUIAttribute__PD_Unused2                                                 = 15,
	EPrisonerUIAttribute__PD_ActionDifficulty                                        = 16,
	EPrisonerUIAttribute__PD_WeightLoad                                              = 17,
	EPrisonerUIAttribute__PD_WalkSpeed                                               = 18,
	EPrisonerUIAttribute__PD_JogSpeed                                                = 19,
	EPrisonerUIAttribute__PD_RunSpeed                                                = 20,
	EPrisonerUIAttribute__PD_CaloriesOverloadPenalty                                 = 21,
	EPrisonerUIAttribute__PD_WaterOverloadPenalty                                    = 22,
	EPrisonerUIAttribute__PI_HealingSpeed                                            = 23,
	EPrisonerUIAttribute__PI_BloodRecoveryRate                                       = 24,
	EPrisonerUIAttribute__PI_ImmuneSystem                                            = 25,
	EPrisonerUIAttribute__PI_PerformanceScore                                        = 26,
	EPrisonerUIAttribute__PI_StealthFactor                                           = 27,
	EPrisonerUIAttribute__PI_MeleeDamage                                             = 28,
	EPrisonerUIAttribute__NAS_Protein                                                = 29,
	EPrisonerUIAttribute__NAS_Carbs                                                  = 30,
	EPrisonerUIAttribute__NAS_Fat                                                    = 31,
	EPrisonerUIAttribute__NAS_Minerals                                               = 32,
	EPrisonerUIAttribute__NAS_Vitamins                                               = 33,
	EPrisonerUIAttribute__NAS_Water                                                  = 34,
	EPrisonerUIAttribute__NAS_Alcohol                                                = 35,
	EPrisonerUIAttribute__BMD_Bones                                                  = 36,
	EPrisonerUIAttribute__BMD_Blood                                                  = 37,
	EPrisonerUIAttribute__BMD_Intestines                                             = 38,
	EPrisonerUIAttribute__BMD_Skin                                                   = 39,
	EPrisonerUIAttribute__BMD_Organs                                                 = 40,
	EPrisonerUIAttribute__BMD_Fat                                                    = 41,
	EPrisonerUIAttribute__BMD_Muscle                                                 = 42,
	EPrisonerUIAttribute__BS_Unconsciousness                                         = 43,
	EPrisonerUIAttribute__BS_Coma                                                    = 44,
	EPrisonerUIAttribute__BS_Death                                                   = 45,
	EPrisonerUIAttribute__NU_Calories                                                = 46,
	EPrisonerUIAttribute__NU_Water                                                   = 47,
	EPrisonerUIAttribute__MR_Protein                                                 = 48,
	EPrisonerUIAttribute__MR_Carbs                                                   = 49,
	EPrisonerUIAttribute__MR_Fat                                                     = 50,
	EPrisonerUIAttribute__MR_Fiber                                                   = 51,
	EPrisonerUIAttribute__MR_Sugar                                                   = 52,
	EPrisonerUIAttribute__MR_SaturatedFat                                            = 53,
	EPrisonerUIAttribute__MR_Alcohol                                                 = 54,
	EPrisonerUIAttribute__BR_Muscle                                                  = 55,
	EPrisonerUIAttribute__BR_Fat                                                     = 56,
	EPrisonerUIAttribute__VI_VitaminA                                                = 57,
	EPrisonerUIAttribute__VI_VitaminB1                                               = 58,
	EPrisonerUIAttribute__VI_VitaminB2                                               = 59,
	EPrisonerUIAttribute__VI_VitaminB3                                               = 60,
	EPrisonerUIAttribute__VI_VitaminB4                                               = 61,
	EPrisonerUIAttribute__VI_VitaminB5                                               = 62,
	EPrisonerUIAttribute__VI_VitaminB6                                               = 63,
	EPrisonerUIAttribute__VI_VitaminB9                                               = 64,
	EPrisonerUIAttribute__VI_VitaminB12                                              = 65,
	EPrisonerUIAttribute__VI_VitaminC                                                = 66,
	EPrisonerUIAttribute__VI_VitaminD                                                = 67,
	EPrisonerUIAttribute__VI_VitaminE                                                = 68,
	EPrisonerUIAttribute__VI_VitaminK                                                = 69,
	EPrisonerUIAttribute__MI_MineralCa                                               = 70,
	EPrisonerUIAttribute__MI_MineralFe                                               = 71,
	EPrisonerUIAttribute__MI_MineralMg                                               = 72,
	EPrisonerUIAttribute__MI_MineralP                                                = 73,
	EPrisonerUIAttribute__MI_MineralK                                                = 74,
	EPrisonerUIAttribute__MI_MineralZn                                               = 75,
	EPrisonerUIAttribute__MI_MineralCu                                               = 76,
	EPrisonerUIAttribute__MI_MineralMn                                               = 77,
	EPrisonerUIAttribute__MI_MineralSe                                               = 78,
	EPrisonerUIAttribute__MI_MineralNa                                               = 79,
	EPrisonerUIAttribute__DI_Stomach                                                 = 80,
	EPrisonerUIAttribute__DI_Intestine                                               = 81,
	EPrisonerUIAttribute__DI_Colon                                                   = 82,
	EPrisonerUIAttribute__DI_Bladder                                                 = 83,
	EPrisonerUIAttribute__Count                                                      = 84,
	EPrisonerUIAttribute__EPrisonerUIAttribute_MAX                                   = 85
};

/// Enum /Script/ConZ.EInstallVehicleAttachmentActionMethod
/// Size: 0x04
enum EInstallVehicleAttachmentActionMethod : uint8_t
{
	EInstallVehicleAttachmentActionMethod__InstallWithSkill                          = 0,
	EInstallVehicleAttachmentActionMethod__PayForInstallation                        = 1,
	EInstallVehicleAttachmentActionMethod__BuyNewAttachment                          = 2,
	EInstallVehicleAttachmentActionMethod__EInstallVehicleAttachmentActionMethod_MAX = 3
};

/// Enum /Script/ConZ.ERemoveVehicleAttachmentActionMethod
/// Size: 0x04
enum ERemoveVehicleAttachmentActionMethod : uint8_t
{
	ERemoveVehicleAttachmentActionMethod__RemoveWithSkill                            = 0,
	ERemoveVehicleAttachmentActionMethod__PayForRemoval                              = 1,
	ERemoveVehicleAttachmentActionMethod__SellAttachment                             = 2,
	ERemoveVehicleAttachmentActionMethod__ERemoveVehicleAttachmentActionMethod_MAX   = 3
};

/// Enum /Script/ConZ.ERepairVehicleAttachmentActionMethod
/// Size: 0x03
enum ERepairVehicleAttachmentActionMethod : uint8_t
{
	ERepairVehicleAttachmentActionMethod__RepairWithSkill                            = 0,
	ERepairVehicleAttachmentActionMethod__PayForRepair                               = 1,
	ERepairVehicleAttachmentActionMethod__ERepairVehicleAttachmentActionMethod_MAX   = 2
};

/// Enum /Script/ConZ.EPenetrationType
/// Size: 0x05
enum EPenetrationType : uint8_t
{
	EPenetrationType__None                                                           = 0,
	EPenetrationType__Entry                                                          = 1,
	EPenetrationType__Exit                                                           = 2,
	EPenetrationType__Both                                                           = 3,
	EPenetrationType__EPenetrationType_MAX                                           = 4
};

/// Enum /Script/ConZ.EWindSpeedCategory
/// Size: 0x05
enum EWindSpeedCategory : uint8_t
{
	EWindSpeedCategory__Zero                                                         = 0,
	EWindSpeedCategory__Low                                                          = 1,
	EWindSpeedCategory__Medium                                                       = 2,
	EWindSpeedCategory__High                                                         = 3,
	EWindSpeedCategory__EWindSpeedCategory_MAX                                       = 4
};

/// Enum /Script/ConZ.EBallisticDragModel
/// Size: 0x07
enum EBallisticDragModel : uint8_t
{
	EBallisticDragModel__G1                                                          = 0,
	EBallisticDragModel__G2                                                          = 1,
	EBallisticDragModel__G5                                                          = 2,
	EBallisticDragModel__G6                                                          = 3,
	EBallisticDragModel__G7                                                          = 4,
	EBallisticDragModel__G8                                                          = 5,
	EBallisticDragModel__EBallisticDragModel_MAX                                     = 6
};

/// Enum /Script/ConZ.EQuiverActiveMesh
/// Size: 0x04
enum EQuiverActiveMesh : uint8_t
{
	EQuiverActiveMesh__Static                                                        = 0,
	EQuiverActiveMesh__Skeletal                                                      = 1,
	EQuiverActiveMesh__SkeletalAlternative                                           = 2,
	EQuiverActiveMesh__EQuiverActiveMesh_MAX                                         = 3
};

/// Enum /Script/ConZ.ERangedResourceFunctionCallType
/// Size: 0x03
enum ERangedResourceFunctionCallType : uint8_t
{
	ERangedResourceFunctionCallType__Internal                                        = 0,
	ERangedResourceFunctionCallType__External                                        = 1,
	ERangedResourceFunctionCallType__ERangedResourceFunctionCallType_MAX             = 2
};

/// Enum /Script/ConZ.ERazorDeathType
/// Size: 0x05
enum ERazorDeathType : uint8_t
{
	ERazorDeathType__Unknown                                                         = 0,
	ERazorDeathType__Projectile                                                      = 1,
	ERazorDeathType__Melee                                                           = 2,
	ERazorDeathType__WeakSpot                                                        = 3,
	ERazorDeathType__ERazorDeathType_MAX                                             = 4
};

/// Enum /Script/ConZ.ERazorTurnMontage
/// Size: 0x04
enum ERazorTurnMontage : uint8_t
{
	ERazorTurnMontage__AlertedIdle                                                   = 0,
	ERazorTurnMontage__SleepingIdle                                                  = 1,
	ERazorTurnMontage__Count                                                         = 2,
	ERazorTurnMontage__ERazorTurnMontage_MAX                                         = 3
};

/// Enum /Script/ConZ.ERazorMontageType
/// Size: 0x12
enum ERazorMontageType : uint8_t
{
	ERazorMontageType__SuddenWakeUp                                                  = 0,
	ERazorMontageType__NormalWakeUp                                                  = 1,
	ERazorMontageType__EnterCombat                                                   = 2,
	ERazorMontageType__MountJump                                                     = 3,
	ERazorMontageType__MountFail                                                     = 4,
	ERazorMontageType__MountFailToTallObstacle                                       = 5,
	ERazorMontageType__MountFailToShortObstacle                                      = 6,
	ERazorMontageType__VentilationSpawnAttack                                        = 7,
	ERazorMontageType__InitiateMountAttackCharge                                     = 8,
	ERazorMontageType__Intimidation                                                  = 9,
	ERazorMontageType__VentilationSpawnAttackEnd                                     = 10,
	ERazorMontageType__ERazorMontageType_MAX                                         = 11
};

/// Enum /Script/ConZ.ERazorSleepingStage
/// Size: 0x06
enum ERazorSleepingStage : uint8_t
{
	ERazorSleepingStage__Sleeping                                                    = 0,
	ERazorSleepingStage__SleepingCommotion                                           = 1,
	ERazorSleepingStage__SleepingAboutToWakeUp                                       = 2,
	ERazorSleepingStage__Awakened                                                    = 3,
	ERazorSleepingStage__Count                                                       = 4,
	ERazorSleepingStage__ERazorSleepingStage_MAX                                     = 5
};

/// Enum /Script/ConZ.ERazorCombatVariation
/// Size: 0x04
enum ERazorCombatVariation : uint8_t
{
	ERazorCombatVariation__Normal                                                    = 0,
	ERazorCombatVariation__MountAttack                                               = 1,
	ERazorCombatVariation__Count                                                     = 2,
	ERazorCombatVariation__ERazorCombatVariation_MAX                                 = 3
};

/// Enum /Script/ConZ.ERazorAIState
/// Size: 0x08
enum ERazorAIState : uint8_t
{
	ERazorAIState__None                                                              = 0,
	ERazorAIState__Sleeping                                                          = 1,
	ERazorAIState__Alerted                                                           = 2,
	ERazorAIState__AlertedAggressive                                                 = 3,
	ERazorAIState__Combat                                                            = 4,
	ERazorAIState__VentilationSpawn                                                  = 5,
	ERazorAIState__VentilationDespawn                                                = 6,
	ERazorAIState__ERazorAIState_MAX                                                 = 7
};

/// Enum /Script/ConZ.ERazorStance
/// Size: 0x08
enum ERazorStance : uint8_t
{
	ERazorStance__None                                                               = 0,
	ERazorStance__Sleeping                                                           = 1,
	ERazorStance__Alerted                                                            = 2,
	ERazorStance__AlertedAggressive                                                  = 3,
	ERazorStance__Combat                                                             = 4,
	ERazorStance__VentilationSpawn                                                   = 5,
	ERazorStance__Count                                                              = 6,
	ERazorStance__ERazorStance_MAX                                                   = 7
};

/// Enum /Script/ConZ.ERepairType
/// Size: 0x03
enum ERepairType : uint8_t
{
	ERepairType__None                                                                = 0,
	ERepairType__RepairHealth                                                        = 1,
	ERepairType__ERepairType_MAX                                                     = 2
};

/// Enum /Script/ConZ.EEngineeringEventType
/// Size: 0x07
enum EEngineeringEventType : uint8_t
{
	EEngineeringEventType__Build                                                     = 0,
	EEngineeringEventType__Repair                                                    = 1,
	EEngineeringEventType__FillContainer                                             = 2,
	EEngineeringEventType__FillVehicle                                               = 3,
	EEngineeringEventType__DrainVehicle                                              = 4,
	EEngineeringEventType__FillItem                                                  = 5,
	EEngineeringEventType__EEngineeringEventType_MAX                                 = 6
};

/// Enum /Script/ConZ.ERotationDirection
/// Size: 0x03
enum ERotationDirection : uint8_t
{
	ERotationDirection__Clockwise                                                    = 0,
	ERotationDirection__CounterClockwise                                             = 1,
	ERotationDirection__ERotationDirection_MAX                                       = 2
};

/// Enum /Script/ConZ.EScopingView
/// Size: 0x03
enum EScopingView : uint8_t
{
	EScopingView__FirstPerson                                                        = 0,
	EScopingView__ThirdPerson                                                        = 1,
	EScopingView__EScopingView_MAX                                                   = 2
};

/// Enum /Script/ConZ.EScopingStance
/// Size: 0x04
enum EScopingStance : uint8_t
{
	EScopingStance__Standing                                                         = 0,
	EScopingStance__Crouching                                                        = 1,
	EScopingStance__Prone                                                            = 2,
	EScopingStance__EScopingStance_MAX                                               = 3
};

/// Enum /Script/ConZ.EScrollingSizeBoxScrollDemand
/// Size: 0x03
enum EScrollingSizeBoxScrollDemand : uint8_t
{
	EScrollingSizeBoxScrollDemand__OnHover                                           = 0,
	EScrollingSizeBoxScrollDemand__Automatic                                         = 1,
	EScrollingSizeBoxScrollDemand__EScrollingSizeBoxScrollDemand_MAX                 = 2
};

/// Enum /Script/ConZ.EScrollingSizeBoxDynamic
/// Size: 0x03
enum EScrollingSizeBoxDynamic : uint8_t
{
	EScrollingSizeBoxDynamic__Linear                                                 = 0,
	EScrollingSizeBoxDynamic__Gaussian                                               = 1,
	EScrollingSizeBoxDynamic__EScrollingSizeBoxDynamic_MAX                           = 2
};

/// Enum /Script/ConZ.EScrollingSizeBoxLoopingType
/// Size: 0x03
enum EScrollingSizeBoxLoopingType : uint8_t
{
	EScrollingSizeBoxLoopingType__WithinContent                                      = 0,
	EScrollingSizeBoxLoopingType__BeyondContent                                      = 1,
	EScrollingSizeBoxLoopingType__EScrollingSizeBoxLoopingType_MAX                   = 2
};

/// Enum /Script/ConZ.EScrollingSizeBoxDirection
/// Size: 0x05
enum EScrollingSizeBoxDirection : uint8_t
{
	EScrollingSizeBoxDirection__ScrollsLeftwards                                     = 0,
	EScrollingSizeBoxDirection__ScrollsUpwards                                       = 1,
	EScrollingSizeBoxDirection__ScrollsRightwards                                    = 2,
	EScrollingSizeBoxDirection__ScrollsDownwards                                     = 3,
	EScrollingSizeBoxDirection__EScrollingSizeBoxDirection_MAX                       = 4
};

/// Enum /Script/ConZ.EBackgroundInteractionPlayType
/// Size: 0x05
enum EBackgroundInteractionPlayType : uint8_t
{
	EBackgroundInteractionPlayType__OneShot                                          = 0,
	EBackgroundInteractionPlayType__Begin                                            = 1,
	EBackgroundInteractionPlayType__Tick                                             = 2,
	EBackgroundInteractionPlayType__End                                              = 3,
	EBackgroundInteractionPlayType__EBackgroundInteractionPlayType_MAX               = 4
};

/// Enum /Script/ConZ.EBackgroundInteractionType
/// Size: 0x13
enum EBackgroundInteractionType : uint8_t
{
	EBackgroundInteractionType__None                                                 = 0,
	EBackgroundInteractionType__Random                                               = 1,
	EBackgroundInteractionType__Greeting                                             = 2,
	EBackgroundInteractionType__TradeBegin                                           = 3,
	EBackgroundInteractionType__BuyTab                                               = 4,
	EBackgroundInteractionType__SellTab                                              = 5,
	EBackgroundInteractionType__TradeEnd                                             = 6,
	EBackgroundInteractionType__Parting                                              = 7,
	EBackgroundInteractionType__Angry                                                = 8,
	EBackgroundInteractionType__AngerRecovery                                        = 9,
	EBackgroundInteractionType__GreetingSpecialOffer                                 = 10,
	EBackgroundInteractionType__Num                                                  = 11,
	EBackgroundInteractionType__EBackgroundInteractionType_MAX                       = 12
};

/// Enum /Script/ConZ.ESentryGrenadeLaunchAttackVariation
/// Size: 0x05
enum ESentryGrenadeLaunchAttackVariation : uint8_t
{
	ESentryGrenadeLaunchAttackVariation__ExplosiveGrenade                            = 0,
	ESentryGrenadeLaunchAttackVariation__TearGasGrenade                              = 1,
	ESentryGrenadeLaunchAttackVariation__StunGrenade                                 = 2,
	ESentryGrenadeLaunchAttackVariation__Count                                       = 3,
	ESentryGrenadeLaunchAttackVariation__ESentryGrenadeLaunchAttackVariation_MAX     = 4
};

/// Enum /Script/ConZ.ESentryCombatVariation
/// Size: 0x07
enum ESentryCombatVariation : uint8_t
{
	ESentryCombatVariation__None                                                     = 0,
	ESentryCombatVariation__Normal                                                   = 1,
	ESentryCombatVariation__GunsHighFireRate                                         = 2,
	ESentryCombatVariation__SingleShotHighPrecision                                  = 3,
	ESentryCombatVariation__GrenadeLaunch                                            = 4,
	ESentryCombatVariation__Count                                                    = 5,
	ESentryCombatVariation__ESentryCombatVariation_MAX                               = 6
};

/// Enum /Script/ConZ.ESentryAttackMode
/// Size: 0x05
enum ESentryAttackMode : uint8_t
{
	ESentryAttackMode__Melee                                                         = 0,
	ESentryAttackMode__MediumRange                                                   = 1,
	ESentryAttackMode__LongRange                                                     = 2,
	ESentryAttackMode__Count                                                         = 3,
	ESentryAttackMode__ESentryAttackMode_MAX                                         = 4
};

/// Enum /Script/ConZ.ESentryHealthState
/// Size: 0x08
enum ESentryHealthState : uint8_t
{
	ESentryHealthState__Healthy                                                      = 0,
	ESentryHealthState__SlightlyDamaged                                              = 1,
	ESentryHealthState__LimpingLight                                                 = 2,
	ESentryHealthState__LimpingMedium                                                = 3,
	ESentryHealthState__LimpingHeavy                                                 = 4,
	ESentryHealthState__Dead                                                         = 5,
	ESentryHealthState__Count                                                        = 6,
	ESentryHealthState__ESentryHealthState_MAX                                       = 7
};

/// Enum /Script/ConZ.ESentryStance
/// Size: 0x06
enum ESentryStance : uint8_t
{
	ESentryStance__None                                                              = 0,
	ESentryStance__Relaxed                                                           = 1,
	ESentryStance__Alerted                                                           = 2,
	ESentryStance__Combat                                                            = 3,
	ESentryStance__Offline                                                           = 4,
	ESentryStance__ESentryStance_MAX                                                 = 5
};

/// Enum /Script/ConZ.ESentryMovementPace2
/// Size: 0x04
enum ESentryMovementPace2 : uint8_t
{
	ESentryMovementPace2__Walking                                                    = 0,
	ESentryMovementPace2__Running                                                    = 1,
	ESentryMovementPace2__Count                                                      = 2,
	ESentryMovementPace2__ESentryMovementPace2_MAX                                   = 3
};

/// Enum /Script/ConZ.ESentryState2
/// Size: 0x14
enum ESentryState2 : uint8_t
{
	ESentryState2__None                                                              = 0,
	ESentryState2__Initial                                                           = 1,
	ESentryState2__Patrolling_Walking                                                = 2,
	ESentryState2__Patrolling_CheckSurroundings                                      = 3,
	ESentryState2__InvestigatingLocation                                             = 4,
	ESentryState2__InvestigatingBuilding                                             = 5,
	ESentryState2__GuardLocation                                                     = 6,
	ESentryState2__EnemySpotted                                                      = 7,
	ESentryState2__Alerted                                                           = 8,
	ESentryState2__ObserveEnemyMovement                                              = 9,
	ESentryState2__Combat                                                            = 10,
	ESentryState2__Combat_LostSight                                                  = 11,
	ESentryState2__Count                                                             = 12,
	ESentryState2__ESentryState2_MAX                                                 = 13
};

/// Enum /Script/ConZ.ESentryThirdPersonSubview
/// Size: 0x04
enum ESentryThirdPersonSubview : uint8_t
{
	ESentryThirdPersonSubview__Standing                                              = 0,
	ESentryThirdPersonSubview__StandingAiming                                        = 1,
	ESentryThirdPersonSubview__Count                                                 = 2,
	ESentryThirdPersonSubview__ESentryThirdPersonSubview_MAX                         = 3
};

/// Enum /Script/ConZ.ESortType
/// Size: 0x10
enum ESortType : uint8_t
{
	ESortType__None                                                                  = 0,
	ESortType__Host                                                                  = 1,
	ESortType__Password                                                              = 2,
	ESortType__Mode                                                                  = 3,
	ESortType__Version                                                               = 4,
	ESortType__Time                                                                  = 5,
	ESortType__Friends                                                               = 6,
	ESortType__Players                                                               = 7,
	ESortType__Ping                                                                  = 8,
	ESortType__ESortType_MAX                                                         = 9
};

/// Enum /Script/ConZ.EServerBrowserTab
/// Size: 0x04
enum EServerBrowserTab : uint8_t
{
	EServerBrowserTab__Internet                                                      = 0,
	EServerBrowserTab__Favorites                                                     = 1,
	EServerBrowserTab__LastPlayed                                                    = 2,
	EServerBrowserTab__EServerBrowserTab_MAX                                         = 3
};

/// Enum /Script/ConZ.ESharkState
/// Size: 0x09
enum ESharkState : uint8_t
{
	ESharkState__None                                                                = 0,
	ESharkState__Wandering                                                           = 1,
	ESharkState__Pursuing                                                            = 2,
	ESharkState__Circling                                                            = 3,
	ESharkState__Aggressive                                                          = 4,
	ESharkState__GrabAttack                                                          = 5,
	ESharkState__Fleeing                                                             = 6,
	ESharkState__PreparingForDestruction                                             = 7,
	ESharkState__ESharkState_MAX                                                     = 8
};

/// Enum /Script/ConZ.ESimpleAnimalMode
/// Size: 0x03
enum ESimpleAnimalMode : uint8_t
{
	ESimpleAnimalMode__Wander                                                        = 0,
	ESimpleAnimalMode__Flee                                                          = 1,
	ESimpleAnimalMode__ESimpleAnimalMode_MAX                                         = 2
};

/// Enum /Script/ConZ.ESkillReplicationID
/// Size: 0x29
enum ESkillReplicationID : uint8_t
{
	ESkillReplicationID__None                                                        = 0,
	ESkillReplicationID__EnduranceSkill                                              = 1,
	ESkillReplicationID__ResistanceSkill                                             = 2,
	ESkillReplicationID__RunningSkill                                                = 3,
	ESkillReplicationID__SwimmingSkill                                               = 4,
	ESkillReplicationID__MedicalSkill                                                = 5,
	ESkillReplicationID__AwarenessSkill                                              = 6,
	ESkillReplicationID__StealthSkill                                                = 7,
	ESkillReplicationID__AnimalHandlingSkill                                         = 8,
	ESkillReplicationID__CookingSkill                                                = 9,
	ESkillReplicationID__SurvivalSkill                                               = 10,
	ESkillReplicationID__BioChemSkill                                                = 11,
	ESkillReplicationID__BoxingSkill                                                 = 12,
	ESkillReplicationID__MeleeWeaponsSkill                                           = 13,
	ESkillReplicationID__RiflesSkill                                                 = 14,
	ESkillReplicationID__HandgunSkill                                                = 15,
	ESkillReplicationID__SnipingSkill                                                = 16,
	ESkillReplicationID__CamouflageSkill                                             = 17,
	ESkillReplicationID__TacticsSkill                                                = 18,
	ESkillReplicationID__ThrowingSkill                                               = 19,
	ESkillReplicationID__ArcherySkill                                                = 20,
	ESkillReplicationID__ThieverySkill                                               = 21,
	ESkillReplicationID__DrivingSkill                                                = 22,
	ESkillReplicationID__MotorcycleSkill                                             = 23,
	ESkillReplicationID__EngineeringSkill                                            = 24,
	ESkillReplicationID__DemolitionSkill                                             = 25,
	ESkillReplicationID__AviationSkill                                               = 26,
	ESkillReplicationID__FarmingSkill                                                = 27,
	ESkillReplicationID__ESkillReplicationID_MAX                                     = 28
};

/// Enum /Script/ConZ.ESortByType
/// Size: 0x03
enum ESortByType : uint8_t
{
	Descending                                                                       = 0,
	Ascending                                                                        = 1,
	ESortByType_MAX                                                                  = 2
};

/// Enum /Script/ConZ.EStartLocationTypeFlags
/// Size: 0x05
enum EStartLocationTypeFlags : uint8_t
{
	EStartLocationTypeFlags__None                                                    = 0,
	EStartLocationTypeFlags__Player                                                  = 1,
	EStartLocationTypeFlags__PlayerTournament                                        = 2,
	EStartLocationTypeFlags__CargoDrop                                               = 4,
	EStartLocationTypeFlags__EStartLocationTypeFlags_MAX                             = 5
};

/// Enum /Script/ConZ.ESurvivalStatsSubcategory
/// Size: 0x10
enum ESurvivalStatsSubcategory : uint8_t
{
	ESurvivalStatsSubcategory__General                                               = 0,
	ESurvivalStatsSubcategory__Food                                                  = 1,
	ESurvivalStatsSubcategory__Hunting                                               = 2,
	ESurvivalStatsSubcategory__Fishing                                               = 3,
	ESurvivalStatsSubcategory__Travel                                                = 4,
	ESurvivalStatsSubcategory__Metabolism                                            = 5,
	ESurvivalStatsSubcategory__Crafting                                              = 6,
	ESurvivalStatsSubcategory__Combat                                                = 7,
	ESurvivalStatsSubcategory__Events                                                = 8,
	ESurvivalStatsSubcategory__ESurvivalStatsSubcategory_MAX                         = 9
};

/// Enum /Script/ConZ.ESurvivalStatsCategory
/// Size: 0x04
enum ESurvivalStatsCategory : uint8_t
{
	ESurvivalStatsCategory__Survival                                                 = 0,
	ESurvivalStatsCategory__Weapons                                                  = 1,
	ESurvivalStatsCategory__Combat                                                   = 2,
	ESurvivalStatsCategory__ESurvivalStatsCategory_MAX                               = 3
};

/// Enum /Script/ConZ.ETextInputType
/// Size: 0x03
enum ETextInputType : uint8_t
{
	Text                                                                             = 0,
	Number                                                                           = 1,
	ETextInputType_MAX                                                               = 2
};

/// Enum /Script/ConZ.ECookingHeatLevel
/// Size: 0x10
enum ECookingHeatLevel : uint8_t
{
	ECookingHeatLevel__Cold                                                          = 0,
	ECookingHeatLevel__Mild                                                          = 1,
	ECookingHeatLevel__Warm                                                          = 2,
	ECookingHeatLevel__Low                                                           = 3,
	ECookingHeatLevel__MediumLow                                                     = 4,
	ECookingHeatLevel__Medium                                                        = 5,
	ECookingHeatLevel__Hot                                                           = 6,
	ECookingHeatLevel__VeryHot                                                       = 7,
	ECookingHeatLevel__ExtremelyHot                                                  = 8,
	ECookingHeatLevel__ECookingHeatLevel_MAX                                         = 9
};

/// Enum /Script/ConZ.EConZColor
/// Size: 0x10
enum EConZColor : uint8_t
{
	EConZColor__None                                                                 = 0,
	EConZColor__Black                                                                = 1,
	EConZColor__Brown                                                                = 2,
	EConZColor__Blue                                                                 = 3,
	EConZColor__Green                                                                = 4,
	EConZColor__Red                                                                  = 5,
	EConZColor__Blonde                                                               = 6,
	EConZColor__Ginger                                                               = 7,
	EConZColor__Grey                                                                 = 8,
	EConZColor__EConZColor_MAX                                                       = 9
};

/// Enum /Script/ConZ.EConZUnit
/// Size: 0x27
enum EConZUnit : uint8_t
{
	EConZUnit__None                                                                  = 0,
	EConZUnit__Second                                                                = 1,
	EConZUnit__Minute                                                                = 2,
	EConZUnit__Hour                                                                  = 3,
	EConZUnit__Day                                                                   = 4,
	EConZUnit__Year                                                                  = 5,
	EConZUnit__Gram                                                                  = 6,
	EConZUnit__Milligram                                                             = 7,
	EConZUnit__Microgram                                                             = 8,
	EConZUnit__Kilogram                                                              = 9,
	EConZUnit__Liter                                                                 = 10,
	EConZUnit__Milliliter                                                            = 11,
	EConZUnit__Calorie                                                               = 12,
	EConZUnit__Kilocalorie                                                           = 13,
	EConZUnit__Meter                                                                 = 14,
	EConZUnit__Centimeter                                                            = 15,
	EConZUnit__Kilometer                                                             = 16,
	EConZUnit__Percentage                                                            = 17,
	EConZUnit__Health                                                                = 18,
	EConZUnit__Stamina                                                               = 19,
	EConZUnit__Celsius                                                               = 20,
	EConZUnit__Watt                                                                  = 21,
	EConZUnit__MeterSquared                                                          = 22,
	EConZUnit__Sievert                                                               = 23,
	EConZUnit__Ampere                                                                = 24,
	EConZUnit__AmpereHour                                                            = 25,
	EConZUnit__EConZUnit_MAX                                                         = 26
};

/// Enum /Script/ConZ.EItemThrowingBehavior
/// Size: 0x06
enum EItemThrowingBehavior : uint8_t
{
	EItemThrowingBehavior__None                                                      = 0,
	EItemThrowingBehavior__Default                                                   = 1,
	EItemThrowingBehavior__Piercing                                                  = 2,
	EItemThrowingBehavior__Fragile                                                   = 3,
	EItemThrowingBehavior__Sticky                                                    = 4,
	EItemThrowingBehavior__EItemThrowingBehavior_MAX                                 = 5
};

/// Enum /Script/ConZ.EBleedingSeverity
/// Size: 0x07
enum EBleedingSeverity : uint8_t
{
	EBleedingSeverity__NoBleeding                                                    = 0,
	EBleedingSeverity__VeryLight                                                     = 1,
	EBleedingSeverity__Light                                                         = 2,
	EBleedingSeverity__Moderate                                                      = 3,
	EBleedingSeverity__Heavy                                                         = 4,
	EBleedingSeverity__Severe                                                        = 5,
	EBleedingSeverity__EBleedingSeverity_MAX                                         = 6
};

/// Enum /Script/ConZ.ETraderLocationMarkerType
/// Size: 0x03
enum ETraderLocationMarkerType : uint8_t
{
	ETraderLocationMarkerType__SurgeryRoom                                           = 0,
	ETraderLocationMarkerType__BarberShop                                            = 1,
	ETraderLocationMarkerType__ETraderLocationMarkerType_MAX                         = 2
};

/// Enum /Script/ConZ.ETradeableSellFlags
/// Size: 0x03
enum ETradeableSellFlags : uint8_t
{
	ETradeableSellFlags__None                                                        = 0,
	ETradeableSellFlags__IgnoreLackOfFunds                                           = 1,
	ETradeableSellFlags__ETradeableSellFlags_MAX                                     = 2
};

/// Enum /Script/ConZ.ETradeErrorMessage
/// Size: 0x18
enum ETradeErrorMessage : uint8_t
{
	ETradeErrorMessage__None                                                         = 0,
	ETradeErrorMessage__TradeAttemptedOnClient                                       = 1,
	ETradeErrorMessage__TraderOrTradeableInvalid                                     = 2,
	ETradeErrorMessage__NotEnoughFunds                                               = 3,
	ETradeErrorMessage__TradeableOutOfStock                                          = 4,
	ETradeErrorMessage__TraderInvalidCategory                                        = 5,
	ETradeErrorMessage__TradeableCannotBePurchased                                   = 6,
	ETradeErrorMessage__TradeableInvalidPrice                                        = 7,
	ETradeErrorMessage__NoValidTradeCandidates                                       = 8,
	ETradeErrorMessage__TradingOnCooldown                                            = 9,
	ETradeErrorMessage__WorldSpawnLocationBlocked                                    = 10,
	ETradeErrorMessage__PlayerBasedPriceMultiplierChanged                            = 11,
	ETradeErrorMessage__RequiredBankCardTypeMissing                                  = 12,
	ETradeErrorMessage__TraderInsufficientFunds                                      = 13,
	ETradeErrorMessage__InsufficientAccountBalance                                   = 14,
	ETradeErrorMessage__NotEnoughFamePoints                                          = 15,
	ETradeErrorMessage__Unknown                                                      = 16,
	ETradeErrorMessage__ETradeErrorMessage_MAX                                       = 17
};

/// Enum /Script/ConZ.ETradeOutpostProsperityLevel
/// Size: 0x08
enum ETradeOutpostProsperityLevel : uint8_t
{
	ETradeOutpostProsperityLevel__None                                               = 0,
	ETradeOutpostProsperityLevel__VeryPoor                                           = 1,
	ETradeOutpostProsperityLevel__Poor                                               = 2,
	ETradeOutpostProsperityLevel__Prosperous                                         = 3,
	ETradeOutpostProsperityLevel__Wealthy                                            = 4,
	ETradeOutpostProsperityLevel__Rich                                               = 5,
	ETradeOutpostProsperityLevel__Count                                              = 6,
	ETradeOutpostProsperityLevel__ETradeOutpostProsperityLevel_MAX                   = 7
};

/// Enum /Script/ConZ.ETradeableSpawnType
/// Size: 0x04
enum ETradeableSpawnType : uint8_t
{
	ETradeableSpawnType__None                                                        = 0,
	ETradeableSpawnType__DepotSpawn                                                  = 1,
	ETradeableSpawnType__WorldSpawn                                                  = 2,
	ETradeableSpawnType__ETradeableSpawnType_MAX                                     = 3
};

/// Enum /Script/ConZ.ETraderType
/// Size: 0x11
enum ETraderType : uint8_t
{
	ETraderType__None                                                                = 0,
	ETraderType__Armorer                                                             = 1,
	ETraderType__GeneralGoods                                                        = 2,
	ETraderType__Mechanic                                                            = 3,
	ETraderType__Doctor                                                              = 4,
	ETraderType__Harbourmaster                                                       = 5,
	ETraderType__Bartender                                                           = 6,
	ETraderType__Barber                                                              = 7,
	ETraderType__TradesEverything                                                    = 8,
	ETraderType__Count                                                               = 9,
	ETraderType__ETraderType_MAX                                                     = 10
};

/// Enum /Script/ConZ.ETradeCategory
/// Size: 0x30
enum ETradeCategory : uint8_t
{
	ETradeCategory__None                                                             = 0,
	ETradeCategory__Armour                                                           = 1,
	ETradeCategory__Helmets                                                          = 2,
	ETradeCategory__Jackets                                                          = 3,
	ETradeCategory__Pants                                                            = 4,
	ETradeCategory__Headwear                                                         = 5,
	ETradeCategory__Tops                                                             = 6,
	ETradeCategory__Underwear                                                        = 7,
	ETradeCategory__Neckwaist                                                        = 8,
	ETradeCategory__Hands                                                            = 9,
	ETradeCategory__Face                                                             = 10,
	ETradeCategory__Feet                                                             = 11,
	ETradeCategory__Backpacks                                                        = 12,
	ETradeCategory__RangedWeapon                                                     = 13,
	ETradeCategory__RangedWeaponAccessories                                          = 14,
	ETradeCategory__Ammo                                                             = 15,
	ETradeCategory__MeleeWeapon                                                      = 16,
	ETradeCategory__Explosives                                                       = 17,
	ETradeCategory__Crafting                                                         = 18,
	ETradeCategory__Fishing                                                          = 19,
	ETradeCategory__Alcohol                                                          = 20,
	ETradeCategory__Food                                                             = 21,
	ETradeCategory__Drink                                                            = 22,
	ETradeCategory__FirstAid                                                         = 23,
	ETradeCategory__Vehicles                                                         = 24,
	ETradeCategory__Misc                                                             = 25,
	ETradeCategory__WaterVehicles                                                    = 26,
	ETradeCategory__Cosmetics                                                        = 27,
	ETradeCategory__Count                                                            = 28,
	ETradeCategory__ETradeCategory_MAX                                               = 29
};

/// Enum /Script/ConZ.ETrapType
/// Size: 0x03
enum ETrapType : uint8_t
{
	ETrapType__Default                                                               = 0,
	ETrapType__SuicideZombie                                                         = 1,
	ETrapType__ETrapType_MAX                                                         = 2
};

/// Enum /Script/ConZ.ETrapTriggerType
/// Size: 0x06
enum ETrapTriggerType : uint8_t
{
	ETrapTriggerType__None                                                           = 0,
	ETrapTriggerType__MotionTrigger                                                  = 1,
	ETrapTriggerType__LaserTrigger                                                   = 2,
	ETrapTriggerType__TripwireTrigger                                                = 3,
	ETrapTriggerType__TimedTrigger                                                   = 4,
	ETrapTriggerType__ETrapTriggerType_MAX                                           = 5
};

/// Enum /Script/ConZ.EWidgetType
/// Size: 0x44
enum EWidgetType : uint8_t
{
	EWidgetType__InteractionWidgetClass                                              = 0,
	EWidgetType__InteractionGroupWidgetClass                                         = 1,
	EWidgetType__InteractionContainerWidgetClass                                     = 2,
	EWidgetType__ItemWidgetClass                                                     = 3,
	EWidgetType__InventorySlotWidgetClass                                            = 4,
	EWidgetType__HudWidgetClass                                                      = 5,
	EWidgetType__LoadingIconWidgetClass                                              = 6,
	EWidgetType__SpawnScreenWidgetClass                                              = 7,
	EWidgetType__WaypointScreenWidgetClass                                           = 8,
	EWidgetType__ActionProgressWidgetClass                                           = 9,
	EWidgetType__TeamInvitationWidgetClass                                           = 10,
	EWidgetType__CraftingInfoWidgetClass                                             = 11,
	EWidgetType__CraftingComponentWidgetClass                                        = 12,
	EWidgetType__CraftingRecipeWidgetClass                                           = 13,
	EWidgetType__EmptySlotWidgetClass                                                = 14,
	EWidgetType__PreviousNextSwitchWidgetClass                                       = 15,
	EWidgetType__GameEventCardWidgetClass                                            = 16,
	EWidgetType__GameEventScoreboardWidgetClass                                      = 17,
	EWidgetType__GameEventMiniScoreboardWidgetClass                                  = 18,
	EWidgetType__TournamentScoreboardWidgetClass                                     = 19,
	EWidgetType__CircularMenuWidgetClass                                             = 20,
	EWidgetType__CircularMenuSegmentWidgetClass                                      = 21,
	EWidgetType__ObjectivesWidget                                                    = 22,
	EWidgetType__MissionPrompt                                                       = 23,
	EWidgetType__MissionItem                                                         = 24,
	EWidgetType__ObjectiveItem                                                       = 25,
	EWidgetType__MissionReward                                                       = 26,
	EWidgetType__InventoryContainerWidget2Test                                       = 27,
	EWidgetType__InventoryItemWidget2Test                                            = 28,
	EWidgetType__ItemInventoryWidget2                                                = 29,
	EWidgetType__ItemWidget2                                                         = 30,
	EWidgetType__ItemWidget2VicinityContainer                                        = 31,
	EWidgetType__ItemTooltipWidget                                                   = 32,
	EWidgetType__TooltipPanelFoodOverview                                            = 33,
	EWidgetType__TooltipPanelFoodNutritionsSingle                                    = 34,
	EWidgetType__TooltipPanelFoodNutritionsFull                                      = 35,
	EWidgetType__TooltipPanelFoodGraphs                                              = 36,
	EWidgetType__TooltipPanelWeaponAbsolute                                          = 37,
	EWidgetType__TooltipPanelWeaponRelative                                          = 38,
	EWidgetType__StatisticsListRow                                                   = 39,
	EWidgetType__RewardItemWidget                                                    = 40,
	EWidgetType__ThrowingQuickAccessMenu                                             = 41,
	EWidgetType__ItemSplitWidgetClass                                                = 42,
	EWidgetType__EWidgetType_MAX                                                     = 43
};

/// Enum /Script/ConZ.EUnarmedCombatInput
/// Size: 0x12
enum EUnarmedCombatInput : uint8_t
{
	EUnarmedCombatInput__WalkForward                                                 = 0,
	EUnarmedCombatInput__WalkBackward                                                = 1,
	EUnarmedCombatInput__WalkRight                                                   = 2,
	EUnarmedCombatInput__WalkLeft                                                    = 3,
	EUnarmedCombatInput__Punch                                                       = 4,
	EUnarmedCombatInput__Kick                                                        = 5,
	EUnarmedCombatInput__BlockPressed                                                = 6,
	EUnarmedCombatInput__BlockReleased                                               = 7,
	EUnarmedCombatInput__PreviousTarget                                              = 8,
	EUnarmedCombatInput__NextTarget                                                  = 9,
	EUnarmedCombatInput__ReleaseCursor                                               = 10,
	EUnarmedCombatInput__EUnarmedCombatInput_MAX                                     = 11
};

/// Enum /Script/ConZ.EUserProfileType
/// Size: 0x04
enum EUserProfileType : uint8_t
{
	EUserProfileType__Singleplayer                                                   = 0,
	EUserProfileType__MultiplayerAuthority                                           = 1,
	EUserProfileType__MultiplayerCache                                               = 2,
	EUserProfileType__EUserProfileType_MAX                                           = 3
};

/// Enum /Script/ConZ.EChangeSource
/// Size: 0x04
enum EChangeSource : uint8_t
{
	EChangeSource__Unknown                                                           = 0,
	EChangeSource__Code                                                              = 1,
	EChangeSource__Player                                                            = 2,
	EChangeSource__EChangeSource_MAX                                                 = 3
};

/// Enum /Script/ConZ.EVehicleMountType
/// Size: 0x03
enum EVehicleMountType : uint8_t
{
	EVehicleMountType__Passenger                                                     = 0,
	EVehicleMountType__Driver                                                        = 1,
	EVehicleMountType__EVehicleMountType_MAX                                         = 2
};

/// Enum /Script/ConZ.EVehicleAttachment_DoorFlags
/// Size: 0x05
enum EVehicleAttachment_DoorFlags : uint8_t
{
	EVehicleAttachment_DoorFlags__None                                               = 0,
	EVehicleAttachment_DoorFlags__Open                                               = 1,
	EVehicleAttachment_DoorFlags__Closed                                             = 2,
	EVehicleAttachment_DoorFlags__Simulating                                         = 4,
	EVehicleAttachment_DoorFlags__EVehicleAttachment_MAX                             = 5
};

/// Enum /Script/ConZ.EEngineBlockState
/// Size: 0x06
enum EEngineBlockState : uint8_t
{
	EEngineBlockState__Off                                                           = 0,
	EEngineBlockState__Ignition                                                      = 1,
	EEngineBlockState__Running                                                       = 2,
	EEngineBlockState__Stalling                                                      = 3,
	EEngineBlockState__Removed                                                       = 4,
	EEngineBlockState__EEngineBlockState_MAX                                         = 5
};

/// Enum /Script/ConZ.EVehicleLightSourceType
/// Size: 0x03
enum EVehicleLightSourceType : uint8_t
{
	EVehicleLightSourceType__SpotLight                                               = 0,
	EVehicleLightSourceType__MaterialParameter                                       = 1,
	EVehicleLightSourceType__EVehicleLightSourceType_MAX                             = 2
};

/// Enum /Script/ConZ.EAerodynamicSurfaceType
/// Size: 0x07
enum EAerodynamicSurfaceType : uint8_t
{
	EAerodynamicSurfaceType__None                                                    = 0,
	EAerodynamicSurfaceType__LeftAilerons                                            = 1,
	EAerodynamicSurfaceType__RightAilerons                                           = 2,
	EAerodynamicSurfaceType__Elevators                                               = 3,
	EAerodynamicSurfaceType__Flaps                                                   = 4,
	EAerodynamicSurfaceType__Rudder                                                  = 5,
	EAerodynamicSurfaceType__EAerodynamicSurfaceType_MAX                             = 6
};

/// Enum /Script/ConZ.EUnmountReason
/// Size: 0x04
enum EUnmountReason : uint8_t
{
	EUnmountReason__None                                                             = 0,
	EUnmountReason__Regular                                                          = 1,
	EUnmountReason__EndPlay                                                          = 2,
	EUnmountReason__EUnmountReason_MAX                                               = 3
};

/// Enum /Script/ConZ.EVehicleEngineState
/// Size: 0x16
enum EVehicleEngineState : uint8_t
{
	EVehicleEngineState__Unavailable                                                 = 0,
	EVehicleEngineState__TurnedOff                                                   = 1,
	EVehicleEngineState__StartingViaIgnition                                         = 2,
	EVehicleEngineState__StartingViaMotion                                           = 3,
	EVehicleEngineState__ReadyDelay                                                  = 4,
	EVehicleEngineState__Ready                                                       = 5,
	EVehicleEngineState__FailedToStartDelay                                          = 6,
	EVehicleEngineState__FailedToStart                                               = 7,
	EVehicleEngineState__FailedToStartNoFuelDelay                                    = 8,
	EVehicleEngineState__FailedToStartNoFuel                                         = 9,
	EVehicleEngineState__FailedToStartNoBatteryDelay                                 = 10,
	EVehicleEngineState__FailedToStartNoBattery                                      = 11,
	EVehicleEngineState__StalledDelay                                                = 12,
	EVehicleEngineState__Stalled                                                     = 13,
	EVehicleEngineState__Broken                                                      = 14,
	EVehicleEngineState__EVehicleEngineState_MAX                                     = 15
};

/// Enum /Script/ConZ.EVehicleSeatType
/// Size: 0x03
enum EVehicleSeatType : uint8_t
{
	EVehicleSeatType__Driver                                                         = 0,
	EVehicleSeatType__Passenger                                                      = 1,
	EVehicleSeatType__EVehicleSeatType_MAX                                           = 2
};

/// Enum /Script/ConZ.EVehicleManualSpawnType
/// Size: 0x06
enum EVehicleManualSpawnType : uint8_t
{
	EVehicleManualSpawnType__None                                                    = 0,
	EVehicleManualSpawnType__WheelsOnly                                              = 1,
	EVehicleManualSpawnType__MinimalFunctional                                       = 2,
	EVehicleManualSpawnType__Full                                                    = 3,
	EVehicleManualSpawnType__Count                                                   = 4,
	EVehicleManualSpawnType__EVehicleManualSpawnType_MAX                             = 5
};

/// Enum /Script/ConZ.EVoltageMatchingMinigameElementFunction
/// Size: 0x06
enum EVoltageMatchingMinigameElementFunction : uint8_t
{
	EVoltageMatchingMinigameElementFunction__None                                    = 0,
	EVoltageMatchingMinigameElementFunction__Addition                                = 1,
	EVoltageMatchingMinigameElementFunction__Subtraction                             = 2,
	EVoltageMatchingMinigameElementFunction__Multiplication                          = 3,
	EVoltageMatchingMinigameElementFunction__Division                                = 4,
	EVoltageMatchingMinigameElementFunction__EVoltageMatchingMinigameElementFunction_MAX = 5
};

/// Enum /Script/ConZ.EWeaponAnimationCurve
/// Size: 0x05
enum EWeaponAnimationCurve : uint8_t
{
	EWeaponAnimationCurve__DrawAmount                                                = 0,
	EWeaponAnimationCurve__StrengthAmount                                            = 1,
	EWeaponAnimationCurve__HideBone                                                  = 2,
	EWeaponAnimationCurve__Count                                                     = 3,
	EWeaponAnimationCurve__EWeaponAnimationCurve_MAX                                 = 4
};

/// Enum /Script/ConZ.EMagazineAmmoCountType
/// Size: 0x04
enum EMagazineAmmoCountType : uint8_t
{
	EMagazineAmmoCountType__Countable                                                = 0,
	EMagazineAmmoCountType__Even                                                     = 1,
	EMagazineAmmoCountType__Odd                                                      = 2,
	EMagazineAmmoCountType__EMagazineAmmoCountType_MAX                               = 3
};

/// Enum /Script/ConZ.EBowAimingTestType
/// Size: 0x04
enum EBowAimingTestType : uint8_t
{
	EBowAimingTestType__DotOnly                                                      = 0,
	EBowAimingTestType__ViewOnly                                                     = 1,
	EBowAimingTestType__DotAndView                                                   = 2,
	EBowAimingTestType__EBowAimingTestType_MAX                                       = 3
};

/// Enum /Script/ConZ.EBowDrawPercentage
/// Size: 0x05
enum EBowDrawPercentage : uint8_t
{
	EBowDrawPercentage__Draw50percent                                                = 0,
	EBowDrawPercentage__Draw75percent                                                = 1,
	EBowDrawPercentage__Draw100percent                                               = 2,
	EBowDrawPercentage__Count                                                        = 3,
	EBowDrawPercentage__EBowDrawPercentage_MAX                                       = 4
};

/// Enum /Script/ConZ.EWeaponBowState
/// Size: 0x10
enum EWeaponBowState : uint8_t
{
	EWeaponBowState__None                                                            = 0,
	EWeaponBowState__InsertArrow                                                     = 1,
	EWeaponBowState__RemoveArrow                                                     = 2,
	EWeaponBowState__Draw                                                            = 3,
	EWeaponBowState__CancelFiring                                                    = 4,
	EWeaponBowState__FireDummy                                                       = 5,
	EWeaponBowState__Fire                                                            = 6,
	EWeaponBowState__FireAndInsertArrow                                              = 7,
	EWeaponBowState__Active                                                          = 8,
	EWeaponBowState__EWeaponBowState_MAX                                             = 9
};

/// Enum /Script/ConZ.EWeaponCrossbowDrawCategory
/// Size: 0x05
enum EWeaponCrossbowDrawCategory : uint8_t
{
	EWeaponCrossbowDrawCategory__UnableToDraw                                        = 0,
	EWeaponCrossbowDrawCategory__Slow                                                = 1,
	EWeaponCrossbowDrawCategory__Normal                                              = 2,
	EWeaponCrossbowDrawCategory__Count                                               = 3,
	EWeaponCrossbowDrawCategory__EWeaponCrossbowDrawCategory_MAX                     = 4
};

/// Enum /Script/ConZ.EWeaponRockerLauncherActionState
/// Size: 0x06
enum EWeaponRockerLauncherActionState : uint8_t
{
	EWeaponRockerLauncherActionState__Default                                        = 0,
	EWeaponRockerLauncherActionState__Arm                                            = 1,
	EWeaponRockerLauncherActionState__Armed                                          = 2,
	EWeaponRockerLauncherActionState__Unarm                                          = 3,
	EWeaponRockerLauncherActionState__Unarmed                                        = 4,
	EWeaponRockerLauncherActionState__EWeaponRockerLauncherActionState_MAX           = 5
};

/// Enum /Script/ConZ.EWeaponDownTheSightsMode
/// Size: 0x03
enum EWeaponDownTheSightsMode : uint8_t
{
	EWeaponDownTheSightsMode__IronSights                                             = 0,
	EWeaponDownTheSightsMode__Scope                                                  = 1,
	EWeaponDownTheSightsMode__EWeaponDownTheSightsMode_MAX                           = 2
};

/// Enum /Script/ConZ.EWeaponEjectFromChamberType
/// Size: 0x03
enum EWeaponEjectFromChamberType : uint8_t
{
	EWeaponEjectFromChamberType__Casing                                              = 0,
	EWeaponEjectFromChamberType__LiveRound                                           = 1,
	EWeaponEjectFromChamberType__EWeaponEjectFromChamberType_MAX                     = 2
};

/// Enum /Script/ConZ.EReloadWeaponSequence
/// Size: 0x06
enum EReloadWeaponSequence : uint8_t
{
	EReloadWeaponSequence__None                                                      = 0,
	EReloadWeaponSequence__InsertMagazine                                            = 1,
	EReloadWeaponSequence__RemoveMagazineInstertMagazine                             = 2,
	EReloadWeaponSequence__InstertCartridge                                          = 3,
	EReloadWeaponSequence__RemoveMagazineInstertCartridge                            = 4,
	EReloadWeaponSequence__EReloadWeaponSequence_MAX                                 = 5
};

/// Enum /Script/ConZ.EWeaponCombatModeType
/// Size: 0x04
enum EWeaponCombatModeType : uint8_t
{
	EWeaponCombatModeType__Relaxed                                                   = 0,
	EWeaponCombatModeType__Aiming                                                    = 1,
	EWeaponCombatModeType__Count                                                     = 2,
	EWeaponCombatModeType__EWeaponCombatModeType_MAX                                 = 3
};

/// Enum /Script/ConZ.EWeaponAttachmentActionType
/// Size: 0x05
enum EWeaponAttachmentActionType : uint8_t
{
	EWeaponAttachmentActionType__Add                                                 = 0,
	EWeaponAttachmentActionType__Remove                                              = 1,
	EWeaponAttachmentActionType__Swap                                                = 2,
	EWeaponAttachmentActionType__Count                                               = 3,
	EWeaponAttachmentActionType__EWeaponAttachmentActionType_MAX                     = 4
};

/// Enum /Script/ConZ.EWeatherControllerDebugOverrideType
/// Size: 0x06
enum EWeatherControllerDebugOverrideType : uint8_t
{
	EWeatherControllerDebugOverrideType__WindAzimuth                                 = 0,
	EWeatherControllerDebugOverrideType__WindIntensity                               = 1,
	EWeatherControllerDebugOverrideType__WindAzimuthForWaves                         = 2,
	EWeatherControllerDebugOverrideType__WindIntensityForWaves                       = 3,
	EWeatherControllerDebugOverrideType__Count                                       = 4,
	EWeatherControllerDebugOverrideType__EWeatherControllerDebugOverrideType_MAX     = 5
};

/// Enum /Script/ConZ.ECraftingMarkerMode
/// Size: 0x03
enum ECraftingMarkerMode : uint8_t
{
	ECraftingMarkerMode__Marker                                                      = 0,
	ECraftingMarkerMode__FullInfo                                                    = 1,
	ECraftingMarkerMode__ECraftingMarkerMode_MAX                                     = 2
};

/// Enum /Script/ConZ.EZombieRagdollAutoRecoveryType
/// Size: 0x05
enum EZombieRagdollAutoRecoveryType : uint8_t
{
	EZombieRagdollAutoRecoveryType__None                                             = 0,
	EZombieRagdollAutoRecoveryType__WhenAtRest                                       = 1,
	EZombieRagdollAutoRecoveryType__AfterTimeSpan                                    = 2,
	EZombieRagdollAutoRecoveryType__WhenAtRestAfterTimeSpan                          = 3,
	EZombieRagdollAutoRecoveryType__EZombieRagdollAutoRecoveryType_MAX               = 4
};

/// Enum /Script/ConZ.EZombieTurnMontage
/// Size: 0x06
enum EZombieTurnMontage : uint8_t
{
	EZombieTurnMontage__RelaxedIdle                                                  = 0,
	EZombieTurnMontage__AlertedIdle                                                  = 1,
	EZombieTurnMontage__CombatIdle                                                   = 2,
	EZombieTurnMontage__RelaxedIdleToAlertedIdle                                     = 3,
	EZombieTurnMontage__Count                                                        = 4,
	EZombieTurnMontage__EZombieTurnMontage_MAX                                       = 5
};

/// Enum /Script/ConZ.EZombieStance
/// Size: 0x05
enum EZombieStance : uint8_t
{
	EZombieStance__Relaxed                                                           = 0,
	EZombieStance__Lying                                                             = 1,
	EZombieStance__Alerted                                                           = 2,
	EZombieStance__Combat                                                            = 3,
	EZombieStance__EZombieStance_MAX                                                 = 4
};

